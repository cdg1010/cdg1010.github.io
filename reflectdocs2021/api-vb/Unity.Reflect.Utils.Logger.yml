### YamlMime:ManagedReference
items:
- uid: Unity.Reflect.Utils.Logger
  commentId: T:Unity.Reflect.Utils.Logger
  id: Logger
  parent: Unity.Reflect.Utils
  children:
  - Unity.Reflect.Utils.Logger.Debug(System.String)
  - Unity.Reflect.Utils.Logger.Debug(System.String)
  - Unity.Reflect.Utils.Logger.Error(System.String)
  - Unity.Reflect.Utils.Logger.Error(System.String)
  - Unity.Reflect.Utils.Logger.Fatal(System.String)
  - Unity.Reflect.Utils.Logger.Fatal(System.String)
  - Unity.Reflect.Utils.Logger.Info(System.String)
  - Unity.Reflect.Utils.Logger.Info(System.String)
  - Unity.Reflect.Utils.Logger.minLevel
  - Unity.Reflect.Utils.Logger.minLevel
  - Unity.Reflect.Utils.Logger.OnLog
  - Unity.Reflect.Utils.Logger.OnLog
  - Unity.Reflect.Utils.Logger.Warn(System.String)
  - Unity.Reflect.Utils.Logger.Warn(System.String)
  langs:
  - csharp
  - vb
  name: Logger
  nameWithType: Logger
  fullName: Unity.Reflect.Utils.Logger
  type: Class
  source:
    id: Logger
    path: ''
    startLine: 40664
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Utils
  summary: "\nUse this class to write and read logs.\n"
  example: []
  syntax:
    content: public static class Logger
    content.vb: Public Module Logger
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Unity.Reflect.Utils.Logger.OnLog
  commentId: E:Unity.Reflect.Utils.Logger.OnLog
  id: OnLog
  parent: Unity.Reflect.Utils.Logger
  langs:
  - csharp
  - vb
  name: OnLog
  nameWithType: Logger.OnLog
  fullName: Unity.Reflect.Utils.Logger.OnLog
  type: Event
  source:
    id: OnLog
    path: ''
    startLine: 40437
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Utils
  summary: "\nThis event is triggered whenever a log request is made. Use this event to display the log at your convenience.\n"
  example: []
  syntax:
    content: public static event Logger.LogReceiver OnLog
    return:
      type: Unity.Reflect.Utils.Logger.LogReceiver
    content.vb: Public Shared Event OnLog As Logger.LogReceiver
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Unity.Reflect.Utils.Logger.minLevel
  commentId: F:Unity.Reflect.Utils.Logger.minLevel
  id: minLevel
  parent: Unity.Reflect.Utils.Logger
  langs:
  - csharp
  - vb
  name: minLevel
  nameWithType: Logger.minLevel
  fullName: Unity.Reflect.Utils.Logger.minLevel
  type: Field
  source:
    id: minLevel
    path: ''
    startLine: 40442
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Utils
  summary: "\nThis value indicates which minimum level of log triggers the OnLog event.\n"
  example: []
  syntax:
    content: public static Logger.Level minLevel
    return:
      type: Unity.Reflect.Utils.Logger.Level
    content.vb: Public Shared minLevel As Logger.Level
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Unity.Reflect.Utils.Logger.Info(System.String)
  commentId: M:Unity.Reflect.Utils.Logger.Info(System.String)
  id: Info(System.String)
  parent: Unity.Reflect.Utils.Logger
  langs:
  - csharp
  - vb
  name: Info(String)
  nameWithType: Logger.Info(String)
  fullName: Unity.Reflect.Utils.Logger.Info(System.String)
  type: Method
  source:
    id: Info
    path: ''
    startLine: 40448
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Utils
  summary: "\nLogs a message at Info level.\n"
  example: []
  syntax:
    content: public static void Info(string msg)
    parameters:
    - id: msg
      type: System.String
      description: ''
    content.vb: Public Shared Sub Info(msg As String)
  overload: Unity.Reflect.Utils.Logger.Info*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Unity.Reflect.Utils.Logger.Error(System.String)
  commentId: M:Unity.Reflect.Utils.Logger.Error(System.String)
  id: Error(System.String)
  parent: Unity.Reflect.Utils.Logger
  langs:
  - csharp
  - vb
  name: Error(String)
  nameWithType: Logger.Error(String)
  fullName: Unity.Reflect.Utils.Logger.Error(System.String)
  type: Method
  source:
    id: Error
    path: ''
    startLine: 40457
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Utils
  summary: "\nLogs a message at Error level.\n"
  example: []
  syntax:
    content: public static void Error(string msg)
    parameters:
    - id: msg
      type: System.String
      description: ''
    content.vb: Public Shared Sub Error(msg As String)
  overload: Unity.Reflect.Utils.Logger.Error*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Unity.Reflect.Utils.Logger.Warn(System.String)
  commentId: M:Unity.Reflect.Utils.Logger.Warn(System.String)
  id: Warn(System.String)
  parent: Unity.Reflect.Utils.Logger
  langs:
  - csharp
  - vb
  name: Warn(String)
  nameWithType: Logger.Warn(String)
  fullName: Unity.Reflect.Utils.Logger.Warn(System.String)
  type: Method
  source:
    id: Warn
    path: ''
    startLine: 40466
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Utils
  summary: "\nLogs a message at Warn level.\n"
  example: []
  syntax:
    content: public static void Warn(string msg)
    parameters:
    - id: msg
      type: System.String
      description: ''
    content.vb: Public Shared Sub Warn(msg As String)
  overload: Unity.Reflect.Utils.Logger.Warn*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Unity.Reflect.Utils.Logger.Fatal(System.String)
  commentId: M:Unity.Reflect.Utils.Logger.Fatal(System.String)
  id: Fatal(System.String)
  parent: Unity.Reflect.Utils.Logger
  langs:
  - csharp
  - vb
  name: Fatal(String)
  nameWithType: Logger.Fatal(String)
  fullName: Unity.Reflect.Utils.Logger.Fatal(System.String)
  type: Method
  source:
    id: Fatal
    path: ''
    startLine: 40475
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Utils
  summary: "\nLogs a message at Fatal level.\n"
  example: []
  syntax:
    content: public static void Fatal(string msg)
    parameters:
    - id: msg
      type: System.String
      description: ''
    content.vb: Public Shared Sub Fatal(msg As String)
  overload: Unity.Reflect.Utils.Logger.Fatal*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Unity.Reflect.Utils.Logger.Debug(System.String)
  commentId: M:Unity.Reflect.Utils.Logger.Debug(System.String)
  id: Debug(System.String)
  parent: Unity.Reflect.Utils.Logger
  langs:
  - csharp
  - vb
  name: Debug(String)
  nameWithType: Logger.Debug(String)
  fullName: Unity.Reflect.Utils.Logger.Debug(System.String)
  type: Method
  source:
    id: Debug
    path: ''
    startLine: 40484
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Utils
  summary: "\nLogs a message at Debug level.\n"
  example: []
  syntax:
    content: public static void Debug(string msg)
    parameters:
    - id: msg
      type: System.String
      description: ''
    content.vb: Public Shared Sub Debug(msg As String)
  overload: Unity.Reflect.Utils.Logger.Debug*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Unity.Reflect.Utils.Logger.OnLog
  commentId: E:Unity.Reflect.Utils.Logger.OnLog
  id: OnLog
  parent: Unity.Reflect.Utils.Logger
  langs:
  - csharp
  - vb
  name: OnLog
  nameWithType: Logger.OnLog
  fullName: Unity.Reflect.Utils.Logger.OnLog
  type: Event
  source:
    id: OnLog
    path: ''
    startLine: 40680
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Utils
  summary: "\nThis event is triggered whenever a log request is made. Use this event to display the log at your convenience.\n"
  example: []
  syntax:
    content: public static event Logger.LogReceiver OnLog
    return:
      type: Unity.Reflect.Utils.Logger.LogReceiver
    content.vb: Public Shared Event OnLog As Logger.LogReceiver
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Unity.Reflect.Utils.Logger.minLevel
  commentId: F:Unity.Reflect.Utils.Logger.minLevel
  id: minLevel
  parent: Unity.Reflect.Utils.Logger
  langs:
  - csharp
  - vb
  name: minLevel
  nameWithType: Logger.minLevel
  fullName: Unity.Reflect.Utils.Logger.minLevel
  type: Field
  source:
    id: minLevel
    path: ''
    startLine: 40685
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Utils
  summary: "\nThis value indicates which minimum level of log triggers the OnLog event.\n"
  example: []
  syntax:
    content: public static Logger.Level minLevel
    return:
      type: Unity.Reflect.Utils.Logger.Level
    content.vb: Public Shared minLevel As Logger.Level
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Unity.Reflect.Utils.Logger.Info(System.String)
  commentId: M:Unity.Reflect.Utils.Logger.Info(System.String)
  id: Info(System.String)
  parent: Unity.Reflect.Utils.Logger
  langs:
  - csharp
  - vb
  name: Info(String)
  nameWithType: Logger.Info(String)
  fullName: Unity.Reflect.Utils.Logger.Info(System.String)
  type: Method
  source:
    id: Info
    path: ''
    startLine: 40691
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Utils
  summary: "\nLogs a message at Info level.\n"
  example: []
  syntax:
    content: public static void Info(string msg)
    parameters:
    - id: msg
      type: System.String
      description: ''
    content.vb: Public Shared Sub Info(msg As String)
  overload: Unity.Reflect.Utils.Logger.Info*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Unity.Reflect.Utils.Logger.Error(System.String)
  commentId: M:Unity.Reflect.Utils.Logger.Error(System.String)
  id: Error(System.String)
  parent: Unity.Reflect.Utils.Logger
  langs:
  - csharp
  - vb
  name: Error(String)
  nameWithType: Logger.Error(String)
  fullName: Unity.Reflect.Utils.Logger.Error(System.String)
  type: Method
  source:
    id: Error
    path: ''
    startLine: 40700
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Utils
  summary: "\nLogs a message at Error level.\n"
  example: []
  syntax:
    content: public static void Error(string msg)
    parameters:
    - id: msg
      type: System.String
      description: ''
    content.vb: Public Shared Sub Error(msg As String)
  overload: Unity.Reflect.Utils.Logger.Error*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Unity.Reflect.Utils.Logger.Warn(System.String)
  commentId: M:Unity.Reflect.Utils.Logger.Warn(System.String)
  id: Warn(System.String)
  parent: Unity.Reflect.Utils.Logger
  langs:
  - csharp
  - vb
  name: Warn(String)
  nameWithType: Logger.Warn(String)
  fullName: Unity.Reflect.Utils.Logger.Warn(System.String)
  type: Method
  source:
    id: Warn
    path: ''
    startLine: 40709
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Utils
  summary: "\nLogs a message at Warn level.\n"
  example: []
  syntax:
    content: public static void Warn(string msg)
    parameters:
    - id: msg
      type: System.String
      description: ''
    content.vb: Public Shared Sub Warn(msg As String)
  overload: Unity.Reflect.Utils.Logger.Warn*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Unity.Reflect.Utils.Logger.Fatal(System.String)
  commentId: M:Unity.Reflect.Utils.Logger.Fatal(System.String)
  id: Fatal(System.String)
  parent: Unity.Reflect.Utils.Logger
  langs:
  - csharp
  - vb
  name: Fatal(String)
  nameWithType: Logger.Fatal(String)
  fullName: Unity.Reflect.Utils.Logger.Fatal(System.String)
  type: Method
  source:
    id: Fatal
    path: ''
    startLine: 40718
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Utils
  summary: "\nLogs a message at Fatal level.\n"
  example: []
  syntax:
    content: public static void Fatal(string msg)
    parameters:
    - id: msg
      type: System.String
      description: ''
    content.vb: Public Shared Sub Fatal(msg As String)
  overload: Unity.Reflect.Utils.Logger.Fatal*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Unity.Reflect.Utils.Logger.Debug(System.String)
  commentId: M:Unity.Reflect.Utils.Logger.Debug(System.String)
  id: Debug(System.String)
  parent: Unity.Reflect.Utils.Logger
  langs:
  - csharp
  - vb
  name: Debug(String)
  nameWithType: Logger.Debug(String)
  fullName: Unity.Reflect.Utils.Logger.Debug(System.String)
  type: Method
  source:
    id: Debug
    path: ''
    startLine: 40727
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Utils
  summary: "\nLogs a message at Debug level.\n"
  example: []
  syntax:
    content: public static void Debug(string msg)
    parameters:
    - id: msg
      type: System.String
      description: ''
    content.vb: Public Shared Sub Debug(msg As String)
  overload: Unity.Reflect.Utils.Logger.Debug*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Unity.Reflect.Utils
  commentId: N:Unity.Reflect.Utils
  name: Unity.Reflect.Utils
  nameWithType: Unity.Reflect.Utils
  fullName: Unity.Reflect.Utils
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Unity.Reflect.Utils.Logger.LogReceiver
  commentId: T:Unity.Reflect.Utils.Logger.LogReceiver
  name: Logger.LogReceiver
  nameWithType: Logger.LogReceiver
  fullName: Unity.Reflect.Utils.Logger.LogReceiver
- uid: Unity.Reflect.Utils.Logger.Level
  commentId: T:Unity.Reflect.Utils.Logger.Level
  parent: Unity.Reflect.Utils
  name: Logger.Level
  nameWithType: Logger.Level
  fullName: Unity.Reflect.Utils.Logger.Level
- uid: Unity.Reflect.Utils.Logger.Info*
  commentId: Overload:Unity.Reflect.Utils.Logger.Info
  name: Info
  nameWithType: Logger.Info
  fullName: Unity.Reflect.Utils.Logger.Info
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Unity.Reflect.Utils.Logger.Error*
  commentId: Overload:Unity.Reflect.Utils.Logger.Error
  name: Error
  nameWithType: Logger.Error
  fullName: Unity.Reflect.Utils.Logger.Error
- uid: Unity.Reflect.Utils.Logger.Warn*
  commentId: Overload:Unity.Reflect.Utils.Logger.Warn
  name: Warn
  nameWithType: Logger.Warn
  fullName: Unity.Reflect.Utils.Logger.Warn
- uid: Unity.Reflect.Utils.Logger.Fatal*
  commentId: Overload:Unity.Reflect.Utils.Logger.Fatal
  name: Fatal
  nameWithType: Logger.Fatal
  fullName: Unity.Reflect.Utils.Logger.Fatal
- uid: Unity.Reflect.Utils.Logger.Debug*
  commentId: Overload:Unity.Reflect.Utils.Logger.Debug
  name: Debug
  nameWithType: Logger.Debug
  fullName: Unity.Reflect.Utils.Logger.Debug
