### YamlMime:ManagedReference
items:
- uid: Unity.Reflect.Data.SyncManifest
  commentId: T:Unity.Reflect.Data.SyncManifest
  id: SyncManifest
  parent: Unity.Reflect.Data
  children:
  - Unity.Reflect.Data.SyncManifest.#ctor
  - Unity.Reflect.Data.SyncManifest.#ctor
  - Unity.Reflect.Data.SyncManifest.#ctor(Unity.Reflect.Data.SyncManifest)
  - Unity.Reflect.Data.SyncManifest.#ctor(Unity.Reflect.Data.SyncManifest)
  - Unity.Reflect.Data.SyncManifest.Append(Unity.Reflect.Data.PersistentKey,System.String,System.String,System.String,SyncBoundingBox)
  - Unity.Reflect.Data.SyncManifest.Append(Unity.Reflect.Data.PersistentKey,System.String,System.String,System.String,SyncBoundingBox)
  - Unity.Reflect.Data.SyncManifest.CalculateSize
  - Unity.Reflect.Data.SyncManifest.CalculateSize
  - Unity.Reflect.Data.SyncManifest.Clone
  - Unity.Reflect.Data.SyncManifest.Clone
  - Unity.Reflect.Data.SyncManifest.ComputeDiff(Unity.Reflect.Data.SyncManifest,IList{Unity.Reflect.Data.ManifestEntry}@,IList{Unity.Reflect.Data.ManifestEntry}@)
  - Unity.Reflect.Data.SyncManifest.ComputeDiff(Unity.Reflect.Data.SyncManifest,IList{Unity.Reflect.Data.ManifestEntry}@,IList{Unity.Reflect.Data.ManifestEntry}@)
  - Unity.Reflect.Data.SyncManifest.Content
  - Unity.Reflect.Data.SyncManifest.Content
  - Unity.Reflect.Data.SyncManifest.Descriptor
  - Unity.Reflect.Data.SyncManifest.Descriptor
  - Unity.Reflect.Data.SyncManifest.Entries
  - Unity.Reflect.Data.SyncManifest.Entries
  - Unity.Reflect.Data.SyncManifest.EntriesFieldNumber
  - Unity.Reflect.Data.SyncManifest.EntriesFieldNumber
  - Unity.Reflect.Data.SyncManifest.Equals(System.Object)
  - Unity.Reflect.Data.SyncManifest.Equals(System.Object)
  - Unity.Reflect.Data.SyncManifest.Equals(Unity.Reflect.Data.SyncManifest)
  - Unity.Reflect.Data.SyncManifest.Equals(Unity.Reflect.Data.SyncManifest)
  - Unity.Reflect.Data.SyncManifest.ExpectedManifestPath(System.String)
  - Unity.Reflect.Data.SyncManifest.ExpectedManifestPath(System.String)
  - Unity.Reflect.Data.SyncManifest.FileName
  - Unity.Reflect.Data.SyncManifest.FileName
  - Unity.Reflect.Data.SyncManifest.GetHashCode
  - Unity.Reflect.Data.SyncManifest.GetHashCode
  - Unity.Reflect.Data.SyncManifest.LoadFromBytes(System.Byte[])
  - Unity.Reflect.Data.SyncManifest.LoadFromBytes(System.Byte[])
  - Unity.Reflect.Data.SyncManifest.MergeFrom(pb.CodedInputStream)
  - Unity.Reflect.Data.SyncManifest.MergeFrom(pb.CodedInputStream)
  - Unity.Reflect.Data.SyncManifest.MergeFrom(Unity.Reflect.Data.SyncManifest)
  - Unity.Reflect.Data.SyncManifest.MergeFrom(Unity.Reflect.Data.SyncManifest)
  - Unity.Reflect.Data.SyncManifest.Parser
  - Unity.Reflect.Data.SyncManifest.Parser
  - Unity.Reflect.Data.SyncManifest.Remaps
  - Unity.Reflect.Data.SyncManifest.Remaps
  - Unity.Reflect.Data.SyncManifest.Save(System.String)
  - Unity.Reflect.Data.SyncManifest.Save(System.String)
  - Unity.Reflect.Data.SyncManifest.ToString
  - Unity.Reflect.Data.SyncManifest.ToString
  - Unity.Reflect.Data.SyncManifest.WriteTo(pb.CodedOutputStream)
  - Unity.Reflect.Data.SyncManifest.WriteTo(pb.CodedOutputStream)
  langs:
  - csharp
  - vb
  name: SyncManifest
  nameWithType: SyncManifest
  fullName: Unity.Reflect.Data.SyncManifest
  type: Class
  source:
    id: SyncManifest
    path: ''
    startLine: 23297
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Data
  syntax:
    content: 'public sealed class SyncManifest : pb.IMessage<SyncManifest>, pb.IMessage<SyncManifest>'
    content.vb: >-
      Public NotInheritable Class SyncManifest
          Inherits pb.IMessage(Of SyncManifest)
          Implements pb.IMessage(Of SyncManifest)
  inheritance:
  - System.Object
  implements:
  - pb.IMessage{Unity.Reflect.Data.SyncManifest}
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Unity.Reflect.Data.SyncManifest.FileName
  commentId: F:Unity.Reflect.Data.SyncManifest.FileName
  id: FileName
  parent: Unity.Reflect.Data.SyncManifest
  langs:
  - csharp
  - vb
  name: FileName
  nameWithType: SyncManifest.FileName
  fullName: Unity.Reflect.Data.SyncManifest.FileName
  type: Field
  source:
    id: FileName
    path: ''
    startLine: 531
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Data
  syntax:
    content: public static readonly string FileName
    return:
      type: System.String
    content.vb: Public Shared ReadOnly FileName As String
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Unity.Reflect.Data.SyncManifest.Content
  commentId: P:Unity.Reflect.Data.SyncManifest.Content
  id: Content
  parent: Unity.Reflect.Data.SyncManifest
  langs:
  - csharp
  - vb
  name: Content
  nameWithType: SyncManifest.Content
  fullName: Unity.Reflect.Data.SyncManifest.Content
  type: Property
  source:
    id: Content
    path: ''
    startLine: 536
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Data
  syntax:
    content: public IReadOnlyDictionary<PersistentKey, ManifestEntry> Content { get; }
    parameters: []
    return:
      type: IReadOnlyDictionary{Unity.Reflect.Data.PersistentKey,Unity.Reflect.Data.ManifestEntry}
    content.vb: Public ReadOnly Property Content As IReadOnlyDictionary(Of PersistentKey, ManifestEntry)
  overload: Unity.Reflect.Data.SyncManifest.Content*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Unity.Reflect.Data.SyncManifest.Remaps
  commentId: P:Unity.Reflect.Data.SyncManifest.Remaps
  id: Remaps
  parent: Unity.Reflect.Data.SyncManifest
  langs:
  - csharp
  - vb
  name: Remaps
  nameWithType: SyncManifest.Remaps
  fullName: Unity.Reflect.Data.SyncManifest.Remaps
  type: Property
  source:
    id: Remaps
    path: ''
    startLine: 560
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Data
  syntax:
    content: public Dictionary<PersistentKey, string> Remaps { get; }
    parameters: []
    return:
      type: Dictionary{Unity.Reflect.Data.PersistentKey,System.String}
    content.vb: Public ReadOnly Property Remaps As Dictionary(Of PersistentKey, String)
  overload: Unity.Reflect.Data.SyncManifest.Remaps*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Unity.Reflect.Data.SyncManifest.ExpectedManifestPath(System.String)
  commentId: M:Unity.Reflect.Data.SyncManifest.ExpectedManifestPath(System.String)
  id: ExpectedManifestPath(System.String)
  parent: Unity.Reflect.Data.SyncManifest
  langs:
  - csharp
  - vb
  name: ExpectedManifestPath(String)
  nameWithType: SyncManifest.ExpectedManifestPath(String)
  fullName: Unity.Reflect.Data.SyncManifest.ExpectedManifestPath(System.String)
  type: Method
  source:
    id: ExpectedManifestPath
    path: ''
    startLine: 565
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Data
  syntax:
    content: public static string ExpectedManifestPath(string destinationFolder)
    parameters:
    - id: destinationFolder
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function ExpectedManifestPath(destinationFolder As String) As String
  overload: Unity.Reflect.Data.SyncManifest.ExpectedManifestPath*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Unity.Reflect.Data.SyncManifest.Append(Unity.Reflect.Data.PersistentKey,System.String,System.String,System.String,SyncBoundingBox)
  commentId: M:Unity.Reflect.Data.SyncManifest.Append(Unity.Reflect.Data.PersistentKey,System.String,System.String,System.String,SyncBoundingBox)
  id: Append(Unity.Reflect.Data.PersistentKey,System.String,System.String,System.String,SyncBoundingBox)
  parent: Unity.Reflect.Data.SyncManifest
  langs:
  - csharp
  - vb
  name: Append(PersistentKey, String, String, String, SyncBoundingBox)
  nameWithType: SyncManifest.Append(PersistentKey, String, String, String, SyncBoundingBox)
  fullName: Unity.Reflect.Data.SyncManifest.Append(Unity.Reflect.Data.PersistentKey, System.String, System.String, System.String, SyncBoundingBox)
  type: Method
  source:
    id: Append
    path: ''
    startLine: 570
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Data
  syntax:
    content: public void Append(PersistentKey key, string srcHash, string dstPath, string dstHash, SyncBoundingBox bbox)
    parameters:
    - id: key
      type: Unity.Reflect.Data.PersistentKey
    - id: srcHash
      type: System.String
    - id: dstPath
      type: System.String
    - id: dstHash
      type: System.String
    - id: bbox
      type: SyncBoundingBox
    content.vb: Public Sub Append(key As PersistentKey, srcHash As String, dstPath As String, dstHash As String, bbox As SyncBoundingBox)
  overload: Unity.Reflect.Data.SyncManifest.Append*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unity.Reflect.Data.SyncManifest.Save(System.String)
  commentId: M:Unity.Reflect.Data.SyncManifest.Save(System.String)
  id: Save(System.String)
  parent: Unity.Reflect.Data.SyncManifest
  langs:
  - csharp
  - vb
  name: Save(String)
  nameWithType: SyncManifest.Save(String)
  fullName: Unity.Reflect.Data.SyncManifest.Save(System.String)
  type: Method
  source:
    id: Save
    path: ''
    startLine: 589
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Data
  syntax:
    content: public void Save(string destinationFolder)
    parameters:
    - id: destinationFolder
      type: System.String
    content.vb: Public Sub Save(destinationFolder As String)
  overload: Unity.Reflect.Data.SyncManifest.Save*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unity.Reflect.Data.SyncManifest.LoadFromBytes(System.Byte[])
  commentId: M:Unity.Reflect.Data.SyncManifest.LoadFromBytes(System.Byte[])
  id: LoadFromBytes(System.Byte[])
  parent: Unity.Reflect.Data.SyncManifest
  langs:
  - csharp
  - vb
  name: LoadFromBytes(Byte[])
  nameWithType: SyncManifest.LoadFromBytes(Byte[])
  fullName: Unity.Reflect.Data.SyncManifest.LoadFromBytes(System.Byte[])
  type: Method
  source:
    id: LoadFromBytes
    path: ''
    startLine: 623
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Data
  syntax:
    content: public static SyncManifest LoadFromBytes(byte[] data)
    parameters:
    - id: data
      type: System.Byte[]
    return:
      type: Unity.Reflect.Data.SyncManifest
    content.vb: Public Shared Function LoadFromBytes(data As Byte()) As SyncManifest
  overload: Unity.Reflect.Data.SyncManifest.LoadFromBytes*
  nameWithType.vb: SyncManifest.LoadFromBytes(Byte())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Unity.Reflect.Data.SyncManifest.LoadFromBytes(System.Byte())
  name.vb: LoadFromBytes(Byte())
- uid: Unity.Reflect.Data.SyncManifest.ComputeDiff(Unity.Reflect.Data.SyncManifest,IList{Unity.Reflect.Data.ManifestEntry}@,IList{Unity.Reflect.Data.ManifestEntry}@)
  commentId: M:Unity.Reflect.Data.SyncManifest.ComputeDiff(Unity.Reflect.Data.SyncManifest,IList{Unity.Reflect.Data.ManifestEntry}@,IList{Unity.Reflect.Data.ManifestEntry}@)
  id: ComputeDiff(Unity.Reflect.Data.SyncManifest,IList{Unity.Reflect.Data.ManifestEntry}@,IList{Unity.Reflect.Data.ManifestEntry}@)
  parent: Unity.Reflect.Data.SyncManifest
  langs:
  - csharp
  - vb
  name: ComputeDiff(SyncManifest, out IList<ManifestEntry>, out IList<ManifestEntry>)
  nameWithType: SyncManifest.ComputeDiff(SyncManifest, out IList<ManifestEntry>, out IList<ManifestEntry>)
  fullName: Unity.Reflect.Data.SyncManifest.ComputeDiff(Unity.Reflect.Data.SyncManifest, out IList<Unity.Reflect.Data.ManifestEntry>, out IList<Unity.Reflect.Data.ManifestEntry>)
  type: Method
  source:
    id: ComputeDiff
    path: ''
    startLine: 630
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Data
  syntax:
    content: public void ComputeDiff(SyncManifest other, out IList<ManifestEntry> changed, out IList<ManifestEntry> removed)
    parameters:
    - id: other
      type: Unity.Reflect.Data.SyncManifest
    - id: changed
      type: IList{Unity.Reflect.Data.ManifestEntry}
    - id: removed
      type: IList{Unity.Reflect.Data.ManifestEntry}
    content.vb: Public Sub ComputeDiff(other As SyncManifest, ByRef changed As IList(Of ManifestEntry), ByRef removed As IList(Of ManifestEntry))
  overload: Unity.Reflect.Data.SyncManifest.ComputeDiff*
  nameWithType.vb: SyncManifest.ComputeDiff(SyncManifest, ByRef IList(Of ManifestEntry), ByRef IList(Of ManifestEntry))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Unity.Reflect.Data.SyncManifest.ComputeDiff(Unity.Reflect.Data.SyncManifest, ByRef IList(Of Unity.Reflect.Data.ManifestEntry), ByRef IList(Of Unity.Reflect.Data.ManifestEntry))
  name.vb: ComputeDiff(SyncManifest, ByRef IList(Of ManifestEntry), ByRef IList(Of ManifestEntry))
- uid: Unity.Reflect.Data.SyncManifest.Parser
  commentId: P:Unity.Reflect.Data.SyncManifest.Parser
  id: Parser
  parent: Unity.Reflect.Data.SyncManifest
  langs:
  - csharp
  - vb
  name: Parser
  nameWithType: SyncManifest.Parser
  fullName: Unity.Reflect.Data.SyncManifest.Parser
  type: Property
  source:
    id: Parser
    path: ''
    startLine: 3141
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Data
  syntax:
    content: public static pb.MessageParser<SyncManifest> Parser { get; }
    parameters: []
    return:
      type: pb.MessageParser{Unity.Reflect.Data.SyncManifest}
    content.vb: Public Shared ReadOnly Property Parser As pb.MessageParser(Of SyncManifest)
  overload: Unity.Reflect.Data.SyncManifest.Parser*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Unity.Reflect.Data.SyncManifest.Descriptor
  commentId: P:Unity.Reflect.Data.SyncManifest.Descriptor
  id: Descriptor
  parent: Unity.Reflect.Data.SyncManifest
  langs:
  - csharp
  - vb
  name: Descriptor
  nameWithType: SyncManifest.Descriptor
  fullName: Unity.Reflect.Data.SyncManifest.Descriptor
  type: Property
  source:
    id: Descriptor
    path: ''
    startLine: 3144
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Data
  syntax:
    content: public static pbr.MessageDescriptor Descriptor { get; }
    parameters: []
    return:
      type: pbr.MessageDescriptor
    content.vb: Public Shared ReadOnly Property Descriptor As pbr.MessageDescriptor
  overload: Unity.Reflect.Data.SyncManifest.Descriptor*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Unity.Reflect.Data.SyncManifest.#ctor
  commentId: M:Unity.Reflect.Data.SyncManifest.#ctor
  id: '#ctor'
  parent: Unity.Reflect.Data.SyncManifest
  langs:
  - csharp
  - vb
  name: SyncManifest()
  nameWithType: SyncManifest.SyncManifest()
  fullName: Unity.Reflect.Data.SyncManifest.SyncManifest()
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 3154
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Data
  syntax:
    content: public SyncManifest()
    content.vb: Public Sub New
  overload: Unity.Reflect.Data.SyncManifest.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unity.Reflect.Data.SyncManifest.#ctor(Unity.Reflect.Data.SyncManifest)
  commentId: M:Unity.Reflect.Data.SyncManifest.#ctor(Unity.Reflect.Data.SyncManifest)
  id: '#ctor(Unity.Reflect.Data.SyncManifest)'
  parent: Unity.Reflect.Data.SyncManifest
  langs:
  - csharp
  - vb
  name: SyncManifest(SyncManifest)
  nameWithType: SyncManifest.SyncManifest(SyncManifest)
  fullName: Unity.Reflect.Data.SyncManifest.SyncManifest(Unity.Reflect.Data.SyncManifest)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 3161
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Data
  syntax:
    content: public SyncManifest(SyncManifest other)
    parameters:
    - id: other
      type: Unity.Reflect.Data.SyncManifest
    content.vb: Public Sub New(other As SyncManifest)
  overload: Unity.Reflect.Data.SyncManifest.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unity.Reflect.Data.SyncManifest.Clone
  commentId: M:Unity.Reflect.Data.SyncManifest.Clone
  id: Clone
  parent: Unity.Reflect.Data.SyncManifest
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: SyncManifest.Clone()
  fullName: Unity.Reflect.Data.SyncManifest.Clone()
  type: Method
  source:
    id: Clone
    path: ''
    startLine: 3167
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Data
  syntax:
    content: public SyncManifest Clone()
    return:
      type: Unity.Reflect.Data.SyncManifest
    content.vb: Public Function Clone As SyncManifest
  overload: Unity.Reflect.Data.SyncManifest.Clone*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unity.Reflect.Data.SyncManifest.EntriesFieldNumber
  commentId: F:Unity.Reflect.Data.SyncManifest.EntriesFieldNumber
  id: EntriesFieldNumber
  parent: Unity.Reflect.Data.SyncManifest
  langs:
  - csharp
  - vb
  name: EntriesFieldNumber
  nameWithType: SyncManifest.EntriesFieldNumber
  fullName: Unity.Reflect.Data.SyncManifest.EntriesFieldNumber
  type: Field
  source:
    id: EntriesFieldNumber
    path: ''
    startLine: 3173
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Data
  summary: Field number for the &quot;entries&quot; field.
  example: []
  syntax:
    content: public const int EntriesFieldNumber = 1
    return:
      type: System.Int32
    content.vb: Public Const EntriesFieldNumber As Integer = 1
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Unity.Reflect.Data.SyncManifest.Entries
  commentId: P:Unity.Reflect.Data.SyncManifest.Entries
  id: Entries
  parent: Unity.Reflect.Data.SyncManifest
  langs:
  - csharp
  - vb
  name: Entries
  nameWithType: SyncManifest.Entries
  fullName: Unity.Reflect.Data.SyncManifest.Entries
  type: Property
  source:
    id: Entries
    path: ''
    startLine: 3177
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Data
  syntax:
    content: public pbc.MapField<string, ManifestEntry> Entries { get; }
    parameters: []
    return:
      type: pbc.MapField{System.String,Unity.Reflect.Data.ManifestEntry}
    content.vb: Public ReadOnly Property Entries As pbc.MapField(Of String, ManifestEntry)
  overload: Unity.Reflect.Data.SyncManifest.Entries*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Unity.Reflect.Data.SyncManifest.Equals(System.Object)
  commentId: M:Unity.Reflect.Data.SyncManifest.Equals(System.Object)
  id: Equals(System.Object)
  parent: Unity.Reflect.Data.SyncManifest
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: SyncManifest.Equals(Object)
  fullName: Unity.Reflect.Data.SyncManifest.Equals(System.Object)
  type: Method
  source:
    id: Equals
    path: ''
    startLine: 3182
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Data
  syntax:
    content: public override bool Equals(object other)
    parameters:
    - id: other
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(other As Object) As Boolean
  overload: Unity.Reflect.Data.SyncManifest.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Unity.Reflect.Data.SyncManifest.Equals(Unity.Reflect.Data.SyncManifest)
  commentId: M:Unity.Reflect.Data.SyncManifest.Equals(Unity.Reflect.Data.SyncManifest)
  id: Equals(Unity.Reflect.Data.SyncManifest)
  parent: Unity.Reflect.Data.SyncManifest
  langs:
  - csharp
  - vb
  name: Equals(SyncManifest)
  nameWithType: SyncManifest.Equals(SyncManifest)
  fullName: Unity.Reflect.Data.SyncManifest.Equals(Unity.Reflect.Data.SyncManifest)
  type: Method
  source:
    id: Equals
    path: ''
    startLine: 3187
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Data
  syntax:
    content: public bool Equals(SyncManifest other)
    parameters:
    - id: other
      type: Unity.Reflect.Data.SyncManifest
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As SyncManifest) As Boolean
  overload: Unity.Reflect.Data.SyncManifest.Equals*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unity.Reflect.Data.SyncManifest.GetHashCode
  commentId: M:Unity.Reflect.Data.SyncManifest.GetHashCode
  id: GetHashCode
  parent: Unity.Reflect.Data.SyncManifest
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: SyncManifest.GetHashCode()
  fullName: Unity.Reflect.Data.SyncManifest.GetHashCode()
  type: Method
  source:
    id: GetHashCode
    path: ''
    startLine: 3199
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Data
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overload: Unity.Reflect.Data.SyncManifest.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Unity.Reflect.Data.SyncManifest.ToString
  commentId: M:Unity.Reflect.Data.SyncManifest.ToString
  id: ToString
  parent: Unity.Reflect.Data.SyncManifest
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: SyncManifest.ToString()
  fullName: Unity.Reflect.Data.SyncManifest.ToString()
  type: Method
  source:
    id: ToString
    path: ''
    startLine: 3209
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Data
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overload: Unity.Reflect.Data.SyncManifest.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Unity.Reflect.Data.SyncManifest.WriteTo(pb.CodedOutputStream)
  commentId: M:Unity.Reflect.Data.SyncManifest.WriteTo(pb.CodedOutputStream)
  id: WriteTo(pb.CodedOutputStream)
  parent: Unity.Reflect.Data.SyncManifest
  langs:
  - csharp
  - vb
  name: WriteTo(pb.CodedOutputStream)
  nameWithType: SyncManifest.WriteTo(pb.CodedOutputStream)
  fullName: Unity.Reflect.Data.SyncManifest.WriteTo(pb.CodedOutputStream)
  type: Method
  source:
    id: WriteTo
    path: ''
    startLine: 3214
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Data
  syntax:
    content: public void WriteTo(pb.CodedOutputStream output)
    parameters:
    - id: output
      type: pb.CodedOutputStream
    content.vb: Public Sub WriteTo(output As pb.CodedOutputStream)
  overload: Unity.Reflect.Data.SyncManifest.WriteTo*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unity.Reflect.Data.SyncManifest.CalculateSize
  commentId: M:Unity.Reflect.Data.SyncManifest.CalculateSize
  id: CalculateSize
  parent: Unity.Reflect.Data.SyncManifest
  langs:
  - csharp
  - vb
  name: CalculateSize()
  nameWithType: SyncManifest.CalculateSize()
  fullName: Unity.Reflect.Data.SyncManifest.CalculateSize()
  type: Method
  source:
    id: CalculateSize
    path: ''
    startLine: 3222
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Data
  syntax:
    content: public int CalculateSize()
    return:
      type: System.Int32
    content.vb: Public Function CalculateSize As Integer
  overload: Unity.Reflect.Data.SyncManifest.CalculateSize*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unity.Reflect.Data.SyncManifest.MergeFrom(Unity.Reflect.Data.SyncManifest)
  commentId: M:Unity.Reflect.Data.SyncManifest.MergeFrom(Unity.Reflect.Data.SyncManifest)
  id: MergeFrom(Unity.Reflect.Data.SyncManifest)
  parent: Unity.Reflect.Data.SyncManifest
  langs:
  - csharp
  - vb
  name: MergeFrom(SyncManifest)
  nameWithType: SyncManifest.MergeFrom(SyncManifest)
  fullName: Unity.Reflect.Data.SyncManifest.MergeFrom(Unity.Reflect.Data.SyncManifest)
  type: Method
  source:
    id: MergeFrom
    path: ''
    startLine: 3232
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Data
  syntax:
    content: public void MergeFrom(SyncManifest other)
    parameters:
    - id: other
      type: Unity.Reflect.Data.SyncManifest
    content.vb: Public Sub MergeFrom(other As SyncManifest)
  overload: Unity.Reflect.Data.SyncManifest.MergeFrom*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unity.Reflect.Data.SyncManifest.MergeFrom(pb.CodedInputStream)
  commentId: M:Unity.Reflect.Data.SyncManifest.MergeFrom(pb.CodedInputStream)
  id: MergeFrom(pb.CodedInputStream)
  parent: Unity.Reflect.Data.SyncManifest
  langs:
  - csharp
  - vb
  name: MergeFrom(pb.CodedInputStream)
  nameWithType: SyncManifest.MergeFrom(pb.CodedInputStream)
  fullName: Unity.Reflect.Data.SyncManifest.MergeFrom(pb.CodedInputStream)
  type: Method
  source:
    id: MergeFrom
    path: ''
    startLine: 3241
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Data
  syntax:
    content: public void MergeFrom(pb.CodedInputStream input)
    parameters:
    - id: input
      type: pb.CodedInputStream
    content.vb: Public Sub MergeFrom(input As pb.CodedInputStream)
  overload: Unity.Reflect.Data.SyncManifest.MergeFrom*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unity.Reflect.Data.SyncManifest.FileName
  commentId: F:Unity.Reflect.Data.SyncManifest.FileName
  id: FileName
  parent: Unity.Reflect.Data.SyncManifest
  langs:
  - csharp
  - vb
  name: FileName
  nameWithType: SyncManifest.FileName
  fullName: Unity.Reflect.Data.SyncManifest.FileName
  type: Field
  source:
    id: FileName
    path: ''
    startLine: 20690
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Data
  syntax:
    content: public static readonly string FileName
    return:
      type: System.String
    content.vb: Public Shared ReadOnly FileName As String
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Unity.Reflect.Data.SyncManifest.Content
  commentId: P:Unity.Reflect.Data.SyncManifest.Content
  id: Content
  parent: Unity.Reflect.Data.SyncManifest
  langs:
  - csharp
  - vb
  name: Content
  nameWithType: SyncManifest.Content
  fullName: Unity.Reflect.Data.SyncManifest.Content
  type: Property
  source:
    id: Content
    path: ''
    startLine: 20695
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Data
  syntax:
    content: public IReadOnlyDictionary<PersistentKey, ManifestEntry> Content { get; }
    parameters: []
    return:
      type: IReadOnlyDictionary{Unity.Reflect.Data.PersistentKey,Unity.Reflect.Data.ManifestEntry}
    content.vb: Public ReadOnly Property Content As IReadOnlyDictionary(Of PersistentKey, ManifestEntry)
  overload: Unity.Reflect.Data.SyncManifest.Content*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Unity.Reflect.Data.SyncManifest.Remaps
  commentId: P:Unity.Reflect.Data.SyncManifest.Remaps
  id: Remaps
  parent: Unity.Reflect.Data.SyncManifest
  langs:
  - csharp
  - vb
  name: Remaps
  nameWithType: SyncManifest.Remaps
  fullName: Unity.Reflect.Data.SyncManifest.Remaps
  type: Property
  source:
    id: Remaps
    path: ''
    startLine: 20719
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Data
  syntax:
    content: public Dictionary<PersistentKey, string> Remaps { get; }
    parameters: []
    return:
      type: Dictionary{Unity.Reflect.Data.PersistentKey,System.String}
    content.vb: Public ReadOnly Property Remaps As Dictionary(Of PersistentKey, String)
  overload: Unity.Reflect.Data.SyncManifest.Remaps*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Unity.Reflect.Data.SyncManifest.ExpectedManifestPath(System.String)
  commentId: M:Unity.Reflect.Data.SyncManifest.ExpectedManifestPath(System.String)
  id: ExpectedManifestPath(System.String)
  parent: Unity.Reflect.Data.SyncManifest
  langs:
  - csharp
  - vb
  name: ExpectedManifestPath(String)
  nameWithType: SyncManifest.ExpectedManifestPath(String)
  fullName: Unity.Reflect.Data.SyncManifest.ExpectedManifestPath(System.String)
  type: Method
  source:
    id: ExpectedManifestPath
    path: ''
    startLine: 20724
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Data
  syntax:
    content: public static string ExpectedManifestPath(string destinationFolder)
    parameters:
    - id: destinationFolder
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function ExpectedManifestPath(destinationFolder As String) As String
  overload: Unity.Reflect.Data.SyncManifest.ExpectedManifestPath*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Unity.Reflect.Data.SyncManifest.Append(Unity.Reflect.Data.PersistentKey,System.String,System.String,System.String,SyncBoundingBox)
  commentId: M:Unity.Reflect.Data.SyncManifest.Append(Unity.Reflect.Data.PersistentKey,System.String,System.String,System.String,SyncBoundingBox)
  id: Append(Unity.Reflect.Data.PersistentKey,System.String,System.String,System.String,SyncBoundingBox)
  parent: Unity.Reflect.Data.SyncManifest
  langs:
  - csharp
  - vb
  name: Append(PersistentKey, String, String, String, SyncBoundingBox)
  nameWithType: SyncManifest.Append(PersistentKey, String, String, String, SyncBoundingBox)
  fullName: Unity.Reflect.Data.SyncManifest.Append(Unity.Reflect.Data.PersistentKey, System.String, System.String, System.String, SyncBoundingBox)
  type: Method
  source:
    id: Append
    path: ''
    startLine: 20729
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Data
  syntax:
    content: public void Append(PersistentKey key, string srcHash, string dstPath, string dstHash, SyncBoundingBox bbox)
    parameters:
    - id: key
      type: Unity.Reflect.Data.PersistentKey
    - id: srcHash
      type: System.String
    - id: dstPath
      type: System.String
    - id: dstHash
      type: System.String
    - id: bbox
      type: SyncBoundingBox
    content.vb: Public Sub Append(key As PersistentKey, srcHash As String, dstPath As String, dstHash As String, bbox As SyncBoundingBox)
  overload: Unity.Reflect.Data.SyncManifest.Append*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unity.Reflect.Data.SyncManifest.Save(System.String)
  commentId: M:Unity.Reflect.Data.SyncManifest.Save(System.String)
  id: Save(System.String)
  parent: Unity.Reflect.Data.SyncManifest
  langs:
  - csharp
  - vb
  name: Save(String)
  nameWithType: SyncManifest.Save(String)
  fullName: Unity.Reflect.Data.SyncManifest.Save(System.String)
  type: Method
  source:
    id: Save
    path: ''
    startLine: 20748
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Data
  syntax:
    content: public void Save(string destinationFolder)
    parameters:
    - id: destinationFolder
      type: System.String
    content.vb: Public Sub Save(destinationFolder As String)
  overload: Unity.Reflect.Data.SyncManifest.Save*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unity.Reflect.Data.SyncManifest.LoadFromBytes(System.Byte[])
  commentId: M:Unity.Reflect.Data.SyncManifest.LoadFromBytes(System.Byte[])
  id: LoadFromBytes(System.Byte[])
  parent: Unity.Reflect.Data.SyncManifest
  langs:
  - csharp
  - vb
  name: LoadFromBytes(Byte[])
  nameWithType: SyncManifest.LoadFromBytes(Byte[])
  fullName: Unity.Reflect.Data.SyncManifest.LoadFromBytes(System.Byte[])
  type: Method
  source:
    id: LoadFromBytes
    path: ''
    startLine: 20782
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Data
  syntax:
    content: public static SyncManifest LoadFromBytes(byte[] data)
    parameters:
    - id: data
      type: System.Byte[]
    return:
      type: Unity.Reflect.Data.SyncManifest
    content.vb: Public Shared Function LoadFromBytes(data As Byte()) As SyncManifest
  overload: Unity.Reflect.Data.SyncManifest.LoadFromBytes*
  nameWithType.vb: SyncManifest.LoadFromBytes(Byte())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Unity.Reflect.Data.SyncManifest.LoadFromBytes(System.Byte())
  name.vb: LoadFromBytes(Byte())
- uid: Unity.Reflect.Data.SyncManifest.ComputeDiff(Unity.Reflect.Data.SyncManifest,IList{Unity.Reflect.Data.ManifestEntry}@,IList{Unity.Reflect.Data.ManifestEntry}@)
  commentId: M:Unity.Reflect.Data.SyncManifest.ComputeDiff(Unity.Reflect.Data.SyncManifest,IList{Unity.Reflect.Data.ManifestEntry}@,IList{Unity.Reflect.Data.ManifestEntry}@)
  id: ComputeDiff(Unity.Reflect.Data.SyncManifest,IList{Unity.Reflect.Data.ManifestEntry}@,IList{Unity.Reflect.Data.ManifestEntry}@)
  parent: Unity.Reflect.Data.SyncManifest
  langs:
  - csharp
  - vb
  name: ComputeDiff(SyncManifest, out IList<ManifestEntry>, out IList<ManifestEntry>)
  nameWithType: SyncManifest.ComputeDiff(SyncManifest, out IList<ManifestEntry>, out IList<ManifestEntry>)
  fullName: Unity.Reflect.Data.SyncManifest.ComputeDiff(Unity.Reflect.Data.SyncManifest, out IList<Unity.Reflect.Data.ManifestEntry>, out IList<Unity.Reflect.Data.ManifestEntry>)
  type: Method
  source:
    id: ComputeDiff
    path: ''
    startLine: 20789
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Data
  syntax:
    content: public void ComputeDiff(SyncManifest other, out IList<ManifestEntry> changed, out IList<ManifestEntry> removed)
    parameters:
    - id: other
      type: Unity.Reflect.Data.SyncManifest
    - id: changed
      type: IList{Unity.Reflect.Data.ManifestEntry}
    - id: removed
      type: IList{Unity.Reflect.Data.ManifestEntry}
    content.vb: Public Sub ComputeDiff(other As SyncManifest, ByRef changed As IList(Of ManifestEntry), ByRef removed As IList(Of ManifestEntry))
  overload: Unity.Reflect.Data.SyncManifest.ComputeDiff*
  nameWithType.vb: SyncManifest.ComputeDiff(SyncManifest, ByRef IList(Of ManifestEntry), ByRef IList(Of ManifestEntry))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Unity.Reflect.Data.SyncManifest.ComputeDiff(Unity.Reflect.Data.SyncManifest, ByRef IList(Of Unity.Reflect.Data.ManifestEntry), ByRef IList(Of Unity.Reflect.Data.ManifestEntry))
  name.vb: ComputeDiff(SyncManifest, ByRef IList(Of ManifestEntry), ByRef IList(Of ManifestEntry))
- uid: Unity.Reflect.Data.SyncManifest.Parser
  commentId: P:Unity.Reflect.Data.SyncManifest.Parser
  id: Parser
  parent: Unity.Reflect.Data.SyncManifest
  langs:
  - csharp
  - vb
  name: Parser
  nameWithType: SyncManifest.Parser
  fullName: Unity.Reflect.Data.SyncManifest.Parser
  type: Property
  source:
    id: Parser
    path: ''
    startLine: 23300
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Data
  syntax:
    content: public static pb.MessageParser<SyncManifest> Parser { get; }
    parameters: []
    return:
      type: pb.MessageParser{Unity.Reflect.Data.SyncManifest}
    content.vb: Public Shared ReadOnly Property Parser As pb.MessageParser(Of SyncManifest)
  overload: Unity.Reflect.Data.SyncManifest.Parser*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Unity.Reflect.Data.SyncManifest.Descriptor
  commentId: P:Unity.Reflect.Data.SyncManifest.Descriptor
  id: Descriptor
  parent: Unity.Reflect.Data.SyncManifest
  langs:
  - csharp
  - vb
  name: Descriptor
  nameWithType: SyncManifest.Descriptor
  fullName: Unity.Reflect.Data.SyncManifest.Descriptor
  type: Property
  source:
    id: Descriptor
    path: ''
    startLine: 23303
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Data
  syntax:
    content: public static pbr.MessageDescriptor Descriptor { get; }
    parameters: []
    return:
      type: pbr.MessageDescriptor
    content.vb: Public Shared ReadOnly Property Descriptor As pbr.MessageDescriptor
  overload: Unity.Reflect.Data.SyncManifest.Descriptor*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Unity.Reflect.Data.SyncManifest.#ctor
  commentId: M:Unity.Reflect.Data.SyncManifest.#ctor
  id: '#ctor'
  parent: Unity.Reflect.Data.SyncManifest
  langs:
  - csharp
  - vb
  name: SyncManifest()
  nameWithType: SyncManifest.SyncManifest()
  fullName: Unity.Reflect.Data.SyncManifest.SyncManifest()
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 23313
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Data
  syntax:
    content: public SyncManifest()
    content.vb: Public Sub New
  overload: Unity.Reflect.Data.SyncManifest.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unity.Reflect.Data.SyncManifest.#ctor(Unity.Reflect.Data.SyncManifest)
  commentId: M:Unity.Reflect.Data.SyncManifest.#ctor(Unity.Reflect.Data.SyncManifest)
  id: '#ctor(Unity.Reflect.Data.SyncManifest)'
  parent: Unity.Reflect.Data.SyncManifest
  langs:
  - csharp
  - vb
  name: SyncManifest(SyncManifest)
  nameWithType: SyncManifest.SyncManifest(SyncManifest)
  fullName: Unity.Reflect.Data.SyncManifest.SyncManifest(Unity.Reflect.Data.SyncManifest)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 23320
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Data
  syntax:
    content: public SyncManifest(SyncManifest other)
    parameters:
    - id: other
      type: Unity.Reflect.Data.SyncManifest
    content.vb: Public Sub New(other As SyncManifest)
  overload: Unity.Reflect.Data.SyncManifest.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unity.Reflect.Data.SyncManifest.Clone
  commentId: M:Unity.Reflect.Data.SyncManifest.Clone
  id: Clone
  parent: Unity.Reflect.Data.SyncManifest
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: SyncManifest.Clone()
  fullName: Unity.Reflect.Data.SyncManifest.Clone()
  type: Method
  source:
    id: Clone
    path: ''
    startLine: 23326
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Data
  syntax:
    content: public SyncManifest Clone()
    return:
      type: Unity.Reflect.Data.SyncManifest
    content.vb: Public Function Clone As SyncManifest
  overload: Unity.Reflect.Data.SyncManifest.Clone*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unity.Reflect.Data.SyncManifest.EntriesFieldNumber
  commentId: F:Unity.Reflect.Data.SyncManifest.EntriesFieldNumber
  id: EntriesFieldNumber
  parent: Unity.Reflect.Data.SyncManifest
  langs:
  - csharp
  - vb
  name: EntriesFieldNumber
  nameWithType: SyncManifest.EntriesFieldNumber
  fullName: Unity.Reflect.Data.SyncManifest.EntriesFieldNumber
  type: Field
  source:
    id: EntriesFieldNumber
    path: ''
    startLine: 23332
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Data
  summary: Field number for the &quot;entries&quot; field.
  example: []
  syntax:
    content: public const int EntriesFieldNumber = 1
    return:
      type: System.Int32
    content.vb: Public Const EntriesFieldNumber As Integer = 1
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Unity.Reflect.Data.SyncManifest.Entries
  commentId: P:Unity.Reflect.Data.SyncManifest.Entries
  id: Entries
  parent: Unity.Reflect.Data.SyncManifest
  langs:
  - csharp
  - vb
  name: Entries
  nameWithType: SyncManifest.Entries
  fullName: Unity.Reflect.Data.SyncManifest.Entries
  type: Property
  source:
    id: Entries
    path: ''
    startLine: 23336
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Data
  syntax:
    content: public pbc.MapField<string, ManifestEntry> Entries { get; }
    parameters: []
    return:
      type: pbc.MapField{System.String,Unity.Reflect.Data.ManifestEntry}
    content.vb: Public ReadOnly Property Entries As pbc.MapField(Of String, ManifestEntry)
  overload: Unity.Reflect.Data.SyncManifest.Entries*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Unity.Reflect.Data.SyncManifest.Equals(System.Object)
  commentId: M:Unity.Reflect.Data.SyncManifest.Equals(System.Object)
  id: Equals(System.Object)
  parent: Unity.Reflect.Data.SyncManifest
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: SyncManifest.Equals(Object)
  fullName: Unity.Reflect.Data.SyncManifest.Equals(System.Object)
  type: Method
  source:
    id: Equals
    path: ''
    startLine: 23341
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Data
  syntax:
    content: public override bool Equals(object other)
    parameters:
    - id: other
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(other As Object) As Boolean
  overload: Unity.Reflect.Data.SyncManifest.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Unity.Reflect.Data.SyncManifest.Equals(Unity.Reflect.Data.SyncManifest)
  commentId: M:Unity.Reflect.Data.SyncManifest.Equals(Unity.Reflect.Data.SyncManifest)
  id: Equals(Unity.Reflect.Data.SyncManifest)
  parent: Unity.Reflect.Data.SyncManifest
  langs:
  - csharp
  - vb
  name: Equals(SyncManifest)
  nameWithType: SyncManifest.Equals(SyncManifest)
  fullName: Unity.Reflect.Data.SyncManifest.Equals(Unity.Reflect.Data.SyncManifest)
  type: Method
  source:
    id: Equals
    path: ''
    startLine: 23346
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Data
  syntax:
    content: public bool Equals(SyncManifest other)
    parameters:
    - id: other
      type: Unity.Reflect.Data.SyncManifest
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As SyncManifest) As Boolean
  overload: Unity.Reflect.Data.SyncManifest.Equals*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unity.Reflect.Data.SyncManifest.GetHashCode
  commentId: M:Unity.Reflect.Data.SyncManifest.GetHashCode
  id: GetHashCode
  parent: Unity.Reflect.Data.SyncManifest
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: SyncManifest.GetHashCode()
  fullName: Unity.Reflect.Data.SyncManifest.GetHashCode()
  type: Method
  source:
    id: GetHashCode
    path: ''
    startLine: 23358
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Data
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overload: Unity.Reflect.Data.SyncManifest.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Unity.Reflect.Data.SyncManifest.ToString
  commentId: M:Unity.Reflect.Data.SyncManifest.ToString
  id: ToString
  parent: Unity.Reflect.Data.SyncManifest
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: SyncManifest.ToString()
  fullName: Unity.Reflect.Data.SyncManifest.ToString()
  type: Method
  source:
    id: ToString
    path: ''
    startLine: 23368
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Data
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overload: Unity.Reflect.Data.SyncManifest.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Unity.Reflect.Data.SyncManifest.WriteTo(pb.CodedOutputStream)
  commentId: M:Unity.Reflect.Data.SyncManifest.WriteTo(pb.CodedOutputStream)
  id: WriteTo(pb.CodedOutputStream)
  parent: Unity.Reflect.Data.SyncManifest
  langs:
  - csharp
  - vb
  name: WriteTo(pb.CodedOutputStream)
  nameWithType: SyncManifest.WriteTo(pb.CodedOutputStream)
  fullName: Unity.Reflect.Data.SyncManifest.WriteTo(pb.CodedOutputStream)
  type: Method
  source:
    id: WriteTo
    path: ''
    startLine: 23373
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Data
  syntax:
    content: public void WriteTo(pb.CodedOutputStream output)
    parameters:
    - id: output
      type: pb.CodedOutputStream
    content.vb: Public Sub WriteTo(output As pb.CodedOutputStream)
  overload: Unity.Reflect.Data.SyncManifest.WriteTo*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unity.Reflect.Data.SyncManifest.CalculateSize
  commentId: M:Unity.Reflect.Data.SyncManifest.CalculateSize
  id: CalculateSize
  parent: Unity.Reflect.Data.SyncManifest
  langs:
  - csharp
  - vb
  name: CalculateSize()
  nameWithType: SyncManifest.CalculateSize()
  fullName: Unity.Reflect.Data.SyncManifest.CalculateSize()
  type: Method
  source:
    id: CalculateSize
    path: ''
    startLine: 23381
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Data
  syntax:
    content: public int CalculateSize()
    return:
      type: System.Int32
    content.vb: Public Function CalculateSize As Integer
  overload: Unity.Reflect.Data.SyncManifest.CalculateSize*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unity.Reflect.Data.SyncManifest.MergeFrom(Unity.Reflect.Data.SyncManifest)
  commentId: M:Unity.Reflect.Data.SyncManifest.MergeFrom(Unity.Reflect.Data.SyncManifest)
  id: MergeFrom(Unity.Reflect.Data.SyncManifest)
  parent: Unity.Reflect.Data.SyncManifest
  langs:
  - csharp
  - vb
  name: MergeFrom(SyncManifest)
  nameWithType: SyncManifest.MergeFrom(SyncManifest)
  fullName: Unity.Reflect.Data.SyncManifest.MergeFrom(Unity.Reflect.Data.SyncManifest)
  type: Method
  source:
    id: MergeFrom
    path: ''
    startLine: 23391
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Data
  syntax:
    content: public void MergeFrom(SyncManifest other)
    parameters:
    - id: other
      type: Unity.Reflect.Data.SyncManifest
    content.vb: Public Sub MergeFrom(other As SyncManifest)
  overload: Unity.Reflect.Data.SyncManifest.MergeFrom*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unity.Reflect.Data.SyncManifest.MergeFrom(pb.CodedInputStream)
  commentId: M:Unity.Reflect.Data.SyncManifest.MergeFrom(pb.CodedInputStream)
  id: MergeFrom(pb.CodedInputStream)
  parent: Unity.Reflect.Data.SyncManifest
  langs:
  - csharp
  - vb
  name: MergeFrom(pb.CodedInputStream)
  nameWithType: SyncManifest.MergeFrom(pb.CodedInputStream)
  fullName: Unity.Reflect.Data.SyncManifest.MergeFrom(pb.CodedInputStream)
  type: Method
  source:
    id: MergeFrom
    path: ''
    startLine: 23400
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Data
  syntax:
    content: public void MergeFrom(pb.CodedInputStream input)
    parameters:
    - id: input
      type: pb.CodedInputStream
    content.vb: Public Sub MergeFrom(input As pb.CodedInputStream)
  overload: Unity.Reflect.Data.SyncManifest.MergeFrom*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Unity.Reflect.Data
  commentId: N:Unity.Reflect.Data
  name: Unity.Reflect.Data
  nameWithType: Unity.Reflect.Data
  fullName: Unity.Reflect.Data
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: pb.IMessage{Unity.Reflect.Data.SyncManifest}
  commentId: '!:pb.IMessage{Unity.Reflect.Data.SyncManifest}'
  definition: pb.IMessage`1
  name: pb.IMessage<SyncManifest>
  nameWithType: pb.IMessage<SyncManifest>
  fullName: pb.IMessage<Unity.Reflect.Data.SyncManifest>
  nameWithType.vb: pb.IMessage(Of SyncManifest)
  fullName.vb: pb.IMessage(Of Unity.Reflect.Data.SyncManifest)
  name.vb: pb.IMessage(Of SyncManifest)
  spec.csharp:
  - uid: pb.IMessage`1
    name: pb.IMessage
    nameWithType: pb.IMessage
    fullName: pb.IMessage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Unity.Reflect.Data.SyncManifest
    name: SyncManifest
    nameWithType: SyncManifest
    fullName: Unity.Reflect.Data.SyncManifest
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: pb.IMessage`1
    name: pb.IMessage
    nameWithType: pb.IMessage
    fullName: pb.IMessage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Unity.Reflect.Data.SyncManifest
    name: SyncManifest
    nameWithType: SyncManifest
    fullName: Unity.Reflect.Data.SyncManifest
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: pb.IMessage`1
  isExternal: true
  name: pb.IMessage<>
  nameWithType: pb.IMessage<>
  fullName: pb.IMessage<>
  nameWithType.vb: pb.IMessage(Of )
  fullName.vb: pb.IMessage(Of )
  name.vb: pb.IMessage(Of )
  spec.csharp:
  - uid: pb.IMessage`1
    name: pb.IMessage
    nameWithType: pb.IMessage
    fullName: pb.IMessage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: pb.IMessage`1
    name: pb.IMessage
    nameWithType: pb.IMessage
    fullName: pb.IMessage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Unity.Reflect.Data.SyncManifest.Content*
  commentId: Overload:Unity.Reflect.Data.SyncManifest.Content
  name: Content
  nameWithType: SyncManifest.Content
  fullName: Unity.Reflect.Data.SyncManifest.Content
- uid: IReadOnlyDictionary{Unity.Reflect.Data.PersistentKey,Unity.Reflect.Data.ManifestEntry}
  commentId: '!:IReadOnlyDictionary{Unity.Reflect.Data.PersistentKey,Unity.Reflect.Data.ManifestEntry}'
  definition: IReadOnlyDictionary`2
  name: IReadOnlyDictionary<PersistentKey, ManifestEntry>
  nameWithType: IReadOnlyDictionary<PersistentKey, ManifestEntry>
  fullName: IReadOnlyDictionary<Unity.Reflect.Data.PersistentKey, Unity.Reflect.Data.ManifestEntry>
  nameWithType.vb: IReadOnlyDictionary(Of PersistentKey, ManifestEntry)
  fullName.vb: IReadOnlyDictionary(Of Unity.Reflect.Data.PersistentKey, Unity.Reflect.Data.ManifestEntry)
  name.vb: IReadOnlyDictionary(Of PersistentKey, ManifestEntry)
  spec.csharp:
  - uid: IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: IReadOnlyDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Unity.Reflect.Data.PersistentKey
    name: PersistentKey
    nameWithType: PersistentKey
    fullName: Unity.Reflect.Data.PersistentKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Unity.Reflect.Data.ManifestEntry
    name: ManifestEntry
    nameWithType: ManifestEntry
    fullName: Unity.Reflect.Data.ManifestEntry
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: IReadOnlyDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Unity.Reflect.Data.PersistentKey
    name: PersistentKey
    nameWithType: PersistentKey
    fullName: Unity.Reflect.Data.PersistentKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Unity.Reflect.Data.ManifestEntry
    name: ManifestEntry
    nameWithType: ManifestEntry
    fullName: Unity.Reflect.Data.ManifestEntry
  - name: )
    nameWithType: )
    fullName: )
- uid: IReadOnlyDictionary`2
  isExternal: true
  name: IReadOnlyDictionary<, >
  nameWithType: IReadOnlyDictionary<, >
  fullName: IReadOnlyDictionary<, >
  nameWithType.vb: IReadOnlyDictionary(Of , )
  fullName.vb: IReadOnlyDictionary(Of , )
  name.vb: IReadOnlyDictionary(Of , )
  spec.csharp:
  - uid: IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: IReadOnlyDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: IReadOnlyDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Unity.Reflect.Data.SyncManifest.Remaps*
  commentId: Overload:Unity.Reflect.Data.SyncManifest.Remaps
  name: Remaps
  nameWithType: SyncManifest.Remaps
  fullName: Unity.Reflect.Data.SyncManifest.Remaps
- uid: Dictionary{Unity.Reflect.Data.PersistentKey,System.String}
  commentId: '!:Dictionary{Unity.Reflect.Data.PersistentKey,System.String}'
  definition: Dictionary`2
  name: Dictionary<PersistentKey, String>
  nameWithType: Dictionary<PersistentKey, String>
  fullName: Dictionary<Unity.Reflect.Data.PersistentKey, System.String>
  nameWithType.vb: Dictionary(Of PersistentKey, String)
  fullName.vb: Dictionary(Of Unity.Reflect.Data.PersistentKey, System.String)
  name.vb: Dictionary(Of PersistentKey, String)
  spec.csharp:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Unity.Reflect.Data.PersistentKey
    name: PersistentKey
    nameWithType: PersistentKey
    fullName: Unity.Reflect.Data.PersistentKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Unity.Reflect.Data.PersistentKey
    name: PersistentKey
    nameWithType: PersistentKey
    fullName: Unity.Reflect.Data.PersistentKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Dictionary`2
  isExternal: true
  name: Dictionary<, >
  nameWithType: Dictionary<, >
  fullName: Dictionary<, >
  nameWithType.vb: Dictionary(Of , )
  fullName.vb: Dictionary(Of , )
  name.vb: Dictionary(Of , )
  spec.csharp:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Unity.Reflect.Data.SyncManifest.ExpectedManifestPath*
  commentId: Overload:Unity.Reflect.Data.SyncManifest.ExpectedManifestPath
  name: ExpectedManifestPath
  nameWithType: SyncManifest.ExpectedManifestPath
  fullName: Unity.Reflect.Data.SyncManifest.ExpectedManifestPath
- uid: Unity.Reflect.Data.SyncManifest.Append*
  commentId: Overload:Unity.Reflect.Data.SyncManifest.Append
  name: Append
  nameWithType: SyncManifest.Append
  fullName: Unity.Reflect.Data.SyncManifest.Append
- uid: Unity.Reflect.Data.PersistentKey
  commentId: T:Unity.Reflect.Data.PersistentKey
  parent: Unity.Reflect.Data
  name: PersistentKey
  nameWithType: PersistentKey
  fullName: Unity.Reflect.Data.PersistentKey
- uid: SyncBoundingBox
  isExternal: true
  name: SyncBoundingBox
  nameWithType: SyncBoundingBox
  fullName: SyncBoundingBox
- uid: Unity.Reflect.Data.SyncManifest.Save*
  commentId: Overload:Unity.Reflect.Data.SyncManifest.Save
  name: Save
  nameWithType: SyncManifest.Save
  fullName: Unity.Reflect.Data.SyncManifest.Save
- uid: Unity.Reflect.Data.SyncManifest.LoadFromBytes*
  commentId: Overload:Unity.Reflect.Data.SyncManifest.LoadFromBytes
  name: LoadFromBytes
  nameWithType: SyncManifest.LoadFromBytes
  fullName: Unity.Reflect.Data.SyncManifest.LoadFromBytes
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Unity.Reflect.Data.SyncManifest
  commentId: T:Unity.Reflect.Data.SyncManifest
  parent: Unity.Reflect.Data
  name: SyncManifest
  nameWithType: SyncManifest
  fullName: Unity.Reflect.Data.SyncManifest
- uid: Unity.Reflect.Data.SyncManifest.ComputeDiff*
  commentId: Overload:Unity.Reflect.Data.SyncManifest.ComputeDiff
  name: ComputeDiff
  nameWithType: SyncManifest.ComputeDiff
  fullName: Unity.Reflect.Data.SyncManifest.ComputeDiff
- uid: IList{Unity.Reflect.Data.ManifestEntry}
  commentId: '!:IList{Unity.Reflect.Data.ManifestEntry}'
  definition: IList`1
  name: IList<ManifestEntry>
  nameWithType: IList<ManifestEntry>
  fullName: IList<Unity.Reflect.Data.ManifestEntry>
  nameWithType.vb: IList(Of ManifestEntry)
  fullName.vb: IList(Of Unity.Reflect.Data.ManifestEntry)
  name.vb: IList(Of ManifestEntry)
  spec.csharp:
  - uid: IList`1
    name: IList
    nameWithType: IList
    fullName: IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Unity.Reflect.Data.ManifestEntry
    name: ManifestEntry
    nameWithType: ManifestEntry
    fullName: Unity.Reflect.Data.ManifestEntry
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IList`1
    name: IList
    nameWithType: IList
    fullName: IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Unity.Reflect.Data.ManifestEntry
    name: ManifestEntry
    nameWithType: ManifestEntry
    fullName: Unity.Reflect.Data.ManifestEntry
  - name: )
    nameWithType: )
    fullName: )
- uid: IList`1
  isExternal: true
  name: IList<>
  nameWithType: IList<>
  fullName: IList<>
  nameWithType.vb: IList(Of )
  fullName.vb: IList(Of )
  name.vb: IList(Of )
  spec.csharp:
  - uid: IList`1
    name: IList
    nameWithType: IList
    fullName: IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IList`1
    name: IList
    nameWithType: IList
    fullName: IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Unity.Reflect.Data.SyncManifest.Parser*
  commentId: Overload:Unity.Reflect.Data.SyncManifest.Parser
  name: Parser
  nameWithType: SyncManifest.Parser
  fullName: Unity.Reflect.Data.SyncManifest.Parser
- uid: pb.MessageParser{Unity.Reflect.Data.SyncManifest}
  commentId: '!:pb.MessageParser{Unity.Reflect.Data.SyncManifest}'
  definition: pb.MessageParser`1
  name: pb.MessageParser<SyncManifest>
  nameWithType: pb.MessageParser<SyncManifest>
  fullName: pb.MessageParser<Unity.Reflect.Data.SyncManifest>
  nameWithType.vb: pb.MessageParser(Of SyncManifest)
  fullName.vb: pb.MessageParser(Of Unity.Reflect.Data.SyncManifest)
  name.vb: pb.MessageParser(Of SyncManifest)
  spec.csharp:
  - uid: pb.MessageParser`1
    name: pb.MessageParser
    nameWithType: pb.MessageParser
    fullName: pb.MessageParser
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Unity.Reflect.Data.SyncManifest
    name: SyncManifest
    nameWithType: SyncManifest
    fullName: Unity.Reflect.Data.SyncManifest
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: pb.MessageParser`1
    name: pb.MessageParser
    nameWithType: pb.MessageParser
    fullName: pb.MessageParser
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Unity.Reflect.Data.SyncManifest
    name: SyncManifest
    nameWithType: SyncManifest
    fullName: Unity.Reflect.Data.SyncManifest
  - name: )
    nameWithType: )
    fullName: )
- uid: pb.MessageParser`1
  isExternal: true
  name: pb.MessageParser<>
  nameWithType: pb.MessageParser<>
  fullName: pb.MessageParser<>
  nameWithType.vb: pb.MessageParser(Of )
  fullName.vb: pb.MessageParser(Of )
  name.vb: pb.MessageParser(Of )
  spec.csharp:
  - uid: pb.MessageParser`1
    name: pb.MessageParser
    nameWithType: pb.MessageParser
    fullName: pb.MessageParser
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: pb.MessageParser`1
    name: pb.MessageParser
    nameWithType: pb.MessageParser
    fullName: pb.MessageParser
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Unity.Reflect.Data.SyncManifest.Descriptor*
  commentId: Overload:Unity.Reflect.Data.SyncManifest.Descriptor
  name: Descriptor
  nameWithType: SyncManifest.Descriptor
  fullName: Unity.Reflect.Data.SyncManifest.Descriptor
- uid: pbr.MessageDescriptor
  isExternal: true
  name: pbr.MessageDescriptor
  nameWithType: pbr.MessageDescriptor
  fullName: pbr.MessageDescriptor
- uid: Unity.Reflect.Data.SyncManifest.#ctor*
  commentId: Overload:Unity.Reflect.Data.SyncManifest.#ctor
  name: SyncManifest
  nameWithType: SyncManifest.SyncManifest
  fullName: Unity.Reflect.Data.SyncManifest.SyncManifest
- uid: Unity.Reflect.Data.SyncManifest.Clone*
  commentId: Overload:Unity.Reflect.Data.SyncManifest.Clone
  name: Clone
  nameWithType: SyncManifest.Clone
  fullName: Unity.Reflect.Data.SyncManifest.Clone
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Unity.Reflect.Data.SyncManifest.Entries*
  commentId: Overload:Unity.Reflect.Data.SyncManifest.Entries
  name: Entries
  nameWithType: SyncManifest.Entries
  fullName: Unity.Reflect.Data.SyncManifest.Entries
- uid: pbc.MapField{System.String,Unity.Reflect.Data.ManifestEntry}
  commentId: '!:pbc.MapField{System.String,Unity.Reflect.Data.ManifestEntry}'
  definition: pbc.MapField`2
  name: pbc.MapField<String, ManifestEntry>
  nameWithType: pbc.MapField<String, ManifestEntry>
  fullName: pbc.MapField<System.String, Unity.Reflect.Data.ManifestEntry>
  nameWithType.vb: pbc.MapField(Of String, ManifestEntry)
  fullName.vb: pbc.MapField(Of System.String, Unity.Reflect.Data.ManifestEntry)
  name.vb: pbc.MapField(Of String, ManifestEntry)
  spec.csharp:
  - uid: pbc.MapField`2
    name: pbc.MapField
    nameWithType: pbc.MapField
    fullName: pbc.MapField
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Unity.Reflect.Data.ManifestEntry
    name: ManifestEntry
    nameWithType: ManifestEntry
    fullName: Unity.Reflect.Data.ManifestEntry
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: pbc.MapField`2
    name: pbc.MapField
    nameWithType: pbc.MapField
    fullName: pbc.MapField
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Unity.Reflect.Data.ManifestEntry
    name: ManifestEntry
    nameWithType: ManifestEntry
    fullName: Unity.Reflect.Data.ManifestEntry
  - name: )
    nameWithType: )
    fullName: )
- uid: pbc.MapField`2
  isExternal: true
  name: pbc.MapField<, >
  nameWithType: pbc.MapField<, >
  fullName: pbc.MapField<, >
  nameWithType.vb: pbc.MapField(Of , )
  fullName.vb: pbc.MapField(Of , )
  name.vb: pbc.MapField(Of , )
  spec.csharp:
  - uid: pbc.MapField`2
    name: pbc.MapField
    nameWithType: pbc.MapField
    fullName: pbc.MapField
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: pbc.MapField`2
    name: pbc.MapField
    nameWithType: pbc.MapField
    fullName: pbc.MapField
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Unity.Reflect.Data.SyncManifest.Equals*
  commentId: Overload:Unity.Reflect.Data.SyncManifest.Equals
  name: Equals
  nameWithType: SyncManifest.Equals
  fullName: Unity.Reflect.Data.SyncManifest.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Unity.Reflect.Data.SyncManifest.GetHashCode*
  commentId: Overload:Unity.Reflect.Data.SyncManifest.GetHashCode
  name: GetHashCode
  nameWithType: SyncManifest.GetHashCode
  fullName: Unity.Reflect.Data.SyncManifest.GetHashCode
- uid: Unity.Reflect.Data.SyncManifest.ToString*
  commentId: Overload:Unity.Reflect.Data.SyncManifest.ToString
  name: ToString
  nameWithType: SyncManifest.ToString
  fullName: Unity.Reflect.Data.SyncManifest.ToString
- uid: Unity.Reflect.Data.SyncManifest.WriteTo*
  commentId: Overload:Unity.Reflect.Data.SyncManifest.WriteTo
  name: WriteTo
  nameWithType: SyncManifest.WriteTo
  fullName: Unity.Reflect.Data.SyncManifest.WriteTo
- uid: pb.CodedOutputStream
  isExternal: true
  name: pb.CodedOutputStream
  nameWithType: pb.CodedOutputStream
  fullName: pb.CodedOutputStream
- uid: Unity.Reflect.Data.SyncManifest.CalculateSize*
  commentId: Overload:Unity.Reflect.Data.SyncManifest.CalculateSize
  name: CalculateSize
  nameWithType: SyncManifest.CalculateSize
  fullName: Unity.Reflect.Data.SyncManifest.CalculateSize
- uid: Unity.Reflect.Data.SyncManifest.MergeFrom*
  commentId: Overload:Unity.Reflect.Data.SyncManifest.MergeFrom
  name: MergeFrom
  nameWithType: SyncManifest.MergeFrom
  fullName: Unity.Reflect.Data.SyncManifest.MergeFrom
- uid: pb.CodedInputStream
  isExternal: true
  name: pb.CodedInputStream
  nameWithType: pb.CodedInputStream
  fullName: pb.CodedInputStream
