### YamlMime:ManagedReference
items:
- uid: Unity.Reflect.Model.SyncMap
  commentId: T:Unity.Reflect.Model.SyncMap
  id: SyncMap
  parent: Unity.Reflect.Model
  children:
  - Unity.Reflect.Model.SyncMap.#ctor
  - Unity.Reflect.Model.SyncMap.#ctor
  - Unity.Reflect.Model.SyncMap.#ctor(System.String,Unity.Reflect.Model.SyncFloat2,Unity.Reflect.Model.SyncFloat2,System.Single,System.Boolean,System.Single)
  - Unity.Reflect.Model.SyncMap.#ctor(System.String,Unity.Reflect.Model.SyncFloat2,Unity.Reflect.Model.SyncFloat2,System.Single,System.Boolean,System.Single)
  - Unity.Reflect.Model.SyncMap.#ctor(Unity.Reflect.Model.SyncMap)
  - Unity.Reflect.Model.SyncMap.#ctor(Unity.Reflect.Model.SyncMap)
  - Unity.Reflect.Model.SyncMap.Brightness
  - Unity.Reflect.Model.SyncMap.Brightness
  - Unity.Reflect.Model.SyncMap.BrightnessFieldNumber
  - Unity.Reflect.Model.SyncMap.BrightnessFieldNumber
  - Unity.Reflect.Model.SyncMap.CalculateSize
  - Unity.Reflect.Model.SyncMap.CalculateSize
  - Unity.Reflect.Model.SyncMap.Clone
  - Unity.Reflect.Model.SyncMap.Clone
  - Unity.Reflect.Model.SyncMap.Descriptor
  - Unity.Reflect.Model.SyncMap.Descriptor
  - Unity.Reflect.Model.SyncMap.Empty
  - Unity.Reflect.Model.SyncMap.Empty
  - Unity.Reflect.Model.SyncMap.Equals(System.Object)
  - Unity.Reflect.Model.SyncMap.Equals(System.Object)
  - Unity.Reflect.Model.SyncMap.Equals(Unity.Reflect.Model.SyncMap)
  - Unity.Reflect.Model.SyncMap.Equals(Unity.Reflect.Model.SyncMap)
  - Unity.Reflect.Model.SyncMap.GetHashCode
  - Unity.Reflect.Model.SyncMap.GetHashCode
  - Unity.Reflect.Model.SyncMap.Invert
  - Unity.Reflect.Model.SyncMap.Invert
  - Unity.Reflect.Model.SyncMap.InvertFieldNumber
  - Unity.Reflect.Model.SyncMap.InvertFieldNumber
  - Unity.Reflect.Model.SyncMap.MergeFrom(pb.CodedInputStream)
  - Unity.Reflect.Model.SyncMap.MergeFrom(pb.CodedInputStream)
  - Unity.Reflect.Model.SyncMap.MergeFrom(Unity.Reflect.Model.SyncMap)
  - Unity.Reflect.Model.SyncMap.MergeFrom(Unity.Reflect.Model.SyncMap)
  - Unity.Reflect.Model.SyncMap.Offset
  - Unity.Reflect.Model.SyncMap.Offset
  - Unity.Reflect.Model.SyncMap.OffsetFieldNumber
  - Unity.Reflect.Model.SyncMap.OffsetFieldNumber
  - Unity.Reflect.Model.SyncMap.Parser
  - Unity.Reflect.Model.SyncMap.Parser
  - Unity.Reflect.Model.SyncMap.RotationDegrees
  - Unity.Reflect.Model.SyncMap.RotationDegrees
  - Unity.Reflect.Model.SyncMap.RotationDegreesFieldNumber
  - Unity.Reflect.Model.SyncMap.RotationDegreesFieldNumber
  - Unity.Reflect.Model.SyncMap.Texture
  - Unity.Reflect.Model.SyncMap.Texture
  - Unity.Reflect.Model.SyncMap.TextureFieldNumber
  - Unity.Reflect.Model.SyncMap.TextureFieldNumber
  - Unity.Reflect.Model.SyncMap.Tiling
  - Unity.Reflect.Model.SyncMap.Tiling
  - Unity.Reflect.Model.SyncMap.TilingFieldNumber
  - Unity.Reflect.Model.SyncMap.TilingFieldNumber
  - Unity.Reflect.Model.SyncMap.ToString
  - Unity.Reflect.Model.SyncMap.ToString
  - Unity.Reflect.Model.SyncMap.WriteTo(pb.CodedOutputStream)
  - Unity.Reflect.Model.SyncMap.WriteTo(pb.CodedOutputStream)
  langs:
  - csharp
  - vb
  name: SyncMap
  nameWithType: SyncMap
  fullName: Unity.Reflect.Model.SyncMap
  type: Class
  source:
    id: SyncMap
    path: ''
    startLine: 24364
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: 'public sealed class SyncMap : pb.IMessage<SyncMap>, pb.IMessage<SyncMap>'
    content.vb: >-
      Public NotInheritable Class SyncMap
          Inherits pb.IMessage(Of SyncMap)
          Implements pb.IMessage(Of SyncMap)
  inheritance:
  - System.Object
  implements:
  - pb.IMessage{Unity.Reflect.Model.SyncMap}
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Unity.Reflect.Model.SyncMap.Empty
  commentId: M:Unity.Reflect.Model.SyncMap.Empty
  id: Empty
  parent: Unity.Reflect.Model.SyncMap
  langs:
  - csharp
  - vb
  name: Empty()
  nameWithType: SyncMap.Empty()
  fullName: Unity.Reflect.Model.SyncMap.Empty()
  type: Method
  source:
    id: Empty
    path: ''
    startLine: 762
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public static SyncMap Empty()
    return:
      type: Unity.Reflect.Model.SyncMap
    content.vb: Public Shared Function Empty As SyncMap
  overload: Unity.Reflect.Model.SyncMap.Empty*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Unity.Reflect.Model.SyncMap.#ctor(System.String,Unity.Reflect.Model.SyncFloat2,Unity.Reflect.Model.SyncFloat2,System.Single,System.Boolean,System.Single)
  commentId: M:Unity.Reflect.Model.SyncMap.#ctor(System.String,Unity.Reflect.Model.SyncFloat2,Unity.Reflect.Model.SyncFloat2,System.Single,System.Boolean,System.Single)
  id: '#ctor(System.String,Unity.Reflect.Model.SyncFloat2,Unity.Reflect.Model.SyncFloat2,System.Single,System.Boolean,System.Single)'
  parent: Unity.Reflect.Model.SyncMap
  langs:
  - csharp
  - vb
  name: SyncMap(String, SyncFloat2, SyncFloat2, Single, Boolean, Single)
  nameWithType: SyncMap.SyncMap(String, SyncFloat2, SyncFloat2, Single, Boolean, Single)
  fullName: Unity.Reflect.Model.SyncMap.SyncMap(System.String, Unity.Reflect.Model.SyncFloat2, Unity.Reflect.Model.SyncFloat2, System.Single, System.Boolean, System.Single)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 764
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public SyncMap(string texture, SyncFloat2 offset, SyncFloat2 tiling, float brightness = 1F, bool invert = false, float rotation = 0F)
    parameters:
    - id: texture
      type: System.String
    - id: offset
      type: Unity.Reflect.Model.SyncFloat2
    - id: tiling
      type: Unity.Reflect.Model.SyncFloat2
    - id: brightness
      type: System.Single
    - id: invert
      type: System.Boolean
    - id: rotation
      type: System.Single
    content.vb: Public Sub New(texture As String, offset As SyncFloat2, tiling As SyncFloat2, brightness As Single = 1F, invert As Boolean = False, rotation As Single = 0F)
  overload: Unity.Reflect.Model.SyncMap.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unity.Reflect.Model.SyncMap.Parser
  commentId: P:Unity.Reflect.Model.SyncMap.Parser
  id: Parser
  parent: Unity.Reflect.Model.SyncMap
  langs:
  - csharp
  - vb
  name: Parser
  nameWithType: SyncMap.Parser
  fullName: Unity.Reflect.Model.SyncMap.Parser
  type: Property
  source:
    id: Parser
    path: ''
    startLine: 4208
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public static pb.MessageParser<SyncMap> Parser { get; }
    parameters: []
    return:
      type: pb.MessageParser{Unity.Reflect.Model.SyncMap}
    content.vb: Public Shared ReadOnly Property Parser As pb.MessageParser(Of SyncMap)
  overload: Unity.Reflect.Model.SyncMap.Parser*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Unity.Reflect.Model.SyncMap.Descriptor
  commentId: P:Unity.Reflect.Model.SyncMap.Descriptor
  id: Descriptor
  parent: Unity.Reflect.Model.SyncMap
  langs:
  - csharp
  - vb
  name: Descriptor
  nameWithType: SyncMap.Descriptor
  fullName: Unity.Reflect.Model.SyncMap.Descriptor
  type: Property
  source:
    id: Descriptor
    path: ''
    startLine: 4211
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public static pbr.MessageDescriptor Descriptor { get; }
    parameters: []
    return:
      type: pbr.MessageDescriptor
    content.vb: Public Shared ReadOnly Property Descriptor As pbr.MessageDescriptor
  overload: Unity.Reflect.Model.SyncMap.Descriptor*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Unity.Reflect.Model.SyncMap.#ctor
  commentId: M:Unity.Reflect.Model.SyncMap.#ctor
  id: '#ctor'
  parent: Unity.Reflect.Model.SyncMap
  langs:
  - csharp
  - vb
  name: SyncMap()
  nameWithType: SyncMap.SyncMap()
  fullName: Unity.Reflect.Model.SyncMap.SyncMap()
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 4221
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public SyncMap()
    content.vb: Public Sub New
  overload: Unity.Reflect.Model.SyncMap.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unity.Reflect.Model.SyncMap.#ctor(Unity.Reflect.Model.SyncMap)
  commentId: M:Unity.Reflect.Model.SyncMap.#ctor(Unity.Reflect.Model.SyncMap)
  id: '#ctor(Unity.Reflect.Model.SyncMap)'
  parent: Unity.Reflect.Model.SyncMap
  langs:
  - csharp
  - vb
  name: SyncMap(SyncMap)
  nameWithType: SyncMap.SyncMap(SyncMap)
  fullName: Unity.Reflect.Model.SyncMap.SyncMap(Unity.Reflect.Model.SyncMap)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 4228
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public SyncMap(SyncMap other)
    parameters:
    - id: other
      type: Unity.Reflect.Model.SyncMap
    content.vb: Public Sub New(other As SyncMap)
  overload: Unity.Reflect.Model.SyncMap.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unity.Reflect.Model.SyncMap.Clone
  commentId: M:Unity.Reflect.Model.SyncMap.Clone
  id: Clone
  parent: Unity.Reflect.Model.SyncMap
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: SyncMap.Clone()
  fullName: Unity.Reflect.Model.SyncMap.Clone()
  type: Method
  source:
    id: Clone
    path: ''
    startLine: 4239
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public SyncMap Clone()
    return:
      type: Unity.Reflect.Model.SyncMap
    content.vb: Public Function Clone As SyncMap
  overload: Unity.Reflect.Model.SyncMap.Clone*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unity.Reflect.Model.SyncMap.TextureFieldNumber
  commentId: F:Unity.Reflect.Model.SyncMap.TextureFieldNumber
  id: TextureFieldNumber
  parent: Unity.Reflect.Model.SyncMap
  langs:
  - csharp
  - vb
  name: TextureFieldNumber
  nameWithType: SyncMap.TextureFieldNumber
  fullName: Unity.Reflect.Model.SyncMap.TextureFieldNumber
  type: Field
  source:
    id: TextureFieldNumber
    path: ''
    startLine: 4245
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  summary: Field number for the &quot;texture&quot; field.
  example: []
  syntax:
    content: public const int TextureFieldNumber = 1
    return:
      type: System.Int32
    content.vb: Public Const TextureFieldNumber As Integer = 1
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Unity.Reflect.Model.SyncMap.Texture
  commentId: P:Unity.Reflect.Model.SyncMap.Texture
  id: Texture
  parent: Unity.Reflect.Model.SyncMap
  langs:
  - csharp
  - vb
  name: Texture
  nameWithType: SyncMap.Texture
  fullName: Unity.Reflect.Model.SyncMap.Texture
  type: Property
  source:
    id: Texture
    path: ''
    startLine: 4247
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public string Texture { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Texture As String
  overload: Unity.Reflect.Model.SyncMap.Texture*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unity.Reflect.Model.SyncMap.OffsetFieldNumber
  commentId: F:Unity.Reflect.Model.SyncMap.OffsetFieldNumber
  id: OffsetFieldNumber
  parent: Unity.Reflect.Model.SyncMap
  langs:
  - csharp
  - vb
  name: OffsetFieldNumber
  nameWithType: SyncMap.OffsetFieldNumber
  fullName: Unity.Reflect.Model.SyncMap.OffsetFieldNumber
  type: Field
  source:
    id: OffsetFieldNumber
    path: ''
    startLine: 4256
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  summary: Field number for the &quot;offset&quot; field.
  example: []
  syntax:
    content: public const int OffsetFieldNumber = 2
    return:
      type: System.Int32
    content.vb: Public Const OffsetFieldNumber As Integer = 2
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Unity.Reflect.Model.SyncMap.Offset
  commentId: P:Unity.Reflect.Model.SyncMap.Offset
  id: Offset
  parent: Unity.Reflect.Model.SyncMap
  langs:
  - csharp
  - vb
  name: Offset
  nameWithType: SyncMap.Offset
  fullName: Unity.Reflect.Model.SyncMap.Offset
  type: Property
  source:
    id: Offset
    path: ''
    startLine: 4258
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public SyncFloat2 Offset { get; set; }
    parameters: []
    return:
      type: Unity.Reflect.Model.SyncFloat2
    content.vb: Public Property Offset As SyncFloat2
  overload: Unity.Reflect.Model.SyncMap.Offset*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unity.Reflect.Model.SyncMap.TilingFieldNumber
  commentId: F:Unity.Reflect.Model.SyncMap.TilingFieldNumber
  id: TilingFieldNumber
  parent: Unity.Reflect.Model.SyncMap
  langs:
  - csharp
  - vb
  name: TilingFieldNumber
  nameWithType: SyncMap.TilingFieldNumber
  fullName: Unity.Reflect.Model.SyncMap.TilingFieldNumber
  type: Field
  source:
    id: TilingFieldNumber
    path: ''
    startLine: 4267
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  summary: Field number for the &quot;tiling&quot; field.
  example: []
  syntax:
    content: public const int TilingFieldNumber = 3
    return:
      type: System.Int32
    content.vb: Public Const TilingFieldNumber As Integer = 3
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Unity.Reflect.Model.SyncMap.Tiling
  commentId: P:Unity.Reflect.Model.SyncMap.Tiling
  id: Tiling
  parent: Unity.Reflect.Model.SyncMap
  langs:
  - csharp
  - vb
  name: Tiling
  nameWithType: SyncMap.Tiling
  fullName: Unity.Reflect.Model.SyncMap.Tiling
  type: Property
  source:
    id: Tiling
    path: ''
    startLine: 4269
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public SyncFloat2 Tiling { get; set; }
    parameters: []
    return:
      type: Unity.Reflect.Model.SyncFloat2
    content.vb: Public Property Tiling As SyncFloat2
  overload: Unity.Reflect.Model.SyncMap.Tiling*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unity.Reflect.Model.SyncMap.BrightnessFieldNumber
  commentId: F:Unity.Reflect.Model.SyncMap.BrightnessFieldNumber
  id: BrightnessFieldNumber
  parent: Unity.Reflect.Model.SyncMap
  langs:
  - csharp
  - vb
  name: BrightnessFieldNumber
  nameWithType: SyncMap.BrightnessFieldNumber
  fullName: Unity.Reflect.Model.SyncMap.BrightnessFieldNumber
  type: Field
  source:
    id: BrightnessFieldNumber
    path: ''
    startLine: 4278
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  summary: Field number for the &quot;brightness&quot; field.
  example: []
  syntax:
    content: public const int BrightnessFieldNumber = 4
    return:
      type: System.Int32
    content.vb: Public Const BrightnessFieldNumber As Integer = 4
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Unity.Reflect.Model.SyncMap.Brightness
  commentId: P:Unity.Reflect.Model.SyncMap.Brightness
  id: Brightness
  parent: Unity.Reflect.Model.SyncMap
  langs:
  - csharp
  - vb
  name: Brightness
  nameWithType: SyncMap.Brightness
  fullName: Unity.Reflect.Model.SyncMap.Brightness
  type: Property
  source:
    id: Brightness
    path: ''
    startLine: 4280
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public float Brightness { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property Brightness As Single
  overload: Unity.Reflect.Model.SyncMap.Brightness*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unity.Reflect.Model.SyncMap.InvertFieldNumber
  commentId: F:Unity.Reflect.Model.SyncMap.InvertFieldNumber
  id: InvertFieldNumber
  parent: Unity.Reflect.Model.SyncMap
  langs:
  - csharp
  - vb
  name: InvertFieldNumber
  nameWithType: SyncMap.InvertFieldNumber
  fullName: Unity.Reflect.Model.SyncMap.InvertFieldNumber
  type: Field
  source:
    id: InvertFieldNumber
    path: ''
    startLine: 4289
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  summary: Field number for the &quot;invert&quot; field.
  example: []
  syntax:
    content: public const int InvertFieldNumber = 5
    return:
      type: System.Int32
    content.vb: Public Const InvertFieldNumber As Integer = 5
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Unity.Reflect.Model.SyncMap.Invert
  commentId: P:Unity.Reflect.Model.SyncMap.Invert
  id: Invert
  parent: Unity.Reflect.Model.SyncMap
  langs:
  - csharp
  - vb
  name: Invert
  nameWithType: SyncMap.Invert
  fullName: Unity.Reflect.Model.SyncMap.Invert
  type: Property
  source:
    id: Invert
    path: ''
    startLine: 4291
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public bool Invert { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Invert As Boolean
  overload: Unity.Reflect.Model.SyncMap.Invert*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unity.Reflect.Model.SyncMap.RotationDegreesFieldNumber
  commentId: F:Unity.Reflect.Model.SyncMap.RotationDegreesFieldNumber
  id: RotationDegreesFieldNumber
  parent: Unity.Reflect.Model.SyncMap
  langs:
  - csharp
  - vb
  name: RotationDegreesFieldNumber
  nameWithType: SyncMap.RotationDegreesFieldNumber
  fullName: Unity.Reflect.Model.SyncMap.RotationDegreesFieldNumber
  type: Field
  source:
    id: RotationDegreesFieldNumber
    path: ''
    startLine: 4300
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  summary: Field number for the &quot;rotationDegrees&quot; field.
  example: []
  syntax:
    content: public const int RotationDegreesFieldNumber = 6
    return:
      type: System.Int32
    content.vb: Public Const RotationDegreesFieldNumber As Integer = 6
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Unity.Reflect.Model.SyncMap.RotationDegrees
  commentId: P:Unity.Reflect.Model.SyncMap.RotationDegrees
  id: RotationDegrees
  parent: Unity.Reflect.Model.SyncMap
  langs:
  - csharp
  - vb
  name: RotationDegrees
  nameWithType: SyncMap.RotationDegrees
  fullName: Unity.Reflect.Model.SyncMap.RotationDegrees
  type: Property
  source:
    id: RotationDegrees
    path: ''
    startLine: 4302
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public float RotationDegrees { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property RotationDegrees As Single
  overload: Unity.Reflect.Model.SyncMap.RotationDegrees*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unity.Reflect.Model.SyncMap.Equals(System.Object)
  commentId: M:Unity.Reflect.Model.SyncMap.Equals(System.Object)
  id: Equals(System.Object)
  parent: Unity.Reflect.Model.SyncMap
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: SyncMap.Equals(Object)
  fullName: Unity.Reflect.Model.SyncMap.Equals(System.Object)
  type: Method
  source:
    id: Equals
    path: ''
    startLine: 4310
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public override bool Equals(object other)
    parameters:
    - id: other
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(other As Object) As Boolean
  overload: Unity.Reflect.Model.SyncMap.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Unity.Reflect.Model.SyncMap.Equals(Unity.Reflect.Model.SyncMap)
  commentId: M:Unity.Reflect.Model.SyncMap.Equals(Unity.Reflect.Model.SyncMap)
  id: Equals(Unity.Reflect.Model.SyncMap)
  parent: Unity.Reflect.Model.SyncMap
  langs:
  - csharp
  - vb
  name: Equals(SyncMap)
  nameWithType: SyncMap.Equals(SyncMap)
  fullName: Unity.Reflect.Model.SyncMap.Equals(Unity.Reflect.Model.SyncMap)
  type: Method
  source:
    id: Equals
    path: ''
    startLine: 4315
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public bool Equals(SyncMap other)
    parameters:
    - id: other
      type: Unity.Reflect.Model.SyncMap
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As SyncMap) As Boolean
  overload: Unity.Reflect.Model.SyncMap.Equals*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unity.Reflect.Model.SyncMap.GetHashCode
  commentId: M:Unity.Reflect.Model.SyncMap.GetHashCode
  id: GetHashCode
  parent: Unity.Reflect.Model.SyncMap
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: SyncMap.GetHashCode()
  fullName: Unity.Reflect.Model.SyncMap.GetHashCode()
  type: Method
  source:
    id: GetHashCode
    path: ''
    startLine: 4332
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overload: Unity.Reflect.Model.SyncMap.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Unity.Reflect.Model.SyncMap.ToString
  commentId: M:Unity.Reflect.Model.SyncMap.ToString
  id: ToString
  parent: Unity.Reflect.Model.SyncMap
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: SyncMap.ToString()
  fullName: Unity.Reflect.Model.SyncMap.ToString()
  type: Method
  source:
    id: ToString
    path: ''
    startLine: 4347
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overload: Unity.Reflect.Model.SyncMap.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Unity.Reflect.Model.SyncMap.WriteTo(pb.CodedOutputStream)
  commentId: M:Unity.Reflect.Model.SyncMap.WriteTo(pb.CodedOutputStream)
  id: WriteTo(pb.CodedOutputStream)
  parent: Unity.Reflect.Model.SyncMap
  langs:
  - csharp
  - vb
  name: WriteTo(pb.CodedOutputStream)
  nameWithType: SyncMap.WriteTo(pb.CodedOutputStream)
  fullName: Unity.Reflect.Model.SyncMap.WriteTo(pb.CodedOutputStream)
  type: Method
  source:
    id: WriteTo
    path: ''
    startLine: 4352
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public void WriteTo(pb.CodedOutputStream output)
    parameters:
    - id: output
      type: pb.CodedOutputStream
    content.vb: Public Sub WriteTo(output As pb.CodedOutputStream)
  overload: Unity.Reflect.Model.SyncMap.WriteTo*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unity.Reflect.Model.SyncMap.CalculateSize
  commentId: M:Unity.Reflect.Model.SyncMap.CalculateSize
  id: CalculateSize
  parent: Unity.Reflect.Model.SyncMap
  langs:
  - csharp
  - vb
  name: CalculateSize()
  nameWithType: SyncMap.CalculateSize()
  fullName: Unity.Reflect.Model.SyncMap.CalculateSize()
  type: Method
  source:
    id: CalculateSize
    path: ''
    startLine: 4383
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public int CalculateSize()
    return:
      type: System.Int32
    content.vb: Public Function CalculateSize As Integer
  overload: Unity.Reflect.Model.SyncMap.CalculateSize*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unity.Reflect.Model.SyncMap.MergeFrom(Unity.Reflect.Model.SyncMap)
  commentId: M:Unity.Reflect.Model.SyncMap.MergeFrom(Unity.Reflect.Model.SyncMap)
  id: MergeFrom(Unity.Reflect.Model.SyncMap)
  parent: Unity.Reflect.Model.SyncMap
  langs:
  - csharp
  - vb
  name: MergeFrom(SyncMap)
  nameWithType: SyncMap.MergeFrom(SyncMap)
  fullName: Unity.Reflect.Model.SyncMap.MergeFrom(Unity.Reflect.Model.SyncMap)
  type: Method
  source:
    id: MergeFrom
    path: ''
    startLine: 4410
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public void MergeFrom(SyncMap other)
    parameters:
    - id: other
      type: Unity.Reflect.Model.SyncMap
    content.vb: Public Sub MergeFrom(other As SyncMap)
  overload: Unity.Reflect.Model.SyncMap.MergeFrom*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unity.Reflect.Model.SyncMap.MergeFrom(pb.CodedInputStream)
  commentId: M:Unity.Reflect.Model.SyncMap.MergeFrom(pb.CodedInputStream)
  id: MergeFrom(pb.CodedInputStream)
  parent: Unity.Reflect.Model.SyncMap
  langs:
  - csharp
  - vb
  name: MergeFrom(pb.CodedInputStream)
  nameWithType: SyncMap.MergeFrom(pb.CodedInputStream)
  fullName: Unity.Reflect.Model.SyncMap.MergeFrom(pb.CodedInputStream)
  type: Method
  source:
    id: MergeFrom
    path: ''
    startLine: 4442
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public void MergeFrom(pb.CodedInputStream input)
    parameters:
    - id: input
      type: pb.CodedInputStream
    content.vb: Public Sub MergeFrom(input As pb.CodedInputStream)
  overload: Unity.Reflect.Model.SyncMap.MergeFrom*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unity.Reflect.Model.SyncMap.Empty
  commentId: M:Unity.Reflect.Model.SyncMap.Empty
  id: Empty
  parent: Unity.Reflect.Model.SyncMap
  langs:
  - csharp
  - vb
  name: Empty()
  nameWithType: SyncMap.Empty()
  fullName: Unity.Reflect.Model.SyncMap.Empty()
  type: Method
  source:
    id: Empty
    path: ''
    startLine: 20921
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public static SyncMap Empty()
    return:
      type: Unity.Reflect.Model.SyncMap
    content.vb: Public Shared Function Empty As SyncMap
  overload: Unity.Reflect.Model.SyncMap.Empty*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Unity.Reflect.Model.SyncMap.#ctor(System.String,Unity.Reflect.Model.SyncFloat2,Unity.Reflect.Model.SyncFloat2,System.Single,System.Boolean,System.Single)
  commentId: M:Unity.Reflect.Model.SyncMap.#ctor(System.String,Unity.Reflect.Model.SyncFloat2,Unity.Reflect.Model.SyncFloat2,System.Single,System.Boolean,System.Single)
  id: '#ctor(System.String,Unity.Reflect.Model.SyncFloat2,Unity.Reflect.Model.SyncFloat2,System.Single,System.Boolean,System.Single)'
  parent: Unity.Reflect.Model.SyncMap
  langs:
  - csharp
  - vb
  name: SyncMap(String, SyncFloat2, SyncFloat2, Single, Boolean, Single)
  nameWithType: SyncMap.SyncMap(String, SyncFloat2, SyncFloat2, Single, Boolean, Single)
  fullName: Unity.Reflect.Model.SyncMap.SyncMap(System.String, Unity.Reflect.Model.SyncFloat2, Unity.Reflect.Model.SyncFloat2, System.Single, System.Boolean, System.Single)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 20923
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public SyncMap(string texture, SyncFloat2 offset, SyncFloat2 tiling, float brightness = 1F, bool invert = false, float rotation = 0F)
    parameters:
    - id: texture
      type: System.String
    - id: offset
      type: Unity.Reflect.Model.SyncFloat2
    - id: tiling
      type: Unity.Reflect.Model.SyncFloat2
    - id: brightness
      type: System.Single
    - id: invert
      type: System.Boolean
    - id: rotation
      type: System.Single
    content.vb: Public Sub New(texture As String, offset As SyncFloat2, tiling As SyncFloat2, brightness As Single = 1F, invert As Boolean = False, rotation As Single = 0F)
  overload: Unity.Reflect.Model.SyncMap.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unity.Reflect.Model.SyncMap.Parser
  commentId: P:Unity.Reflect.Model.SyncMap.Parser
  id: Parser
  parent: Unity.Reflect.Model.SyncMap
  langs:
  - csharp
  - vb
  name: Parser
  nameWithType: SyncMap.Parser
  fullName: Unity.Reflect.Model.SyncMap.Parser
  type: Property
  source:
    id: Parser
    path: ''
    startLine: 24367
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public static pb.MessageParser<SyncMap> Parser { get; }
    parameters: []
    return:
      type: pb.MessageParser{Unity.Reflect.Model.SyncMap}
    content.vb: Public Shared ReadOnly Property Parser As pb.MessageParser(Of SyncMap)
  overload: Unity.Reflect.Model.SyncMap.Parser*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Unity.Reflect.Model.SyncMap.Descriptor
  commentId: P:Unity.Reflect.Model.SyncMap.Descriptor
  id: Descriptor
  parent: Unity.Reflect.Model.SyncMap
  langs:
  - csharp
  - vb
  name: Descriptor
  nameWithType: SyncMap.Descriptor
  fullName: Unity.Reflect.Model.SyncMap.Descriptor
  type: Property
  source:
    id: Descriptor
    path: ''
    startLine: 24370
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public static pbr.MessageDescriptor Descriptor { get; }
    parameters: []
    return:
      type: pbr.MessageDescriptor
    content.vb: Public Shared ReadOnly Property Descriptor As pbr.MessageDescriptor
  overload: Unity.Reflect.Model.SyncMap.Descriptor*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Unity.Reflect.Model.SyncMap.#ctor
  commentId: M:Unity.Reflect.Model.SyncMap.#ctor
  id: '#ctor'
  parent: Unity.Reflect.Model.SyncMap
  langs:
  - csharp
  - vb
  name: SyncMap()
  nameWithType: SyncMap.SyncMap()
  fullName: Unity.Reflect.Model.SyncMap.SyncMap()
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 24380
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public SyncMap()
    content.vb: Public Sub New
  overload: Unity.Reflect.Model.SyncMap.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unity.Reflect.Model.SyncMap.#ctor(Unity.Reflect.Model.SyncMap)
  commentId: M:Unity.Reflect.Model.SyncMap.#ctor(Unity.Reflect.Model.SyncMap)
  id: '#ctor(Unity.Reflect.Model.SyncMap)'
  parent: Unity.Reflect.Model.SyncMap
  langs:
  - csharp
  - vb
  name: SyncMap(SyncMap)
  nameWithType: SyncMap.SyncMap(SyncMap)
  fullName: Unity.Reflect.Model.SyncMap.SyncMap(Unity.Reflect.Model.SyncMap)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 24387
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public SyncMap(SyncMap other)
    parameters:
    - id: other
      type: Unity.Reflect.Model.SyncMap
    content.vb: Public Sub New(other As SyncMap)
  overload: Unity.Reflect.Model.SyncMap.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unity.Reflect.Model.SyncMap.Clone
  commentId: M:Unity.Reflect.Model.SyncMap.Clone
  id: Clone
  parent: Unity.Reflect.Model.SyncMap
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: SyncMap.Clone()
  fullName: Unity.Reflect.Model.SyncMap.Clone()
  type: Method
  source:
    id: Clone
    path: ''
    startLine: 24398
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public SyncMap Clone()
    return:
      type: Unity.Reflect.Model.SyncMap
    content.vb: Public Function Clone As SyncMap
  overload: Unity.Reflect.Model.SyncMap.Clone*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unity.Reflect.Model.SyncMap.TextureFieldNumber
  commentId: F:Unity.Reflect.Model.SyncMap.TextureFieldNumber
  id: TextureFieldNumber
  parent: Unity.Reflect.Model.SyncMap
  langs:
  - csharp
  - vb
  name: TextureFieldNumber
  nameWithType: SyncMap.TextureFieldNumber
  fullName: Unity.Reflect.Model.SyncMap.TextureFieldNumber
  type: Field
  source:
    id: TextureFieldNumber
    path: ''
    startLine: 24404
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  summary: Field number for the &quot;texture&quot; field.
  example: []
  syntax:
    content: public const int TextureFieldNumber = 1
    return:
      type: System.Int32
    content.vb: Public Const TextureFieldNumber As Integer = 1
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Unity.Reflect.Model.SyncMap.Texture
  commentId: P:Unity.Reflect.Model.SyncMap.Texture
  id: Texture
  parent: Unity.Reflect.Model.SyncMap
  langs:
  - csharp
  - vb
  name: Texture
  nameWithType: SyncMap.Texture
  fullName: Unity.Reflect.Model.SyncMap.Texture
  type: Property
  source:
    id: Texture
    path: ''
    startLine: 24406
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public string Texture { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Texture As String
  overload: Unity.Reflect.Model.SyncMap.Texture*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unity.Reflect.Model.SyncMap.OffsetFieldNumber
  commentId: F:Unity.Reflect.Model.SyncMap.OffsetFieldNumber
  id: OffsetFieldNumber
  parent: Unity.Reflect.Model.SyncMap
  langs:
  - csharp
  - vb
  name: OffsetFieldNumber
  nameWithType: SyncMap.OffsetFieldNumber
  fullName: Unity.Reflect.Model.SyncMap.OffsetFieldNumber
  type: Field
  source:
    id: OffsetFieldNumber
    path: ''
    startLine: 24415
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  summary: Field number for the &quot;offset&quot; field.
  example: []
  syntax:
    content: public const int OffsetFieldNumber = 2
    return:
      type: System.Int32
    content.vb: Public Const OffsetFieldNumber As Integer = 2
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Unity.Reflect.Model.SyncMap.Offset
  commentId: P:Unity.Reflect.Model.SyncMap.Offset
  id: Offset
  parent: Unity.Reflect.Model.SyncMap
  langs:
  - csharp
  - vb
  name: Offset
  nameWithType: SyncMap.Offset
  fullName: Unity.Reflect.Model.SyncMap.Offset
  type: Property
  source:
    id: Offset
    path: ''
    startLine: 24417
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public SyncFloat2 Offset { get; set; }
    parameters: []
    return:
      type: Unity.Reflect.Model.SyncFloat2
    content.vb: Public Property Offset As SyncFloat2
  overload: Unity.Reflect.Model.SyncMap.Offset*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unity.Reflect.Model.SyncMap.TilingFieldNumber
  commentId: F:Unity.Reflect.Model.SyncMap.TilingFieldNumber
  id: TilingFieldNumber
  parent: Unity.Reflect.Model.SyncMap
  langs:
  - csharp
  - vb
  name: TilingFieldNumber
  nameWithType: SyncMap.TilingFieldNumber
  fullName: Unity.Reflect.Model.SyncMap.TilingFieldNumber
  type: Field
  source:
    id: TilingFieldNumber
    path: ''
    startLine: 24426
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  summary: Field number for the &quot;tiling&quot; field.
  example: []
  syntax:
    content: public const int TilingFieldNumber = 3
    return:
      type: System.Int32
    content.vb: Public Const TilingFieldNumber As Integer = 3
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Unity.Reflect.Model.SyncMap.Tiling
  commentId: P:Unity.Reflect.Model.SyncMap.Tiling
  id: Tiling
  parent: Unity.Reflect.Model.SyncMap
  langs:
  - csharp
  - vb
  name: Tiling
  nameWithType: SyncMap.Tiling
  fullName: Unity.Reflect.Model.SyncMap.Tiling
  type: Property
  source:
    id: Tiling
    path: ''
    startLine: 24428
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public SyncFloat2 Tiling { get; set; }
    parameters: []
    return:
      type: Unity.Reflect.Model.SyncFloat2
    content.vb: Public Property Tiling As SyncFloat2
  overload: Unity.Reflect.Model.SyncMap.Tiling*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unity.Reflect.Model.SyncMap.BrightnessFieldNumber
  commentId: F:Unity.Reflect.Model.SyncMap.BrightnessFieldNumber
  id: BrightnessFieldNumber
  parent: Unity.Reflect.Model.SyncMap
  langs:
  - csharp
  - vb
  name: BrightnessFieldNumber
  nameWithType: SyncMap.BrightnessFieldNumber
  fullName: Unity.Reflect.Model.SyncMap.BrightnessFieldNumber
  type: Field
  source:
    id: BrightnessFieldNumber
    path: ''
    startLine: 24437
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  summary: Field number for the &quot;brightness&quot; field.
  example: []
  syntax:
    content: public const int BrightnessFieldNumber = 4
    return:
      type: System.Int32
    content.vb: Public Const BrightnessFieldNumber As Integer = 4
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Unity.Reflect.Model.SyncMap.Brightness
  commentId: P:Unity.Reflect.Model.SyncMap.Brightness
  id: Brightness
  parent: Unity.Reflect.Model.SyncMap
  langs:
  - csharp
  - vb
  name: Brightness
  nameWithType: SyncMap.Brightness
  fullName: Unity.Reflect.Model.SyncMap.Brightness
  type: Property
  source:
    id: Brightness
    path: ''
    startLine: 24439
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public float Brightness { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property Brightness As Single
  overload: Unity.Reflect.Model.SyncMap.Brightness*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unity.Reflect.Model.SyncMap.InvertFieldNumber
  commentId: F:Unity.Reflect.Model.SyncMap.InvertFieldNumber
  id: InvertFieldNumber
  parent: Unity.Reflect.Model.SyncMap
  langs:
  - csharp
  - vb
  name: InvertFieldNumber
  nameWithType: SyncMap.InvertFieldNumber
  fullName: Unity.Reflect.Model.SyncMap.InvertFieldNumber
  type: Field
  source:
    id: InvertFieldNumber
    path: ''
    startLine: 24448
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  summary: Field number for the &quot;invert&quot; field.
  example: []
  syntax:
    content: public const int InvertFieldNumber = 5
    return:
      type: System.Int32
    content.vb: Public Const InvertFieldNumber As Integer = 5
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Unity.Reflect.Model.SyncMap.Invert
  commentId: P:Unity.Reflect.Model.SyncMap.Invert
  id: Invert
  parent: Unity.Reflect.Model.SyncMap
  langs:
  - csharp
  - vb
  name: Invert
  nameWithType: SyncMap.Invert
  fullName: Unity.Reflect.Model.SyncMap.Invert
  type: Property
  source:
    id: Invert
    path: ''
    startLine: 24450
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public bool Invert { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Invert As Boolean
  overload: Unity.Reflect.Model.SyncMap.Invert*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unity.Reflect.Model.SyncMap.RotationDegreesFieldNumber
  commentId: F:Unity.Reflect.Model.SyncMap.RotationDegreesFieldNumber
  id: RotationDegreesFieldNumber
  parent: Unity.Reflect.Model.SyncMap
  langs:
  - csharp
  - vb
  name: RotationDegreesFieldNumber
  nameWithType: SyncMap.RotationDegreesFieldNumber
  fullName: Unity.Reflect.Model.SyncMap.RotationDegreesFieldNumber
  type: Field
  source:
    id: RotationDegreesFieldNumber
    path: ''
    startLine: 24459
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  summary: Field number for the &quot;rotationDegrees&quot; field.
  example: []
  syntax:
    content: public const int RotationDegreesFieldNumber = 6
    return:
      type: System.Int32
    content.vb: Public Const RotationDegreesFieldNumber As Integer = 6
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Unity.Reflect.Model.SyncMap.RotationDegrees
  commentId: P:Unity.Reflect.Model.SyncMap.RotationDegrees
  id: RotationDegrees
  parent: Unity.Reflect.Model.SyncMap
  langs:
  - csharp
  - vb
  name: RotationDegrees
  nameWithType: SyncMap.RotationDegrees
  fullName: Unity.Reflect.Model.SyncMap.RotationDegrees
  type: Property
  source:
    id: RotationDegrees
    path: ''
    startLine: 24461
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public float RotationDegrees { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property RotationDegrees As Single
  overload: Unity.Reflect.Model.SyncMap.RotationDegrees*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unity.Reflect.Model.SyncMap.Equals(System.Object)
  commentId: M:Unity.Reflect.Model.SyncMap.Equals(System.Object)
  id: Equals(System.Object)
  parent: Unity.Reflect.Model.SyncMap
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: SyncMap.Equals(Object)
  fullName: Unity.Reflect.Model.SyncMap.Equals(System.Object)
  type: Method
  source:
    id: Equals
    path: ''
    startLine: 24469
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public override bool Equals(object other)
    parameters:
    - id: other
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(other As Object) As Boolean
  overload: Unity.Reflect.Model.SyncMap.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Unity.Reflect.Model.SyncMap.Equals(Unity.Reflect.Model.SyncMap)
  commentId: M:Unity.Reflect.Model.SyncMap.Equals(Unity.Reflect.Model.SyncMap)
  id: Equals(Unity.Reflect.Model.SyncMap)
  parent: Unity.Reflect.Model.SyncMap
  langs:
  - csharp
  - vb
  name: Equals(SyncMap)
  nameWithType: SyncMap.Equals(SyncMap)
  fullName: Unity.Reflect.Model.SyncMap.Equals(Unity.Reflect.Model.SyncMap)
  type: Method
  source:
    id: Equals
    path: ''
    startLine: 24474
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public bool Equals(SyncMap other)
    parameters:
    - id: other
      type: Unity.Reflect.Model.SyncMap
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As SyncMap) As Boolean
  overload: Unity.Reflect.Model.SyncMap.Equals*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unity.Reflect.Model.SyncMap.GetHashCode
  commentId: M:Unity.Reflect.Model.SyncMap.GetHashCode
  id: GetHashCode
  parent: Unity.Reflect.Model.SyncMap
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: SyncMap.GetHashCode()
  fullName: Unity.Reflect.Model.SyncMap.GetHashCode()
  type: Method
  source:
    id: GetHashCode
    path: ''
    startLine: 24491
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overload: Unity.Reflect.Model.SyncMap.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Unity.Reflect.Model.SyncMap.ToString
  commentId: M:Unity.Reflect.Model.SyncMap.ToString
  id: ToString
  parent: Unity.Reflect.Model.SyncMap
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: SyncMap.ToString()
  fullName: Unity.Reflect.Model.SyncMap.ToString()
  type: Method
  source:
    id: ToString
    path: ''
    startLine: 24506
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overload: Unity.Reflect.Model.SyncMap.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Unity.Reflect.Model.SyncMap.WriteTo(pb.CodedOutputStream)
  commentId: M:Unity.Reflect.Model.SyncMap.WriteTo(pb.CodedOutputStream)
  id: WriteTo(pb.CodedOutputStream)
  parent: Unity.Reflect.Model.SyncMap
  langs:
  - csharp
  - vb
  name: WriteTo(pb.CodedOutputStream)
  nameWithType: SyncMap.WriteTo(pb.CodedOutputStream)
  fullName: Unity.Reflect.Model.SyncMap.WriteTo(pb.CodedOutputStream)
  type: Method
  source:
    id: WriteTo
    path: ''
    startLine: 24511
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public void WriteTo(pb.CodedOutputStream output)
    parameters:
    - id: output
      type: pb.CodedOutputStream
    content.vb: Public Sub WriteTo(output As pb.CodedOutputStream)
  overload: Unity.Reflect.Model.SyncMap.WriteTo*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unity.Reflect.Model.SyncMap.CalculateSize
  commentId: M:Unity.Reflect.Model.SyncMap.CalculateSize
  id: CalculateSize
  parent: Unity.Reflect.Model.SyncMap
  langs:
  - csharp
  - vb
  name: CalculateSize()
  nameWithType: SyncMap.CalculateSize()
  fullName: Unity.Reflect.Model.SyncMap.CalculateSize()
  type: Method
  source:
    id: CalculateSize
    path: ''
    startLine: 24542
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public int CalculateSize()
    return:
      type: System.Int32
    content.vb: Public Function CalculateSize As Integer
  overload: Unity.Reflect.Model.SyncMap.CalculateSize*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unity.Reflect.Model.SyncMap.MergeFrom(Unity.Reflect.Model.SyncMap)
  commentId: M:Unity.Reflect.Model.SyncMap.MergeFrom(Unity.Reflect.Model.SyncMap)
  id: MergeFrom(Unity.Reflect.Model.SyncMap)
  parent: Unity.Reflect.Model.SyncMap
  langs:
  - csharp
  - vb
  name: MergeFrom(SyncMap)
  nameWithType: SyncMap.MergeFrom(SyncMap)
  fullName: Unity.Reflect.Model.SyncMap.MergeFrom(Unity.Reflect.Model.SyncMap)
  type: Method
  source:
    id: MergeFrom
    path: ''
    startLine: 24569
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public void MergeFrom(SyncMap other)
    parameters:
    - id: other
      type: Unity.Reflect.Model.SyncMap
    content.vb: Public Sub MergeFrom(other As SyncMap)
  overload: Unity.Reflect.Model.SyncMap.MergeFrom*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unity.Reflect.Model.SyncMap.MergeFrom(pb.CodedInputStream)
  commentId: M:Unity.Reflect.Model.SyncMap.MergeFrom(pb.CodedInputStream)
  id: MergeFrom(pb.CodedInputStream)
  parent: Unity.Reflect.Model.SyncMap
  langs:
  - csharp
  - vb
  name: MergeFrom(pb.CodedInputStream)
  nameWithType: SyncMap.MergeFrom(pb.CodedInputStream)
  fullName: Unity.Reflect.Model.SyncMap.MergeFrom(pb.CodedInputStream)
  type: Method
  source:
    id: MergeFrom
    path: ''
    startLine: 24601
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public void MergeFrom(pb.CodedInputStream input)
    parameters:
    - id: input
      type: pb.CodedInputStream
    content.vb: Public Sub MergeFrom(input As pb.CodedInputStream)
  overload: Unity.Reflect.Model.SyncMap.MergeFrom*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Unity.Reflect.Model
  commentId: N:Unity.Reflect.Model
  name: Unity.Reflect.Model
  nameWithType: Unity.Reflect.Model
  fullName: Unity.Reflect.Model
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: pb.IMessage{Unity.Reflect.Model.SyncMap}
  commentId: '!:pb.IMessage{Unity.Reflect.Model.SyncMap}'
  definition: pb.IMessage`1
  name: pb.IMessage<SyncMap>
  nameWithType: pb.IMessage<SyncMap>
  fullName: pb.IMessage<Unity.Reflect.Model.SyncMap>
  nameWithType.vb: pb.IMessage(Of SyncMap)
  fullName.vb: pb.IMessage(Of Unity.Reflect.Model.SyncMap)
  name.vb: pb.IMessage(Of SyncMap)
  spec.csharp:
  - uid: pb.IMessage`1
    name: pb.IMessage
    nameWithType: pb.IMessage
    fullName: pb.IMessage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Unity.Reflect.Model.SyncMap
    name: SyncMap
    nameWithType: SyncMap
    fullName: Unity.Reflect.Model.SyncMap
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: pb.IMessage`1
    name: pb.IMessage
    nameWithType: pb.IMessage
    fullName: pb.IMessage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Unity.Reflect.Model.SyncMap
    name: SyncMap
    nameWithType: SyncMap
    fullName: Unity.Reflect.Model.SyncMap
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: pb.IMessage`1
  isExternal: true
  name: pb.IMessage<>
  nameWithType: pb.IMessage<>
  fullName: pb.IMessage<>
  nameWithType.vb: pb.IMessage(Of )
  fullName.vb: pb.IMessage(Of )
  name.vb: pb.IMessage(Of )
  spec.csharp:
  - uid: pb.IMessage`1
    name: pb.IMessage
    nameWithType: pb.IMessage
    fullName: pb.IMessage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: pb.IMessage`1
    name: pb.IMessage
    nameWithType: pb.IMessage
    fullName: pb.IMessage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Unity.Reflect.Model.SyncMap.Empty*
  commentId: Overload:Unity.Reflect.Model.SyncMap.Empty
  name: Empty
  nameWithType: SyncMap.Empty
  fullName: Unity.Reflect.Model.SyncMap.Empty
- uid: Unity.Reflect.Model.SyncMap
  commentId: T:Unity.Reflect.Model.SyncMap
  parent: Unity.Reflect.Model
  name: SyncMap
  nameWithType: SyncMap
  fullName: Unity.Reflect.Model.SyncMap
- uid: Unity.Reflect.Model.SyncMap.#ctor*
  commentId: Overload:Unity.Reflect.Model.SyncMap.#ctor
  name: SyncMap
  nameWithType: SyncMap.SyncMap
  fullName: Unity.Reflect.Model.SyncMap.SyncMap
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Unity.Reflect.Model.SyncFloat2
  commentId: T:Unity.Reflect.Model.SyncFloat2
  parent: Unity.Reflect.Model
  name: SyncFloat2
  nameWithType: SyncFloat2
  fullName: Unity.Reflect.Model.SyncFloat2
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Unity.Reflect.Model.SyncMap.Parser*
  commentId: Overload:Unity.Reflect.Model.SyncMap.Parser
  name: Parser
  nameWithType: SyncMap.Parser
  fullName: Unity.Reflect.Model.SyncMap.Parser
- uid: pb.MessageParser{Unity.Reflect.Model.SyncMap}
  commentId: '!:pb.MessageParser{Unity.Reflect.Model.SyncMap}'
  definition: pb.MessageParser`1
  name: pb.MessageParser<SyncMap>
  nameWithType: pb.MessageParser<SyncMap>
  fullName: pb.MessageParser<Unity.Reflect.Model.SyncMap>
  nameWithType.vb: pb.MessageParser(Of SyncMap)
  fullName.vb: pb.MessageParser(Of Unity.Reflect.Model.SyncMap)
  name.vb: pb.MessageParser(Of SyncMap)
  spec.csharp:
  - uid: pb.MessageParser`1
    name: pb.MessageParser
    nameWithType: pb.MessageParser
    fullName: pb.MessageParser
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Unity.Reflect.Model.SyncMap
    name: SyncMap
    nameWithType: SyncMap
    fullName: Unity.Reflect.Model.SyncMap
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: pb.MessageParser`1
    name: pb.MessageParser
    nameWithType: pb.MessageParser
    fullName: pb.MessageParser
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Unity.Reflect.Model.SyncMap
    name: SyncMap
    nameWithType: SyncMap
    fullName: Unity.Reflect.Model.SyncMap
  - name: )
    nameWithType: )
    fullName: )
- uid: pb.MessageParser`1
  isExternal: true
  name: pb.MessageParser<>
  nameWithType: pb.MessageParser<>
  fullName: pb.MessageParser<>
  nameWithType.vb: pb.MessageParser(Of )
  fullName.vb: pb.MessageParser(Of )
  name.vb: pb.MessageParser(Of )
  spec.csharp:
  - uid: pb.MessageParser`1
    name: pb.MessageParser
    nameWithType: pb.MessageParser
    fullName: pb.MessageParser
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: pb.MessageParser`1
    name: pb.MessageParser
    nameWithType: pb.MessageParser
    fullName: pb.MessageParser
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Unity.Reflect.Model.SyncMap.Descriptor*
  commentId: Overload:Unity.Reflect.Model.SyncMap.Descriptor
  name: Descriptor
  nameWithType: SyncMap.Descriptor
  fullName: Unity.Reflect.Model.SyncMap.Descriptor
- uid: pbr.MessageDescriptor
  isExternal: true
  name: pbr.MessageDescriptor
  nameWithType: pbr.MessageDescriptor
  fullName: pbr.MessageDescriptor
- uid: Unity.Reflect.Model.SyncMap.Clone*
  commentId: Overload:Unity.Reflect.Model.SyncMap.Clone
  name: Clone
  nameWithType: SyncMap.Clone
  fullName: Unity.Reflect.Model.SyncMap.Clone
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Unity.Reflect.Model.SyncMap.Texture*
  commentId: Overload:Unity.Reflect.Model.SyncMap.Texture
  name: Texture
  nameWithType: SyncMap.Texture
  fullName: Unity.Reflect.Model.SyncMap.Texture
- uid: Unity.Reflect.Model.SyncMap.Offset*
  commentId: Overload:Unity.Reflect.Model.SyncMap.Offset
  name: Offset
  nameWithType: SyncMap.Offset
  fullName: Unity.Reflect.Model.SyncMap.Offset
- uid: Unity.Reflect.Model.SyncMap.Tiling*
  commentId: Overload:Unity.Reflect.Model.SyncMap.Tiling
  name: Tiling
  nameWithType: SyncMap.Tiling
  fullName: Unity.Reflect.Model.SyncMap.Tiling
- uid: Unity.Reflect.Model.SyncMap.Brightness*
  commentId: Overload:Unity.Reflect.Model.SyncMap.Brightness
  name: Brightness
  nameWithType: SyncMap.Brightness
  fullName: Unity.Reflect.Model.SyncMap.Brightness
- uid: Unity.Reflect.Model.SyncMap.Invert*
  commentId: Overload:Unity.Reflect.Model.SyncMap.Invert
  name: Invert
  nameWithType: SyncMap.Invert
  fullName: Unity.Reflect.Model.SyncMap.Invert
- uid: Unity.Reflect.Model.SyncMap.RotationDegrees*
  commentId: Overload:Unity.Reflect.Model.SyncMap.RotationDegrees
  name: RotationDegrees
  nameWithType: SyncMap.RotationDegrees
  fullName: Unity.Reflect.Model.SyncMap.RotationDegrees
- uid: Unity.Reflect.Model.SyncMap.Equals*
  commentId: Overload:Unity.Reflect.Model.SyncMap.Equals
  name: Equals
  nameWithType: SyncMap.Equals
  fullName: Unity.Reflect.Model.SyncMap.Equals
- uid: Unity.Reflect.Model.SyncMap.GetHashCode*
  commentId: Overload:Unity.Reflect.Model.SyncMap.GetHashCode
  name: GetHashCode
  nameWithType: SyncMap.GetHashCode
  fullName: Unity.Reflect.Model.SyncMap.GetHashCode
- uid: Unity.Reflect.Model.SyncMap.ToString*
  commentId: Overload:Unity.Reflect.Model.SyncMap.ToString
  name: ToString
  nameWithType: SyncMap.ToString
  fullName: Unity.Reflect.Model.SyncMap.ToString
- uid: Unity.Reflect.Model.SyncMap.WriteTo*
  commentId: Overload:Unity.Reflect.Model.SyncMap.WriteTo
  name: WriteTo
  nameWithType: SyncMap.WriteTo
  fullName: Unity.Reflect.Model.SyncMap.WriteTo
- uid: pb.CodedOutputStream
  isExternal: true
  name: pb.CodedOutputStream
  nameWithType: pb.CodedOutputStream
  fullName: pb.CodedOutputStream
- uid: Unity.Reflect.Model.SyncMap.CalculateSize*
  commentId: Overload:Unity.Reflect.Model.SyncMap.CalculateSize
  name: CalculateSize
  nameWithType: SyncMap.CalculateSize
  fullName: Unity.Reflect.Model.SyncMap.CalculateSize
- uid: Unity.Reflect.Model.SyncMap.MergeFrom*
  commentId: Overload:Unity.Reflect.Model.SyncMap.MergeFrom
  name: MergeFrom
  nameWithType: SyncMap.MergeFrom
  fullName: Unity.Reflect.Model.SyncMap.MergeFrom
- uid: pb.CodedInputStream
  isExternal: true
  name: pb.CodedInputStream
  nameWithType: pb.CodedInputStream
  fullName: pb.CodedInputStream
