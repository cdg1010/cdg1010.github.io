### YamlMime:ManagedReference
items:
- uid: Unity.Reflect.UnityProject
  commentId: T:Unity.Reflect.UnityProject
  id: UnityProject
  parent: Unity.Reflect
  children:
  - Unity.Reflect.UnityProject.#ctor(System.String,System.String,System.String,System.String,System.String,System.Boolean)
  - Unity.Reflect.UnityProject.#ctor(System.String,System.String,System.String,System.String,System.String,System.Boolean)
  - Unity.Reflect.UnityProject.CloudOnly
  - Unity.Reflect.UnityProject.CloudOnly
  - Unity.Reflect.UnityProject.Id
  - Unity.Reflect.UnityProject.Id
  - Unity.Reflect.UnityProject.Name
  - Unity.Reflect.UnityProject.Name
  - Unity.Reflect.UnityProject.ProjectId
  - Unity.Reflect.UnityProject.ProjectId
  - Unity.Reflect.UnityProject.ServerAddress
  - Unity.Reflect.UnityProject.ServerAddress
  - Unity.Reflect.UnityProject.ServerName
  - Unity.Reflect.UnityProject.ServerName
  langs:
  - csharp
  - vb
  name: UnityProject
  nameWithType: UnityProject
  fullName: Unity.Reflect.UnityProject
  type: Struct
  source:
    id: UnityProject
    path: ''
    startLine: 39602
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect
  summary: "\nThis struct specifies some information about an Unity project.\n"
  example: []
  syntax:
    content: public struct UnityProject
    content.vb: Public Structure UnityProject
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: Unity.Reflect.UnityProject.Id
  commentId: F:Unity.Reflect.UnityProject.Id
  id: Id
  parent: Unity.Reflect.UnityProject
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: UnityProject.Id
  fullName: Unity.Reflect.UnityProject.Id
  type: Field
  source:
    id: Id
    path: ''
    startLine: 19448
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect
  summary: "\nThe Reflect ID of the project.\n"
  example: []
  syntax:
    content: public readonly string Id
    return:
      type: System.String
    content.vb: Public ReadOnly Id As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Unity.Reflect.UnityProject.ProjectId
  commentId: F:Unity.Reflect.UnityProject.ProjectId
  id: ProjectId
  parent: Unity.Reflect.UnityProject
  langs:
  - csharp
  - vb
  name: ProjectId
  nameWithType: UnityProject.ProjectId
  fullName: Unity.Reflect.UnityProject.ProjectId
  type: Field
  source:
    id: ProjectId
    path: ''
    startLine: 19453
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect
  summary: "\nThe Unity ID of the project.\n"
  example: []
  syntax:
    content: public readonly string ProjectId
    return:
      type: System.String
    content.vb: Public ReadOnly ProjectId As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Unity.Reflect.UnityProject.Name
  commentId: F:Unity.Reflect.UnityProject.Name
  id: Name
  parent: Unity.Reflect.UnityProject
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: UnityProject.Name
  fullName: Unity.Reflect.UnityProject.Name
  type: Field
  source:
    id: Name
    path: ''
    startLine: 19458
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect
  summary: "\nThe project name.\n"
  example: []
  syntax:
    content: public readonly string Name
    return:
      type: System.String
    content.vb: Public ReadOnly Name As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Unity.Reflect.UnityProject.ServerName
  commentId: F:Unity.Reflect.UnityProject.ServerName
  id: ServerName
  parent: Unity.Reflect.UnityProject
  langs:
  - csharp
  - vb
  name: ServerName
  nameWithType: UnityProject.ServerName
  fullName: Unity.Reflect.UnityProject.ServerName
  type: Field
  source:
    id: ServerName
    path: ''
    startLine: 19463
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect
  summary: "\nThe name of the host SyncServer.\n"
  example: []
  syntax:
    content: public readonly string ServerName
    return:
      type: System.String
    content.vb: Public ReadOnly ServerName As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Unity.Reflect.UnityProject.ServerAddress
  commentId: F:Unity.Reflect.UnityProject.ServerAddress
  id: ServerAddress
  parent: Unity.Reflect.UnityProject
  langs:
  - csharp
  - vb
  name: ServerAddress
  nameWithType: UnityProject.ServerAddress
  fullName: Unity.Reflect.UnityProject.ServerAddress
  type: Field
  source:
    id: ServerAddress
    path: ''
    startLine: 19468
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect
  summary: "\nThe address of the host SyncServer.\n"
  example: []
  syntax:
    content: public readonly string ServerAddress
    return:
      type: System.String
    content.vb: Public ReadOnly ServerAddress As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Unity.Reflect.UnityProject.CloudOnly
  commentId: F:Unity.Reflect.UnityProject.CloudOnly
  id: CloudOnly
  parent: Unity.Reflect.UnityProject
  langs:
  - csharp
  - vb
  name: CloudOnly
  nameWithType: UnityProject.CloudOnly
  fullName: Unity.Reflect.UnityProject.CloudOnly
  type: Field
  source:
    id: CloudOnly
    path: ''
    startLine: 19473
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect
  summary: "\nWhether the Unity Project has a local version registered on the Hub.\n"
  example: []
  syntax:
    content: public readonly bool CloudOnly
    return:
      type: System.Boolean
    content.vb: Public ReadOnly CloudOnly As Boolean
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Unity.Reflect.UnityProject.#ctor(System.String,System.String,System.String,System.String,System.String,System.Boolean)
  commentId: M:Unity.Reflect.UnityProject.#ctor(System.String,System.String,System.String,System.String,System.String,System.Boolean)
  id: '#ctor(System.String,System.String,System.String,System.String,System.String,System.Boolean)'
  parent: Unity.Reflect.UnityProject
  langs:
  - csharp
  - vb
  name: UnityProject(String, String, String, String, String, Boolean)
  nameWithType: UnityProject.UnityProject(String, String, String, String, String, Boolean)
  fullName: Unity.Reflect.UnityProject.UnityProject(System.String, System.String, System.String, System.String, System.String, System.Boolean)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 19475
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect
  syntax:
    content: public UnityProject(string projectId, string id = "", string name = "", string serverName = "", string serverAddress = "", bool cloudOnly = false)
    parameters:
    - id: projectId
      type: System.String
    - id: id
      type: System.String
    - id: name
      type: System.String
    - id: serverName
      type: System.String
    - id: serverAddress
      type: System.String
    - id: cloudOnly
      type: System.Boolean
    content.vb: Public Sub New(projectId As String, id As String = "", name As String = "", serverName As String = "", serverAddress As String = "", cloudOnly As Boolean = False)
  overload: Unity.Reflect.UnityProject.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unity.Reflect.UnityProject.Id
  commentId: F:Unity.Reflect.UnityProject.Id
  id: Id
  parent: Unity.Reflect.UnityProject
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: UnityProject.Id
  fullName: Unity.Reflect.UnityProject.Id
  type: Field
  source:
    id: Id
    path: ''
    startLine: 39607
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect
  summary: "\nThe Reflect ID of the project.\n"
  example: []
  syntax:
    content: public readonly string Id
    return:
      type: System.String
    content.vb: Public ReadOnly Id As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Unity.Reflect.UnityProject.ProjectId
  commentId: F:Unity.Reflect.UnityProject.ProjectId
  id: ProjectId
  parent: Unity.Reflect.UnityProject
  langs:
  - csharp
  - vb
  name: ProjectId
  nameWithType: UnityProject.ProjectId
  fullName: Unity.Reflect.UnityProject.ProjectId
  type: Field
  source:
    id: ProjectId
    path: ''
    startLine: 39612
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect
  summary: "\nThe Unity ID of the project.\n"
  example: []
  syntax:
    content: public readonly string ProjectId
    return:
      type: System.String
    content.vb: Public ReadOnly ProjectId As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Unity.Reflect.UnityProject.Name
  commentId: F:Unity.Reflect.UnityProject.Name
  id: Name
  parent: Unity.Reflect.UnityProject
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: UnityProject.Name
  fullName: Unity.Reflect.UnityProject.Name
  type: Field
  source:
    id: Name
    path: ''
    startLine: 39617
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect
  summary: "\nThe project name.\n"
  example: []
  syntax:
    content: public readonly string Name
    return:
      type: System.String
    content.vb: Public ReadOnly Name As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Unity.Reflect.UnityProject.ServerName
  commentId: F:Unity.Reflect.UnityProject.ServerName
  id: ServerName
  parent: Unity.Reflect.UnityProject
  langs:
  - csharp
  - vb
  name: ServerName
  nameWithType: UnityProject.ServerName
  fullName: Unity.Reflect.UnityProject.ServerName
  type: Field
  source:
    id: ServerName
    path: ''
    startLine: 39622
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect
  summary: "\nThe name of the host SyncServer.\n"
  example: []
  syntax:
    content: public readonly string ServerName
    return:
      type: System.String
    content.vb: Public ReadOnly ServerName As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Unity.Reflect.UnityProject.ServerAddress
  commentId: F:Unity.Reflect.UnityProject.ServerAddress
  id: ServerAddress
  parent: Unity.Reflect.UnityProject
  langs:
  - csharp
  - vb
  name: ServerAddress
  nameWithType: UnityProject.ServerAddress
  fullName: Unity.Reflect.UnityProject.ServerAddress
  type: Field
  source:
    id: ServerAddress
    path: ''
    startLine: 39627
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect
  summary: "\nThe address of the host SyncServer.\n"
  example: []
  syntax:
    content: public readonly string ServerAddress
    return:
      type: System.String
    content.vb: Public ReadOnly ServerAddress As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Unity.Reflect.UnityProject.CloudOnly
  commentId: F:Unity.Reflect.UnityProject.CloudOnly
  id: CloudOnly
  parent: Unity.Reflect.UnityProject
  langs:
  - csharp
  - vb
  name: CloudOnly
  nameWithType: UnityProject.CloudOnly
  fullName: Unity.Reflect.UnityProject.CloudOnly
  type: Field
  source:
    id: CloudOnly
    path: ''
    startLine: 39632
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect
  summary: "\nWhether the Unity Project has a local version registered on the Hub.\n"
  example: []
  syntax:
    content: public readonly bool CloudOnly
    return:
      type: System.Boolean
    content.vb: Public ReadOnly CloudOnly As Boolean
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Unity.Reflect.UnityProject.#ctor(System.String,System.String,System.String,System.String,System.String,System.Boolean)
  commentId: M:Unity.Reflect.UnityProject.#ctor(System.String,System.String,System.String,System.String,System.String,System.Boolean)
  id: '#ctor(System.String,System.String,System.String,System.String,System.String,System.Boolean)'
  parent: Unity.Reflect.UnityProject
  langs:
  - csharp
  - vb
  name: UnityProject(String, String, String, String, String, Boolean)
  nameWithType: UnityProject.UnityProject(String, String, String, String, String, Boolean)
  fullName: Unity.Reflect.UnityProject.UnityProject(System.String, System.String, System.String, System.String, System.String, System.Boolean)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 39634
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect
  syntax:
    content: public UnityProject(string projectId, string id = "", string name = "", string serverName = "", string serverAddress = "", bool cloudOnly = false)
    parameters:
    - id: projectId
      type: System.String
    - id: id
      type: System.String
    - id: name
      type: System.String
    - id: serverName
      type: System.String
    - id: serverAddress
      type: System.String
    - id: cloudOnly
      type: System.Boolean
    content.vb: Public Sub New(projectId As String, id As String = "", name As String = "", serverName As String = "", serverAddress As String = "", cloudOnly As Boolean = False)
  overload: Unity.Reflect.UnityProject.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Unity.Reflect
  commentId: N:Unity.Reflect
  name: Unity.Reflect
  nameWithType: Unity.Reflect
  fullName: Unity.Reflect
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Unity.Reflect.UnityProject.#ctor*
  commentId: Overload:Unity.Reflect.UnityProject.#ctor
  name: UnityProject
  nameWithType: UnityProject.UnityProject
  fullName: Unity.Reflect.UnityProject.UnityProject
