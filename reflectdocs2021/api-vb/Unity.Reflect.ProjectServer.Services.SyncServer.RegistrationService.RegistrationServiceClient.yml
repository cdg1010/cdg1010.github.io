### YamlMime:ManagedReference
items:
- uid: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient
  commentId: T:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient
  id: RegistrationService.RegistrationServiceClient
  parent: Unity.Reflect.ProjectServer.Services.SyncServer
  children:
  - Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.#ctor
  - Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.#ctor
  - Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.#ctor(ClientBaseConfiguration)
  - Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.#ctor(ClientBaseConfiguration)
  - Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.#ctor(grpc.CallInvoker)
  - Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.#ctor(grpc.CallInvoker)
  - Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.#ctor(grpc.Channel)
  - Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.#ctor(grpc.Channel)
  - Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.KeepAlive(Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest,grpc.CallOptions)
  - Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.KeepAlive(Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest,grpc.CallOptions)
  - Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.KeepAlive(Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.KeepAlive(Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.KeepAliveAsync(Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest,grpc.CallOptions)
  - Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.KeepAliveAsync(Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest,grpc.CallOptions)
  - Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.KeepAliveAsync(Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.KeepAliveAsync(Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.NewInstance(ClientBaseConfiguration)
  - Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.NewInstance(ClientBaseConfiguration)
  - Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.Register(Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest,grpc.CallOptions)
  - Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.Register(Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest,grpc.CallOptions)
  - Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.Register(Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.Register(Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.RegisterAsync(Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest,grpc.CallOptions)
  - Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.RegisterAsync(Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest,grpc.CallOptions)
  - Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.RegisterAsync(Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.RegisterAsync(Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.Unregister(Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest,grpc.CallOptions)
  - Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.Unregister(Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest,grpc.CallOptions)
  - Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.Unregister(Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.Unregister(Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.UnregisterAsync(Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest,grpc.CallOptions)
  - Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.UnregisterAsync(Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest,grpc.CallOptions)
  - Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.UnregisterAsync(Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.UnregisterAsync(Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: RegistrationService.RegistrationServiceClient
  nameWithType: RegistrationService.RegistrationServiceClient
  fullName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient
  type: Class
  source:
    id: RegistrationServiceClient
    path: ''
    startLine: 36746
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.SyncServer
  summary: Client for RegistrationService
  example: []
  syntax:
    content: 'public class RegistrationServiceClient : grpc.ClientBase<RegistrationService.RegistrationServiceClient>, grpc.ClientBase<RegistrationService.RegistrationServiceClient>'
    content.vb: >-
      Public Class RegistrationServiceClient
          Inherits grpc.ClientBase(Of RegistrationService.RegistrationServiceClient)
          Implements grpc.ClientBase(Of RegistrationService.RegistrationServiceClient)
  inheritance:
  - System.Object
  implements:
  - grpc.ClientBase{Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient}
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.#ctor(grpc.Channel)
  commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.#ctor(grpc.Channel)
  id: '#ctor(grpc.Channel)'
  parent: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient
  langs:
  - csharp
  - vb
  name: RegistrationServiceClient(grpc.Channel)
  nameWithType: RegistrationService.RegistrationServiceClient.RegistrationServiceClient(grpc.Channel)
  fullName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.RegistrationServiceClient(grpc.Channel)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 16591
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.SyncServer
  summary: Creates a new client for RegistrationService
  example: []
  syntax:
    content: public RegistrationServiceClient(grpc.Channel channel)
    parameters:
    - id: channel
      type: grpc.Channel
      description: The channel to use to make remote calls.
    content.vb: Public Sub New(channel As grpc.Channel)
  overload: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.#ctor(grpc.CallInvoker)
  commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.#ctor(grpc.CallInvoker)
  id: '#ctor(grpc.CallInvoker)'
  parent: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient
  langs:
  - csharp
  - vb
  name: RegistrationServiceClient(grpc.CallInvoker)
  nameWithType: RegistrationService.RegistrationServiceClient.RegistrationServiceClient(grpc.CallInvoker)
  fullName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.RegistrationServiceClient(grpc.CallInvoker)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 16596
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.SyncServer
  summary: Creates a new client for RegistrationService that uses a custom <code>CallInvoker</code>.
  example: []
  syntax:
    content: public RegistrationServiceClient(grpc.CallInvoker callInvoker)
    parameters:
    - id: callInvoker
      type: grpc.CallInvoker
      description: The callInvoker to use to make remote calls.
    content.vb: Public Sub New(callInvoker As grpc.CallInvoker)
  overload: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.#ctor
  commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.#ctor
  id: '#ctor'
  parent: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient
  langs:
  - csharp
  - vb
  name: RegistrationServiceClient()
  nameWithType: RegistrationService.RegistrationServiceClient.RegistrationServiceClient()
  fullName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.RegistrationServiceClient()
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 16600
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.SyncServer
  summary: Protected parameterless constructor to allow creation of test doubles.
  example: []
  syntax:
    content: protected RegistrationServiceClient()
    content.vb: Protected Sub New
  overload: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.#ctor(ClientBaseConfiguration)
  commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.#ctor(ClientBaseConfiguration)
  id: '#ctor(ClientBaseConfiguration)'
  parent: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient
  langs:
  - csharp
  - vb
  name: RegistrationServiceClient(ClientBaseConfiguration)
  nameWithType: RegistrationService.RegistrationServiceClient.RegistrationServiceClient(ClientBaseConfiguration)
  fullName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.RegistrationServiceClient(ClientBaseConfiguration)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 16605
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.SyncServer
  summary: Protected constructor to allow creation of configured clients.
  example: []
  syntax:
    content: protected RegistrationServiceClient(ClientBaseConfiguration configuration)
    parameters:
    - id: configuration
      type: ClientBaseConfiguration
      description: The client configuration.
    content.vb: Protected Sub New(configuration As ClientBaseConfiguration)
  overload: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.Register(Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.Register(Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: Register(Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient
  langs:
  - csharp
  - vb
  name: Register(RegistrationRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
  nameWithType: RegistrationService.RegistrationServiceClient.Register(RegistrationRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
  fullName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.Register(Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest, grpc.Metadata, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
  type: Method
  source:
    id: Register
    path: ''
    startLine: 16609
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.SyncServer
  syntax:
    content: public virtual KeepAliveResponse Register(RegistrationRequest request, grpc.Metadata headers = null, DateTime? deadline = default(DateTime? ), CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: request
      type: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest
    - id: headers
      type: grpc.Metadata
    - id: deadline
      type: System.Nullable{System.DateTime}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse
    content.vb: Public Overridable Function Register(request As RegistrationRequest, headers As grpc.Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As KeepAliveResponse
  overload: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.Register*
  nameWithType.vb: RegistrationService.RegistrationServiceClient.Register(RegistrationRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.Register(Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest, grpc.Metadata, System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
  name.vb: Register(RegistrationRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
- uid: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.Register(Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest,grpc.CallOptions)
  commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.Register(Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest,grpc.CallOptions)
  id: Register(Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest,grpc.CallOptions)
  parent: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient
  langs:
  - csharp
  - vb
  name: Register(RegistrationRequest, grpc.CallOptions)
  nameWithType: RegistrationService.RegistrationServiceClient.Register(RegistrationRequest, grpc.CallOptions)
  fullName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.Register(Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest, grpc.CallOptions)
  type: Method
  source:
    id: Register
    path: ''
    startLine: 16613
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.SyncServer
  syntax:
    content: public virtual KeepAliveResponse Register(RegistrationRequest request, grpc.CallOptions options)
    parameters:
    - id: request
      type: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest
    - id: options
      type: grpc.CallOptions
    return:
      type: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse
    content.vb: Public Overridable Function Register(request As RegistrationRequest, options As grpc.CallOptions) As KeepAliveResponse
  overload: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.Register*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.RegisterAsync(Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.RegisterAsync(Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: RegisterAsync(Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient
  langs:
  - csharp
  - vb
  name: RegisterAsync(RegistrationRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
  nameWithType: RegistrationService.RegistrationServiceClient.RegisterAsync(RegistrationRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
  fullName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.RegisterAsync(Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest, grpc.Metadata, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
  type: Method
  source:
    id: RegisterAsync
    path: ''
    startLine: 16617
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.SyncServer
  syntax:
    content: public virtual grpc.AsyncUnaryCall<KeepAliveResponse> RegisterAsync(RegistrationRequest request, grpc.Metadata headers = null, DateTime? deadline = default(DateTime? ), CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: request
      type: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest
    - id: headers
      type: grpc.Metadata
    - id: deadline
      type: System.Nullable{System.DateTime}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: grpc.AsyncUnaryCall{Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse}
    content.vb: Public Overridable Function RegisterAsync(request As RegistrationRequest, headers As grpc.Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As grpc.AsyncUnaryCall(Of KeepAliveResponse)
  overload: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.RegisterAsync*
  nameWithType.vb: RegistrationService.RegistrationServiceClient.RegisterAsync(RegistrationRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.RegisterAsync(Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest, grpc.Metadata, System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
  name.vb: RegisterAsync(RegistrationRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
- uid: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.RegisterAsync(Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest,grpc.CallOptions)
  commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.RegisterAsync(Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest,grpc.CallOptions)
  id: RegisterAsync(Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest,grpc.CallOptions)
  parent: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient
  langs:
  - csharp
  - vb
  name: RegisterAsync(RegistrationRequest, grpc.CallOptions)
  nameWithType: RegistrationService.RegistrationServiceClient.RegisterAsync(RegistrationRequest, grpc.CallOptions)
  fullName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.RegisterAsync(Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest, grpc.CallOptions)
  type: Method
  source:
    id: RegisterAsync
    path: ''
    startLine: 16621
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.SyncServer
  syntax:
    content: public virtual grpc.AsyncUnaryCall<KeepAliveResponse> RegisterAsync(RegistrationRequest request, grpc.CallOptions options)
    parameters:
    - id: request
      type: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest
    - id: options
      type: grpc.CallOptions
    return:
      type: grpc.AsyncUnaryCall{Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse}
    content.vb: Public Overridable Function RegisterAsync(request As RegistrationRequest, options As grpc.CallOptions) As grpc.AsyncUnaryCall(Of KeepAliveResponse)
  overload: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.RegisterAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.KeepAlive(Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.KeepAlive(Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: KeepAlive(Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient
  langs:
  - csharp
  - vb
  name: KeepAlive(KeepAliveRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
  nameWithType: RegistrationService.RegistrationServiceClient.KeepAlive(KeepAliveRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
  fullName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.KeepAlive(Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest, grpc.Metadata, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
  type: Method
  source:
    id: KeepAlive
    path: ''
    startLine: 16625
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.SyncServer
  syntax:
    content: public virtual KeepAliveResponse KeepAlive(KeepAliveRequest request, grpc.Metadata headers = null, DateTime? deadline = default(DateTime? ), CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: request
      type: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest
    - id: headers
      type: grpc.Metadata
    - id: deadline
      type: System.Nullable{System.DateTime}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse
    content.vb: Public Overridable Function KeepAlive(request As KeepAliveRequest, headers As grpc.Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As KeepAliveResponse
  overload: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.KeepAlive*
  nameWithType.vb: RegistrationService.RegistrationServiceClient.KeepAlive(KeepAliveRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.KeepAlive(Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest, grpc.Metadata, System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
  name.vb: KeepAlive(KeepAliveRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
- uid: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.KeepAlive(Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest,grpc.CallOptions)
  commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.KeepAlive(Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest,grpc.CallOptions)
  id: KeepAlive(Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest,grpc.CallOptions)
  parent: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient
  langs:
  - csharp
  - vb
  name: KeepAlive(KeepAliveRequest, grpc.CallOptions)
  nameWithType: RegistrationService.RegistrationServiceClient.KeepAlive(KeepAliveRequest, grpc.CallOptions)
  fullName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.KeepAlive(Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest, grpc.CallOptions)
  type: Method
  source:
    id: KeepAlive
    path: ''
    startLine: 16629
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.SyncServer
  syntax:
    content: public virtual KeepAliveResponse KeepAlive(KeepAliveRequest request, grpc.CallOptions options)
    parameters:
    - id: request
      type: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest
    - id: options
      type: grpc.CallOptions
    return:
      type: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse
    content.vb: Public Overridable Function KeepAlive(request As KeepAliveRequest, options As grpc.CallOptions) As KeepAliveResponse
  overload: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.KeepAlive*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.KeepAliveAsync(Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.KeepAliveAsync(Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: KeepAliveAsync(Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient
  langs:
  - csharp
  - vb
  name: KeepAliveAsync(KeepAliveRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
  nameWithType: RegistrationService.RegistrationServiceClient.KeepAliveAsync(KeepAliveRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
  fullName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.KeepAliveAsync(Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest, grpc.Metadata, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
  type: Method
  source:
    id: KeepAliveAsync
    path: ''
    startLine: 16633
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.SyncServer
  syntax:
    content: public virtual grpc.AsyncUnaryCall<KeepAliveResponse> KeepAliveAsync(KeepAliveRequest request, grpc.Metadata headers = null, DateTime? deadline = default(DateTime? ), CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: request
      type: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest
    - id: headers
      type: grpc.Metadata
    - id: deadline
      type: System.Nullable{System.DateTime}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: grpc.AsyncUnaryCall{Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse}
    content.vb: Public Overridable Function KeepAliveAsync(request As KeepAliveRequest, headers As grpc.Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As grpc.AsyncUnaryCall(Of KeepAliveResponse)
  overload: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.KeepAliveAsync*
  nameWithType.vb: RegistrationService.RegistrationServiceClient.KeepAliveAsync(KeepAliveRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.KeepAliveAsync(Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest, grpc.Metadata, System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
  name.vb: KeepAliveAsync(KeepAliveRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
- uid: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.KeepAliveAsync(Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest,grpc.CallOptions)
  commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.KeepAliveAsync(Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest,grpc.CallOptions)
  id: KeepAliveAsync(Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest,grpc.CallOptions)
  parent: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient
  langs:
  - csharp
  - vb
  name: KeepAliveAsync(KeepAliveRequest, grpc.CallOptions)
  nameWithType: RegistrationService.RegistrationServiceClient.KeepAliveAsync(KeepAliveRequest, grpc.CallOptions)
  fullName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.KeepAliveAsync(Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest, grpc.CallOptions)
  type: Method
  source:
    id: KeepAliveAsync
    path: ''
    startLine: 16637
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.SyncServer
  syntax:
    content: public virtual grpc.AsyncUnaryCall<KeepAliveResponse> KeepAliveAsync(KeepAliveRequest request, grpc.CallOptions options)
    parameters:
    - id: request
      type: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest
    - id: options
      type: grpc.CallOptions
    return:
      type: grpc.AsyncUnaryCall{Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse}
    content.vb: Public Overridable Function KeepAliveAsync(request As KeepAliveRequest, options As grpc.CallOptions) As grpc.AsyncUnaryCall(Of KeepAliveResponse)
  overload: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.KeepAliveAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.Unregister(Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.Unregister(Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: Unregister(Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient
  langs:
  - csharp
  - vb
  name: Unregister(UnregisterRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
  nameWithType: RegistrationService.RegistrationServiceClient.Unregister(UnregisterRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
  fullName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.Unregister(Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest, grpc.Metadata, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
  type: Method
  source:
    id: Unregister
    path: ''
    startLine: 16641
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.SyncServer
  syntax:
    content: public virtual Empty Unregister(UnregisterRequest request, grpc.Metadata headers = null, DateTime? deadline = default(DateTime? ), CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: request
      type: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest
    - id: headers
      type: grpc.Metadata
    - id: deadline
      type: System.Nullable{System.DateTime}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: Unity.Reflect.ProjectServer.Services.Empty
    content.vb: Public Overridable Function Unregister(request As UnregisterRequest, headers As grpc.Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As Empty
  overload: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.Unregister*
  nameWithType.vb: RegistrationService.RegistrationServiceClient.Unregister(UnregisterRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.Unregister(Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest, grpc.Metadata, System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
  name.vb: Unregister(UnregisterRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
- uid: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.Unregister(Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest,grpc.CallOptions)
  commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.Unregister(Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest,grpc.CallOptions)
  id: Unregister(Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest,grpc.CallOptions)
  parent: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient
  langs:
  - csharp
  - vb
  name: Unregister(UnregisterRequest, grpc.CallOptions)
  nameWithType: RegistrationService.RegistrationServiceClient.Unregister(UnregisterRequest, grpc.CallOptions)
  fullName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.Unregister(Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest, grpc.CallOptions)
  type: Method
  source:
    id: Unregister
    path: ''
    startLine: 16645
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.SyncServer
  syntax:
    content: public virtual Empty Unregister(UnregisterRequest request, grpc.CallOptions options)
    parameters:
    - id: request
      type: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest
    - id: options
      type: grpc.CallOptions
    return:
      type: Unity.Reflect.ProjectServer.Services.Empty
    content.vb: Public Overridable Function Unregister(request As UnregisterRequest, options As grpc.CallOptions) As Empty
  overload: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.Unregister*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.UnregisterAsync(Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.UnregisterAsync(Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: UnregisterAsync(Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient
  langs:
  - csharp
  - vb
  name: UnregisterAsync(UnregisterRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
  nameWithType: RegistrationService.RegistrationServiceClient.UnregisterAsync(UnregisterRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
  fullName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.UnregisterAsync(Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest, grpc.Metadata, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
  type: Method
  source:
    id: UnregisterAsync
    path: ''
    startLine: 16649
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.SyncServer
  syntax:
    content: public virtual grpc.AsyncUnaryCall<Empty> UnregisterAsync(UnregisterRequest request, grpc.Metadata headers = null, DateTime? deadline = default(DateTime? ), CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: request
      type: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest
    - id: headers
      type: grpc.Metadata
    - id: deadline
      type: System.Nullable{System.DateTime}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: grpc.AsyncUnaryCall{Unity.Reflect.ProjectServer.Services.Empty}
    content.vb: Public Overridable Function UnregisterAsync(request As UnregisterRequest, headers As grpc.Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As grpc.AsyncUnaryCall(Of Empty)
  overload: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.UnregisterAsync*
  nameWithType.vb: RegistrationService.RegistrationServiceClient.UnregisterAsync(UnregisterRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.UnregisterAsync(Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest, grpc.Metadata, System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
  name.vb: UnregisterAsync(UnregisterRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
- uid: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.UnregisterAsync(Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest,grpc.CallOptions)
  commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.UnregisterAsync(Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest,grpc.CallOptions)
  id: UnregisterAsync(Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest,grpc.CallOptions)
  parent: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient
  langs:
  - csharp
  - vb
  name: UnregisterAsync(UnregisterRequest, grpc.CallOptions)
  nameWithType: RegistrationService.RegistrationServiceClient.UnregisterAsync(UnregisterRequest, grpc.CallOptions)
  fullName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.UnregisterAsync(Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest, grpc.CallOptions)
  type: Method
  source:
    id: UnregisterAsync
    path: ''
    startLine: 16653
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.SyncServer
  syntax:
    content: public virtual grpc.AsyncUnaryCall<Empty> UnregisterAsync(UnregisterRequest request, grpc.CallOptions options)
    parameters:
    - id: request
      type: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest
    - id: options
      type: grpc.CallOptions
    return:
      type: grpc.AsyncUnaryCall{Unity.Reflect.ProjectServer.Services.Empty}
    content.vb: Public Overridable Function UnregisterAsync(request As UnregisterRequest, options As grpc.CallOptions) As grpc.AsyncUnaryCall(Of Empty)
  overload: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.UnregisterAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.NewInstance(ClientBaseConfiguration)
  commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.NewInstance(ClientBaseConfiguration)
  id: NewInstance(ClientBaseConfiguration)
  parent: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient
  langs:
  - csharp
  - vb
  name: NewInstance(ClientBaseConfiguration)
  nameWithType: RegistrationService.RegistrationServiceClient.NewInstance(ClientBaseConfiguration)
  fullName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.NewInstance(ClientBaseConfiguration)
  type: Method
  source:
    id: NewInstance
    path: ''
    startLine: 16658
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.SyncServer
  summary: Creates a new instance of client from given <code>ClientBaseConfiguration</code>.
  example: []
  syntax:
    content: protected override RegistrationService.RegistrationServiceClient NewInstance(ClientBaseConfiguration configuration)
    parameters:
    - id: configuration
      type: ClientBaseConfiguration
    return:
      type: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient
    content.vb: Protected Overrides Function NewInstance(configuration As ClientBaseConfiguration) As RegistrationService.RegistrationServiceClient
  overload: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.NewInstance*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.#ctor(grpc.Channel)
  commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.#ctor(grpc.Channel)
  id: '#ctor(grpc.Channel)'
  parent: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient
  langs:
  - csharp
  - vb
  name: RegistrationServiceClient(grpc.Channel)
  nameWithType: RegistrationService.RegistrationServiceClient.RegistrationServiceClient(grpc.Channel)
  fullName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.RegistrationServiceClient(grpc.Channel)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 36750
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.SyncServer
  summary: Creates a new client for RegistrationService
  example: []
  syntax:
    content: public RegistrationServiceClient(grpc.Channel channel)
    parameters:
    - id: channel
      type: grpc.Channel
      description: The channel to use to make remote calls.
    content.vb: Public Sub New(channel As grpc.Channel)
  overload: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.#ctor(grpc.CallInvoker)
  commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.#ctor(grpc.CallInvoker)
  id: '#ctor(grpc.CallInvoker)'
  parent: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient
  langs:
  - csharp
  - vb
  name: RegistrationServiceClient(grpc.CallInvoker)
  nameWithType: RegistrationService.RegistrationServiceClient.RegistrationServiceClient(grpc.CallInvoker)
  fullName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.RegistrationServiceClient(grpc.CallInvoker)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 36755
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.SyncServer
  summary: Creates a new client for RegistrationService that uses a custom <code>CallInvoker</code>.
  example: []
  syntax:
    content: public RegistrationServiceClient(grpc.CallInvoker callInvoker)
    parameters:
    - id: callInvoker
      type: grpc.CallInvoker
      description: The callInvoker to use to make remote calls.
    content.vb: Public Sub New(callInvoker As grpc.CallInvoker)
  overload: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.#ctor
  commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.#ctor
  id: '#ctor'
  parent: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient
  langs:
  - csharp
  - vb
  name: RegistrationServiceClient()
  nameWithType: RegistrationService.RegistrationServiceClient.RegistrationServiceClient()
  fullName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.RegistrationServiceClient()
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 36759
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.SyncServer
  summary: Protected parameterless constructor to allow creation of test doubles.
  example: []
  syntax:
    content: protected RegistrationServiceClient()
    content.vb: Protected Sub New
  overload: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.#ctor(ClientBaseConfiguration)
  commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.#ctor(ClientBaseConfiguration)
  id: '#ctor(ClientBaseConfiguration)'
  parent: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient
  langs:
  - csharp
  - vb
  name: RegistrationServiceClient(ClientBaseConfiguration)
  nameWithType: RegistrationService.RegistrationServiceClient.RegistrationServiceClient(ClientBaseConfiguration)
  fullName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.RegistrationServiceClient(ClientBaseConfiguration)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 36764
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.SyncServer
  summary: Protected constructor to allow creation of configured clients.
  example: []
  syntax:
    content: protected RegistrationServiceClient(ClientBaseConfiguration configuration)
    parameters:
    - id: configuration
      type: ClientBaseConfiguration
      description: The client configuration.
    content.vb: Protected Sub New(configuration As ClientBaseConfiguration)
  overload: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.Register(Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.Register(Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: Register(Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient
  langs:
  - csharp
  - vb
  name: Register(RegistrationRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
  nameWithType: RegistrationService.RegistrationServiceClient.Register(RegistrationRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
  fullName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.Register(Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest, grpc.Metadata, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
  type: Method
  source:
    id: Register
    path: ''
    startLine: 36768
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.SyncServer
  syntax:
    content: public virtual KeepAliveResponse Register(RegistrationRequest request, grpc.Metadata headers = null, DateTime? deadline = default(DateTime? ), CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: request
      type: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest
    - id: headers
      type: grpc.Metadata
    - id: deadline
      type: System.Nullable{System.DateTime}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse
    content.vb: Public Overridable Function Register(request As RegistrationRequest, headers As grpc.Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As KeepAliveResponse
  overload: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.Register*
  nameWithType.vb: RegistrationService.RegistrationServiceClient.Register(RegistrationRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.Register(Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest, grpc.Metadata, System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
  name.vb: Register(RegistrationRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
- uid: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.Register(Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest,grpc.CallOptions)
  commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.Register(Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest,grpc.CallOptions)
  id: Register(Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest,grpc.CallOptions)
  parent: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient
  langs:
  - csharp
  - vb
  name: Register(RegistrationRequest, grpc.CallOptions)
  nameWithType: RegistrationService.RegistrationServiceClient.Register(RegistrationRequest, grpc.CallOptions)
  fullName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.Register(Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest, grpc.CallOptions)
  type: Method
  source:
    id: Register
    path: ''
    startLine: 36772
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.SyncServer
  syntax:
    content: public virtual KeepAliveResponse Register(RegistrationRequest request, grpc.CallOptions options)
    parameters:
    - id: request
      type: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest
    - id: options
      type: grpc.CallOptions
    return:
      type: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse
    content.vb: Public Overridable Function Register(request As RegistrationRequest, options As grpc.CallOptions) As KeepAliveResponse
  overload: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.Register*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.RegisterAsync(Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.RegisterAsync(Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: RegisterAsync(Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient
  langs:
  - csharp
  - vb
  name: RegisterAsync(RegistrationRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
  nameWithType: RegistrationService.RegistrationServiceClient.RegisterAsync(RegistrationRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
  fullName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.RegisterAsync(Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest, grpc.Metadata, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
  type: Method
  source:
    id: RegisterAsync
    path: ''
    startLine: 36776
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.SyncServer
  syntax:
    content: public virtual grpc.AsyncUnaryCall<KeepAliveResponse> RegisterAsync(RegistrationRequest request, grpc.Metadata headers = null, DateTime? deadline = default(DateTime? ), CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: request
      type: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest
    - id: headers
      type: grpc.Metadata
    - id: deadline
      type: System.Nullable{System.DateTime}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: grpc.AsyncUnaryCall{Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse}
    content.vb: Public Overridable Function RegisterAsync(request As RegistrationRequest, headers As grpc.Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As grpc.AsyncUnaryCall(Of KeepAliveResponse)
  overload: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.RegisterAsync*
  nameWithType.vb: RegistrationService.RegistrationServiceClient.RegisterAsync(RegistrationRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.RegisterAsync(Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest, grpc.Metadata, System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
  name.vb: RegisterAsync(RegistrationRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
- uid: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.RegisterAsync(Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest,grpc.CallOptions)
  commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.RegisterAsync(Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest,grpc.CallOptions)
  id: RegisterAsync(Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest,grpc.CallOptions)
  parent: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient
  langs:
  - csharp
  - vb
  name: RegisterAsync(RegistrationRequest, grpc.CallOptions)
  nameWithType: RegistrationService.RegistrationServiceClient.RegisterAsync(RegistrationRequest, grpc.CallOptions)
  fullName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.RegisterAsync(Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest, grpc.CallOptions)
  type: Method
  source:
    id: RegisterAsync
    path: ''
    startLine: 36780
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.SyncServer
  syntax:
    content: public virtual grpc.AsyncUnaryCall<KeepAliveResponse> RegisterAsync(RegistrationRequest request, grpc.CallOptions options)
    parameters:
    - id: request
      type: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest
    - id: options
      type: grpc.CallOptions
    return:
      type: grpc.AsyncUnaryCall{Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse}
    content.vb: Public Overridable Function RegisterAsync(request As RegistrationRequest, options As grpc.CallOptions) As grpc.AsyncUnaryCall(Of KeepAliveResponse)
  overload: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.RegisterAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.KeepAlive(Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.KeepAlive(Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: KeepAlive(Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient
  langs:
  - csharp
  - vb
  name: KeepAlive(KeepAliveRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
  nameWithType: RegistrationService.RegistrationServiceClient.KeepAlive(KeepAliveRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
  fullName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.KeepAlive(Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest, grpc.Metadata, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
  type: Method
  source:
    id: KeepAlive
    path: ''
    startLine: 36784
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.SyncServer
  syntax:
    content: public virtual KeepAliveResponse KeepAlive(KeepAliveRequest request, grpc.Metadata headers = null, DateTime? deadline = default(DateTime? ), CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: request
      type: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest
    - id: headers
      type: grpc.Metadata
    - id: deadline
      type: System.Nullable{System.DateTime}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse
    content.vb: Public Overridable Function KeepAlive(request As KeepAliveRequest, headers As grpc.Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As KeepAliveResponse
  overload: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.KeepAlive*
  nameWithType.vb: RegistrationService.RegistrationServiceClient.KeepAlive(KeepAliveRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.KeepAlive(Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest, grpc.Metadata, System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
  name.vb: KeepAlive(KeepAliveRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
- uid: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.KeepAlive(Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest,grpc.CallOptions)
  commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.KeepAlive(Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest,grpc.CallOptions)
  id: KeepAlive(Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest,grpc.CallOptions)
  parent: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient
  langs:
  - csharp
  - vb
  name: KeepAlive(KeepAliveRequest, grpc.CallOptions)
  nameWithType: RegistrationService.RegistrationServiceClient.KeepAlive(KeepAliveRequest, grpc.CallOptions)
  fullName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.KeepAlive(Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest, grpc.CallOptions)
  type: Method
  source:
    id: KeepAlive
    path: ''
    startLine: 36788
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.SyncServer
  syntax:
    content: public virtual KeepAliveResponse KeepAlive(KeepAliveRequest request, grpc.CallOptions options)
    parameters:
    - id: request
      type: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest
    - id: options
      type: grpc.CallOptions
    return:
      type: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse
    content.vb: Public Overridable Function KeepAlive(request As KeepAliveRequest, options As grpc.CallOptions) As KeepAliveResponse
  overload: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.KeepAlive*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.KeepAliveAsync(Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.KeepAliveAsync(Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: KeepAliveAsync(Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient
  langs:
  - csharp
  - vb
  name: KeepAliveAsync(KeepAliveRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
  nameWithType: RegistrationService.RegistrationServiceClient.KeepAliveAsync(KeepAliveRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
  fullName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.KeepAliveAsync(Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest, grpc.Metadata, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
  type: Method
  source:
    id: KeepAliveAsync
    path: ''
    startLine: 36792
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.SyncServer
  syntax:
    content: public virtual grpc.AsyncUnaryCall<KeepAliveResponse> KeepAliveAsync(KeepAliveRequest request, grpc.Metadata headers = null, DateTime? deadline = default(DateTime? ), CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: request
      type: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest
    - id: headers
      type: grpc.Metadata
    - id: deadline
      type: System.Nullable{System.DateTime}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: grpc.AsyncUnaryCall{Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse}
    content.vb: Public Overridable Function KeepAliveAsync(request As KeepAliveRequest, headers As grpc.Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As grpc.AsyncUnaryCall(Of KeepAliveResponse)
  overload: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.KeepAliveAsync*
  nameWithType.vb: RegistrationService.RegistrationServiceClient.KeepAliveAsync(KeepAliveRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.KeepAliveAsync(Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest, grpc.Metadata, System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
  name.vb: KeepAliveAsync(KeepAliveRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
- uid: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.KeepAliveAsync(Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest,grpc.CallOptions)
  commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.KeepAliveAsync(Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest,grpc.CallOptions)
  id: KeepAliveAsync(Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest,grpc.CallOptions)
  parent: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient
  langs:
  - csharp
  - vb
  name: KeepAliveAsync(KeepAliveRequest, grpc.CallOptions)
  nameWithType: RegistrationService.RegistrationServiceClient.KeepAliveAsync(KeepAliveRequest, grpc.CallOptions)
  fullName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.KeepAliveAsync(Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest, grpc.CallOptions)
  type: Method
  source:
    id: KeepAliveAsync
    path: ''
    startLine: 36796
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.SyncServer
  syntax:
    content: public virtual grpc.AsyncUnaryCall<KeepAliveResponse> KeepAliveAsync(KeepAliveRequest request, grpc.CallOptions options)
    parameters:
    - id: request
      type: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest
    - id: options
      type: grpc.CallOptions
    return:
      type: grpc.AsyncUnaryCall{Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse}
    content.vb: Public Overridable Function KeepAliveAsync(request As KeepAliveRequest, options As grpc.CallOptions) As grpc.AsyncUnaryCall(Of KeepAliveResponse)
  overload: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.KeepAliveAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.Unregister(Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.Unregister(Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: Unregister(Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient
  langs:
  - csharp
  - vb
  name: Unregister(UnregisterRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
  nameWithType: RegistrationService.RegistrationServiceClient.Unregister(UnregisterRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
  fullName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.Unregister(Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest, grpc.Metadata, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
  type: Method
  source:
    id: Unregister
    path: ''
    startLine: 36800
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.SyncServer
  syntax:
    content: public virtual Empty Unregister(UnregisterRequest request, grpc.Metadata headers = null, DateTime? deadline = default(DateTime? ), CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: request
      type: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest
    - id: headers
      type: grpc.Metadata
    - id: deadline
      type: System.Nullable{System.DateTime}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: Unity.Reflect.ProjectServer.Services.Empty
    content.vb: Public Overridable Function Unregister(request As UnregisterRequest, headers As grpc.Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As Empty
  overload: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.Unregister*
  nameWithType.vb: RegistrationService.RegistrationServiceClient.Unregister(UnregisterRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.Unregister(Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest, grpc.Metadata, System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
  name.vb: Unregister(UnregisterRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
- uid: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.Unregister(Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest,grpc.CallOptions)
  commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.Unregister(Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest,grpc.CallOptions)
  id: Unregister(Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest,grpc.CallOptions)
  parent: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient
  langs:
  - csharp
  - vb
  name: Unregister(UnregisterRequest, grpc.CallOptions)
  nameWithType: RegistrationService.RegistrationServiceClient.Unregister(UnregisterRequest, grpc.CallOptions)
  fullName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.Unregister(Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest, grpc.CallOptions)
  type: Method
  source:
    id: Unregister
    path: ''
    startLine: 36804
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.SyncServer
  syntax:
    content: public virtual Empty Unregister(UnregisterRequest request, grpc.CallOptions options)
    parameters:
    - id: request
      type: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest
    - id: options
      type: grpc.CallOptions
    return:
      type: Unity.Reflect.ProjectServer.Services.Empty
    content.vb: Public Overridable Function Unregister(request As UnregisterRequest, options As grpc.CallOptions) As Empty
  overload: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.Unregister*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.UnregisterAsync(Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.UnregisterAsync(Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: UnregisterAsync(Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient
  langs:
  - csharp
  - vb
  name: UnregisterAsync(UnregisterRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
  nameWithType: RegistrationService.RegistrationServiceClient.UnregisterAsync(UnregisterRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
  fullName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.UnregisterAsync(Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest, grpc.Metadata, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
  type: Method
  source:
    id: UnregisterAsync
    path: ''
    startLine: 36808
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.SyncServer
  syntax:
    content: public virtual grpc.AsyncUnaryCall<Empty> UnregisterAsync(UnregisterRequest request, grpc.Metadata headers = null, DateTime? deadline = default(DateTime? ), CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: request
      type: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest
    - id: headers
      type: grpc.Metadata
    - id: deadline
      type: System.Nullable{System.DateTime}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: grpc.AsyncUnaryCall{Unity.Reflect.ProjectServer.Services.Empty}
    content.vb: Public Overridable Function UnregisterAsync(request As UnregisterRequest, headers As grpc.Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As grpc.AsyncUnaryCall(Of Empty)
  overload: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.UnregisterAsync*
  nameWithType.vb: RegistrationService.RegistrationServiceClient.UnregisterAsync(UnregisterRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.UnregisterAsync(Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest, grpc.Metadata, System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
  name.vb: UnregisterAsync(UnregisterRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
- uid: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.UnregisterAsync(Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest,grpc.CallOptions)
  commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.UnregisterAsync(Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest,grpc.CallOptions)
  id: UnregisterAsync(Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest,grpc.CallOptions)
  parent: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient
  langs:
  - csharp
  - vb
  name: UnregisterAsync(UnregisterRequest, grpc.CallOptions)
  nameWithType: RegistrationService.RegistrationServiceClient.UnregisterAsync(UnregisterRequest, grpc.CallOptions)
  fullName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.UnregisterAsync(Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest, grpc.CallOptions)
  type: Method
  source:
    id: UnregisterAsync
    path: ''
    startLine: 36812
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.SyncServer
  syntax:
    content: public virtual grpc.AsyncUnaryCall<Empty> UnregisterAsync(UnregisterRequest request, grpc.CallOptions options)
    parameters:
    - id: request
      type: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest
    - id: options
      type: grpc.CallOptions
    return:
      type: grpc.AsyncUnaryCall{Unity.Reflect.ProjectServer.Services.Empty}
    content.vb: Public Overridable Function UnregisterAsync(request As UnregisterRequest, options As grpc.CallOptions) As grpc.AsyncUnaryCall(Of Empty)
  overload: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.UnregisterAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.NewInstance(ClientBaseConfiguration)
  commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.NewInstance(ClientBaseConfiguration)
  id: NewInstance(ClientBaseConfiguration)
  parent: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient
  langs:
  - csharp
  - vb
  name: NewInstance(ClientBaseConfiguration)
  nameWithType: RegistrationService.RegistrationServiceClient.NewInstance(ClientBaseConfiguration)
  fullName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.NewInstance(ClientBaseConfiguration)
  type: Method
  source:
    id: NewInstance
    path: ''
    startLine: 36817
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.SyncServer
  summary: Creates a new instance of client from given <code>ClientBaseConfiguration</code>.
  example: []
  syntax:
    content: protected override RegistrationService.RegistrationServiceClient NewInstance(ClientBaseConfiguration configuration)
    parameters:
    - id: configuration
      type: ClientBaseConfiguration
    return:
      type: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient
    content.vb: Protected Overrides Function NewInstance(configuration As ClientBaseConfiguration) As RegistrationService.RegistrationServiceClient
  overload: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.NewInstance*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: Unity.Reflect.ProjectServer.Services.SyncServer
  commentId: N:Unity.Reflect.ProjectServer.Services.SyncServer
  name: Unity.Reflect.ProjectServer.Services.SyncServer
  nameWithType: Unity.Reflect.ProjectServer.Services.SyncServer
  fullName: Unity.Reflect.ProjectServer.Services.SyncServer
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: grpc.ClientBase{Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient}
  commentId: '!:grpc.ClientBase{Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient}'
  definition: grpc.ClientBase`1
  name: grpc.ClientBase<RegistrationService.RegistrationServiceClient>
  nameWithType: grpc.ClientBase<RegistrationService.RegistrationServiceClient>
  fullName: grpc.ClientBase<Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient>
  nameWithType.vb: grpc.ClientBase(Of RegistrationService.RegistrationServiceClient)
  fullName.vb: grpc.ClientBase(Of Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient)
  name.vb: grpc.ClientBase(Of RegistrationService.RegistrationServiceClient)
  spec.csharp:
  - uid: grpc.ClientBase`1
    name: grpc.ClientBase
    nameWithType: grpc.ClientBase
    fullName: grpc.ClientBase
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient
    name: RegistrationService.RegistrationServiceClient
    nameWithType: RegistrationService.RegistrationServiceClient
    fullName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: grpc.ClientBase`1
    name: grpc.ClientBase
    nameWithType: grpc.ClientBase
    fullName: grpc.ClientBase
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient
    name: RegistrationService.RegistrationServiceClient
    nameWithType: RegistrationService.RegistrationServiceClient
    fullName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: grpc.ClientBase`1
  isExternal: true
  name: grpc.ClientBase<>
  nameWithType: grpc.ClientBase<>
  fullName: grpc.ClientBase<>
  nameWithType.vb: grpc.ClientBase(Of )
  fullName.vb: grpc.ClientBase(Of )
  name.vb: grpc.ClientBase(Of )
  spec.csharp:
  - uid: grpc.ClientBase`1
    name: grpc.ClientBase
    nameWithType: grpc.ClientBase
    fullName: grpc.ClientBase
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: grpc.ClientBase`1
    name: grpc.ClientBase
    nameWithType: grpc.ClientBase
    fullName: grpc.ClientBase
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.#ctor*
  commentId: Overload:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.#ctor
  name: RegistrationServiceClient
  nameWithType: RegistrationService.RegistrationServiceClient.RegistrationServiceClient
  fullName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.RegistrationServiceClient
- uid: grpc.Channel
  isExternal: true
  name: grpc.Channel
  nameWithType: grpc.Channel
  fullName: grpc.Channel
- uid: grpc.CallInvoker
  isExternal: true
  name: grpc.CallInvoker
  nameWithType: grpc.CallInvoker
  fullName: grpc.CallInvoker
- uid: ClientBaseConfiguration
  isExternal: true
  name: ClientBaseConfiguration
  nameWithType: ClientBaseConfiguration
  fullName: ClientBaseConfiguration
- uid: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.Register*
  commentId: Overload:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.Register
  name: Register
  nameWithType: RegistrationService.RegistrationServiceClient.Register
  fullName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.Register
- uid: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest
  commentId: T:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest
  parent: Unity.Reflect.ProjectServer.Services.SyncServer
  name: RegistrationRequest
  nameWithType: RegistrationRequest
  fullName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest
- uid: grpc.Metadata
  isExternal: true
  name: grpc.Metadata
  nameWithType: grpc.Metadata
  fullName: grpc.Metadata
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullName.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse
  commentId: T:Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse
  parent: Unity.Reflect.ProjectServer.Services.SyncServer
  name: KeepAliveResponse
  nameWithType: KeepAliveResponse
  fullName: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: grpc.CallOptions
  isExternal: true
  name: grpc.CallOptions
  nameWithType: grpc.CallOptions
  fullName: grpc.CallOptions
- uid: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.RegisterAsync*
  commentId: Overload:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.RegisterAsync
  name: RegisterAsync
  nameWithType: RegistrationService.RegistrationServiceClient.RegisterAsync
  fullName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.RegisterAsync
- uid: grpc.AsyncUnaryCall{Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse}
  commentId: '!:grpc.AsyncUnaryCall{Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse}'
  definition: grpc.AsyncUnaryCall`1
  name: grpc.AsyncUnaryCall<KeepAliveResponse>
  nameWithType: grpc.AsyncUnaryCall<KeepAliveResponse>
  fullName: grpc.AsyncUnaryCall<Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse>
  nameWithType.vb: grpc.AsyncUnaryCall(Of KeepAliveResponse)
  fullName.vb: grpc.AsyncUnaryCall(Of Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse)
  name.vb: grpc.AsyncUnaryCall(Of KeepAliveResponse)
  spec.csharp:
  - uid: grpc.AsyncUnaryCall`1
    name: grpc.AsyncUnaryCall
    nameWithType: grpc.AsyncUnaryCall
    fullName: grpc.AsyncUnaryCall
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse
    name: KeepAliveResponse
    nameWithType: KeepAliveResponse
    fullName: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: grpc.AsyncUnaryCall`1
    name: grpc.AsyncUnaryCall
    nameWithType: grpc.AsyncUnaryCall
    fullName: grpc.AsyncUnaryCall
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse
    name: KeepAliveResponse
    nameWithType: KeepAliveResponse
    fullName: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: grpc.AsyncUnaryCall`1
  isExternal: true
  name: grpc.AsyncUnaryCall<>
  nameWithType: grpc.AsyncUnaryCall<>
  fullName: grpc.AsyncUnaryCall<>
  nameWithType.vb: grpc.AsyncUnaryCall(Of )
  fullName.vb: grpc.AsyncUnaryCall(Of )
  name.vb: grpc.AsyncUnaryCall(Of )
  spec.csharp:
  - uid: grpc.AsyncUnaryCall`1
    name: grpc.AsyncUnaryCall
    nameWithType: grpc.AsyncUnaryCall
    fullName: grpc.AsyncUnaryCall
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: grpc.AsyncUnaryCall`1
    name: grpc.AsyncUnaryCall
    nameWithType: grpc.AsyncUnaryCall
    fullName: grpc.AsyncUnaryCall
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.KeepAlive*
  commentId: Overload:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.KeepAlive
  name: KeepAlive
  nameWithType: RegistrationService.RegistrationServiceClient.KeepAlive
  fullName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.KeepAlive
- uid: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest
  commentId: T:Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest
  parent: Unity.Reflect.ProjectServer.Services.SyncServer
  name: KeepAliveRequest
  nameWithType: KeepAliveRequest
  fullName: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest
- uid: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.KeepAliveAsync*
  commentId: Overload:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.KeepAliveAsync
  name: KeepAliveAsync
  nameWithType: RegistrationService.RegistrationServiceClient.KeepAliveAsync
  fullName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.KeepAliveAsync
- uid: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.Unregister*
  commentId: Overload:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.Unregister
  name: Unregister
  nameWithType: RegistrationService.RegistrationServiceClient.Unregister
  fullName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.Unregister
- uid: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest
  commentId: T:Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest
  parent: Unity.Reflect.ProjectServer.Services.SyncServer
  name: UnregisterRequest
  nameWithType: UnregisterRequest
  fullName: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest
- uid: Unity.Reflect.ProjectServer.Services.Empty
  commentId: T:Unity.Reflect.ProjectServer.Services.Empty
  parent: Unity.Reflect.ProjectServer.Services
  name: Empty
  nameWithType: Empty
  fullName: Unity.Reflect.ProjectServer.Services.Empty
- uid: Unity.Reflect.ProjectServer.Services
  commentId: N:Unity.Reflect.ProjectServer.Services
  name: Unity.Reflect.ProjectServer.Services
  nameWithType: Unity.Reflect.ProjectServer.Services
  fullName: Unity.Reflect.ProjectServer.Services
- uid: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.UnregisterAsync*
  commentId: Overload:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.UnregisterAsync
  name: UnregisterAsync
  nameWithType: RegistrationService.RegistrationServiceClient.UnregisterAsync
  fullName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.UnregisterAsync
- uid: grpc.AsyncUnaryCall{Unity.Reflect.ProjectServer.Services.Empty}
  commentId: '!:grpc.AsyncUnaryCall{Unity.Reflect.ProjectServer.Services.Empty}'
  definition: grpc.AsyncUnaryCall`1
  name: grpc.AsyncUnaryCall<Empty>
  nameWithType: grpc.AsyncUnaryCall<Empty>
  fullName: grpc.AsyncUnaryCall<Unity.Reflect.ProjectServer.Services.Empty>
  nameWithType.vb: grpc.AsyncUnaryCall(Of Empty)
  fullName.vb: grpc.AsyncUnaryCall(Of Unity.Reflect.ProjectServer.Services.Empty)
  name.vb: grpc.AsyncUnaryCall(Of Empty)
  spec.csharp:
  - uid: grpc.AsyncUnaryCall`1
    name: grpc.AsyncUnaryCall
    nameWithType: grpc.AsyncUnaryCall
    fullName: grpc.AsyncUnaryCall
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Unity.Reflect.ProjectServer.Services.Empty
    name: Empty
    nameWithType: Empty
    fullName: Unity.Reflect.ProjectServer.Services.Empty
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: grpc.AsyncUnaryCall`1
    name: grpc.AsyncUnaryCall
    nameWithType: grpc.AsyncUnaryCall
    fullName: grpc.AsyncUnaryCall
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Unity.Reflect.ProjectServer.Services.Empty
    name: Empty
    nameWithType: Empty
    fullName: Unity.Reflect.ProjectServer.Services.Empty
  - name: )
    nameWithType: )
    fullName: )
- uid: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.NewInstance*
  commentId: Overload:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.NewInstance
  name: NewInstance
  nameWithType: RegistrationService.RegistrationServiceClient.NewInstance
  fullName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.NewInstance
- uid: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient
  commentId: T:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient
  parent: Unity.Reflect.ProjectServer.Services.SyncServer
  name: RegistrationService.RegistrationServiceClient
  nameWithType: RegistrationService.RegistrationServiceClient
  fullName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient
