### YamlMime:ManagedReference
items:
- uid: Unity.Reflect.PublisherSettings
  commentId: T:Unity.Reflect.PublisherSettings
  id: PublisherSettings
  parent: Unity.Reflect
  children:
  - Unity.Reflect.PublisherSettings.#ctor(Unity.Reflect.LengthUnit,Unity.Reflect.AxisInversion,System.String)
  - Unity.Reflect.PublisherSettings.#ctor(Unity.Reflect.LengthUnit,Unity.Reflect.AxisInversion,System.String)
  - Unity.Reflect.PublisherSettings.AxisInversion
  - Unity.Reflect.PublisherSettings.AxisInversion
  - Unity.Reflect.PublisherSettings.Default
  - Unity.Reflect.PublisherSettings.Default
  - Unity.Reflect.PublisherSettings.LengthUnit
  - Unity.Reflect.PublisherSettings.LengthUnit
  - Unity.Reflect.PublisherSettings.Rules
  - Unity.Reflect.PublisherSettings.Rules
  langs:
  - csharp
  - vb
  name: PublisherSettings
  nameWithType: PublisherSettings
  fullName: Unity.Reflect.PublisherSettings
  type: Struct
  source:
    id: PublisherSettings
    path: ''
    startLine: 39802
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect
  summary: "\nThis struct specifies multiple settings to customize the publisher.\n"
  example: []
  syntax:
    content: public struct PublisherSettings
    content.vb: Public Structure PublisherSettings
  seealso:
  - linkId: Unity.Reflect.Publisher
    commentId: T:Unity.Reflect.Publisher
  - linkId: Unity.Reflect.Publisher
    commentId: T:Unity.Reflect.Publisher
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: Unity.Reflect.PublisherSettings.Default
  commentId: F:Unity.Reflect.PublisherSettings.Default
  id: Default
  parent: Unity.Reflect.PublisherSettings
  langs:
  - csharp
  - vb
  name: Default
  nameWithType: PublisherSettings.Default
  fullName: Unity.Reflect.PublisherSettings.Default
  type: Field
  source:
    id: Default
    path: ''
    startLine: 19645
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect
  syntax:
    content: public static readonly PublisherSettings Default
    return:
      type: Unity.Reflect.PublisherSettings
    content.vb: Public Shared ReadOnly Default As PublisherSettings
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Unity.Reflect.PublisherSettings.LengthUnit
  commentId: F:Unity.Reflect.PublisherSettings.LengthUnit
  id: LengthUnit
  parent: Unity.Reflect.PublisherSettings
  langs:
  - csharp
  - vb
  name: LengthUnit
  nameWithType: PublisherSettings.LengthUnit
  fullName: Unity.Reflect.PublisherSettings.LengthUnit
  type: Field
  source:
    id: LengthUnit
    path: ''
    startLine: 19650
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect
  summary: "\nThe length unit to use when exporting data to the SyncServer.\n"
  example: []
  syntax:
    content: public readonly LengthUnit LengthUnit
    return:
      type: Unity.Reflect.LengthUnit
    content.vb: Public ReadOnly LengthUnit As LengthUnit
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Unity.Reflect.PublisherSettings.AxisInversion
  commentId: F:Unity.Reflect.PublisherSettings.AxisInversion
  id: AxisInversion
  parent: Unity.Reflect.PublisherSettings
  langs:
  - csharp
  - vb
  name: AxisInversion
  nameWithType: PublisherSettings.AxisInversion
  fullName: Unity.Reflect.PublisherSettings.AxisInversion
  type: Field
  source:
    id: AxisInversion
    path: ''
    startLine: 19655
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect
  summary: "\nThe axis inversion option to use when exporting data to the SyncServer\n"
  example: []
  syntax:
    content: public readonly AxisInversion AxisInversion
    return:
      type: Unity.Reflect.AxisInversion
    content.vb: Public ReadOnly AxisInversion As AxisInversion
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Unity.Reflect.PublisherSettings.Rules
  commentId: F:Unity.Reflect.PublisherSettings.Rules
  id: Rules
  parent: Unity.Reflect.PublisherSettings
  langs:
  - csharp
  - vb
  name: Rules
  nameWithType: PublisherSettings.Rules
  fullName: Unity.Reflect.PublisherSettings.Rules
  type: Field
  source:
    id: Rules
    path: ''
    startLine: 19660
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect
  summary: "\nThe rules that the Rule Engine will handle\n"
  example: []
  syntax:
    content: public readonly string Rules
    return:
      type: System.String
    content.vb: Public ReadOnly Rules As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Unity.Reflect.PublisherSettings.#ctor(Unity.Reflect.LengthUnit,Unity.Reflect.AxisInversion,System.String)
  commentId: M:Unity.Reflect.PublisherSettings.#ctor(Unity.Reflect.LengthUnit,Unity.Reflect.AxisInversion,System.String)
  id: '#ctor(Unity.Reflect.LengthUnit,Unity.Reflect.AxisInversion,System.String)'
  parent: Unity.Reflect.PublisherSettings
  langs:
  - csharp
  - vb
  name: PublisherSettings(LengthUnit, AxisInversion, String)
  nameWithType: PublisherSettings.PublisherSettings(LengthUnit, AxisInversion, String)
  fullName: Unity.Reflect.PublisherSettings.PublisherSettings(Unity.Reflect.LengthUnit, Unity.Reflect.AxisInversion, System.String)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 19668
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect
  summary: "\nCreates a PublisherSettings object.\n"
  example: []
  syntax:
    content: public PublisherSettings(LengthUnit unit, AxisInversion axis, string rules = "")
    parameters:
    - id: unit
      type: Unity.Reflect.LengthUnit
      description: The length unit to use when exporting data to the SyncServer
    - id: axis
      type: Unity.Reflect.AxisInversion
      description: The axis inversion option to use when exporting data to the SyncServer
    - id: rules
      type: System.String
      description: The rules that the Rule Engine will handle
    content.vb: Public Sub New(unit As LengthUnit, axis As AxisInversion, rules As String = "")
  overload: Unity.Reflect.PublisherSettings.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unity.Reflect.PublisherSettings.Default
  commentId: F:Unity.Reflect.PublisherSettings.Default
  id: Default
  parent: Unity.Reflect.PublisherSettings
  langs:
  - csharp
  - vb
  name: Default
  nameWithType: PublisherSettings.Default
  fullName: Unity.Reflect.PublisherSettings.Default
  type: Field
  source:
    id: Default
    path: ''
    startLine: 39804
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect
  syntax:
    content: public static readonly PublisherSettings Default
    return:
      type: Unity.Reflect.PublisherSettings
    content.vb: Public Shared ReadOnly Default As PublisherSettings
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Unity.Reflect.PublisherSettings.LengthUnit
  commentId: F:Unity.Reflect.PublisherSettings.LengthUnit
  id: LengthUnit
  parent: Unity.Reflect.PublisherSettings
  langs:
  - csharp
  - vb
  name: LengthUnit
  nameWithType: PublisherSettings.LengthUnit
  fullName: Unity.Reflect.PublisherSettings.LengthUnit
  type: Field
  source:
    id: LengthUnit
    path: ''
    startLine: 39809
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect
  summary: "\nThe length unit to use when exporting data to the SyncServer.\n"
  example: []
  syntax:
    content: public readonly LengthUnit LengthUnit
    return:
      type: Unity.Reflect.LengthUnit
    content.vb: Public ReadOnly LengthUnit As LengthUnit
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Unity.Reflect.PublisherSettings.AxisInversion
  commentId: F:Unity.Reflect.PublisherSettings.AxisInversion
  id: AxisInversion
  parent: Unity.Reflect.PublisherSettings
  langs:
  - csharp
  - vb
  name: AxisInversion
  nameWithType: PublisherSettings.AxisInversion
  fullName: Unity.Reflect.PublisherSettings.AxisInversion
  type: Field
  source:
    id: AxisInversion
    path: ''
    startLine: 39814
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect
  summary: "\nThe axis inversion option to use when exporting data to the SyncServer\n"
  example: []
  syntax:
    content: public readonly AxisInversion AxisInversion
    return:
      type: Unity.Reflect.AxisInversion
    content.vb: Public ReadOnly AxisInversion As AxisInversion
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Unity.Reflect.PublisherSettings.Rules
  commentId: F:Unity.Reflect.PublisherSettings.Rules
  id: Rules
  parent: Unity.Reflect.PublisherSettings
  langs:
  - csharp
  - vb
  name: Rules
  nameWithType: PublisherSettings.Rules
  fullName: Unity.Reflect.PublisherSettings.Rules
  type: Field
  source:
    id: Rules
    path: ''
    startLine: 39819
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect
  summary: "\nThe rules that the Rule Engine will handle\n"
  example: []
  syntax:
    content: public readonly string Rules
    return:
      type: System.String
    content.vb: Public ReadOnly Rules As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Unity.Reflect.PublisherSettings.#ctor(Unity.Reflect.LengthUnit,Unity.Reflect.AxisInversion,System.String)
  commentId: M:Unity.Reflect.PublisherSettings.#ctor(Unity.Reflect.LengthUnit,Unity.Reflect.AxisInversion,System.String)
  id: '#ctor(Unity.Reflect.LengthUnit,Unity.Reflect.AxisInversion,System.String)'
  parent: Unity.Reflect.PublisherSettings
  langs:
  - csharp
  - vb
  name: PublisherSettings(LengthUnit, AxisInversion, String)
  nameWithType: PublisherSettings.PublisherSettings(LengthUnit, AxisInversion, String)
  fullName: Unity.Reflect.PublisherSettings.PublisherSettings(Unity.Reflect.LengthUnit, Unity.Reflect.AxisInversion, System.String)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 39827
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect
  summary: "\nCreates a PublisherSettings object.\n"
  example: []
  syntax:
    content: public PublisherSettings(LengthUnit unit, AxisInversion axis, string rules = "")
    parameters:
    - id: unit
      type: Unity.Reflect.LengthUnit
      description: The length unit to use when exporting data to the SyncServer
    - id: axis
      type: Unity.Reflect.AxisInversion
      description: The axis inversion option to use when exporting data to the SyncServer
    - id: rules
      type: System.String
      description: The rules that the Rule Engine will handle
    content.vb: Public Sub New(unit As LengthUnit, axis As AxisInversion, rules As String = "")
  overload: Unity.Reflect.PublisherSettings.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Unity.Reflect.Publisher
  commentId: T:Unity.Reflect.Publisher
  name: Publisher
  nameWithType: Publisher
  fullName: Unity.Reflect.Publisher
- uid: Unity.Reflect
  commentId: N:Unity.Reflect
  name: Unity.Reflect
  nameWithType: Unity.Reflect
  fullName: Unity.Reflect
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Unity.Reflect.PublisherSettings
  commentId: T:Unity.Reflect.PublisherSettings
  parent: Unity.Reflect
  name: PublisherSettings
  nameWithType: PublisherSettings
  fullName: Unity.Reflect.PublisherSettings
- uid: Unity.Reflect.LengthUnit
  commentId: T:Unity.Reflect.LengthUnit
  parent: Unity.Reflect
  name: LengthUnit
  nameWithType: LengthUnit
  fullName: Unity.Reflect.LengthUnit
- uid: Unity.Reflect.AxisInversion
  commentId: T:Unity.Reflect.AxisInversion
  parent: Unity.Reflect
  name: AxisInversion
  nameWithType: AxisInversion
  fullName: Unity.Reflect.AxisInversion
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Unity.Reflect.PublisherSettings.#ctor*
  commentId: Overload:Unity.Reflect.PublisherSettings.#ctor
  name: PublisherSettings
  nameWithType: PublisherSettings.PublisherSettings
  fullName: Unity.Reflect.PublisherSettings.PublisherSettings
