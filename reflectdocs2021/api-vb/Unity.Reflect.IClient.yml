### YamlMime:ManagedReference
items:
- uid: Unity.Reflect.IClient
  commentId: T:Unity.Reflect.IClient
  id: IClient
  parent: Unity.Reflect
  children:
  - Unity.Reflect.IClient.Connect
  - Unity.Reflect.IClient.Connect
  - Unity.Reflect.IClient.Connected
  - Unity.Reflect.IClient.Connected
  - Unity.Reflect.IClient.Disconnect(System.Boolean)
  - Unity.Reflect.IClient.Disconnect(System.Boolean)
  - Unity.Reflect.IClient.ObserveManifestUpdate(System.String[])
  - Unity.Reflect.IClient.ObserveManifestUpdate(System.String[])
  - Unity.Reflect.IClient.ObserveSessionBegin(System.String[])
  - Unity.Reflect.IClient.ObserveSessionBegin(System.String[])
  - Unity.Reflect.IClient.ObserveSessionEnd(System.String[])
  - Unity.Reflect.IClient.ObserveSessionEnd(System.String[])
  - Unity.Reflect.IClient.ObserveUnityProjectListUpdate
  - Unity.Reflect.IClient.ObserveUnityProjectListUpdate
  - Unity.Reflect.IClient.ObserveUserUpdate
  - Unity.Reflect.IClient.ObserveUserUpdate
  - Unity.Reflect.IClient.OnConnectionStatusChanged
  - Unity.Reflect.IClient.OnConnectionStatusChanged
  - Unity.Reflect.IClient.OnManifestUpdate
  - Unity.Reflect.IClient.OnManifestUpdate
  - Unity.Reflect.IClient.OnSessionBegin
  - Unity.Reflect.IClient.OnSessionBegin
  - Unity.Reflect.IClient.OnSessionEnd
  - Unity.Reflect.IClient.OnSessionEnd
  - Unity.Reflect.IClient.OnUnityProjectListUpdate
  - Unity.Reflect.IClient.OnUnityProjectListUpdate
  - Unity.Reflect.IClient.OnUserUpdate
  - Unity.Reflect.IClient.OnUserUpdate
  - Unity.Reflect.IClient.ReleaseManifestUpdate(System.String[])
  - Unity.Reflect.IClient.ReleaseManifestUpdate(System.String[])
  - Unity.Reflect.IClient.ReleaseSessionBegin(System.String[])
  - Unity.Reflect.IClient.ReleaseSessionBegin(System.String[])
  - Unity.Reflect.IClient.ReleaseSessionEnd(System.String[])
  - Unity.Reflect.IClient.ReleaseSessionEnd(System.String[])
  - Unity.Reflect.IClient.ReleaseUnityProjectListUpdate
  - Unity.Reflect.IClient.ReleaseUnityProjectListUpdate
  - Unity.Reflect.IClient.ReleaseUserUpdate
  - Unity.Reflect.IClient.ReleaseUserUpdate
  langs:
  - csharp
  - vb
  name: IClient
  nameWithType: IClient
  fullName: Unity.Reflect.IClient
  type: Interface
  source:
    id: IClient
    path: ''
    startLine: 39457
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect
  summary: "\nThis interface provides some basic client features to communicate with a SyncServer.\n"
  example: []
  syntax:
    content: public interface IClient
    content.vb: Public Interface IClient
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Unity.Reflect.IClient.OnConnectionStatusChanged
  commentId: E:Unity.Reflect.IClient.OnConnectionStatusChanged
  id: OnConnectionStatusChanged
  parent: Unity.Reflect.IClient
  langs:
  - csharp
  - vb
  name: OnConnectionStatusChanged
  nameWithType: IClient.OnConnectionStatusChanged
  fullName: Unity.Reflect.IClient.OnConnectionStatusChanged
  type: Event
  source:
    id: OnConnectionStatusChanged
    path: ''
    startLine: 19303
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect
  summary: "\nThis event is triggered whenever the connection status changes.\n"
  example: []
  syntax:
    content: event Action<ConnectionStatus, string> OnConnectionStatusChanged
    return:
      type: System.Action{Unity.Reflect.ConnectionStatus,System.String}
    content.vb: Event OnConnectionStatusChanged As Action(Of ConnectionStatus, String)
- uid: Unity.Reflect.IClient.OnUnityProjectListUpdate
  commentId: E:Unity.Reflect.IClient.OnUnityProjectListUpdate
  id: OnUnityProjectListUpdate
  parent: Unity.Reflect.IClient
  langs:
  - csharp
  - vb
  name: OnUnityProjectListUpdate
  nameWithType: IClient.OnUnityProjectListUpdate
  fullName: Unity.Reflect.IClient.OnUnityProjectListUpdate
  type: Event
  source:
    id: OnUnityProjectListUpdate
    path: ''
    startLine: 19310
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect
  summary: "\nThis event is triggered whenever the client receives an UnityProjectListUpdate notification from the SyncServer.\nAdding a callback to this event does not start the observation process. You need to use <xref href=\"Unity.Reflect.IClient.ObserveUnityProjectListUpdate\" data-throw-if-not-resolved=\"false\"></xref> for this.\n"
  example: []
  syntax:
    content: event Action OnUnityProjectListUpdate
    return:
      type: System.Action
    content.vb: Event OnUnityProjectListUpdate As Action
- uid: Unity.Reflect.IClient.OnUserUpdate
  commentId: E:Unity.Reflect.IClient.OnUserUpdate
  id: OnUserUpdate
  parent: Unity.Reflect.IClient
  langs:
  - csharp
  - vb
  name: OnUserUpdate
  nameWithType: IClient.OnUserUpdate
  fullName: Unity.Reflect.IClient.OnUserUpdate
  type: Event
  source:
    id: OnUserUpdate
    path: ''
    startLine: 19316
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect
  summary: "\nThis event is triggered whenever the client receives an UserUpdate notification from the SyncServer.\nAdding a callback to this event does not start the observation process. You need to use <xref href=\"Unity.Reflect.IClient.ObserveUserUpdate\" data-throw-if-not-resolved=\"false\"></xref> for this.\n"
  example: []
  syntax:
    content: event Action OnUserUpdate
    return:
      type: System.Action
    content.vb: Event OnUserUpdate As Action
- uid: Unity.Reflect.IClient.OnSessionBegin
  commentId: E:Unity.Reflect.IClient.OnSessionBegin
  id: OnSessionBegin
  parent: Unity.Reflect.IClient
  langs:
  - csharp
  - vb
  name: OnSessionBegin
  nameWithType: IClient.OnSessionBegin
  fullName: Unity.Reflect.IClient.OnSessionBegin
  type: Event
  source:
    id: OnSessionBegin
    path: ''
    startLine: 19322
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect
  summary: "\nThis event is triggered whenever the client receives a SessionBegin notification from the SyncServer. The string parameter is the source ID of the concerned project.\n"
  remarks: Adding a callback to this event does not start the observation process. You need to use <xref href="Unity.Reflect.IClient.ObserveSessionBegin(System.String%5b%5d)" data-throw-if-not-resolved="false"></xref> for this.
  example: []
  syntax:
    content: event Action<string> OnSessionBegin
    return:
      type: System.Action{System.String}
    content.vb: Event OnSessionBegin As Action(Of String)
- uid: Unity.Reflect.IClient.OnSessionEnd
  commentId: E:Unity.Reflect.IClient.OnSessionEnd
  id: OnSessionEnd
  parent: Unity.Reflect.IClient
  langs:
  - csharp
  - vb
  name: OnSessionEnd
  nameWithType: IClient.OnSessionEnd
  fullName: Unity.Reflect.IClient.OnSessionEnd
  type: Event
  source:
    id: OnSessionEnd
    path: ''
    startLine: 19328
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect
  summary: "\nThis event is triggered whenever the client receives a SessionEnd notification from the SyncServer. The string parameter is the source ID of the concerned project.\n"
  remarks: Adding a callback to this event does not start the observation process. You need to use <xref href="Unity.Reflect.IClient.ObserveSessionEnd(System.String%5b%5d)" data-throw-if-not-resolved="false"></xref> for this.
  example: []
  syntax:
    content: event Action<string> OnSessionEnd
    return:
      type: System.Action{System.String}
    content.vb: Event OnSessionEnd As Action(Of String)
- uid: Unity.Reflect.IClient.OnManifestUpdate
  commentId: E:Unity.Reflect.IClient.OnManifestUpdate
  id: OnManifestUpdate
  parent: Unity.Reflect.IClient
  langs:
  - csharp
  - vb
  name: OnManifestUpdate
  nameWithType: IClient.OnManifestUpdate
  fullName: Unity.Reflect.IClient.OnManifestUpdate
  type: Event
  source:
    id: OnManifestUpdate
    path: ''
    startLine: 19334
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect
  summary: "\nThis event is triggered whenever the client receives a ManifestUpdate notification from the SyncServer. The string parameter is the source ID of the concerned project.\n"
  remarks: Adding a callback to this event does not start the observation process. You need to use <xref href="Unity.Reflect.IClient.ObserveManifestUpdate(System.String%5b%5d)" data-throw-if-not-resolved="false"></xref> for this.
  example: []
  syntax:
    content: event Action<string> OnManifestUpdate
    return:
      type: System.Action{System.String}
    content.vb: Event OnManifestUpdate As Action(Of String)
- uid: Unity.Reflect.IClient.ObserveUnityProjectListUpdate
  commentId: M:Unity.Reflect.IClient.ObserveUnityProjectListUpdate
  id: ObserveUnityProjectListUpdate
  parent: Unity.Reflect.IClient
  langs:
  - csharp
  - vb
  name: ObserveUnityProjectListUpdate()
  nameWithType: IClient.ObserveUnityProjectListUpdate()
  fullName: Unity.Reflect.IClient.ObserveUnityProjectListUpdate()
  type: Method
  source:
    id: ObserveUnityProjectListUpdate
    path: ''
    startLine: 19341
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect
  summary: "\nStart observing the UnityProjectListUpdate notification.\n"
  example: []
  syntax:
    content: void ObserveUnityProjectListUpdate()
    content.vb: Sub ObserveUnityProjectListUpdate
  overload: Unity.Reflect.IClient.ObserveUnityProjectListUpdate*
  seealso:
  - linkId: Unity.Reflect.IClient.OnUnityProjectListUpdate
    commentId: E:Unity.Reflect.IClient.OnUnityProjectListUpdate
- uid: Unity.Reflect.IClient.ObserveUserUpdate
  commentId: M:Unity.Reflect.IClient.ObserveUserUpdate
  id: ObserveUserUpdate
  parent: Unity.Reflect.IClient
  langs:
  - csharp
  - vb
  name: ObserveUserUpdate()
  nameWithType: IClient.ObserveUserUpdate()
  fullName: Unity.Reflect.IClient.ObserveUserUpdate()
  type: Method
  source:
    id: ObserveUserUpdate
    path: ''
    startLine: 19347
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect
  summary: "\nStart observing the UserUpdate notification.\n"
  example: []
  syntax:
    content: void ObserveUserUpdate()
    content.vb: Sub ObserveUserUpdate
  overload: Unity.Reflect.IClient.ObserveUserUpdate*
  seealso:
  - linkId: Unity.Reflect.IClient.OnUserUpdate
    commentId: E:Unity.Reflect.IClient.OnUserUpdate
- uid: Unity.Reflect.IClient.ObserveSessionBegin(System.String[])
  commentId: M:Unity.Reflect.IClient.ObserveSessionBegin(System.String[])
  id: ObserveSessionBegin(System.String[])
  parent: Unity.Reflect.IClient
  langs:
  - csharp
  - vb
  name: ObserveSessionBegin(String[])
  nameWithType: IClient.ObserveSessionBegin(String[])
  fullName: Unity.Reflect.IClient.ObserveSessionBegin(System.String[])
  type: Method
  source:
    id: ObserveSessionBegin
    path: ''
    startLine: 19354
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect
  summary: "\nStart observing the SessionBegin notification.\n"
  example: []
  syntax:
    content: void ObserveSessionBegin(params string[] sourceIds)
    parameters:
    - id: sourceIds
      type: System.String[]
      description: The source project IDs to observe. If no ID is provided, all source projects will be observed.
    content.vb: Sub ObserveSessionBegin(ParamArray sourceIds As String())
  overload: Unity.Reflect.IClient.ObserveSessionBegin*
  seealso:
  - linkId: Unity.Reflect.IClient.OnSessionBegin
    commentId: E:Unity.Reflect.IClient.OnSessionBegin
  nameWithType.vb: IClient.ObserveSessionBegin(String())
  fullName.vb: Unity.Reflect.IClient.ObserveSessionBegin(System.String())
  name.vb: ObserveSessionBegin(String())
- uid: Unity.Reflect.IClient.ObserveSessionEnd(System.String[])
  commentId: M:Unity.Reflect.IClient.ObserveSessionEnd(System.String[])
  id: ObserveSessionEnd(System.String[])
  parent: Unity.Reflect.IClient
  langs:
  - csharp
  - vb
  name: ObserveSessionEnd(String[])
  nameWithType: IClient.ObserveSessionEnd(String[])
  fullName: Unity.Reflect.IClient.ObserveSessionEnd(System.String[])
  type: Method
  source:
    id: ObserveSessionEnd
    path: ''
    startLine: 19361
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect
  summary: "\nStart observing the SessionEnd notification.\n"
  example: []
  syntax:
    content: void ObserveSessionEnd(params string[] sourceIds)
    parameters:
    - id: sourceIds
      type: System.String[]
      description: The source project IDs to observe. If no ID is provided, all source projects will be observed.
    content.vb: Sub ObserveSessionEnd(ParamArray sourceIds As String())
  overload: Unity.Reflect.IClient.ObserveSessionEnd*
  seealso:
  - linkId: Unity.Reflect.IClient.OnSessionEnd
    commentId: E:Unity.Reflect.IClient.OnSessionEnd
  nameWithType.vb: IClient.ObserveSessionEnd(String())
  fullName.vb: Unity.Reflect.IClient.ObserveSessionEnd(System.String())
  name.vb: ObserveSessionEnd(String())
- uid: Unity.Reflect.IClient.ObserveManifestUpdate(System.String[])
  commentId: M:Unity.Reflect.IClient.ObserveManifestUpdate(System.String[])
  id: ObserveManifestUpdate(System.String[])
  parent: Unity.Reflect.IClient
  langs:
  - csharp
  - vb
  name: ObserveManifestUpdate(String[])
  nameWithType: IClient.ObserveManifestUpdate(String[])
  fullName: Unity.Reflect.IClient.ObserveManifestUpdate(System.String[])
  type: Method
  source:
    id: ObserveManifestUpdate
    path: ''
    startLine: 19368
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect
  summary: "\nStart observing the ManifestUpdate notification.\n"
  example: []
  syntax:
    content: void ObserveManifestUpdate(params string[] sourceIds)
    parameters:
    - id: sourceIds
      type: System.String[]
      description: The source project IDs to observe. If no ID is provided, all source projects will be observed.
    content.vb: Sub ObserveManifestUpdate(ParamArray sourceIds As String())
  overload: Unity.Reflect.IClient.ObserveManifestUpdate*
  seealso:
  - linkId: Unity.Reflect.IClient.OnManifestUpdate
    commentId: E:Unity.Reflect.IClient.OnManifestUpdate
  nameWithType.vb: IClient.ObserveManifestUpdate(String())
  fullName.vb: Unity.Reflect.IClient.ObserveManifestUpdate(System.String())
  name.vb: ObserveManifestUpdate(String())
- uid: Unity.Reflect.IClient.ReleaseUnityProjectListUpdate
  commentId: M:Unity.Reflect.IClient.ReleaseUnityProjectListUpdate
  id: ReleaseUnityProjectListUpdate
  parent: Unity.Reflect.IClient
  langs:
  - csharp
  - vb
  name: ReleaseUnityProjectListUpdate()
  nameWithType: IClient.ReleaseUnityProjectListUpdate()
  fullName: Unity.Reflect.IClient.ReleaseUnityProjectListUpdate()
  type: Method
  source:
    id: ReleaseUnityProjectListUpdate
    path: ''
    startLine: 19375
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect
  summary: "\nStop observing the UnityProjectListUpdate notification.\n"
  example: []
  syntax:
    content: void ReleaseUnityProjectListUpdate()
    content.vb: Sub ReleaseUnityProjectListUpdate
  overload: Unity.Reflect.IClient.ReleaseUnityProjectListUpdate*
  seealso:
  - linkId: Unity.Reflect.IClient.OnUnityProjectListUpdate
    commentId: E:Unity.Reflect.IClient.OnUnityProjectListUpdate
- uid: Unity.Reflect.IClient.ReleaseUserUpdate
  commentId: M:Unity.Reflect.IClient.ReleaseUserUpdate
  id: ReleaseUserUpdate
  parent: Unity.Reflect.IClient
  langs:
  - csharp
  - vb
  name: ReleaseUserUpdate()
  nameWithType: IClient.ReleaseUserUpdate()
  fullName: Unity.Reflect.IClient.ReleaseUserUpdate()
  type: Method
  source:
    id: ReleaseUserUpdate
    path: ''
    startLine: 19381
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect
  summary: "\nStop observing the UserUpdate notification.\n"
  example: []
  syntax:
    content: void ReleaseUserUpdate()
    content.vb: Sub ReleaseUserUpdate
  overload: Unity.Reflect.IClient.ReleaseUserUpdate*
  seealso:
  - linkId: Unity.Reflect.IClient.OnUserUpdate
    commentId: E:Unity.Reflect.IClient.OnUserUpdate
- uid: Unity.Reflect.IClient.ReleaseSessionBegin(System.String[])
  commentId: M:Unity.Reflect.IClient.ReleaseSessionBegin(System.String[])
  id: ReleaseSessionBegin(System.String[])
  parent: Unity.Reflect.IClient
  langs:
  - csharp
  - vb
  name: ReleaseSessionBegin(String[])
  nameWithType: IClient.ReleaseSessionBegin(String[])
  fullName: Unity.Reflect.IClient.ReleaseSessionBegin(System.String[])
  type: Method
  source:
    id: ReleaseSessionBegin
    path: ''
    startLine: 19388
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect
  summary: "\nStop observing the SessionBegin notification.\n"
  example: []
  syntax:
    content: void ReleaseSessionBegin(params string[] sourceIds)
    parameters:
    - id: sourceIds
      type: System.String[]
      description: The source project IDs to release from this notification. Use the same parameters as in <xref href="Unity.Reflect.IClient.ObserveSessionBegin(System.String%5b%5d)" data-throw-if-not-resolved="false"></xref>
    content.vb: Sub ReleaseSessionBegin(ParamArray sourceIds As String())
  overload: Unity.Reflect.IClient.ReleaseSessionBegin*
  seealso:
  - linkId: Unity.Reflect.IClient.OnSessionBegin
    commentId: E:Unity.Reflect.IClient.OnSessionBegin
  nameWithType.vb: IClient.ReleaseSessionBegin(String())
  fullName.vb: Unity.Reflect.IClient.ReleaseSessionBegin(System.String())
  name.vb: ReleaseSessionBegin(String())
- uid: Unity.Reflect.IClient.ReleaseSessionEnd(System.String[])
  commentId: M:Unity.Reflect.IClient.ReleaseSessionEnd(System.String[])
  id: ReleaseSessionEnd(System.String[])
  parent: Unity.Reflect.IClient
  langs:
  - csharp
  - vb
  name: ReleaseSessionEnd(String[])
  nameWithType: IClient.ReleaseSessionEnd(String[])
  fullName: Unity.Reflect.IClient.ReleaseSessionEnd(System.String[])
  type: Method
  source:
    id: ReleaseSessionEnd
    path: ''
    startLine: 19395
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect
  summary: "\nStop observing the SessionEnd notification.\n"
  example: []
  syntax:
    content: void ReleaseSessionEnd(params string[] sourceIds)
    parameters:
    - id: sourceIds
      type: System.String[]
      description: The source project IDs to release from this notification. Use the same parameters as in <xref href="Unity.Reflect.IClient.ObserveSessionEnd(System.String%5b%5d)" data-throw-if-not-resolved="false"></xref>
    content.vb: Sub ReleaseSessionEnd(ParamArray sourceIds As String())
  overload: Unity.Reflect.IClient.ReleaseSessionEnd*
  seealso:
  - linkId: Unity.Reflect.IClient.OnSessionEnd
    commentId: E:Unity.Reflect.IClient.OnSessionEnd
  nameWithType.vb: IClient.ReleaseSessionEnd(String())
  fullName.vb: Unity.Reflect.IClient.ReleaseSessionEnd(System.String())
  name.vb: ReleaseSessionEnd(String())
- uid: Unity.Reflect.IClient.ReleaseManifestUpdate(System.String[])
  commentId: M:Unity.Reflect.IClient.ReleaseManifestUpdate(System.String[])
  id: ReleaseManifestUpdate(System.String[])
  parent: Unity.Reflect.IClient
  langs:
  - csharp
  - vb
  name: ReleaseManifestUpdate(String[])
  nameWithType: IClient.ReleaseManifestUpdate(String[])
  fullName: Unity.Reflect.IClient.ReleaseManifestUpdate(System.String[])
  type: Method
  source:
    id: ReleaseManifestUpdate
    path: ''
    startLine: 19402
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect
  summary: "\nStop observing the ManifestUpdate notification.\n"
  example: []
  syntax:
    content: void ReleaseManifestUpdate(params string[] sourceIds)
    parameters:
    - id: sourceIds
      type: System.String[]
      description: The source project IDs to release from this notification. Use the same parameters as in <xref href="Unity.Reflect.IClient.ObserveManifestUpdate(System.String%5b%5d)" data-throw-if-not-resolved="false"></xref>
    content.vb: Sub ReleaseManifestUpdate(ParamArray sourceIds As String())
  overload: Unity.Reflect.IClient.ReleaseManifestUpdate*
  seealso:
  - linkId: Unity.Reflect.IClient.OnManifestUpdate
    commentId: E:Unity.Reflect.IClient.OnManifestUpdate
  nameWithType.vb: IClient.ReleaseManifestUpdate(String())
  fullName.vb: Unity.Reflect.IClient.ReleaseManifestUpdate(System.String())
  name.vb: ReleaseManifestUpdate(String())
- uid: Unity.Reflect.IClient.Connected
  commentId: P:Unity.Reflect.IClient.Connected
  id: Connected
  parent: Unity.Reflect.IClient
  langs:
  - csharp
  - vb
  name: Connected
  nameWithType: IClient.Connected
  fullName: Unity.Reflect.IClient.Connected
  type: Property
  source:
    id: Connected
    path: ''
    startLine: 19408
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect
  summary: "\nIndicates whether the client is connected to a SyncServer.\n"
  example: []
  syntax:
    content: bool Connected { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property Connected As Boolean
  overload: Unity.Reflect.IClient.Connected*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Unity.Reflect.IClient.Connect
  commentId: M:Unity.Reflect.IClient.Connect
  id: Connect
  parent: Unity.Reflect.IClient
  langs:
  - csharp
  - vb
  name: Connect()
  nameWithType: IClient.Connect()
  fullName: Unity.Reflect.IClient.Connect()
  type: Method
  source:
    id: Connect
    path: ''
    startLine: 19414
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect
  summary: "\nTries to connect to the SyncServer.\n"
  example: []
  syntax:
    content: void Connect()
    content.vb: Sub Connect
  overload: Unity.Reflect.IClient.Connect*
  exceptions:
  - type: Unity.Reflect.ConnectionException
    commentId: T:Unity.Reflect.ConnectionException
    description: If the connection with the SyncServer fails
- uid: Unity.Reflect.IClient.Disconnect(System.Boolean)
  commentId: M:Unity.Reflect.IClient.Disconnect(System.Boolean)
  id: Disconnect(System.Boolean)
  parent: Unity.Reflect.IClient
  langs:
  - csharp
  - vb
  name: Disconnect(Boolean)
  nameWithType: IClient.Disconnect(Boolean)
  fullName: Unity.Reflect.IClient.Disconnect(System.Boolean)
  type: Method
  source:
    id: Disconnect
    path: ''
    startLine: 19420
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect
  summary: "\nDisconnects from the SyncServer.\n"
  example: []
  syntax:
    content: void Disconnect(bool shutdownChannel = true)
    parameters:
    - id: shutdownChannel
      type: System.Boolean
      description: ''
    content.vb: Sub Disconnect(shutdownChannel As Boolean = True)
  overload: Unity.Reflect.IClient.Disconnect*
- uid: Unity.Reflect.IClient.OnConnectionStatusChanged
  commentId: E:Unity.Reflect.IClient.OnConnectionStatusChanged
  id: OnConnectionStatusChanged
  parent: Unity.Reflect.IClient
  langs:
  - csharp
  - vb
  name: OnConnectionStatusChanged
  nameWithType: IClient.OnConnectionStatusChanged
  fullName: Unity.Reflect.IClient.OnConnectionStatusChanged
  type: Event
  source:
    id: OnConnectionStatusChanged
    path: ''
    startLine: 39462
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect
  summary: "\nThis event is triggered whenever the connection status changes.\n"
  example: []
  syntax:
    content: event Action<ConnectionStatus, string> OnConnectionStatusChanged
    return:
      type: System.Action{Unity.Reflect.ConnectionStatus,System.String}
    content.vb: Event OnConnectionStatusChanged As Action(Of ConnectionStatus, String)
- uid: Unity.Reflect.IClient.OnUnityProjectListUpdate
  commentId: E:Unity.Reflect.IClient.OnUnityProjectListUpdate
  id: OnUnityProjectListUpdate
  parent: Unity.Reflect.IClient
  langs:
  - csharp
  - vb
  name: OnUnityProjectListUpdate
  nameWithType: IClient.OnUnityProjectListUpdate
  fullName: Unity.Reflect.IClient.OnUnityProjectListUpdate
  type: Event
  source:
    id: OnUnityProjectListUpdate
    path: ''
    startLine: 39469
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect
  summary: "\nThis event is triggered whenever the client receives an UnityProjectListUpdate notification from the SyncServer.\nAdding a callback to this event does not start the observation process. You need to use <xref href=\"Unity.Reflect.IClient.ObserveUnityProjectListUpdate\" data-throw-if-not-resolved=\"false\"></xref> for this.\n"
  example: []
  syntax:
    content: event Action OnUnityProjectListUpdate
    return:
      type: System.Action
    content.vb: Event OnUnityProjectListUpdate As Action
- uid: Unity.Reflect.IClient.OnUserUpdate
  commentId: E:Unity.Reflect.IClient.OnUserUpdate
  id: OnUserUpdate
  parent: Unity.Reflect.IClient
  langs:
  - csharp
  - vb
  name: OnUserUpdate
  nameWithType: IClient.OnUserUpdate
  fullName: Unity.Reflect.IClient.OnUserUpdate
  type: Event
  source:
    id: OnUserUpdate
    path: ''
    startLine: 39475
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect
  summary: "\nThis event is triggered whenever the client receives an UserUpdate notification from the SyncServer.\nAdding a callback to this event does not start the observation process. You need to use <xref href=\"Unity.Reflect.IClient.ObserveUserUpdate\" data-throw-if-not-resolved=\"false\"></xref> for this.\n"
  example: []
  syntax:
    content: event Action OnUserUpdate
    return:
      type: System.Action
    content.vb: Event OnUserUpdate As Action
- uid: Unity.Reflect.IClient.OnSessionBegin
  commentId: E:Unity.Reflect.IClient.OnSessionBegin
  id: OnSessionBegin
  parent: Unity.Reflect.IClient
  langs:
  - csharp
  - vb
  name: OnSessionBegin
  nameWithType: IClient.OnSessionBegin
  fullName: Unity.Reflect.IClient.OnSessionBegin
  type: Event
  source:
    id: OnSessionBegin
    path: ''
    startLine: 39481
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect
  summary: "\nThis event is triggered whenever the client receives a SessionBegin notification from the SyncServer. The string parameter is the source ID of the concerned project.\n"
  remarks: Adding a callback to this event does not start the observation process. You need to use <xref href="Unity.Reflect.IClient.ObserveSessionBegin(System.String%5b%5d)" data-throw-if-not-resolved="false"></xref> for this.
  example: []
  syntax:
    content: event Action<string> OnSessionBegin
    return:
      type: System.Action{System.String}
    content.vb: Event OnSessionBegin As Action(Of String)
- uid: Unity.Reflect.IClient.OnSessionEnd
  commentId: E:Unity.Reflect.IClient.OnSessionEnd
  id: OnSessionEnd
  parent: Unity.Reflect.IClient
  langs:
  - csharp
  - vb
  name: OnSessionEnd
  nameWithType: IClient.OnSessionEnd
  fullName: Unity.Reflect.IClient.OnSessionEnd
  type: Event
  source:
    id: OnSessionEnd
    path: ''
    startLine: 39487
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect
  summary: "\nThis event is triggered whenever the client receives a SessionEnd notification from the SyncServer. The string parameter is the source ID of the concerned project.\n"
  remarks: Adding a callback to this event does not start the observation process. You need to use <xref href="Unity.Reflect.IClient.ObserveSessionEnd(System.String%5b%5d)" data-throw-if-not-resolved="false"></xref> for this.
  example: []
  syntax:
    content: event Action<string> OnSessionEnd
    return:
      type: System.Action{System.String}
    content.vb: Event OnSessionEnd As Action(Of String)
- uid: Unity.Reflect.IClient.OnManifestUpdate
  commentId: E:Unity.Reflect.IClient.OnManifestUpdate
  id: OnManifestUpdate
  parent: Unity.Reflect.IClient
  langs:
  - csharp
  - vb
  name: OnManifestUpdate
  nameWithType: IClient.OnManifestUpdate
  fullName: Unity.Reflect.IClient.OnManifestUpdate
  type: Event
  source:
    id: OnManifestUpdate
    path: ''
    startLine: 39493
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect
  summary: "\nThis event is triggered whenever the client receives a ManifestUpdate notification from the SyncServer. The string parameter is the source ID of the concerned project.\n"
  remarks: Adding a callback to this event does not start the observation process. You need to use <xref href="Unity.Reflect.IClient.ObserveManifestUpdate(System.String%5b%5d)" data-throw-if-not-resolved="false"></xref> for this.
  example: []
  syntax:
    content: event Action<string> OnManifestUpdate
    return:
      type: System.Action{System.String}
    content.vb: Event OnManifestUpdate As Action(Of String)
- uid: Unity.Reflect.IClient.ObserveUnityProjectListUpdate
  commentId: M:Unity.Reflect.IClient.ObserveUnityProjectListUpdate
  id: ObserveUnityProjectListUpdate
  parent: Unity.Reflect.IClient
  langs:
  - csharp
  - vb
  name: ObserveUnityProjectListUpdate()
  nameWithType: IClient.ObserveUnityProjectListUpdate()
  fullName: Unity.Reflect.IClient.ObserveUnityProjectListUpdate()
  type: Method
  source:
    id: ObserveUnityProjectListUpdate
    path: ''
    startLine: 39500
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect
  summary: "\nStart observing the UnityProjectListUpdate notification.\n"
  example: []
  syntax:
    content: void ObserveUnityProjectListUpdate()
    content.vb: Sub ObserveUnityProjectListUpdate
  overload: Unity.Reflect.IClient.ObserveUnityProjectListUpdate*
  seealso:
  - linkId: Unity.Reflect.IClient.OnUnityProjectListUpdate
    commentId: E:Unity.Reflect.IClient.OnUnityProjectListUpdate
- uid: Unity.Reflect.IClient.ObserveUserUpdate
  commentId: M:Unity.Reflect.IClient.ObserveUserUpdate
  id: ObserveUserUpdate
  parent: Unity.Reflect.IClient
  langs:
  - csharp
  - vb
  name: ObserveUserUpdate()
  nameWithType: IClient.ObserveUserUpdate()
  fullName: Unity.Reflect.IClient.ObserveUserUpdate()
  type: Method
  source:
    id: ObserveUserUpdate
    path: ''
    startLine: 39506
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect
  summary: "\nStart observing the UserUpdate notification.\n"
  example: []
  syntax:
    content: void ObserveUserUpdate()
    content.vb: Sub ObserveUserUpdate
  overload: Unity.Reflect.IClient.ObserveUserUpdate*
  seealso:
  - linkId: Unity.Reflect.IClient.OnUserUpdate
    commentId: E:Unity.Reflect.IClient.OnUserUpdate
- uid: Unity.Reflect.IClient.ObserveSessionBegin(System.String[])
  commentId: M:Unity.Reflect.IClient.ObserveSessionBegin(System.String[])
  id: ObserveSessionBegin(System.String[])
  parent: Unity.Reflect.IClient
  langs:
  - csharp
  - vb
  name: ObserveSessionBegin(String[])
  nameWithType: IClient.ObserveSessionBegin(String[])
  fullName: Unity.Reflect.IClient.ObserveSessionBegin(System.String[])
  type: Method
  source:
    id: ObserveSessionBegin
    path: ''
    startLine: 39513
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect
  summary: "\nStart observing the SessionBegin notification.\n"
  example: []
  syntax:
    content: void ObserveSessionBegin(params string[] sourceIds)
    parameters:
    - id: sourceIds
      type: System.String[]
      description: The source project IDs to observe. If no ID is provided, all source projects will be observed.
    content.vb: Sub ObserveSessionBegin(ParamArray sourceIds As String())
  overload: Unity.Reflect.IClient.ObserveSessionBegin*
  seealso:
  - linkId: Unity.Reflect.IClient.OnSessionBegin
    commentId: E:Unity.Reflect.IClient.OnSessionBegin
  nameWithType.vb: IClient.ObserveSessionBegin(String())
  fullName.vb: Unity.Reflect.IClient.ObserveSessionBegin(System.String())
  name.vb: ObserveSessionBegin(String())
- uid: Unity.Reflect.IClient.ObserveSessionEnd(System.String[])
  commentId: M:Unity.Reflect.IClient.ObserveSessionEnd(System.String[])
  id: ObserveSessionEnd(System.String[])
  parent: Unity.Reflect.IClient
  langs:
  - csharp
  - vb
  name: ObserveSessionEnd(String[])
  nameWithType: IClient.ObserveSessionEnd(String[])
  fullName: Unity.Reflect.IClient.ObserveSessionEnd(System.String[])
  type: Method
  source:
    id: ObserveSessionEnd
    path: ''
    startLine: 39520
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect
  summary: "\nStart observing the SessionEnd notification.\n"
  example: []
  syntax:
    content: void ObserveSessionEnd(params string[] sourceIds)
    parameters:
    - id: sourceIds
      type: System.String[]
      description: The source project IDs to observe. If no ID is provided, all source projects will be observed.
    content.vb: Sub ObserveSessionEnd(ParamArray sourceIds As String())
  overload: Unity.Reflect.IClient.ObserveSessionEnd*
  seealso:
  - linkId: Unity.Reflect.IClient.OnSessionEnd
    commentId: E:Unity.Reflect.IClient.OnSessionEnd
  nameWithType.vb: IClient.ObserveSessionEnd(String())
  fullName.vb: Unity.Reflect.IClient.ObserveSessionEnd(System.String())
  name.vb: ObserveSessionEnd(String())
- uid: Unity.Reflect.IClient.ObserveManifestUpdate(System.String[])
  commentId: M:Unity.Reflect.IClient.ObserveManifestUpdate(System.String[])
  id: ObserveManifestUpdate(System.String[])
  parent: Unity.Reflect.IClient
  langs:
  - csharp
  - vb
  name: ObserveManifestUpdate(String[])
  nameWithType: IClient.ObserveManifestUpdate(String[])
  fullName: Unity.Reflect.IClient.ObserveManifestUpdate(System.String[])
  type: Method
  source:
    id: ObserveManifestUpdate
    path: ''
    startLine: 39527
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect
  summary: "\nStart observing the ManifestUpdate notification.\n"
  example: []
  syntax:
    content: void ObserveManifestUpdate(params string[] sourceIds)
    parameters:
    - id: sourceIds
      type: System.String[]
      description: The source project IDs to observe. If no ID is provided, all source projects will be observed.
    content.vb: Sub ObserveManifestUpdate(ParamArray sourceIds As String())
  overload: Unity.Reflect.IClient.ObserveManifestUpdate*
  seealso:
  - linkId: Unity.Reflect.IClient.OnManifestUpdate
    commentId: E:Unity.Reflect.IClient.OnManifestUpdate
  nameWithType.vb: IClient.ObserveManifestUpdate(String())
  fullName.vb: Unity.Reflect.IClient.ObserveManifestUpdate(System.String())
  name.vb: ObserveManifestUpdate(String())
- uid: Unity.Reflect.IClient.ReleaseUnityProjectListUpdate
  commentId: M:Unity.Reflect.IClient.ReleaseUnityProjectListUpdate
  id: ReleaseUnityProjectListUpdate
  parent: Unity.Reflect.IClient
  langs:
  - csharp
  - vb
  name: ReleaseUnityProjectListUpdate()
  nameWithType: IClient.ReleaseUnityProjectListUpdate()
  fullName: Unity.Reflect.IClient.ReleaseUnityProjectListUpdate()
  type: Method
  source:
    id: ReleaseUnityProjectListUpdate
    path: ''
    startLine: 39534
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect
  summary: "\nStop observing the UnityProjectListUpdate notification.\n"
  example: []
  syntax:
    content: void ReleaseUnityProjectListUpdate()
    content.vb: Sub ReleaseUnityProjectListUpdate
  overload: Unity.Reflect.IClient.ReleaseUnityProjectListUpdate*
  seealso:
  - linkId: Unity.Reflect.IClient.OnUnityProjectListUpdate
    commentId: E:Unity.Reflect.IClient.OnUnityProjectListUpdate
- uid: Unity.Reflect.IClient.ReleaseUserUpdate
  commentId: M:Unity.Reflect.IClient.ReleaseUserUpdate
  id: ReleaseUserUpdate
  parent: Unity.Reflect.IClient
  langs:
  - csharp
  - vb
  name: ReleaseUserUpdate()
  nameWithType: IClient.ReleaseUserUpdate()
  fullName: Unity.Reflect.IClient.ReleaseUserUpdate()
  type: Method
  source:
    id: ReleaseUserUpdate
    path: ''
    startLine: 39540
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect
  summary: "\nStop observing the UserUpdate notification.\n"
  example: []
  syntax:
    content: void ReleaseUserUpdate()
    content.vb: Sub ReleaseUserUpdate
  overload: Unity.Reflect.IClient.ReleaseUserUpdate*
  seealso:
  - linkId: Unity.Reflect.IClient.OnUserUpdate
    commentId: E:Unity.Reflect.IClient.OnUserUpdate
- uid: Unity.Reflect.IClient.ReleaseSessionBegin(System.String[])
  commentId: M:Unity.Reflect.IClient.ReleaseSessionBegin(System.String[])
  id: ReleaseSessionBegin(System.String[])
  parent: Unity.Reflect.IClient
  langs:
  - csharp
  - vb
  name: ReleaseSessionBegin(String[])
  nameWithType: IClient.ReleaseSessionBegin(String[])
  fullName: Unity.Reflect.IClient.ReleaseSessionBegin(System.String[])
  type: Method
  source:
    id: ReleaseSessionBegin
    path: ''
    startLine: 39547
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect
  summary: "\nStop observing the SessionBegin notification.\n"
  example: []
  syntax:
    content: void ReleaseSessionBegin(params string[] sourceIds)
    parameters:
    - id: sourceIds
      type: System.String[]
      description: The source project IDs to release from this notification. Use the same parameters as in <xref href="Unity.Reflect.IClient.ObserveSessionBegin(System.String%5b%5d)" data-throw-if-not-resolved="false"></xref>
    content.vb: Sub ReleaseSessionBegin(ParamArray sourceIds As String())
  overload: Unity.Reflect.IClient.ReleaseSessionBegin*
  seealso:
  - linkId: Unity.Reflect.IClient.OnSessionBegin
    commentId: E:Unity.Reflect.IClient.OnSessionBegin
  nameWithType.vb: IClient.ReleaseSessionBegin(String())
  fullName.vb: Unity.Reflect.IClient.ReleaseSessionBegin(System.String())
  name.vb: ReleaseSessionBegin(String())
- uid: Unity.Reflect.IClient.ReleaseSessionEnd(System.String[])
  commentId: M:Unity.Reflect.IClient.ReleaseSessionEnd(System.String[])
  id: ReleaseSessionEnd(System.String[])
  parent: Unity.Reflect.IClient
  langs:
  - csharp
  - vb
  name: ReleaseSessionEnd(String[])
  nameWithType: IClient.ReleaseSessionEnd(String[])
  fullName: Unity.Reflect.IClient.ReleaseSessionEnd(System.String[])
  type: Method
  source:
    id: ReleaseSessionEnd
    path: ''
    startLine: 39554
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect
  summary: "\nStop observing the SessionEnd notification.\n"
  example: []
  syntax:
    content: void ReleaseSessionEnd(params string[] sourceIds)
    parameters:
    - id: sourceIds
      type: System.String[]
      description: The source project IDs to release from this notification. Use the same parameters as in <xref href="Unity.Reflect.IClient.ObserveSessionEnd(System.String%5b%5d)" data-throw-if-not-resolved="false"></xref>
    content.vb: Sub ReleaseSessionEnd(ParamArray sourceIds As String())
  overload: Unity.Reflect.IClient.ReleaseSessionEnd*
  seealso:
  - linkId: Unity.Reflect.IClient.OnSessionEnd
    commentId: E:Unity.Reflect.IClient.OnSessionEnd
  nameWithType.vb: IClient.ReleaseSessionEnd(String())
  fullName.vb: Unity.Reflect.IClient.ReleaseSessionEnd(System.String())
  name.vb: ReleaseSessionEnd(String())
- uid: Unity.Reflect.IClient.ReleaseManifestUpdate(System.String[])
  commentId: M:Unity.Reflect.IClient.ReleaseManifestUpdate(System.String[])
  id: ReleaseManifestUpdate(System.String[])
  parent: Unity.Reflect.IClient
  langs:
  - csharp
  - vb
  name: ReleaseManifestUpdate(String[])
  nameWithType: IClient.ReleaseManifestUpdate(String[])
  fullName: Unity.Reflect.IClient.ReleaseManifestUpdate(System.String[])
  type: Method
  source:
    id: ReleaseManifestUpdate
    path: ''
    startLine: 39561
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect
  summary: "\nStop observing the ManifestUpdate notification.\n"
  example: []
  syntax:
    content: void ReleaseManifestUpdate(params string[] sourceIds)
    parameters:
    - id: sourceIds
      type: System.String[]
      description: The source project IDs to release from this notification. Use the same parameters as in <xref href="Unity.Reflect.IClient.ObserveManifestUpdate(System.String%5b%5d)" data-throw-if-not-resolved="false"></xref>
    content.vb: Sub ReleaseManifestUpdate(ParamArray sourceIds As String())
  overload: Unity.Reflect.IClient.ReleaseManifestUpdate*
  seealso:
  - linkId: Unity.Reflect.IClient.OnManifestUpdate
    commentId: E:Unity.Reflect.IClient.OnManifestUpdate
  nameWithType.vb: IClient.ReleaseManifestUpdate(String())
  fullName.vb: Unity.Reflect.IClient.ReleaseManifestUpdate(System.String())
  name.vb: ReleaseManifestUpdate(String())
- uid: Unity.Reflect.IClient.Connected
  commentId: P:Unity.Reflect.IClient.Connected
  id: Connected
  parent: Unity.Reflect.IClient
  langs:
  - csharp
  - vb
  name: Connected
  nameWithType: IClient.Connected
  fullName: Unity.Reflect.IClient.Connected
  type: Property
  source:
    id: Connected
    path: ''
    startLine: 39567
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect
  summary: "\nIndicates whether the client is connected to a SyncServer.\n"
  example: []
  syntax:
    content: bool Connected { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property Connected As Boolean
  overload: Unity.Reflect.IClient.Connected*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Unity.Reflect.IClient.Connect
  commentId: M:Unity.Reflect.IClient.Connect
  id: Connect
  parent: Unity.Reflect.IClient
  langs:
  - csharp
  - vb
  name: Connect()
  nameWithType: IClient.Connect()
  fullName: Unity.Reflect.IClient.Connect()
  type: Method
  source:
    id: Connect
    path: ''
    startLine: 39573
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect
  summary: "\nTries to connect to the SyncServer.\n"
  example: []
  syntax:
    content: void Connect()
    content.vb: Sub Connect
  overload: Unity.Reflect.IClient.Connect*
  exceptions:
  - type: Unity.Reflect.ConnectionException
    commentId: T:Unity.Reflect.ConnectionException
    description: If the connection with the SyncServer fails
- uid: Unity.Reflect.IClient.Disconnect(System.Boolean)
  commentId: M:Unity.Reflect.IClient.Disconnect(System.Boolean)
  id: Disconnect(System.Boolean)
  parent: Unity.Reflect.IClient
  langs:
  - csharp
  - vb
  name: Disconnect(Boolean)
  nameWithType: IClient.Disconnect(Boolean)
  fullName: Unity.Reflect.IClient.Disconnect(System.Boolean)
  type: Method
  source:
    id: Disconnect
    path: ''
    startLine: 39579
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect
  summary: "\nDisconnects from the SyncServer.\n"
  example: []
  syntax:
    content: void Disconnect(bool shutdownChannel = true)
    parameters:
    - id: shutdownChannel
      type: System.Boolean
      description: ''
    content.vb: Sub Disconnect(shutdownChannel As Boolean = True)
  overload: Unity.Reflect.IClient.Disconnect*
references:
- uid: Unity.Reflect
  commentId: N:Unity.Reflect
  name: Unity.Reflect
  nameWithType: Unity.Reflect
  fullName: Unity.Reflect
- uid: System.Action{Unity.Reflect.ConnectionStatus,System.String}
  commentId: T:System.Action{Unity.Reflect.ConnectionStatus,System.String}
  parent: System
  definition: System.Action`2
  name: Action<ConnectionStatus, String>
  nameWithType: Action<ConnectionStatus, String>
  fullName: System.Action<Unity.Reflect.ConnectionStatus, System.String>
  nameWithType.vb: Action(Of ConnectionStatus, String)
  fullName.vb: System.Action(Of Unity.Reflect.ConnectionStatus, System.String)
  name.vb: Action(Of ConnectionStatus, String)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Unity.Reflect.ConnectionStatus
    name: ConnectionStatus
    nameWithType: ConnectionStatus
    fullName: Unity.Reflect.ConnectionStatus
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Unity.Reflect.ConnectionStatus
    name: ConnectionStatus
    nameWithType: ConnectionStatus
    fullName: Unity.Reflect.ConnectionStatus
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`2
  commentId: T:System.Action`2
  isExternal: true
  name: Action<T1, T2>
  nameWithType: Action<T1, T2>
  fullName: System.Action<T1, T2>
  nameWithType.vb: Action(Of T1, T2)
  fullName.vb: System.Action(Of T1, T2)
  name.vb: Action(Of T1, T2)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Unity.Reflect.IClient.ObserveUnityProjectListUpdate
  commentId: M:Unity.Reflect.IClient.ObserveUnityProjectListUpdate
  parent: Unity.Reflect.IClient
  name: ObserveUnityProjectListUpdate()
  nameWithType: IClient.ObserveUnityProjectListUpdate()
  fullName: Unity.Reflect.IClient.ObserveUnityProjectListUpdate()
  spec.csharp:
  - uid: Unity.Reflect.IClient.ObserveUnityProjectListUpdate
    name: ObserveUnityProjectListUpdate
    nameWithType: IClient.ObserveUnityProjectListUpdate
    fullName: Unity.Reflect.IClient.ObserveUnityProjectListUpdate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Unity.Reflect.IClient.ObserveUnityProjectListUpdate
    name: ObserveUnityProjectListUpdate
    nameWithType: IClient.ObserveUnityProjectListUpdate
    fullName: Unity.Reflect.IClient.ObserveUnityProjectListUpdate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action
  commentId: T:System.Action
  parent: System
  isExternal: true
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: Unity.Reflect.IClient
  commentId: T:Unity.Reflect.IClient
  parent: Unity.Reflect
  name: IClient
  nameWithType: IClient
  fullName: Unity.Reflect.IClient
- uid: Unity.Reflect.IClient.ObserveUserUpdate
  commentId: M:Unity.Reflect.IClient.ObserveUserUpdate
  parent: Unity.Reflect.IClient
  name: ObserveUserUpdate()
  nameWithType: IClient.ObserveUserUpdate()
  fullName: Unity.Reflect.IClient.ObserveUserUpdate()
  spec.csharp:
  - uid: Unity.Reflect.IClient.ObserveUserUpdate
    name: ObserveUserUpdate
    nameWithType: IClient.ObserveUserUpdate
    fullName: Unity.Reflect.IClient.ObserveUserUpdate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Unity.Reflect.IClient.ObserveUserUpdate
    name: ObserveUserUpdate
    nameWithType: IClient.ObserveUserUpdate
    fullName: Unity.Reflect.IClient.ObserveUserUpdate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Unity.Reflect.IClient.ObserveSessionBegin(System.String[])
  commentId: M:Unity.Reflect.IClient.ObserveSessionBegin(System.String[])
  parent: Unity.Reflect.IClient
  isExternal: true
  name: ObserveSessionBegin(String[])
  nameWithType: IClient.ObserveSessionBegin(String[])
  fullName: Unity.Reflect.IClient.ObserveSessionBegin(System.String[])
  nameWithType.vb: IClient.ObserveSessionBegin(String())
  fullName.vb: Unity.Reflect.IClient.ObserveSessionBegin(System.String())
  name.vb: ObserveSessionBegin(String())
  spec.csharp:
  - uid: Unity.Reflect.IClient.ObserveSessionBegin(System.String[])
    name: ObserveSessionBegin
    nameWithType: IClient.ObserveSessionBegin
    fullName: Unity.Reflect.IClient.ObserveSessionBegin
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Unity.Reflect.IClient.ObserveSessionBegin(System.String[])
    name: ObserveSessionBegin
    nameWithType: IClient.ObserveSessionBegin
    fullName: Unity.Reflect.IClient.ObserveSessionBegin
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action{System.String}
  commentId: T:System.Action{System.String}
  parent: System
  definition: System.Action`1
  name: Action<String>
  nameWithType: Action<String>
  fullName: System.Action<System.String>
  nameWithType.vb: Action(Of String)
  fullName.vb: System.Action(Of System.String)
  name.vb: Action(Of String)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Unity.Reflect.IClient.ObserveSessionEnd(System.String[])
  commentId: M:Unity.Reflect.IClient.ObserveSessionEnd(System.String[])
  parent: Unity.Reflect.IClient
  isExternal: true
  name: ObserveSessionEnd(String[])
  nameWithType: IClient.ObserveSessionEnd(String[])
  fullName: Unity.Reflect.IClient.ObserveSessionEnd(System.String[])
  nameWithType.vb: IClient.ObserveSessionEnd(String())
  fullName.vb: Unity.Reflect.IClient.ObserveSessionEnd(System.String())
  name.vb: ObserveSessionEnd(String())
  spec.csharp:
  - uid: Unity.Reflect.IClient.ObserveSessionEnd(System.String[])
    name: ObserveSessionEnd
    nameWithType: IClient.ObserveSessionEnd
    fullName: Unity.Reflect.IClient.ObserveSessionEnd
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Unity.Reflect.IClient.ObserveSessionEnd(System.String[])
    name: ObserveSessionEnd
    nameWithType: IClient.ObserveSessionEnd
    fullName: Unity.Reflect.IClient.ObserveSessionEnd
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Unity.Reflect.IClient.ObserveManifestUpdate(System.String[])
  commentId: M:Unity.Reflect.IClient.ObserveManifestUpdate(System.String[])
  parent: Unity.Reflect.IClient
  isExternal: true
  name: ObserveManifestUpdate(String[])
  nameWithType: IClient.ObserveManifestUpdate(String[])
  fullName: Unity.Reflect.IClient.ObserveManifestUpdate(System.String[])
  nameWithType.vb: IClient.ObserveManifestUpdate(String())
  fullName.vb: Unity.Reflect.IClient.ObserveManifestUpdate(System.String())
  name.vb: ObserveManifestUpdate(String())
  spec.csharp:
  - uid: Unity.Reflect.IClient.ObserveManifestUpdate(System.String[])
    name: ObserveManifestUpdate
    nameWithType: IClient.ObserveManifestUpdate
    fullName: Unity.Reflect.IClient.ObserveManifestUpdate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Unity.Reflect.IClient.ObserveManifestUpdate(System.String[])
    name: ObserveManifestUpdate
    nameWithType: IClient.ObserveManifestUpdate
    fullName: Unity.Reflect.IClient.ObserveManifestUpdate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Unity.Reflect.IClient.OnUnityProjectListUpdate
  commentId: E:Unity.Reflect.IClient.OnUnityProjectListUpdate
  parent: Unity.Reflect.IClient
  name: OnUnityProjectListUpdate
  nameWithType: IClient.OnUnityProjectListUpdate
  fullName: Unity.Reflect.IClient.OnUnityProjectListUpdate
- uid: Unity.Reflect.IClient.ObserveUnityProjectListUpdate*
  commentId: Overload:Unity.Reflect.IClient.ObserveUnityProjectListUpdate
  name: ObserveUnityProjectListUpdate
  nameWithType: IClient.ObserveUnityProjectListUpdate
  fullName: Unity.Reflect.IClient.ObserveUnityProjectListUpdate
- uid: Unity.Reflect.IClient.OnUserUpdate
  commentId: E:Unity.Reflect.IClient.OnUserUpdate
  parent: Unity.Reflect.IClient
  name: OnUserUpdate
  nameWithType: IClient.OnUserUpdate
  fullName: Unity.Reflect.IClient.OnUserUpdate
- uid: Unity.Reflect.IClient.ObserveUserUpdate*
  commentId: Overload:Unity.Reflect.IClient.ObserveUserUpdate
  name: ObserveUserUpdate
  nameWithType: IClient.ObserveUserUpdate
  fullName: Unity.Reflect.IClient.ObserveUserUpdate
- uid: Unity.Reflect.IClient.OnSessionBegin
  commentId: E:Unity.Reflect.IClient.OnSessionBegin
  parent: Unity.Reflect.IClient
  name: OnSessionBegin
  nameWithType: IClient.OnSessionBegin
  fullName: Unity.Reflect.IClient.OnSessionBegin
- uid: Unity.Reflect.IClient.ObserveSessionBegin*
  commentId: Overload:Unity.Reflect.IClient.ObserveSessionBegin
  name: ObserveSessionBegin
  nameWithType: IClient.ObserveSessionBegin
  fullName: Unity.Reflect.IClient.ObserveSessionBegin
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Unity.Reflect.IClient.OnSessionEnd
  commentId: E:Unity.Reflect.IClient.OnSessionEnd
  parent: Unity.Reflect.IClient
  name: OnSessionEnd
  nameWithType: IClient.OnSessionEnd
  fullName: Unity.Reflect.IClient.OnSessionEnd
- uid: Unity.Reflect.IClient.ObserveSessionEnd*
  commentId: Overload:Unity.Reflect.IClient.ObserveSessionEnd
  name: ObserveSessionEnd
  nameWithType: IClient.ObserveSessionEnd
  fullName: Unity.Reflect.IClient.ObserveSessionEnd
- uid: Unity.Reflect.IClient.OnManifestUpdate
  commentId: E:Unity.Reflect.IClient.OnManifestUpdate
  parent: Unity.Reflect.IClient
  name: OnManifestUpdate
  nameWithType: IClient.OnManifestUpdate
  fullName: Unity.Reflect.IClient.OnManifestUpdate
- uid: Unity.Reflect.IClient.ObserveManifestUpdate*
  commentId: Overload:Unity.Reflect.IClient.ObserveManifestUpdate
  name: ObserveManifestUpdate
  nameWithType: IClient.ObserveManifestUpdate
  fullName: Unity.Reflect.IClient.ObserveManifestUpdate
- uid: Unity.Reflect.IClient.ReleaseUnityProjectListUpdate*
  commentId: Overload:Unity.Reflect.IClient.ReleaseUnityProjectListUpdate
  name: ReleaseUnityProjectListUpdate
  nameWithType: IClient.ReleaseUnityProjectListUpdate
  fullName: Unity.Reflect.IClient.ReleaseUnityProjectListUpdate
- uid: Unity.Reflect.IClient.ReleaseUserUpdate*
  commentId: Overload:Unity.Reflect.IClient.ReleaseUserUpdate
  name: ReleaseUserUpdate
  nameWithType: IClient.ReleaseUserUpdate
  fullName: Unity.Reflect.IClient.ReleaseUserUpdate
- uid: Unity.Reflect.IClient.ReleaseSessionBegin*
  commentId: Overload:Unity.Reflect.IClient.ReleaseSessionBegin
  name: ReleaseSessionBegin
  nameWithType: IClient.ReleaseSessionBegin
  fullName: Unity.Reflect.IClient.ReleaseSessionBegin
- uid: Unity.Reflect.IClient.ReleaseSessionEnd*
  commentId: Overload:Unity.Reflect.IClient.ReleaseSessionEnd
  name: ReleaseSessionEnd
  nameWithType: IClient.ReleaseSessionEnd
  fullName: Unity.Reflect.IClient.ReleaseSessionEnd
- uid: Unity.Reflect.IClient.ReleaseManifestUpdate*
  commentId: Overload:Unity.Reflect.IClient.ReleaseManifestUpdate
  name: ReleaseManifestUpdate
  nameWithType: IClient.ReleaseManifestUpdate
  fullName: Unity.Reflect.IClient.ReleaseManifestUpdate
- uid: Unity.Reflect.IClient.Connected*
  commentId: Overload:Unity.Reflect.IClient.Connected
  name: Connected
  nameWithType: IClient.Connected
  fullName: Unity.Reflect.IClient.Connected
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Unity.Reflect.ConnectionException
  commentId: T:Unity.Reflect.ConnectionException
  name: ConnectionException
  nameWithType: ConnectionException
  fullName: Unity.Reflect.ConnectionException
- uid: Unity.Reflect.IClient.Connect*
  commentId: Overload:Unity.Reflect.IClient.Connect
  name: Connect
  nameWithType: IClient.Connect
  fullName: Unity.Reflect.IClient.Connect
- uid: Unity.Reflect.IClient.Disconnect*
  commentId: Overload:Unity.Reflect.IClient.Disconnect
  name: Disconnect
  nameWithType: IClient.Disconnect
  fullName: Unity.Reflect.IClient.Disconnect
