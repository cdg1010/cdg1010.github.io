### YamlMime:ManagedReference
items:
- uid: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient
  commentId: T:Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient
  id: PublisherService.PublisherServiceClient
  parent: Unity.Reflect.ProjectServer.Services.Publisher
  children:
  - Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.#ctor
  - Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.#ctor
  - Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.#ctor(ClientBaseConfiguration)
  - Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.#ctor(ClientBaseConfiguration)
  - Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.#ctor(grpc.CallInvoker)
  - Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.#ctor(grpc.CallInvoker)
  - Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.#ctor(grpc.Channel)
  - Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.#ctor(grpc.Channel)
  - Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.CreateProject(Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest,grpc.CallOptions)
  - Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.CreateProject(Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest,grpc.CallOptions)
  - Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.CreateProject(Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.CreateProject(Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.CreateProjectAsync(Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest,grpc.CallOptions)
  - Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.CreateProjectAsync(Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest,grpc.CallOptions)
  - Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.CreateProjectAsync(Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.CreateProjectAsync(Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListProjects(Unity.Reflect.ProjectServer.Services.Empty,grpc.CallOptions)
  - Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListProjects(Unity.Reflect.ProjectServer.Services.Empty,grpc.CallOptions)
  - Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListProjects(Unity.Reflect.ProjectServer.Services.Empty,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListProjects(Unity.Reflect.ProjectServer.Services.Empty,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListProjectsAsync(Unity.Reflect.ProjectServer.Services.Empty,grpc.CallOptions)
  - Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListProjectsAsync(Unity.Reflect.ProjectServer.Services.Empty,grpc.CallOptions)
  - Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListProjectsAsync(Unity.Reflect.ProjectServer.Services.Empty,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListProjectsAsync(Unity.Reflect.ProjectServer.Services.Empty,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListSyncServers(Unity.Reflect.ProjectServer.Services.Empty,grpc.CallOptions)
  - Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListSyncServers(Unity.Reflect.ProjectServer.Services.Empty,grpc.CallOptions)
  - Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListSyncServers(Unity.Reflect.ProjectServer.Services.Empty,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListSyncServers(Unity.Reflect.ProjectServer.Services.Empty,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListSyncServersAsync(Unity.Reflect.ProjectServer.Services.Empty,grpc.CallOptions)
  - Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListSyncServersAsync(Unity.Reflect.ProjectServer.Services.Empty,grpc.CallOptions)
  - Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListSyncServersAsync(Unity.Reflect.ProjectServer.Services.Empty,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListSyncServersAsync(Unity.Reflect.ProjectServer.Services.Empty,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.NewInstance(ClientBaseConfiguration)
  - Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.NewInstance(ClientBaseConfiguration)
  langs:
  - csharp
  - vb
  name: PublisherService.PublisherServiceClient
  nameWithType: PublisherService.PublisherServiceClient
  fullName: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient
  type: Class
  source:
    id: PublisherServiceClient
    path: ''
    startLine: 35947
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.Publisher
  summary: Client for PublisherService
  example: []
  syntax:
    content: 'public class PublisherServiceClient : grpc.ClientBase<PublisherService.PublisherServiceClient>, grpc.ClientBase<PublisherService.PublisherServiceClient>'
    content.vb: >-
      Public Class PublisherServiceClient
          Inherits grpc.ClientBase(Of PublisherService.PublisherServiceClient)
          Implements grpc.ClientBase(Of PublisherService.PublisherServiceClient)
  inheritance:
  - System.Object
  implements:
  - grpc.ClientBase{Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient}
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.#ctor(grpc.Channel)
  commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.#ctor(grpc.Channel)
  id: '#ctor(grpc.Channel)'
  parent: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient
  langs:
  - csharp
  - vb
  name: PublisherServiceClient(grpc.Channel)
  nameWithType: PublisherService.PublisherServiceClient.PublisherServiceClient(grpc.Channel)
  fullName: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.PublisherServiceClient(grpc.Channel)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 15792
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.Publisher
  summary: Creates a new client for PublisherService
  example: []
  syntax:
    content: public PublisherServiceClient(grpc.Channel channel)
    parameters:
    - id: channel
      type: grpc.Channel
      description: The channel to use to make remote calls.
    content.vb: Public Sub New(channel As grpc.Channel)
  overload: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.#ctor(grpc.CallInvoker)
  commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.#ctor(grpc.CallInvoker)
  id: '#ctor(grpc.CallInvoker)'
  parent: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient
  langs:
  - csharp
  - vb
  name: PublisherServiceClient(grpc.CallInvoker)
  nameWithType: PublisherService.PublisherServiceClient.PublisherServiceClient(grpc.CallInvoker)
  fullName: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.PublisherServiceClient(grpc.CallInvoker)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 15797
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.Publisher
  summary: Creates a new client for PublisherService that uses a custom <code>CallInvoker</code>.
  example: []
  syntax:
    content: public PublisherServiceClient(grpc.CallInvoker callInvoker)
    parameters:
    - id: callInvoker
      type: grpc.CallInvoker
      description: The callInvoker to use to make remote calls.
    content.vb: Public Sub New(callInvoker As grpc.CallInvoker)
  overload: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.#ctor
  commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.#ctor
  id: '#ctor'
  parent: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient
  langs:
  - csharp
  - vb
  name: PublisherServiceClient()
  nameWithType: PublisherService.PublisherServiceClient.PublisherServiceClient()
  fullName: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.PublisherServiceClient()
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 15801
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.Publisher
  summary: Protected parameterless constructor to allow creation of test doubles.
  example: []
  syntax:
    content: protected PublisherServiceClient()
    content.vb: Protected Sub New
  overload: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.#ctor(ClientBaseConfiguration)
  commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.#ctor(ClientBaseConfiguration)
  id: '#ctor(ClientBaseConfiguration)'
  parent: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient
  langs:
  - csharp
  - vb
  name: PublisherServiceClient(ClientBaseConfiguration)
  nameWithType: PublisherService.PublisherServiceClient.PublisherServiceClient(ClientBaseConfiguration)
  fullName: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.PublisherServiceClient(ClientBaseConfiguration)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 15806
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.Publisher
  summary: Protected constructor to allow creation of configured clients.
  example: []
  syntax:
    content: protected PublisherServiceClient(ClientBaseConfiguration configuration)
    parameters:
    - id: configuration
      type: ClientBaseConfiguration
      description: The client configuration.
    content.vb: Protected Sub New(configuration As ClientBaseConfiguration)
  overload: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.CreateProject(Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.CreateProject(Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: CreateProject(Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient
  langs:
  - csharp
  - vb
  name: CreateProject(CreateProjectRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
  nameWithType: PublisherService.PublisherServiceClient.CreateProject(CreateProjectRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
  fullName: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.CreateProject(Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest, grpc.Metadata, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
  type: Method
  source:
    id: CreateProject
    path: ''
    startLine: 15810
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.Publisher
  syntax:
    content: public virtual Project CreateProject(CreateProjectRequest request, grpc.Metadata headers = null, DateTime? deadline = default(DateTime? ), CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: request
      type: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest
    - id: headers
      type: grpc.Metadata
    - id: deadline
      type: System.Nullable{System.DateTime}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: Unity.Reflect.ProjectServer.Services.Publisher.Project
    content.vb: Public Overridable Function CreateProject(request As CreateProjectRequest, headers As grpc.Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As Project
  overload: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.CreateProject*
  nameWithType.vb: PublisherService.PublisherServiceClient.CreateProject(CreateProjectRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.CreateProject(Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest, grpc.Metadata, System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
  name.vb: CreateProject(CreateProjectRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
- uid: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.CreateProject(Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest,grpc.CallOptions)
  commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.CreateProject(Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest,grpc.CallOptions)
  id: CreateProject(Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest,grpc.CallOptions)
  parent: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient
  langs:
  - csharp
  - vb
  name: CreateProject(CreateProjectRequest, grpc.CallOptions)
  nameWithType: PublisherService.PublisherServiceClient.CreateProject(CreateProjectRequest, grpc.CallOptions)
  fullName: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.CreateProject(Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest, grpc.CallOptions)
  type: Method
  source:
    id: CreateProject
    path: ''
    startLine: 15814
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.Publisher
  syntax:
    content: public virtual Project CreateProject(CreateProjectRequest request, grpc.CallOptions options)
    parameters:
    - id: request
      type: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest
    - id: options
      type: grpc.CallOptions
    return:
      type: Unity.Reflect.ProjectServer.Services.Publisher.Project
    content.vb: Public Overridable Function CreateProject(request As CreateProjectRequest, options As grpc.CallOptions) As Project
  overload: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.CreateProject*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.CreateProjectAsync(Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.CreateProjectAsync(Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: CreateProjectAsync(Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient
  langs:
  - csharp
  - vb
  name: CreateProjectAsync(CreateProjectRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
  nameWithType: PublisherService.PublisherServiceClient.CreateProjectAsync(CreateProjectRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
  fullName: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.CreateProjectAsync(Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest, grpc.Metadata, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
  type: Method
  source:
    id: CreateProjectAsync
    path: ''
    startLine: 15818
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.Publisher
  syntax:
    content: public virtual grpc.AsyncUnaryCall<Project> CreateProjectAsync(CreateProjectRequest request, grpc.Metadata headers = null, DateTime? deadline = default(DateTime? ), CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: request
      type: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest
    - id: headers
      type: grpc.Metadata
    - id: deadline
      type: System.Nullable{System.DateTime}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: grpc.AsyncUnaryCall{Unity.Reflect.ProjectServer.Services.Publisher.Project}
    content.vb: Public Overridable Function CreateProjectAsync(request As CreateProjectRequest, headers As grpc.Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As grpc.AsyncUnaryCall(Of Project)
  overload: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.CreateProjectAsync*
  nameWithType.vb: PublisherService.PublisherServiceClient.CreateProjectAsync(CreateProjectRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.CreateProjectAsync(Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest, grpc.Metadata, System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
  name.vb: CreateProjectAsync(CreateProjectRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
- uid: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.CreateProjectAsync(Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest,grpc.CallOptions)
  commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.CreateProjectAsync(Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest,grpc.CallOptions)
  id: CreateProjectAsync(Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest,grpc.CallOptions)
  parent: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient
  langs:
  - csharp
  - vb
  name: CreateProjectAsync(CreateProjectRequest, grpc.CallOptions)
  nameWithType: PublisherService.PublisherServiceClient.CreateProjectAsync(CreateProjectRequest, grpc.CallOptions)
  fullName: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.CreateProjectAsync(Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest, grpc.CallOptions)
  type: Method
  source:
    id: CreateProjectAsync
    path: ''
    startLine: 15822
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.Publisher
  syntax:
    content: public virtual grpc.AsyncUnaryCall<Project> CreateProjectAsync(CreateProjectRequest request, grpc.CallOptions options)
    parameters:
    - id: request
      type: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest
    - id: options
      type: grpc.CallOptions
    return:
      type: grpc.AsyncUnaryCall{Unity.Reflect.ProjectServer.Services.Publisher.Project}
    content.vb: Public Overridable Function CreateProjectAsync(request As CreateProjectRequest, options As grpc.CallOptions) As grpc.AsyncUnaryCall(Of Project)
  overload: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.CreateProjectAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListProjects(Unity.Reflect.ProjectServer.Services.Empty,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListProjects(Unity.Reflect.ProjectServer.Services.Empty,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: ListProjects(Unity.Reflect.ProjectServer.Services.Empty,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient
  langs:
  - csharp
  - vb
  name: ListProjects(Empty, grpc.Metadata, Nullable<DateTime>, CancellationToken)
  nameWithType: PublisherService.PublisherServiceClient.ListProjects(Empty, grpc.Metadata, Nullable<DateTime>, CancellationToken)
  fullName: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListProjects(Unity.Reflect.ProjectServer.Services.Empty, grpc.Metadata, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
  type: Method
  source:
    id: ListProjects
    path: ''
    startLine: 15826
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.Publisher
  syntax:
    content: public virtual ListProjectsResponse ListProjects(Empty request, grpc.Metadata headers = null, DateTime? deadline = default(DateTime? ), CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: request
      type: Unity.Reflect.ProjectServer.Services.Empty
    - id: headers
      type: grpc.Metadata
    - id: deadline
      type: System.Nullable{System.DateTime}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse
    content.vb: Public Overridable Function ListProjects(request As Empty, headers As grpc.Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As ListProjectsResponse
  overload: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListProjects*
  nameWithType.vb: PublisherService.PublisherServiceClient.ListProjects(Empty, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListProjects(Unity.Reflect.ProjectServer.Services.Empty, grpc.Metadata, System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
  name.vb: ListProjects(Empty, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
- uid: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListProjects(Unity.Reflect.ProjectServer.Services.Empty,grpc.CallOptions)
  commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListProjects(Unity.Reflect.ProjectServer.Services.Empty,grpc.CallOptions)
  id: ListProjects(Unity.Reflect.ProjectServer.Services.Empty,grpc.CallOptions)
  parent: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient
  langs:
  - csharp
  - vb
  name: ListProjects(Empty, grpc.CallOptions)
  nameWithType: PublisherService.PublisherServiceClient.ListProjects(Empty, grpc.CallOptions)
  fullName: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListProjects(Unity.Reflect.ProjectServer.Services.Empty, grpc.CallOptions)
  type: Method
  source:
    id: ListProjects
    path: ''
    startLine: 15830
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.Publisher
  syntax:
    content: public virtual ListProjectsResponse ListProjects(Empty request, grpc.CallOptions options)
    parameters:
    - id: request
      type: Unity.Reflect.ProjectServer.Services.Empty
    - id: options
      type: grpc.CallOptions
    return:
      type: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse
    content.vb: Public Overridable Function ListProjects(request As Empty, options As grpc.CallOptions) As ListProjectsResponse
  overload: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListProjects*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListProjectsAsync(Unity.Reflect.ProjectServer.Services.Empty,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListProjectsAsync(Unity.Reflect.ProjectServer.Services.Empty,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: ListProjectsAsync(Unity.Reflect.ProjectServer.Services.Empty,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient
  langs:
  - csharp
  - vb
  name: ListProjectsAsync(Empty, grpc.Metadata, Nullable<DateTime>, CancellationToken)
  nameWithType: PublisherService.PublisherServiceClient.ListProjectsAsync(Empty, grpc.Metadata, Nullable<DateTime>, CancellationToken)
  fullName: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListProjectsAsync(Unity.Reflect.ProjectServer.Services.Empty, grpc.Metadata, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
  type: Method
  source:
    id: ListProjectsAsync
    path: ''
    startLine: 15834
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.Publisher
  syntax:
    content: public virtual grpc.AsyncUnaryCall<ListProjectsResponse> ListProjectsAsync(Empty request, grpc.Metadata headers = null, DateTime? deadline = default(DateTime? ), CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: request
      type: Unity.Reflect.ProjectServer.Services.Empty
    - id: headers
      type: grpc.Metadata
    - id: deadline
      type: System.Nullable{System.DateTime}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: grpc.AsyncUnaryCall{Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse}
    content.vb: Public Overridable Function ListProjectsAsync(request As Empty, headers As grpc.Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As grpc.AsyncUnaryCall(Of ListProjectsResponse)
  overload: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListProjectsAsync*
  nameWithType.vb: PublisherService.PublisherServiceClient.ListProjectsAsync(Empty, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListProjectsAsync(Unity.Reflect.ProjectServer.Services.Empty, grpc.Metadata, System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
  name.vb: ListProjectsAsync(Empty, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
- uid: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListProjectsAsync(Unity.Reflect.ProjectServer.Services.Empty,grpc.CallOptions)
  commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListProjectsAsync(Unity.Reflect.ProjectServer.Services.Empty,grpc.CallOptions)
  id: ListProjectsAsync(Unity.Reflect.ProjectServer.Services.Empty,grpc.CallOptions)
  parent: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient
  langs:
  - csharp
  - vb
  name: ListProjectsAsync(Empty, grpc.CallOptions)
  nameWithType: PublisherService.PublisherServiceClient.ListProjectsAsync(Empty, grpc.CallOptions)
  fullName: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListProjectsAsync(Unity.Reflect.ProjectServer.Services.Empty, grpc.CallOptions)
  type: Method
  source:
    id: ListProjectsAsync
    path: ''
    startLine: 15838
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.Publisher
  syntax:
    content: public virtual grpc.AsyncUnaryCall<ListProjectsResponse> ListProjectsAsync(Empty request, grpc.CallOptions options)
    parameters:
    - id: request
      type: Unity.Reflect.ProjectServer.Services.Empty
    - id: options
      type: grpc.CallOptions
    return:
      type: grpc.AsyncUnaryCall{Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse}
    content.vb: Public Overridable Function ListProjectsAsync(request As Empty, options As grpc.CallOptions) As grpc.AsyncUnaryCall(Of ListProjectsResponse)
  overload: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListProjectsAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListSyncServers(Unity.Reflect.ProjectServer.Services.Empty,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListSyncServers(Unity.Reflect.ProjectServer.Services.Empty,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: ListSyncServers(Unity.Reflect.ProjectServer.Services.Empty,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient
  langs:
  - csharp
  - vb
  name: ListSyncServers(Empty, grpc.Metadata, Nullable<DateTime>, CancellationToken)
  nameWithType: PublisherService.PublisherServiceClient.ListSyncServers(Empty, grpc.Metadata, Nullable<DateTime>, CancellationToken)
  fullName: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListSyncServers(Unity.Reflect.ProjectServer.Services.Empty, grpc.Metadata, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
  type: Method
  source:
    id: ListSyncServers
    path: ''
    startLine: 15842
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.Publisher
  syntax:
    content: public virtual ListSyncServersResponse ListSyncServers(Empty request, grpc.Metadata headers = null, DateTime? deadline = default(DateTime? ), CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: request
      type: Unity.Reflect.ProjectServer.Services.Empty
    - id: headers
      type: grpc.Metadata
    - id: deadline
      type: System.Nullable{System.DateTime}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse
    content.vb: Public Overridable Function ListSyncServers(request As Empty, headers As grpc.Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As ListSyncServersResponse
  overload: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListSyncServers*
  nameWithType.vb: PublisherService.PublisherServiceClient.ListSyncServers(Empty, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListSyncServers(Unity.Reflect.ProjectServer.Services.Empty, grpc.Metadata, System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
  name.vb: ListSyncServers(Empty, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
- uid: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListSyncServers(Unity.Reflect.ProjectServer.Services.Empty,grpc.CallOptions)
  commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListSyncServers(Unity.Reflect.ProjectServer.Services.Empty,grpc.CallOptions)
  id: ListSyncServers(Unity.Reflect.ProjectServer.Services.Empty,grpc.CallOptions)
  parent: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient
  langs:
  - csharp
  - vb
  name: ListSyncServers(Empty, grpc.CallOptions)
  nameWithType: PublisherService.PublisherServiceClient.ListSyncServers(Empty, grpc.CallOptions)
  fullName: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListSyncServers(Unity.Reflect.ProjectServer.Services.Empty, grpc.CallOptions)
  type: Method
  source:
    id: ListSyncServers
    path: ''
    startLine: 15846
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.Publisher
  syntax:
    content: public virtual ListSyncServersResponse ListSyncServers(Empty request, grpc.CallOptions options)
    parameters:
    - id: request
      type: Unity.Reflect.ProjectServer.Services.Empty
    - id: options
      type: grpc.CallOptions
    return:
      type: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse
    content.vb: Public Overridable Function ListSyncServers(request As Empty, options As grpc.CallOptions) As ListSyncServersResponse
  overload: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListSyncServers*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListSyncServersAsync(Unity.Reflect.ProjectServer.Services.Empty,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListSyncServersAsync(Unity.Reflect.ProjectServer.Services.Empty,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: ListSyncServersAsync(Unity.Reflect.ProjectServer.Services.Empty,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient
  langs:
  - csharp
  - vb
  name: ListSyncServersAsync(Empty, grpc.Metadata, Nullable<DateTime>, CancellationToken)
  nameWithType: PublisherService.PublisherServiceClient.ListSyncServersAsync(Empty, grpc.Metadata, Nullable<DateTime>, CancellationToken)
  fullName: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListSyncServersAsync(Unity.Reflect.ProjectServer.Services.Empty, grpc.Metadata, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
  type: Method
  source:
    id: ListSyncServersAsync
    path: ''
    startLine: 15850
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.Publisher
  syntax:
    content: public virtual grpc.AsyncUnaryCall<ListSyncServersResponse> ListSyncServersAsync(Empty request, grpc.Metadata headers = null, DateTime? deadline = default(DateTime? ), CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: request
      type: Unity.Reflect.ProjectServer.Services.Empty
    - id: headers
      type: grpc.Metadata
    - id: deadline
      type: System.Nullable{System.DateTime}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: grpc.AsyncUnaryCall{Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse}
    content.vb: Public Overridable Function ListSyncServersAsync(request As Empty, headers As grpc.Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As grpc.AsyncUnaryCall(Of ListSyncServersResponse)
  overload: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListSyncServersAsync*
  nameWithType.vb: PublisherService.PublisherServiceClient.ListSyncServersAsync(Empty, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListSyncServersAsync(Unity.Reflect.ProjectServer.Services.Empty, grpc.Metadata, System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
  name.vb: ListSyncServersAsync(Empty, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
- uid: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListSyncServersAsync(Unity.Reflect.ProjectServer.Services.Empty,grpc.CallOptions)
  commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListSyncServersAsync(Unity.Reflect.ProjectServer.Services.Empty,grpc.CallOptions)
  id: ListSyncServersAsync(Unity.Reflect.ProjectServer.Services.Empty,grpc.CallOptions)
  parent: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient
  langs:
  - csharp
  - vb
  name: ListSyncServersAsync(Empty, grpc.CallOptions)
  nameWithType: PublisherService.PublisherServiceClient.ListSyncServersAsync(Empty, grpc.CallOptions)
  fullName: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListSyncServersAsync(Unity.Reflect.ProjectServer.Services.Empty, grpc.CallOptions)
  type: Method
  source:
    id: ListSyncServersAsync
    path: ''
    startLine: 15854
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.Publisher
  syntax:
    content: public virtual grpc.AsyncUnaryCall<ListSyncServersResponse> ListSyncServersAsync(Empty request, grpc.CallOptions options)
    parameters:
    - id: request
      type: Unity.Reflect.ProjectServer.Services.Empty
    - id: options
      type: grpc.CallOptions
    return:
      type: grpc.AsyncUnaryCall{Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse}
    content.vb: Public Overridable Function ListSyncServersAsync(request As Empty, options As grpc.CallOptions) As grpc.AsyncUnaryCall(Of ListSyncServersResponse)
  overload: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListSyncServersAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.NewInstance(ClientBaseConfiguration)
  commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.NewInstance(ClientBaseConfiguration)
  id: NewInstance(ClientBaseConfiguration)
  parent: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient
  langs:
  - csharp
  - vb
  name: NewInstance(ClientBaseConfiguration)
  nameWithType: PublisherService.PublisherServiceClient.NewInstance(ClientBaseConfiguration)
  fullName: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.NewInstance(ClientBaseConfiguration)
  type: Method
  source:
    id: NewInstance
    path: ''
    startLine: 15859
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.Publisher
  summary: Creates a new instance of client from given <code>ClientBaseConfiguration</code>.
  example: []
  syntax:
    content: protected override PublisherService.PublisherServiceClient NewInstance(ClientBaseConfiguration configuration)
    parameters:
    - id: configuration
      type: ClientBaseConfiguration
    return:
      type: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient
    content.vb: Protected Overrides Function NewInstance(configuration As ClientBaseConfiguration) As PublisherService.PublisherServiceClient
  overload: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.NewInstance*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.#ctor(grpc.Channel)
  commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.#ctor(grpc.Channel)
  id: '#ctor(grpc.Channel)'
  parent: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient
  langs:
  - csharp
  - vb
  name: PublisherServiceClient(grpc.Channel)
  nameWithType: PublisherService.PublisherServiceClient.PublisherServiceClient(grpc.Channel)
  fullName: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.PublisherServiceClient(grpc.Channel)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 35951
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.Publisher
  summary: Creates a new client for PublisherService
  example: []
  syntax:
    content: public PublisherServiceClient(grpc.Channel channel)
    parameters:
    - id: channel
      type: grpc.Channel
      description: The channel to use to make remote calls.
    content.vb: Public Sub New(channel As grpc.Channel)
  overload: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.#ctor(grpc.CallInvoker)
  commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.#ctor(grpc.CallInvoker)
  id: '#ctor(grpc.CallInvoker)'
  parent: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient
  langs:
  - csharp
  - vb
  name: PublisherServiceClient(grpc.CallInvoker)
  nameWithType: PublisherService.PublisherServiceClient.PublisherServiceClient(grpc.CallInvoker)
  fullName: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.PublisherServiceClient(grpc.CallInvoker)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 35956
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.Publisher
  summary: Creates a new client for PublisherService that uses a custom <code>CallInvoker</code>.
  example: []
  syntax:
    content: public PublisherServiceClient(grpc.CallInvoker callInvoker)
    parameters:
    - id: callInvoker
      type: grpc.CallInvoker
      description: The callInvoker to use to make remote calls.
    content.vb: Public Sub New(callInvoker As grpc.CallInvoker)
  overload: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.#ctor
  commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.#ctor
  id: '#ctor'
  parent: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient
  langs:
  - csharp
  - vb
  name: PublisherServiceClient()
  nameWithType: PublisherService.PublisherServiceClient.PublisherServiceClient()
  fullName: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.PublisherServiceClient()
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 35960
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.Publisher
  summary: Protected parameterless constructor to allow creation of test doubles.
  example: []
  syntax:
    content: protected PublisherServiceClient()
    content.vb: Protected Sub New
  overload: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.#ctor(ClientBaseConfiguration)
  commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.#ctor(ClientBaseConfiguration)
  id: '#ctor(ClientBaseConfiguration)'
  parent: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient
  langs:
  - csharp
  - vb
  name: PublisherServiceClient(ClientBaseConfiguration)
  nameWithType: PublisherService.PublisherServiceClient.PublisherServiceClient(ClientBaseConfiguration)
  fullName: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.PublisherServiceClient(ClientBaseConfiguration)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 35965
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.Publisher
  summary: Protected constructor to allow creation of configured clients.
  example: []
  syntax:
    content: protected PublisherServiceClient(ClientBaseConfiguration configuration)
    parameters:
    - id: configuration
      type: ClientBaseConfiguration
      description: The client configuration.
    content.vb: Protected Sub New(configuration As ClientBaseConfiguration)
  overload: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.CreateProject(Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.CreateProject(Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: CreateProject(Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient
  langs:
  - csharp
  - vb
  name: CreateProject(CreateProjectRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
  nameWithType: PublisherService.PublisherServiceClient.CreateProject(CreateProjectRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
  fullName: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.CreateProject(Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest, grpc.Metadata, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
  type: Method
  source:
    id: CreateProject
    path: ''
    startLine: 35969
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.Publisher
  syntax:
    content: public virtual Project CreateProject(CreateProjectRequest request, grpc.Metadata headers = null, DateTime? deadline = default(DateTime? ), CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: request
      type: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest
    - id: headers
      type: grpc.Metadata
    - id: deadline
      type: System.Nullable{System.DateTime}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: Unity.Reflect.ProjectServer.Services.Publisher.Project
    content.vb: Public Overridable Function CreateProject(request As CreateProjectRequest, headers As grpc.Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As Project
  overload: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.CreateProject*
  nameWithType.vb: PublisherService.PublisherServiceClient.CreateProject(CreateProjectRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.CreateProject(Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest, grpc.Metadata, System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
  name.vb: CreateProject(CreateProjectRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
- uid: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.CreateProject(Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest,grpc.CallOptions)
  commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.CreateProject(Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest,grpc.CallOptions)
  id: CreateProject(Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest,grpc.CallOptions)
  parent: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient
  langs:
  - csharp
  - vb
  name: CreateProject(CreateProjectRequest, grpc.CallOptions)
  nameWithType: PublisherService.PublisherServiceClient.CreateProject(CreateProjectRequest, grpc.CallOptions)
  fullName: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.CreateProject(Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest, grpc.CallOptions)
  type: Method
  source:
    id: CreateProject
    path: ''
    startLine: 35973
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.Publisher
  syntax:
    content: public virtual Project CreateProject(CreateProjectRequest request, grpc.CallOptions options)
    parameters:
    - id: request
      type: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest
    - id: options
      type: grpc.CallOptions
    return:
      type: Unity.Reflect.ProjectServer.Services.Publisher.Project
    content.vb: Public Overridable Function CreateProject(request As CreateProjectRequest, options As grpc.CallOptions) As Project
  overload: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.CreateProject*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.CreateProjectAsync(Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.CreateProjectAsync(Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: CreateProjectAsync(Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient
  langs:
  - csharp
  - vb
  name: CreateProjectAsync(CreateProjectRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
  nameWithType: PublisherService.PublisherServiceClient.CreateProjectAsync(CreateProjectRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
  fullName: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.CreateProjectAsync(Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest, grpc.Metadata, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
  type: Method
  source:
    id: CreateProjectAsync
    path: ''
    startLine: 35977
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.Publisher
  syntax:
    content: public virtual grpc.AsyncUnaryCall<Project> CreateProjectAsync(CreateProjectRequest request, grpc.Metadata headers = null, DateTime? deadline = default(DateTime? ), CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: request
      type: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest
    - id: headers
      type: grpc.Metadata
    - id: deadline
      type: System.Nullable{System.DateTime}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: grpc.AsyncUnaryCall{Unity.Reflect.ProjectServer.Services.Publisher.Project}
    content.vb: Public Overridable Function CreateProjectAsync(request As CreateProjectRequest, headers As grpc.Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As grpc.AsyncUnaryCall(Of Project)
  overload: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.CreateProjectAsync*
  nameWithType.vb: PublisherService.PublisherServiceClient.CreateProjectAsync(CreateProjectRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.CreateProjectAsync(Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest, grpc.Metadata, System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
  name.vb: CreateProjectAsync(CreateProjectRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
- uid: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.CreateProjectAsync(Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest,grpc.CallOptions)
  commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.CreateProjectAsync(Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest,grpc.CallOptions)
  id: CreateProjectAsync(Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest,grpc.CallOptions)
  parent: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient
  langs:
  - csharp
  - vb
  name: CreateProjectAsync(CreateProjectRequest, grpc.CallOptions)
  nameWithType: PublisherService.PublisherServiceClient.CreateProjectAsync(CreateProjectRequest, grpc.CallOptions)
  fullName: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.CreateProjectAsync(Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest, grpc.CallOptions)
  type: Method
  source:
    id: CreateProjectAsync
    path: ''
    startLine: 35981
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.Publisher
  syntax:
    content: public virtual grpc.AsyncUnaryCall<Project> CreateProjectAsync(CreateProjectRequest request, grpc.CallOptions options)
    parameters:
    - id: request
      type: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest
    - id: options
      type: grpc.CallOptions
    return:
      type: grpc.AsyncUnaryCall{Unity.Reflect.ProjectServer.Services.Publisher.Project}
    content.vb: Public Overridable Function CreateProjectAsync(request As CreateProjectRequest, options As grpc.CallOptions) As grpc.AsyncUnaryCall(Of Project)
  overload: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.CreateProjectAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListProjects(Unity.Reflect.ProjectServer.Services.Empty,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListProjects(Unity.Reflect.ProjectServer.Services.Empty,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: ListProjects(Unity.Reflect.ProjectServer.Services.Empty,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient
  langs:
  - csharp
  - vb
  name: ListProjects(Empty, grpc.Metadata, Nullable<DateTime>, CancellationToken)
  nameWithType: PublisherService.PublisherServiceClient.ListProjects(Empty, grpc.Metadata, Nullable<DateTime>, CancellationToken)
  fullName: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListProjects(Unity.Reflect.ProjectServer.Services.Empty, grpc.Metadata, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
  type: Method
  source:
    id: ListProjects
    path: ''
    startLine: 35985
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.Publisher
  syntax:
    content: public virtual ListProjectsResponse ListProjects(Empty request, grpc.Metadata headers = null, DateTime? deadline = default(DateTime? ), CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: request
      type: Unity.Reflect.ProjectServer.Services.Empty
    - id: headers
      type: grpc.Metadata
    - id: deadline
      type: System.Nullable{System.DateTime}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse
    content.vb: Public Overridable Function ListProjects(request As Empty, headers As grpc.Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As ListProjectsResponse
  overload: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListProjects*
  nameWithType.vb: PublisherService.PublisherServiceClient.ListProjects(Empty, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListProjects(Unity.Reflect.ProjectServer.Services.Empty, grpc.Metadata, System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
  name.vb: ListProjects(Empty, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
- uid: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListProjects(Unity.Reflect.ProjectServer.Services.Empty,grpc.CallOptions)
  commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListProjects(Unity.Reflect.ProjectServer.Services.Empty,grpc.CallOptions)
  id: ListProjects(Unity.Reflect.ProjectServer.Services.Empty,grpc.CallOptions)
  parent: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient
  langs:
  - csharp
  - vb
  name: ListProjects(Empty, grpc.CallOptions)
  nameWithType: PublisherService.PublisherServiceClient.ListProjects(Empty, grpc.CallOptions)
  fullName: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListProjects(Unity.Reflect.ProjectServer.Services.Empty, grpc.CallOptions)
  type: Method
  source:
    id: ListProjects
    path: ''
    startLine: 35989
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.Publisher
  syntax:
    content: public virtual ListProjectsResponse ListProjects(Empty request, grpc.CallOptions options)
    parameters:
    - id: request
      type: Unity.Reflect.ProjectServer.Services.Empty
    - id: options
      type: grpc.CallOptions
    return:
      type: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse
    content.vb: Public Overridable Function ListProjects(request As Empty, options As grpc.CallOptions) As ListProjectsResponse
  overload: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListProjects*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListProjectsAsync(Unity.Reflect.ProjectServer.Services.Empty,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListProjectsAsync(Unity.Reflect.ProjectServer.Services.Empty,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: ListProjectsAsync(Unity.Reflect.ProjectServer.Services.Empty,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient
  langs:
  - csharp
  - vb
  name: ListProjectsAsync(Empty, grpc.Metadata, Nullable<DateTime>, CancellationToken)
  nameWithType: PublisherService.PublisherServiceClient.ListProjectsAsync(Empty, grpc.Metadata, Nullable<DateTime>, CancellationToken)
  fullName: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListProjectsAsync(Unity.Reflect.ProjectServer.Services.Empty, grpc.Metadata, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
  type: Method
  source:
    id: ListProjectsAsync
    path: ''
    startLine: 35993
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.Publisher
  syntax:
    content: public virtual grpc.AsyncUnaryCall<ListProjectsResponse> ListProjectsAsync(Empty request, grpc.Metadata headers = null, DateTime? deadline = default(DateTime? ), CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: request
      type: Unity.Reflect.ProjectServer.Services.Empty
    - id: headers
      type: grpc.Metadata
    - id: deadline
      type: System.Nullable{System.DateTime}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: grpc.AsyncUnaryCall{Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse}
    content.vb: Public Overridable Function ListProjectsAsync(request As Empty, headers As grpc.Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As grpc.AsyncUnaryCall(Of ListProjectsResponse)
  overload: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListProjectsAsync*
  nameWithType.vb: PublisherService.PublisherServiceClient.ListProjectsAsync(Empty, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListProjectsAsync(Unity.Reflect.ProjectServer.Services.Empty, grpc.Metadata, System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
  name.vb: ListProjectsAsync(Empty, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
- uid: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListProjectsAsync(Unity.Reflect.ProjectServer.Services.Empty,grpc.CallOptions)
  commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListProjectsAsync(Unity.Reflect.ProjectServer.Services.Empty,grpc.CallOptions)
  id: ListProjectsAsync(Unity.Reflect.ProjectServer.Services.Empty,grpc.CallOptions)
  parent: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient
  langs:
  - csharp
  - vb
  name: ListProjectsAsync(Empty, grpc.CallOptions)
  nameWithType: PublisherService.PublisherServiceClient.ListProjectsAsync(Empty, grpc.CallOptions)
  fullName: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListProjectsAsync(Unity.Reflect.ProjectServer.Services.Empty, grpc.CallOptions)
  type: Method
  source:
    id: ListProjectsAsync
    path: ''
    startLine: 35997
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.Publisher
  syntax:
    content: public virtual grpc.AsyncUnaryCall<ListProjectsResponse> ListProjectsAsync(Empty request, grpc.CallOptions options)
    parameters:
    - id: request
      type: Unity.Reflect.ProjectServer.Services.Empty
    - id: options
      type: grpc.CallOptions
    return:
      type: grpc.AsyncUnaryCall{Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse}
    content.vb: Public Overridable Function ListProjectsAsync(request As Empty, options As grpc.CallOptions) As grpc.AsyncUnaryCall(Of ListProjectsResponse)
  overload: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListProjectsAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListSyncServers(Unity.Reflect.ProjectServer.Services.Empty,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListSyncServers(Unity.Reflect.ProjectServer.Services.Empty,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: ListSyncServers(Unity.Reflect.ProjectServer.Services.Empty,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient
  langs:
  - csharp
  - vb
  name: ListSyncServers(Empty, grpc.Metadata, Nullable<DateTime>, CancellationToken)
  nameWithType: PublisherService.PublisherServiceClient.ListSyncServers(Empty, grpc.Metadata, Nullable<DateTime>, CancellationToken)
  fullName: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListSyncServers(Unity.Reflect.ProjectServer.Services.Empty, grpc.Metadata, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
  type: Method
  source:
    id: ListSyncServers
    path: ''
    startLine: 36001
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.Publisher
  syntax:
    content: public virtual ListSyncServersResponse ListSyncServers(Empty request, grpc.Metadata headers = null, DateTime? deadline = default(DateTime? ), CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: request
      type: Unity.Reflect.ProjectServer.Services.Empty
    - id: headers
      type: grpc.Metadata
    - id: deadline
      type: System.Nullable{System.DateTime}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse
    content.vb: Public Overridable Function ListSyncServers(request As Empty, headers As grpc.Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As ListSyncServersResponse
  overload: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListSyncServers*
  nameWithType.vb: PublisherService.PublisherServiceClient.ListSyncServers(Empty, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListSyncServers(Unity.Reflect.ProjectServer.Services.Empty, grpc.Metadata, System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
  name.vb: ListSyncServers(Empty, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
- uid: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListSyncServers(Unity.Reflect.ProjectServer.Services.Empty,grpc.CallOptions)
  commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListSyncServers(Unity.Reflect.ProjectServer.Services.Empty,grpc.CallOptions)
  id: ListSyncServers(Unity.Reflect.ProjectServer.Services.Empty,grpc.CallOptions)
  parent: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient
  langs:
  - csharp
  - vb
  name: ListSyncServers(Empty, grpc.CallOptions)
  nameWithType: PublisherService.PublisherServiceClient.ListSyncServers(Empty, grpc.CallOptions)
  fullName: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListSyncServers(Unity.Reflect.ProjectServer.Services.Empty, grpc.CallOptions)
  type: Method
  source:
    id: ListSyncServers
    path: ''
    startLine: 36005
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.Publisher
  syntax:
    content: public virtual ListSyncServersResponse ListSyncServers(Empty request, grpc.CallOptions options)
    parameters:
    - id: request
      type: Unity.Reflect.ProjectServer.Services.Empty
    - id: options
      type: grpc.CallOptions
    return:
      type: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse
    content.vb: Public Overridable Function ListSyncServers(request As Empty, options As grpc.CallOptions) As ListSyncServersResponse
  overload: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListSyncServers*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListSyncServersAsync(Unity.Reflect.ProjectServer.Services.Empty,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListSyncServersAsync(Unity.Reflect.ProjectServer.Services.Empty,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: ListSyncServersAsync(Unity.Reflect.ProjectServer.Services.Empty,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient
  langs:
  - csharp
  - vb
  name: ListSyncServersAsync(Empty, grpc.Metadata, Nullable<DateTime>, CancellationToken)
  nameWithType: PublisherService.PublisherServiceClient.ListSyncServersAsync(Empty, grpc.Metadata, Nullable<DateTime>, CancellationToken)
  fullName: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListSyncServersAsync(Unity.Reflect.ProjectServer.Services.Empty, grpc.Metadata, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
  type: Method
  source:
    id: ListSyncServersAsync
    path: ''
    startLine: 36009
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.Publisher
  syntax:
    content: public virtual grpc.AsyncUnaryCall<ListSyncServersResponse> ListSyncServersAsync(Empty request, grpc.Metadata headers = null, DateTime? deadline = default(DateTime? ), CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: request
      type: Unity.Reflect.ProjectServer.Services.Empty
    - id: headers
      type: grpc.Metadata
    - id: deadline
      type: System.Nullable{System.DateTime}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: grpc.AsyncUnaryCall{Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse}
    content.vb: Public Overridable Function ListSyncServersAsync(request As Empty, headers As grpc.Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As grpc.AsyncUnaryCall(Of ListSyncServersResponse)
  overload: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListSyncServersAsync*
  nameWithType.vb: PublisherService.PublisherServiceClient.ListSyncServersAsync(Empty, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListSyncServersAsync(Unity.Reflect.ProjectServer.Services.Empty, grpc.Metadata, System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
  name.vb: ListSyncServersAsync(Empty, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
- uid: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListSyncServersAsync(Unity.Reflect.ProjectServer.Services.Empty,grpc.CallOptions)
  commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListSyncServersAsync(Unity.Reflect.ProjectServer.Services.Empty,grpc.CallOptions)
  id: ListSyncServersAsync(Unity.Reflect.ProjectServer.Services.Empty,grpc.CallOptions)
  parent: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient
  langs:
  - csharp
  - vb
  name: ListSyncServersAsync(Empty, grpc.CallOptions)
  nameWithType: PublisherService.PublisherServiceClient.ListSyncServersAsync(Empty, grpc.CallOptions)
  fullName: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListSyncServersAsync(Unity.Reflect.ProjectServer.Services.Empty, grpc.CallOptions)
  type: Method
  source:
    id: ListSyncServersAsync
    path: ''
    startLine: 36013
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.Publisher
  syntax:
    content: public virtual grpc.AsyncUnaryCall<ListSyncServersResponse> ListSyncServersAsync(Empty request, grpc.CallOptions options)
    parameters:
    - id: request
      type: Unity.Reflect.ProjectServer.Services.Empty
    - id: options
      type: grpc.CallOptions
    return:
      type: grpc.AsyncUnaryCall{Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse}
    content.vb: Public Overridable Function ListSyncServersAsync(request As Empty, options As grpc.CallOptions) As grpc.AsyncUnaryCall(Of ListSyncServersResponse)
  overload: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListSyncServersAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.NewInstance(ClientBaseConfiguration)
  commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.NewInstance(ClientBaseConfiguration)
  id: NewInstance(ClientBaseConfiguration)
  parent: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient
  langs:
  - csharp
  - vb
  name: NewInstance(ClientBaseConfiguration)
  nameWithType: PublisherService.PublisherServiceClient.NewInstance(ClientBaseConfiguration)
  fullName: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.NewInstance(ClientBaseConfiguration)
  type: Method
  source:
    id: NewInstance
    path: ''
    startLine: 36018
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.Publisher
  summary: Creates a new instance of client from given <code>ClientBaseConfiguration</code>.
  example: []
  syntax:
    content: protected override PublisherService.PublisherServiceClient NewInstance(ClientBaseConfiguration configuration)
    parameters:
    - id: configuration
      type: ClientBaseConfiguration
    return:
      type: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient
    content.vb: Protected Overrides Function NewInstance(configuration As ClientBaseConfiguration) As PublisherService.PublisherServiceClient
  overload: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.NewInstance*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: Unity.Reflect.ProjectServer.Services.Publisher
  commentId: N:Unity.Reflect.ProjectServer.Services.Publisher
  name: Unity.Reflect.ProjectServer.Services.Publisher
  nameWithType: Unity.Reflect.ProjectServer.Services.Publisher
  fullName: Unity.Reflect.ProjectServer.Services.Publisher
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: grpc.ClientBase{Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient}
  commentId: '!:grpc.ClientBase{Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient}'
  definition: grpc.ClientBase`1
  name: grpc.ClientBase<PublisherService.PublisherServiceClient>
  nameWithType: grpc.ClientBase<PublisherService.PublisherServiceClient>
  fullName: grpc.ClientBase<Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient>
  nameWithType.vb: grpc.ClientBase(Of PublisherService.PublisherServiceClient)
  fullName.vb: grpc.ClientBase(Of Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient)
  name.vb: grpc.ClientBase(Of PublisherService.PublisherServiceClient)
  spec.csharp:
  - uid: grpc.ClientBase`1
    name: grpc.ClientBase
    nameWithType: grpc.ClientBase
    fullName: grpc.ClientBase
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient
    name: PublisherService.PublisherServiceClient
    nameWithType: PublisherService.PublisherServiceClient
    fullName: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: grpc.ClientBase`1
    name: grpc.ClientBase
    nameWithType: grpc.ClientBase
    fullName: grpc.ClientBase
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient
    name: PublisherService.PublisherServiceClient
    nameWithType: PublisherService.PublisherServiceClient
    fullName: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: grpc.ClientBase`1
  isExternal: true
  name: grpc.ClientBase<>
  nameWithType: grpc.ClientBase<>
  fullName: grpc.ClientBase<>
  nameWithType.vb: grpc.ClientBase(Of )
  fullName.vb: grpc.ClientBase(Of )
  name.vb: grpc.ClientBase(Of )
  spec.csharp:
  - uid: grpc.ClientBase`1
    name: grpc.ClientBase
    nameWithType: grpc.ClientBase
    fullName: grpc.ClientBase
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: grpc.ClientBase`1
    name: grpc.ClientBase
    nameWithType: grpc.ClientBase
    fullName: grpc.ClientBase
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.#ctor*
  commentId: Overload:Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.#ctor
  name: PublisherServiceClient
  nameWithType: PublisherService.PublisherServiceClient.PublisherServiceClient
  fullName: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.PublisherServiceClient
- uid: grpc.Channel
  isExternal: true
  name: grpc.Channel
  nameWithType: grpc.Channel
  fullName: grpc.Channel
- uid: grpc.CallInvoker
  isExternal: true
  name: grpc.CallInvoker
  nameWithType: grpc.CallInvoker
  fullName: grpc.CallInvoker
- uid: ClientBaseConfiguration
  isExternal: true
  name: ClientBaseConfiguration
  nameWithType: ClientBaseConfiguration
  fullName: ClientBaseConfiguration
- uid: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.CreateProject*
  commentId: Overload:Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.CreateProject
  name: CreateProject
  nameWithType: PublisherService.PublisherServiceClient.CreateProject
  fullName: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.CreateProject
- uid: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest
  commentId: T:Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest
  parent: Unity.Reflect.ProjectServer.Services.Publisher
  name: CreateProjectRequest
  nameWithType: CreateProjectRequest
  fullName: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest
- uid: grpc.Metadata
  isExternal: true
  name: grpc.Metadata
  nameWithType: grpc.Metadata
  fullName: grpc.Metadata
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullName.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: Unity.Reflect.ProjectServer.Services.Publisher.Project
  commentId: T:Unity.Reflect.ProjectServer.Services.Publisher.Project
  parent: Unity.Reflect.ProjectServer.Services.Publisher
  name: Project
  nameWithType: Project
  fullName: Unity.Reflect.ProjectServer.Services.Publisher.Project
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: grpc.CallOptions
  isExternal: true
  name: grpc.CallOptions
  nameWithType: grpc.CallOptions
  fullName: grpc.CallOptions
- uid: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.CreateProjectAsync*
  commentId: Overload:Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.CreateProjectAsync
  name: CreateProjectAsync
  nameWithType: PublisherService.PublisherServiceClient.CreateProjectAsync
  fullName: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.CreateProjectAsync
- uid: grpc.AsyncUnaryCall{Unity.Reflect.ProjectServer.Services.Publisher.Project}
  commentId: '!:grpc.AsyncUnaryCall{Unity.Reflect.ProjectServer.Services.Publisher.Project}'
  definition: grpc.AsyncUnaryCall`1
  name: grpc.AsyncUnaryCall<Project>
  nameWithType: grpc.AsyncUnaryCall<Project>
  fullName: grpc.AsyncUnaryCall<Unity.Reflect.ProjectServer.Services.Publisher.Project>
  nameWithType.vb: grpc.AsyncUnaryCall(Of Project)
  fullName.vb: grpc.AsyncUnaryCall(Of Unity.Reflect.ProjectServer.Services.Publisher.Project)
  name.vb: grpc.AsyncUnaryCall(Of Project)
  spec.csharp:
  - uid: grpc.AsyncUnaryCall`1
    name: grpc.AsyncUnaryCall
    nameWithType: grpc.AsyncUnaryCall
    fullName: grpc.AsyncUnaryCall
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Unity.Reflect.ProjectServer.Services.Publisher.Project
    name: Project
    nameWithType: Project
    fullName: Unity.Reflect.ProjectServer.Services.Publisher.Project
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: grpc.AsyncUnaryCall`1
    name: grpc.AsyncUnaryCall
    nameWithType: grpc.AsyncUnaryCall
    fullName: grpc.AsyncUnaryCall
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Unity.Reflect.ProjectServer.Services.Publisher.Project
    name: Project
    nameWithType: Project
    fullName: Unity.Reflect.ProjectServer.Services.Publisher.Project
  - name: )
    nameWithType: )
    fullName: )
- uid: grpc.AsyncUnaryCall`1
  isExternal: true
  name: grpc.AsyncUnaryCall<>
  nameWithType: grpc.AsyncUnaryCall<>
  fullName: grpc.AsyncUnaryCall<>
  nameWithType.vb: grpc.AsyncUnaryCall(Of )
  fullName.vb: grpc.AsyncUnaryCall(Of )
  name.vb: grpc.AsyncUnaryCall(Of )
  spec.csharp:
  - uid: grpc.AsyncUnaryCall`1
    name: grpc.AsyncUnaryCall
    nameWithType: grpc.AsyncUnaryCall
    fullName: grpc.AsyncUnaryCall
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: grpc.AsyncUnaryCall`1
    name: grpc.AsyncUnaryCall
    nameWithType: grpc.AsyncUnaryCall
    fullName: grpc.AsyncUnaryCall
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListProjects*
  commentId: Overload:Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListProjects
  name: ListProjects
  nameWithType: PublisherService.PublisherServiceClient.ListProjects
  fullName: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListProjects
- uid: Unity.Reflect.ProjectServer.Services.Empty
  commentId: T:Unity.Reflect.ProjectServer.Services.Empty
  parent: Unity.Reflect.ProjectServer.Services
  name: Empty
  nameWithType: Empty
  fullName: Unity.Reflect.ProjectServer.Services.Empty
- uid: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse
  commentId: T:Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse
  parent: Unity.Reflect.ProjectServer.Services.Publisher
  name: ListProjectsResponse
  nameWithType: ListProjectsResponse
  fullName: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse
- uid: Unity.Reflect.ProjectServer.Services
  commentId: N:Unity.Reflect.ProjectServer.Services
  name: Unity.Reflect.ProjectServer.Services
  nameWithType: Unity.Reflect.ProjectServer.Services
  fullName: Unity.Reflect.ProjectServer.Services
- uid: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListProjectsAsync*
  commentId: Overload:Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListProjectsAsync
  name: ListProjectsAsync
  nameWithType: PublisherService.PublisherServiceClient.ListProjectsAsync
  fullName: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListProjectsAsync
- uid: grpc.AsyncUnaryCall{Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse}
  commentId: '!:grpc.AsyncUnaryCall{Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse}'
  definition: grpc.AsyncUnaryCall`1
  name: grpc.AsyncUnaryCall<ListProjectsResponse>
  nameWithType: grpc.AsyncUnaryCall<ListProjectsResponse>
  fullName: grpc.AsyncUnaryCall<Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse>
  nameWithType.vb: grpc.AsyncUnaryCall(Of ListProjectsResponse)
  fullName.vb: grpc.AsyncUnaryCall(Of Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse)
  name.vb: grpc.AsyncUnaryCall(Of ListProjectsResponse)
  spec.csharp:
  - uid: grpc.AsyncUnaryCall`1
    name: grpc.AsyncUnaryCall
    nameWithType: grpc.AsyncUnaryCall
    fullName: grpc.AsyncUnaryCall
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse
    name: ListProjectsResponse
    nameWithType: ListProjectsResponse
    fullName: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: grpc.AsyncUnaryCall`1
    name: grpc.AsyncUnaryCall
    nameWithType: grpc.AsyncUnaryCall
    fullName: grpc.AsyncUnaryCall
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse
    name: ListProjectsResponse
    nameWithType: ListProjectsResponse
    fullName: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListSyncServers*
  commentId: Overload:Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListSyncServers
  name: ListSyncServers
  nameWithType: PublisherService.PublisherServiceClient.ListSyncServers
  fullName: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListSyncServers
- uid: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse
  commentId: T:Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse
  parent: Unity.Reflect.ProjectServer.Services.Publisher
  name: ListSyncServersResponse
  nameWithType: ListSyncServersResponse
  fullName: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse
- uid: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListSyncServersAsync*
  commentId: Overload:Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListSyncServersAsync
  name: ListSyncServersAsync
  nameWithType: PublisherService.PublisherServiceClient.ListSyncServersAsync
  fullName: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListSyncServersAsync
- uid: grpc.AsyncUnaryCall{Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse}
  commentId: '!:grpc.AsyncUnaryCall{Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse}'
  definition: grpc.AsyncUnaryCall`1
  name: grpc.AsyncUnaryCall<ListSyncServersResponse>
  nameWithType: grpc.AsyncUnaryCall<ListSyncServersResponse>
  fullName: grpc.AsyncUnaryCall<Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse>
  nameWithType.vb: grpc.AsyncUnaryCall(Of ListSyncServersResponse)
  fullName.vb: grpc.AsyncUnaryCall(Of Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse)
  name.vb: grpc.AsyncUnaryCall(Of ListSyncServersResponse)
  spec.csharp:
  - uid: grpc.AsyncUnaryCall`1
    name: grpc.AsyncUnaryCall
    nameWithType: grpc.AsyncUnaryCall
    fullName: grpc.AsyncUnaryCall
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse
    name: ListSyncServersResponse
    nameWithType: ListSyncServersResponse
    fullName: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: grpc.AsyncUnaryCall`1
    name: grpc.AsyncUnaryCall
    nameWithType: grpc.AsyncUnaryCall
    fullName: grpc.AsyncUnaryCall
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse
    name: ListSyncServersResponse
    nameWithType: ListSyncServersResponse
    fullName: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.NewInstance*
  commentId: Overload:Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.NewInstance
  name: NewInstance
  nameWithType: PublisherService.PublisherServiceClient.NewInstance
  fullName: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.NewInstance
- uid: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient
  commentId: T:Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient
  parent: Unity.Reflect.ProjectServer.Services.Publisher
  name: PublisherService.PublisherServiceClient
  nameWithType: PublisherService.PublisherServiceClient
  fullName: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient
