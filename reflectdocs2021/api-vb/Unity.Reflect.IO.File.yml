### YamlMime:ManagedReference
items:
- uid: Unity.Reflect.IO.File
  commentId: T:Unity.Reflect.IO.File
  id: File
  parent: Unity.Reflect.IO
  children:
  - Unity.Reflect.IO.File.Load``1(System.String)
  - Unity.Reflect.IO.File.Load``1(System.String)
  - Unity.Reflect.IO.File.Save(ISyncModel,System.String)
  - Unity.Reflect.IO.File.Save(ISyncModel,System.String)
  - Unity.Reflect.IO.File.SaveAsync(ISyncModel,System.String)
  - Unity.Reflect.IO.File.SaveAsync(ISyncModel,System.String)
  langs:
  - csharp
  - vb
  name: File
  nameWithType: File
  fullName: Unity.Reflect.IO.File
  type: Class
  source:
    id: File
    path: ''
    startLine: 20221
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.IO
  summary: "\nThis class provides some methods to save or load models from files.\n"
  example: []
  syntax:
    content: public static class File
    content.vb: Public Module File
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Unity.Reflect.IO.File.Save(ISyncModel,System.String)
  commentId: M:Unity.Reflect.IO.File.Save(ISyncModel,System.String)
  id: Save(ISyncModel,System.String)
  parent: Unity.Reflect.IO.File
  langs:
  - csharp
  - vb
  name: Save(ISyncModel, String)
  nameWithType: File.Save(ISyncModel, String)
  fullName: Unity.Reflect.IO.File.Save(ISyncModel, System.String)
  type: Method
  source:
    id: Save
    path: ''
    startLine: 70
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.IO
  summary: "\nSaves a model in a file.\n"
  example: []
  syntax:
    content: public static void Save(ISyncModel model, string path)
    parameters:
    - id: model
      type: ISyncModel
      description: The model to save
    - id: path
      type: System.String
      description: The path of the file to create or overwrite
    content.vb: Public Shared Sub Save(model As ISyncModel, path As String)
  overload: Unity.Reflect.IO.File.Save*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Unity.Reflect.IO.File.SaveAsync(ISyncModel,System.String)
  commentId: M:Unity.Reflect.IO.File.SaveAsync(ISyncModel,System.String)
  id: SaveAsync(ISyncModel,System.String)
  parent: Unity.Reflect.IO.File
  langs:
  - csharp
  - vb
  name: SaveAsync(ISyncModel, String)
  nameWithType: File.SaveAsync(ISyncModel, String)
  fullName: Unity.Reflect.IO.File.SaveAsync(ISyncModel, System.String)
  type: Method
  source:
    id: SaveAsync
    path: ''
    startLine: 84
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.IO
  summary: "\nAsynchronously saves a model in a file.\n"
  example: []
  syntax:
    content: public static Task SaveAsync(ISyncModel model, string path)
    parameters:
    - id: model
      type: ISyncModel
      description: The model to save
    - id: path
      type: System.String
      description: The path of the file to create or overwrite
    return:
      type: Task
    content.vb: Public Shared Function SaveAsync(model As ISyncModel, path As String) As Task
  overload: Unity.Reflect.IO.File.SaveAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Unity.Reflect.IO.File.Load``1(System.String)
  commentId: M:Unity.Reflect.IO.File.Load``1(System.String)
  id: Load``1(System.String)
  parent: Unity.Reflect.IO.File
  langs:
  - csharp
  - vb
  name: Load<T>(String)
  nameWithType: File.Load<T>(String)
  fullName: Unity.Reflect.IO.File.Load<T>(System.String)
  type: Method
  source:
    id: Load
    path: ''
    startLine: 103
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.IO
  summary: "\nLoads a model from a file.\n"
  example: []
  syntax:
    content: >-
      public static T Load<T>(string path)
          where T : IMessage, ISyncModel
    parameters:
    - id: path
      type: System.String
      description: The path of the file to read
    typeParameters:
    - id: T
      description: The type of model that you want to load
    return:
      type: '{T}'
      description: A model of the desired type, created by parsing the provided file
    content.vb: Public Shared Function Load(Of T As {IMessage, ISyncModel})(path As String) As T
  overload: Unity.Reflect.IO.File.Load*
  nameWithType.vb: File.Load(Of T)(String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Unity.Reflect.IO.File.Load(Of T)(System.String)
  name.vb: Load(Of T)(String)
- uid: Unity.Reflect.IO.File.Save(ISyncModel,System.String)
  commentId: M:Unity.Reflect.IO.File.Save(ISyncModel,System.String)
  id: Save(ISyncModel,System.String)
  parent: Unity.Reflect.IO.File
  langs:
  - csharp
  - vb
  name: Save(ISyncModel, String)
  nameWithType: File.Save(ISyncModel, String)
  fullName: Unity.Reflect.IO.File.Save(ISyncModel, System.String)
  type: Method
  source:
    id: Save
    path: ''
    startLine: 20229
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.IO
  summary: "\nSaves a model in a file.\n"
  example: []
  syntax:
    content: public static void Save(ISyncModel model, string path)
    parameters:
    - id: model
      type: ISyncModel
      description: The model to save
    - id: path
      type: System.String
      description: The path of the file to create or overwrite
    content.vb: Public Shared Sub Save(model As ISyncModel, path As String)
  overload: Unity.Reflect.IO.File.Save*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Unity.Reflect.IO.File.SaveAsync(ISyncModel,System.String)
  commentId: M:Unity.Reflect.IO.File.SaveAsync(ISyncModel,System.String)
  id: SaveAsync(ISyncModel,System.String)
  parent: Unity.Reflect.IO.File
  langs:
  - csharp
  - vb
  name: SaveAsync(ISyncModel, String)
  nameWithType: File.SaveAsync(ISyncModel, String)
  fullName: Unity.Reflect.IO.File.SaveAsync(ISyncModel, System.String)
  type: Method
  source:
    id: SaveAsync
    path: ''
    startLine: 20243
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.IO
  summary: "\nAsynchronously saves a model in a file.\n"
  example: []
  syntax:
    content: public static Task SaveAsync(ISyncModel model, string path)
    parameters:
    - id: model
      type: ISyncModel
      description: The model to save
    - id: path
      type: System.String
      description: The path of the file to create or overwrite
    return:
      type: Task
    content.vb: Public Shared Function SaveAsync(model As ISyncModel, path As String) As Task
  overload: Unity.Reflect.IO.File.SaveAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Unity.Reflect.IO.File.Load``1(System.String)
  commentId: M:Unity.Reflect.IO.File.Load``1(System.String)
  id: Load``1(System.String)
  parent: Unity.Reflect.IO.File
  langs:
  - csharp
  - vb
  name: Load<T>(String)
  nameWithType: File.Load<T>(String)
  fullName: Unity.Reflect.IO.File.Load<T>(System.String)
  type: Method
  source:
    id: Load
    path: ''
    startLine: 20262
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.IO
  summary: "\nLoads a model from a file.\n"
  example: []
  syntax:
    content: >-
      public static T Load<T>(string path)
          where T : IMessage, ISyncModel
    parameters:
    - id: path
      type: System.String
      description: The path of the file to read
    typeParameters:
    - id: T
      description: The type of model that you want to load
    return:
      type: '{T}'
      description: A model of the desired type, created by parsing the provided file
    content.vb: Public Shared Function Load(Of T As {IMessage, ISyncModel})(path As String) As T
  overload: Unity.Reflect.IO.File.Load*
  nameWithType.vb: File.Load(Of T)(String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Unity.Reflect.IO.File.Load(Of T)(System.String)
  name.vb: Load(Of T)(String)
references:
- uid: Unity.Reflect.IO
  commentId: N:Unity.Reflect.IO
  name: Unity.Reflect.IO
  nameWithType: Unity.Reflect.IO
  fullName: Unity.Reflect.IO
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Unity.Reflect.IO.File.Save*
  commentId: Overload:Unity.Reflect.IO.File.Save
  name: Save
  nameWithType: File.Save
  fullName: Unity.Reflect.IO.File.Save
- uid: ISyncModel
  isExternal: true
  name: ISyncModel
  nameWithType: ISyncModel
  fullName: ISyncModel
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Unity.Reflect.IO.File.SaveAsync*
  commentId: Overload:Unity.Reflect.IO.File.SaveAsync
  name: SaveAsync
  nameWithType: File.SaveAsync
  fullName: Unity.Reflect.IO.File.SaveAsync
- uid: Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: Task
- uid: Unity.Reflect.IO.File.Load*
  commentId: Overload:Unity.Reflect.IO.File.Load
  name: Load
  nameWithType: File.Load
  fullName: Unity.Reflect.IO.File.Load
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
