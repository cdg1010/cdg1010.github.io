### YamlMime:ManagedReference
items:
- uid: Unity.Reflect.Model.SyncColor
  commentId: T:Unity.Reflect.Model.SyncColor
  id: SyncColor
  parent: Unity.Reflect.Model
  children:
  - Unity.Reflect.Model.SyncColor.#ctor
  - Unity.Reflect.Model.SyncColor.#ctor
  - Unity.Reflect.Model.SyncColor.#ctor(System.Single,System.Single,System.Single,System.Single)
  - Unity.Reflect.Model.SyncColor.#ctor(System.Single,System.Single,System.Single,System.Single)
  - Unity.Reflect.Model.SyncColor.#ctor(Unity.Reflect.Model.SyncColor)
  - Unity.Reflect.Model.SyncColor.#ctor(Unity.Reflect.Model.SyncColor)
  - Unity.Reflect.Model.SyncColor.A
  - Unity.Reflect.Model.SyncColor.A
  - Unity.Reflect.Model.SyncColor.AFieldNumber
  - Unity.Reflect.Model.SyncColor.AFieldNumber
  - Unity.Reflect.Model.SyncColor.B
  - Unity.Reflect.Model.SyncColor.B
  - Unity.Reflect.Model.SyncColor.BFieldNumber
  - Unity.Reflect.Model.SyncColor.BFieldNumber
  - Unity.Reflect.Model.SyncColor.Black
  - Unity.Reflect.Model.SyncColor.Black
  - Unity.Reflect.Model.SyncColor.CalculateSize
  - Unity.Reflect.Model.SyncColor.CalculateSize
  - Unity.Reflect.Model.SyncColor.Clone
  - Unity.Reflect.Model.SyncColor.Clone
  - Unity.Reflect.Model.SyncColor.Descriptor
  - Unity.Reflect.Model.SyncColor.Descriptor
  - Unity.Reflect.Model.SyncColor.Equals(System.Object)
  - Unity.Reflect.Model.SyncColor.Equals(System.Object)
  - Unity.Reflect.Model.SyncColor.Equals(Unity.Reflect.Model.SyncColor)
  - Unity.Reflect.Model.SyncColor.Equals(Unity.Reflect.Model.SyncColor)
  - Unity.Reflect.Model.SyncColor.From256(System.Int32,System.Int32,System.Int32,System.Int32)
  - Unity.Reflect.Model.SyncColor.From256(System.Int32,System.Int32,System.Int32,System.Int32)
  - Unity.Reflect.Model.SyncColor.G
  - Unity.Reflect.Model.SyncColor.G
  - Unity.Reflect.Model.SyncColor.GetHashCode
  - Unity.Reflect.Model.SyncColor.GetHashCode
  - Unity.Reflect.Model.SyncColor.GFieldNumber
  - Unity.Reflect.Model.SyncColor.GFieldNumber
  - Unity.Reflect.Model.SyncColor.Lerp(Unity.Reflect.Model.SyncColor,Unity.Reflect.Model.SyncColor,System.Single)
  - Unity.Reflect.Model.SyncColor.Lerp(Unity.Reflect.Model.SyncColor,Unity.Reflect.Model.SyncColor,System.Single)
  - Unity.Reflect.Model.SyncColor.MergeFrom(pb.CodedInputStream)
  - Unity.Reflect.Model.SyncColor.MergeFrom(pb.CodedInputStream)
  - Unity.Reflect.Model.SyncColor.MergeFrom(Unity.Reflect.Model.SyncColor)
  - Unity.Reflect.Model.SyncColor.MergeFrom(Unity.Reflect.Model.SyncColor)
  - Unity.Reflect.Model.SyncColor.op_Addition(Unity.Reflect.Model.SyncColor,Unity.Reflect.Model.SyncColor)
  - Unity.Reflect.Model.SyncColor.op_Addition(Unity.Reflect.Model.SyncColor,Unity.Reflect.Model.SyncColor)
  - Unity.Reflect.Model.SyncColor.op_Equality(Unity.Reflect.Model.SyncColor,Unity.Reflect.Model.SyncColor)
  - Unity.Reflect.Model.SyncColor.op_Equality(Unity.Reflect.Model.SyncColor,Unity.Reflect.Model.SyncColor)
  - Unity.Reflect.Model.SyncColor.op_Inequality(Unity.Reflect.Model.SyncColor,Unity.Reflect.Model.SyncColor)
  - Unity.Reflect.Model.SyncColor.op_Inequality(Unity.Reflect.Model.SyncColor,Unity.Reflect.Model.SyncColor)
  - Unity.Reflect.Model.SyncColor.op_Multiply(System.Single,Unity.Reflect.Model.SyncColor)
  - Unity.Reflect.Model.SyncColor.op_Multiply(System.Single,Unity.Reflect.Model.SyncColor)
  - Unity.Reflect.Model.SyncColor.op_Multiply(Unity.Reflect.Model.SyncColor,Unity.Reflect.Model.SyncColor)
  - Unity.Reflect.Model.SyncColor.op_Multiply(Unity.Reflect.Model.SyncColor,Unity.Reflect.Model.SyncColor)
  - Unity.Reflect.Model.SyncColor.Parser
  - Unity.Reflect.Model.SyncColor.Parser
  - Unity.Reflect.Model.SyncColor.R
  - Unity.Reflect.Model.SyncColor.R
  - Unity.Reflect.Model.SyncColor.RFieldNumber
  - Unity.Reflect.Model.SyncColor.RFieldNumber
  - Unity.Reflect.Model.SyncColor.ToString
  - Unity.Reflect.Model.SyncColor.ToString
  - Unity.Reflect.Model.SyncColor.White
  - Unity.Reflect.Model.SyncColor.White
  - Unity.Reflect.Model.SyncColor.WriteTo(pb.CodedOutputStream)
  - Unity.Reflect.Model.SyncColor.WriteTo(pb.CodedOutputStream)
  langs:
  - csharp
  - vb
  name: SyncColor
  nameWithType: SyncColor
  fullName: Unity.Reflect.Model.SyncColor
  type: Class
  source:
    id: SyncColor
    path: ''
    startLine: 22383
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: 'public sealed class SyncColor : pb.IMessage<SyncColor>, pb.IMessage<SyncColor>'
    content.vb: >-
      Public NotInheritable Class SyncColor
          Inherits pb.IMessage(Of SyncColor)
          Implements pb.IMessage(Of SyncColor)
  inheritance:
  - System.Object
  implements:
  - pb.IMessage{Unity.Reflect.Model.SyncColor}
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Unity.Reflect.Model.SyncColor.Black
  commentId: M:Unity.Reflect.Model.SyncColor.Black
  id: Black
  parent: Unity.Reflect.Model.SyncColor
  langs:
  - csharp
  - vb
  name: Black()
  nameWithType: SyncColor.Black()
  fullName: Unity.Reflect.Model.SyncColor.Black()
  type: Method
  source:
    id: Black
    path: ''
    startLine: 435
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public static SyncColor Black()
    return:
      type: Unity.Reflect.Model.SyncColor
    content.vb: Public Shared Function Black As SyncColor
  overload: Unity.Reflect.Model.SyncColor.Black*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Unity.Reflect.Model.SyncColor.White
  commentId: M:Unity.Reflect.Model.SyncColor.White
  id: White
  parent: Unity.Reflect.Model.SyncColor
  langs:
  - csharp
  - vb
  name: White()
  nameWithType: SyncColor.White()
  fullName: Unity.Reflect.Model.SyncColor.White()
  type: Method
  source:
    id: White
    path: ''
    startLine: 437
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public static SyncColor White()
    return:
      type: Unity.Reflect.Model.SyncColor
    content.vb: Public Shared Function White As SyncColor
  overload: Unity.Reflect.Model.SyncColor.White*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Unity.Reflect.Model.SyncColor.#ctor(System.Single,System.Single,System.Single,System.Single)
  commentId: M:Unity.Reflect.Model.SyncColor.#ctor(System.Single,System.Single,System.Single,System.Single)
  id: '#ctor(System.Single,System.Single,System.Single,System.Single)'
  parent: Unity.Reflect.Model.SyncColor
  langs:
  - csharp
  - vb
  name: SyncColor(Single, Single, Single, Single)
  nameWithType: SyncColor.SyncColor(Single, Single, Single, Single)
  fullName: Unity.Reflect.Model.SyncColor.SyncColor(System.Single, System.Single, System.Single, System.Single)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 439
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public SyncColor(float r, float g, float b, float a = 1F)
    parameters:
    - id: r
      type: System.Single
    - id: g
      type: System.Single
    - id: b
      type: System.Single
    - id: a
      type: System.Single
    content.vb: Public Sub New(r As Single, g As Single, b As Single, a As Single = 1F)
  overload: Unity.Reflect.Model.SyncColor.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unity.Reflect.Model.SyncColor.From256(System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:Unity.Reflect.Model.SyncColor.From256(System.Int32,System.Int32,System.Int32,System.Int32)
  id: From256(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: Unity.Reflect.Model.SyncColor
  langs:
  - csharp
  - vb
  name: From256(Int32, Int32, Int32, Int32)
  nameWithType: SyncColor.From256(Int32, Int32, Int32, Int32)
  fullName: Unity.Reflect.Model.SyncColor.From256(System.Int32, System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    id: From256
    path: ''
    startLine: 447
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public static SyncColor From256(int r, int g, int b, int a = 255)
    parameters:
    - id: r
      type: System.Int32
    - id: g
      type: System.Int32
    - id: b
      type: System.Int32
    - id: a
      type: System.Int32
    return:
      type: Unity.Reflect.Model.SyncColor
    content.vb: Public Shared Function From256(r As Integer, g As Integer, b As Integer, a As Integer = 255) As SyncColor
  overload: Unity.Reflect.Model.SyncColor.From256*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Unity.Reflect.Model.SyncColor.op_Multiply(Unity.Reflect.Model.SyncColor,Unity.Reflect.Model.SyncColor)
  commentId: M:Unity.Reflect.Model.SyncColor.op_Multiply(Unity.Reflect.Model.SyncColor,Unity.Reflect.Model.SyncColor)
  id: op_Multiply(Unity.Reflect.Model.SyncColor,Unity.Reflect.Model.SyncColor)
  parent: Unity.Reflect.Model.SyncColor
  langs:
  - csharp
  - vb
  name: Multiply(SyncColor, SyncColor)
  nameWithType: SyncColor.Multiply(SyncColor, SyncColor)
  fullName: Unity.Reflect.Model.SyncColor.Multiply(Unity.Reflect.Model.SyncColor, Unity.Reflect.Model.SyncColor)
  type: Operator
  source:
    id: op_Multiply
    path: ''
    startLine: 452
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public static SyncColor operator *(SyncColor c1, SyncColor c)
    parameters:
    - id: c1
      type: Unity.Reflect.Model.SyncColor
    - id: c
      type: Unity.Reflect.Model.SyncColor
    return:
      type: Unity.Reflect.Model.SyncColor
    content.vb: Public Shared Operator *(c1 As SyncColor, c As SyncColor) As SyncColor
  overload: Unity.Reflect.Model.SyncColor.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Unity.Reflect.Model.SyncColor.op_Multiply(System.Single,Unity.Reflect.Model.SyncColor)
  commentId: M:Unity.Reflect.Model.SyncColor.op_Multiply(System.Single,Unity.Reflect.Model.SyncColor)
  id: op_Multiply(System.Single,Unity.Reflect.Model.SyncColor)
  parent: Unity.Reflect.Model.SyncColor
  langs:
  - csharp
  - vb
  name: Multiply(Single, SyncColor)
  nameWithType: SyncColor.Multiply(Single, SyncColor)
  fullName: Unity.Reflect.Model.SyncColor.Multiply(System.Single, Unity.Reflect.Model.SyncColor)
  type: Operator
  source:
    id: op_Multiply
    path: ''
    startLine: 457
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public static SyncColor operator *(float f, SyncColor c)
    parameters:
    - id: f
      type: System.Single
    - id: c
      type: Unity.Reflect.Model.SyncColor
    return:
      type: Unity.Reflect.Model.SyncColor
    content.vb: Public Shared Operator *(f As Single, c As SyncColor) As SyncColor
  overload: Unity.Reflect.Model.SyncColor.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Unity.Reflect.Model.SyncColor.op_Addition(Unity.Reflect.Model.SyncColor,Unity.Reflect.Model.SyncColor)
  commentId: M:Unity.Reflect.Model.SyncColor.op_Addition(Unity.Reflect.Model.SyncColor,Unity.Reflect.Model.SyncColor)
  id: op_Addition(Unity.Reflect.Model.SyncColor,Unity.Reflect.Model.SyncColor)
  parent: Unity.Reflect.Model.SyncColor
  langs:
  - csharp
  - vb
  name: Addition(SyncColor, SyncColor)
  nameWithType: SyncColor.Addition(SyncColor, SyncColor)
  fullName: Unity.Reflect.Model.SyncColor.Addition(Unity.Reflect.Model.SyncColor, Unity.Reflect.Model.SyncColor)
  type: Operator
  source:
    id: op_Addition
    path: ''
    startLine: 462
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public static SyncColor operator +(SyncColor c1, SyncColor c)
    parameters:
    - id: c1
      type: Unity.Reflect.Model.SyncColor
    - id: c
      type: Unity.Reflect.Model.SyncColor
    return:
      type: Unity.Reflect.Model.SyncColor
    content.vb: Public Shared Operator +(c1 As SyncColor, c As SyncColor) As SyncColor
  overload: Unity.Reflect.Model.SyncColor.op_Addition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Unity.Reflect.Model.SyncColor.Lerp(Unity.Reflect.Model.SyncColor,Unity.Reflect.Model.SyncColor,System.Single)
  commentId: M:Unity.Reflect.Model.SyncColor.Lerp(Unity.Reflect.Model.SyncColor,Unity.Reflect.Model.SyncColor,System.Single)
  id: Lerp(Unity.Reflect.Model.SyncColor,Unity.Reflect.Model.SyncColor,System.Single)
  parent: Unity.Reflect.Model.SyncColor
  langs:
  - csharp
  - vb
  name: Lerp(SyncColor, SyncColor, Single)
  nameWithType: SyncColor.Lerp(SyncColor, SyncColor, Single)
  fullName: Unity.Reflect.Model.SyncColor.Lerp(Unity.Reflect.Model.SyncColor, Unity.Reflect.Model.SyncColor, System.Single)
  type: Method
  source:
    id: Lerp
    path: ''
    startLine: 467
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public static SyncColor Lerp(SyncColor c1, SyncColor c2, float u)
    parameters:
    - id: c1
      type: Unity.Reflect.Model.SyncColor
    - id: c2
      type: Unity.Reflect.Model.SyncColor
    - id: u
      type: System.Single
    return:
      type: Unity.Reflect.Model.SyncColor
    content.vb: Public Shared Function Lerp(c1 As SyncColor, c2 As SyncColor, u As Single) As SyncColor
  overload: Unity.Reflect.Model.SyncColor.Lerp*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Unity.Reflect.Model.SyncColor.op_Equality(Unity.Reflect.Model.SyncColor,Unity.Reflect.Model.SyncColor)
  commentId: M:Unity.Reflect.Model.SyncColor.op_Equality(Unity.Reflect.Model.SyncColor,Unity.Reflect.Model.SyncColor)
  id: op_Equality(Unity.Reflect.Model.SyncColor,Unity.Reflect.Model.SyncColor)
  parent: Unity.Reflect.Model.SyncColor
  langs:
  - csharp
  - vb
  name: Equality(SyncColor, SyncColor)
  nameWithType: SyncColor.Equality(SyncColor, SyncColor)
  fullName: Unity.Reflect.Model.SyncColor.Equality(Unity.Reflect.Model.SyncColor, Unity.Reflect.Model.SyncColor)
  type: Operator
  source:
    id: op_Equality
    path: ''
    startLine: 472
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public static bool operator ==(SyncColor c1, SyncColor c2)
    parameters:
    - id: c1
      type: Unity.Reflect.Model.SyncColor
    - id: c2
      type: Unity.Reflect.Model.SyncColor
    return:
      type: System.Boolean
    content.vb: Public Shared Operator =(c1 As SyncColor, c2 As SyncColor) As Boolean
  overload: Unity.Reflect.Model.SyncColor.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Unity.Reflect.Model.SyncColor.op_Inequality(Unity.Reflect.Model.SyncColor,Unity.Reflect.Model.SyncColor)
  commentId: M:Unity.Reflect.Model.SyncColor.op_Inequality(Unity.Reflect.Model.SyncColor,Unity.Reflect.Model.SyncColor)
  id: op_Inequality(Unity.Reflect.Model.SyncColor,Unity.Reflect.Model.SyncColor)
  parent: Unity.Reflect.Model.SyncColor
  langs:
  - csharp
  - vb
  name: Inequality(SyncColor, SyncColor)
  nameWithType: SyncColor.Inequality(SyncColor, SyncColor)
  fullName: Unity.Reflect.Model.SyncColor.Inequality(Unity.Reflect.Model.SyncColor, Unity.Reflect.Model.SyncColor)
  type: Operator
  source:
    id: op_Inequality
    path: ''
    startLine: 483
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public static bool operator !=(SyncColor c1, SyncColor c2)
    parameters:
    - id: c1
      type: Unity.Reflect.Model.SyncColor
    - id: c2
      type: Unity.Reflect.Model.SyncColor
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <>(c1 As SyncColor, c2 As SyncColor) As Boolean
  overload: Unity.Reflect.Model.SyncColor.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Unity.Reflect.Model.SyncColor.Parser
  commentId: P:Unity.Reflect.Model.SyncColor.Parser
  id: Parser
  parent: Unity.Reflect.Model.SyncColor
  langs:
  - csharp
  - vb
  name: Parser
  nameWithType: SyncColor.Parser
  fullName: Unity.Reflect.Model.SyncColor.Parser
  type: Property
  source:
    id: Parser
    path: ''
    startLine: 2227
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public static pb.MessageParser<SyncColor> Parser { get; }
    parameters: []
    return:
      type: pb.MessageParser{Unity.Reflect.Model.SyncColor}
    content.vb: Public Shared ReadOnly Property Parser As pb.MessageParser(Of SyncColor)
  overload: Unity.Reflect.Model.SyncColor.Parser*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Unity.Reflect.Model.SyncColor.Descriptor
  commentId: P:Unity.Reflect.Model.SyncColor.Descriptor
  id: Descriptor
  parent: Unity.Reflect.Model.SyncColor
  langs:
  - csharp
  - vb
  name: Descriptor
  nameWithType: SyncColor.Descriptor
  fullName: Unity.Reflect.Model.SyncColor.Descriptor
  type: Property
  source:
    id: Descriptor
    path: ''
    startLine: 2230
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public static pbr.MessageDescriptor Descriptor { get; }
    parameters: []
    return:
      type: pbr.MessageDescriptor
    content.vb: Public Shared ReadOnly Property Descriptor As pbr.MessageDescriptor
  overload: Unity.Reflect.Model.SyncColor.Descriptor*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Unity.Reflect.Model.SyncColor.#ctor
  commentId: M:Unity.Reflect.Model.SyncColor.#ctor
  id: '#ctor'
  parent: Unity.Reflect.Model.SyncColor
  langs:
  - csharp
  - vb
  name: SyncColor()
  nameWithType: SyncColor.SyncColor()
  fullName: Unity.Reflect.Model.SyncColor.SyncColor()
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 2240
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public SyncColor()
    content.vb: Public Sub New
  overload: Unity.Reflect.Model.SyncColor.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unity.Reflect.Model.SyncColor.#ctor(Unity.Reflect.Model.SyncColor)
  commentId: M:Unity.Reflect.Model.SyncColor.#ctor(Unity.Reflect.Model.SyncColor)
  id: '#ctor(Unity.Reflect.Model.SyncColor)'
  parent: Unity.Reflect.Model.SyncColor
  langs:
  - csharp
  - vb
  name: SyncColor(SyncColor)
  nameWithType: SyncColor.SyncColor(SyncColor)
  fullName: Unity.Reflect.Model.SyncColor.SyncColor(Unity.Reflect.Model.SyncColor)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 2247
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public SyncColor(SyncColor other)
    parameters:
    - id: other
      type: Unity.Reflect.Model.SyncColor
    content.vb: Public Sub New(other As SyncColor)
  overload: Unity.Reflect.Model.SyncColor.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unity.Reflect.Model.SyncColor.Clone
  commentId: M:Unity.Reflect.Model.SyncColor.Clone
  id: Clone
  parent: Unity.Reflect.Model.SyncColor
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: SyncColor.Clone()
  fullName: Unity.Reflect.Model.SyncColor.Clone()
  type: Method
  source:
    id: Clone
    path: ''
    startLine: 2256
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public SyncColor Clone()
    return:
      type: Unity.Reflect.Model.SyncColor
    content.vb: Public Function Clone As SyncColor
  overload: Unity.Reflect.Model.SyncColor.Clone*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unity.Reflect.Model.SyncColor.RFieldNumber
  commentId: F:Unity.Reflect.Model.SyncColor.RFieldNumber
  id: RFieldNumber
  parent: Unity.Reflect.Model.SyncColor
  langs:
  - csharp
  - vb
  name: RFieldNumber
  nameWithType: SyncColor.RFieldNumber
  fullName: Unity.Reflect.Model.SyncColor.RFieldNumber
  type: Field
  source:
    id: RFieldNumber
    path: ''
    startLine: 2262
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  summary: Field number for the &quot;r&quot; field.
  example: []
  syntax:
    content: public const int RFieldNumber = 1
    return:
      type: System.Int32
    content.vb: Public Const RFieldNumber As Integer = 1
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Unity.Reflect.Model.SyncColor.R
  commentId: P:Unity.Reflect.Model.SyncColor.R
  id: R
  parent: Unity.Reflect.Model.SyncColor
  langs:
  - csharp
  - vb
  name: R
  nameWithType: SyncColor.R
  fullName: Unity.Reflect.Model.SyncColor.R
  type: Property
  source:
    id: R
    path: ''
    startLine: 2264
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public float R { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property R As Single
  overload: Unity.Reflect.Model.SyncColor.R*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unity.Reflect.Model.SyncColor.GFieldNumber
  commentId: F:Unity.Reflect.Model.SyncColor.GFieldNumber
  id: GFieldNumber
  parent: Unity.Reflect.Model.SyncColor
  langs:
  - csharp
  - vb
  name: GFieldNumber
  nameWithType: SyncColor.GFieldNumber
  fullName: Unity.Reflect.Model.SyncColor.GFieldNumber
  type: Field
  source:
    id: GFieldNumber
    path: ''
    startLine: 2273
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  summary: Field number for the &quot;g&quot; field.
  example: []
  syntax:
    content: public const int GFieldNumber = 2
    return:
      type: System.Int32
    content.vb: Public Const GFieldNumber As Integer = 2
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Unity.Reflect.Model.SyncColor.G
  commentId: P:Unity.Reflect.Model.SyncColor.G
  id: G
  parent: Unity.Reflect.Model.SyncColor
  langs:
  - csharp
  - vb
  name: G
  nameWithType: SyncColor.G
  fullName: Unity.Reflect.Model.SyncColor.G
  type: Property
  source:
    id: G
    path: ''
    startLine: 2275
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public float G { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property G As Single
  overload: Unity.Reflect.Model.SyncColor.G*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unity.Reflect.Model.SyncColor.BFieldNumber
  commentId: F:Unity.Reflect.Model.SyncColor.BFieldNumber
  id: BFieldNumber
  parent: Unity.Reflect.Model.SyncColor
  langs:
  - csharp
  - vb
  name: BFieldNumber
  nameWithType: SyncColor.BFieldNumber
  fullName: Unity.Reflect.Model.SyncColor.BFieldNumber
  type: Field
  source:
    id: BFieldNumber
    path: ''
    startLine: 2284
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  summary: Field number for the &quot;b&quot; field.
  example: []
  syntax:
    content: public const int BFieldNumber = 3
    return:
      type: System.Int32
    content.vb: Public Const BFieldNumber As Integer = 3
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Unity.Reflect.Model.SyncColor.B
  commentId: P:Unity.Reflect.Model.SyncColor.B
  id: B
  parent: Unity.Reflect.Model.SyncColor
  langs:
  - csharp
  - vb
  name: B
  nameWithType: SyncColor.B
  fullName: Unity.Reflect.Model.SyncColor.B
  type: Property
  source:
    id: B
    path: ''
    startLine: 2286
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public float B { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property B As Single
  overload: Unity.Reflect.Model.SyncColor.B*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unity.Reflect.Model.SyncColor.AFieldNumber
  commentId: F:Unity.Reflect.Model.SyncColor.AFieldNumber
  id: AFieldNumber
  parent: Unity.Reflect.Model.SyncColor
  langs:
  - csharp
  - vb
  name: AFieldNumber
  nameWithType: SyncColor.AFieldNumber
  fullName: Unity.Reflect.Model.SyncColor.AFieldNumber
  type: Field
  source:
    id: AFieldNumber
    path: ''
    startLine: 2295
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  summary: Field number for the &quot;a&quot; field.
  example: []
  syntax:
    content: public const int AFieldNumber = 4
    return:
      type: System.Int32
    content.vb: Public Const AFieldNumber As Integer = 4
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Unity.Reflect.Model.SyncColor.A
  commentId: P:Unity.Reflect.Model.SyncColor.A
  id: A
  parent: Unity.Reflect.Model.SyncColor
  langs:
  - csharp
  - vb
  name: A
  nameWithType: SyncColor.A
  fullName: Unity.Reflect.Model.SyncColor.A
  type: Property
  source:
    id: A
    path: ''
    startLine: 2297
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public float A { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property A As Single
  overload: Unity.Reflect.Model.SyncColor.A*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unity.Reflect.Model.SyncColor.Equals(System.Object)
  commentId: M:Unity.Reflect.Model.SyncColor.Equals(System.Object)
  id: Equals(System.Object)
  parent: Unity.Reflect.Model.SyncColor
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: SyncColor.Equals(Object)
  fullName: Unity.Reflect.Model.SyncColor.Equals(System.Object)
  type: Method
  source:
    id: Equals
    path: ''
    startLine: 2305
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public override bool Equals(object other)
    parameters:
    - id: other
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(other As Object) As Boolean
  overload: Unity.Reflect.Model.SyncColor.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Unity.Reflect.Model.SyncColor.Equals(Unity.Reflect.Model.SyncColor)
  commentId: M:Unity.Reflect.Model.SyncColor.Equals(Unity.Reflect.Model.SyncColor)
  id: Equals(Unity.Reflect.Model.SyncColor)
  parent: Unity.Reflect.Model.SyncColor
  langs:
  - csharp
  - vb
  name: Equals(SyncColor)
  nameWithType: SyncColor.Equals(SyncColor)
  fullName: Unity.Reflect.Model.SyncColor.Equals(Unity.Reflect.Model.SyncColor)
  type: Method
  source:
    id: Equals
    path: ''
    startLine: 2310
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public bool Equals(SyncColor other)
    parameters:
    - id: other
      type: Unity.Reflect.Model.SyncColor
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As SyncColor) As Boolean
  overload: Unity.Reflect.Model.SyncColor.Equals*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unity.Reflect.Model.SyncColor.GetHashCode
  commentId: M:Unity.Reflect.Model.SyncColor.GetHashCode
  id: GetHashCode
  parent: Unity.Reflect.Model.SyncColor
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: SyncColor.GetHashCode()
  fullName: Unity.Reflect.Model.SyncColor.GetHashCode()
  type: Method
  source:
    id: GetHashCode
    path: ''
    startLine: 2325
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overload: Unity.Reflect.Model.SyncColor.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Unity.Reflect.Model.SyncColor.ToString
  commentId: M:Unity.Reflect.Model.SyncColor.ToString
  id: ToString
  parent: Unity.Reflect.Model.SyncColor
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: SyncColor.ToString()
  fullName: Unity.Reflect.Model.SyncColor.ToString()
  type: Method
  source:
    id: ToString
    path: ''
    startLine: 2338
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overload: Unity.Reflect.Model.SyncColor.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Unity.Reflect.Model.SyncColor.WriteTo(pb.CodedOutputStream)
  commentId: M:Unity.Reflect.Model.SyncColor.WriteTo(pb.CodedOutputStream)
  id: WriteTo(pb.CodedOutputStream)
  parent: Unity.Reflect.Model.SyncColor
  langs:
  - csharp
  - vb
  name: WriteTo(pb.CodedOutputStream)
  nameWithType: SyncColor.WriteTo(pb.CodedOutputStream)
  fullName: Unity.Reflect.Model.SyncColor.WriteTo(pb.CodedOutputStream)
  type: Method
  source:
    id: WriteTo
    path: ''
    startLine: 2343
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public void WriteTo(pb.CodedOutputStream output)
    parameters:
    - id: output
      type: pb.CodedOutputStream
    content.vb: Public Sub WriteTo(output As pb.CodedOutputStream)
  overload: Unity.Reflect.Model.SyncColor.WriteTo*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unity.Reflect.Model.SyncColor.CalculateSize
  commentId: M:Unity.Reflect.Model.SyncColor.CalculateSize
  id: CalculateSize
  parent: Unity.Reflect.Model.SyncColor
  langs:
  - csharp
  - vb
  name: CalculateSize()
  nameWithType: SyncColor.CalculateSize()
  fullName: Unity.Reflect.Model.SyncColor.CalculateSize()
  type: Method
  source:
    id: CalculateSize
    path: ''
    startLine: 2366
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public int CalculateSize()
    return:
      type: System.Int32
    content.vb: Public Function CalculateSize As Integer
  overload: Unity.Reflect.Model.SyncColor.CalculateSize*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unity.Reflect.Model.SyncColor.MergeFrom(Unity.Reflect.Model.SyncColor)
  commentId: M:Unity.Reflect.Model.SyncColor.MergeFrom(Unity.Reflect.Model.SyncColor)
  id: MergeFrom(Unity.Reflect.Model.SyncColor)
  parent: Unity.Reflect.Model.SyncColor
  langs:
  - csharp
  - vb
  name: MergeFrom(SyncColor)
  nameWithType: SyncColor.MergeFrom(SyncColor)
  fullName: Unity.Reflect.Model.SyncColor.MergeFrom(Unity.Reflect.Model.SyncColor)
  type: Method
  source:
    id: MergeFrom
    path: ''
    startLine: 2387
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public void MergeFrom(SyncColor other)
    parameters:
    - id: other
      type: Unity.Reflect.Model.SyncColor
    content.vb: Public Sub MergeFrom(other As SyncColor)
  overload: Unity.Reflect.Model.SyncColor.MergeFrom*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unity.Reflect.Model.SyncColor.MergeFrom(pb.CodedInputStream)
  commentId: M:Unity.Reflect.Model.SyncColor.MergeFrom(pb.CodedInputStream)
  id: MergeFrom(pb.CodedInputStream)
  parent: Unity.Reflect.Model.SyncColor
  langs:
  - csharp
  - vb
  name: MergeFrom(pb.CodedInputStream)
  nameWithType: SyncColor.MergeFrom(pb.CodedInputStream)
  fullName: Unity.Reflect.Model.SyncColor.MergeFrom(pb.CodedInputStream)
  type: Method
  source:
    id: MergeFrom
    path: ''
    startLine: 2407
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public void MergeFrom(pb.CodedInputStream input)
    parameters:
    - id: input
      type: pb.CodedInputStream
    content.vb: Public Sub MergeFrom(input As pb.CodedInputStream)
  overload: Unity.Reflect.Model.SyncColor.MergeFrom*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unity.Reflect.Model.SyncColor.Black
  commentId: M:Unity.Reflect.Model.SyncColor.Black
  id: Black
  parent: Unity.Reflect.Model.SyncColor
  langs:
  - csharp
  - vb
  name: Black()
  nameWithType: SyncColor.Black()
  fullName: Unity.Reflect.Model.SyncColor.Black()
  type: Method
  source:
    id: Black
    path: ''
    startLine: 20594
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public static SyncColor Black()
    return:
      type: Unity.Reflect.Model.SyncColor
    content.vb: Public Shared Function Black As SyncColor
  overload: Unity.Reflect.Model.SyncColor.Black*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Unity.Reflect.Model.SyncColor.White
  commentId: M:Unity.Reflect.Model.SyncColor.White
  id: White
  parent: Unity.Reflect.Model.SyncColor
  langs:
  - csharp
  - vb
  name: White()
  nameWithType: SyncColor.White()
  fullName: Unity.Reflect.Model.SyncColor.White()
  type: Method
  source:
    id: White
    path: ''
    startLine: 20596
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public static SyncColor White()
    return:
      type: Unity.Reflect.Model.SyncColor
    content.vb: Public Shared Function White As SyncColor
  overload: Unity.Reflect.Model.SyncColor.White*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Unity.Reflect.Model.SyncColor.#ctor(System.Single,System.Single,System.Single,System.Single)
  commentId: M:Unity.Reflect.Model.SyncColor.#ctor(System.Single,System.Single,System.Single,System.Single)
  id: '#ctor(System.Single,System.Single,System.Single,System.Single)'
  parent: Unity.Reflect.Model.SyncColor
  langs:
  - csharp
  - vb
  name: SyncColor(Single, Single, Single, Single)
  nameWithType: SyncColor.SyncColor(Single, Single, Single, Single)
  fullName: Unity.Reflect.Model.SyncColor.SyncColor(System.Single, System.Single, System.Single, System.Single)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 20598
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public SyncColor(float r, float g, float b, float a = 1F)
    parameters:
    - id: r
      type: System.Single
    - id: g
      type: System.Single
    - id: b
      type: System.Single
    - id: a
      type: System.Single
    content.vb: Public Sub New(r As Single, g As Single, b As Single, a As Single = 1F)
  overload: Unity.Reflect.Model.SyncColor.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unity.Reflect.Model.SyncColor.From256(System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:Unity.Reflect.Model.SyncColor.From256(System.Int32,System.Int32,System.Int32,System.Int32)
  id: From256(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: Unity.Reflect.Model.SyncColor
  langs:
  - csharp
  - vb
  name: From256(Int32, Int32, Int32, Int32)
  nameWithType: SyncColor.From256(Int32, Int32, Int32, Int32)
  fullName: Unity.Reflect.Model.SyncColor.From256(System.Int32, System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    id: From256
    path: ''
    startLine: 20606
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public static SyncColor From256(int r, int g, int b, int a = 255)
    parameters:
    - id: r
      type: System.Int32
    - id: g
      type: System.Int32
    - id: b
      type: System.Int32
    - id: a
      type: System.Int32
    return:
      type: Unity.Reflect.Model.SyncColor
    content.vb: Public Shared Function From256(r As Integer, g As Integer, b As Integer, a As Integer = 255) As SyncColor
  overload: Unity.Reflect.Model.SyncColor.From256*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Unity.Reflect.Model.SyncColor.op_Multiply(Unity.Reflect.Model.SyncColor,Unity.Reflect.Model.SyncColor)
  commentId: M:Unity.Reflect.Model.SyncColor.op_Multiply(Unity.Reflect.Model.SyncColor,Unity.Reflect.Model.SyncColor)
  id: op_Multiply(Unity.Reflect.Model.SyncColor,Unity.Reflect.Model.SyncColor)
  parent: Unity.Reflect.Model.SyncColor
  langs:
  - csharp
  - vb
  name: Multiply(SyncColor, SyncColor)
  nameWithType: SyncColor.Multiply(SyncColor, SyncColor)
  fullName: Unity.Reflect.Model.SyncColor.Multiply(Unity.Reflect.Model.SyncColor, Unity.Reflect.Model.SyncColor)
  type: Operator
  source:
    id: op_Multiply
    path: ''
    startLine: 20611
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public static SyncColor operator *(SyncColor c1, SyncColor c)
    parameters:
    - id: c1
      type: Unity.Reflect.Model.SyncColor
    - id: c
      type: Unity.Reflect.Model.SyncColor
    return:
      type: Unity.Reflect.Model.SyncColor
    content.vb: Public Shared Operator *(c1 As SyncColor, c As SyncColor) As SyncColor
  overload: Unity.Reflect.Model.SyncColor.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Unity.Reflect.Model.SyncColor.op_Multiply(System.Single,Unity.Reflect.Model.SyncColor)
  commentId: M:Unity.Reflect.Model.SyncColor.op_Multiply(System.Single,Unity.Reflect.Model.SyncColor)
  id: op_Multiply(System.Single,Unity.Reflect.Model.SyncColor)
  parent: Unity.Reflect.Model.SyncColor
  langs:
  - csharp
  - vb
  name: Multiply(Single, SyncColor)
  nameWithType: SyncColor.Multiply(Single, SyncColor)
  fullName: Unity.Reflect.Model.SyncColor.Multiply(System.Single, Unity.Reflect.Model.SyncColor)
  type: Operator
  source:
    id: op_Multiply
    path: ''
    startLine: 20616
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public static SyncColor operator *(float f, SyncColor c)
    parameters:
    - id: f
      type: System.Single
    - id: c
      type: Unity.Reflect.Model.SyncColor
    return:
      type: Unity.Reflect.Model.SyncColor
    content.vb: Public Shared Operator *(f As Single, c As SyncColor) As SyncColor
  overload: Unity.Reflect.Model.SyncColor.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Unity.Reflect.Model.SyncColor.op_Addition(Unity.Reflect.Model.SyncColor,Unity.Reflect.Model.SyncColor)
  commentId: M:Unity.Reflect.Model.SyncColor.op_Addition(Unity.Reflect.Model.SyncColor,Unity.Reflect.Model.SyncColor)
  id: op_Addition(Unity.Reflect.Model.SyncColor,Unity.Reflect.Model.SyncColor)
  parent: Unity.Reflect.Model.SyncColor
  langs:
  - csharp
  - vb
  name: Addition(SyncColor, SyncColor)
  nameWithType: SyncColor.Addition(SyncColor, SyncColor)
  fullName: Unity.Reflect.Model.SyncColor.Addition(Unity.Reflect.Model.SyncColor, Unity.Reflect.Model.SyncColor)
  type: Operator
  source:
    id: op_Addition
    path: ''
    startLine: 20621
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public static SyncColor operator +(SyncColor c1, SyncColor c)
    parameters:
    - id: c1
      type: Unity.Reflect.Model.SyncColor
    - id: c
      type: Unity.Reflect.Model.SyncColor
    return:
      type: Unity.Reflect.Model.SyncColor
    content.vb: Public Shared Operator +(c1 As SyncColor, c As SyncColor) As SyncColor
  overload: Unity.Reflect.Model.SyncColor.op_Addition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Unity.Reflect.Model.SyncColor.Lerp(Unity.Reflect.Model.SyncColor,Unity.Reflect.Model.SyncColor,System.Single)
  commentId: M:Unity.Reflect.Model.SyncColor.Lerp(Unity.Reflect.Model.SyncColor,Unity.Reflect.Model.SyncColor,System.Single)
  id: Lerp(Unity.Reflect.Model.SyncColor,Unity.Reflect.Model.SyncColor,System.Single)
  parent: Unity.Reflect.Model.SyncColor
  langs:
  - csharp
  - vb
  name: Lerp(SyncColor, SyncColor, Single)
  nameWithType: SyncColor.Lerp(SyncColor, SyncColor, Single)
  fullName: Unity.Reflect.Model.SyncColor.Lerp(Unity.Reflect.Model.SyncColor, Unity.Reflect.Model.SyncColor, System.Single)
  type: Method
  source:
    id: Lerp
    path: ''
    startLine: 20626
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public static SyncColor Lerp(SyncColor c1, SyncColor c2, float u)
    parameters:
    - id: c1
      type: Unity.Reflect.Model.SyncColor
    - id: c2
      type: Unity.Reflect.Model.SyncColor
    - id: u
      type: System.Single
    return:
      type: Unity.Reflect.Model.SyncColor
    content.vb: Public Shared Function Lerp(c1 As SyncColor, c2 As SyncColor, u As Single) As SyncColor
  overload: Unity.Reflect.Model.SyncColor.Lerp*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Unity.Reflect.Model.SyncColor.op_Equality(Unity.Reflect.Model.SyncColor,Unity.Reflect.Model.SyncColor)
  commentId: M:Unity.Reflect.Model.SyncColor.op_Equality(Unity.Reflect.Model.SyncColor,Unity.Reflect.Model.SyncColor)
  id: op_Equality(Unity.Reflect.Model.SyncColor,Unity.Reflect.Model.SyncColor)
  parent: Unity.Reflect.Model.SyncColor
  langs:
  - csharp
  - vb
  name: Equality(SyncColor, SyncColor)
  nameWithType: SyncColor.Equality(SyncColor, SyncColor)
  fullName: Unity.Reflect.Model.SyncColor.Equality(Unity.Reflect.Model.SyncColor, Unity.Reflect.Model.SyncColor)
  type: Operator
  source:
    id: op_Equality
    path: ''
    startLine: 20631
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public static bool operator ==(SyncColor c1, SyncColor c2)
    parameters:
    - id: c1
      type: Unity.Reflect.Model.SyncColor
    - id: c2
      type: Unity.Reflect.Model.SyncColor
    return:
      type: System.Boolean
    content.vb: Public Shared Operator =(c1 As SyncColor, c2 As SyncColor) As Boolean
  overload: Unity.Reflect.Model.SyncColor.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Unity.Reflect.Model.SyncColor.op_Inequality(Unity.Reflect.Model.SyncColor,Unity.Reflect.Model.SyncColor)
  commentId: M:Unity.Reflect.Model.SyncColor.op_Inequality(Unity.Reflect.Model.SyncColor,Unity.Reflect.Model.SyncColor)
  id: op_Inequality(Unity.Reflect.Model.SyncColor,Unity.Reflect.Model.SyncColor)
  parent: Unity.Reflect.Model.SyncColor
  langs:
  - csharp
  - vb
  name: Inequality(SyncColor, SyncColor)
  nameWithType: SyncColor.Inequality(SyncColor, SyncColor)
  fullName: Unity.Reflect.Model.SyncColor.Inequality(Unity.Reflect.Model.SyncColor, Unity.Reflect.Model.SyncColor)
  type: Operator
  source:
    id: op_Inequality
    path: ''
    startLine: 20642
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public static bool operator !=(SyncColor c1, SyncColor c2)
    parameters:
    - id: c1
      type: Unity.Reflect.Model.SyncColor
    - id: c2
      type: Unity.Reflect.Model.SyncColor
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <>(c1 As SyncColor, c2 As SyncColor) As Boolean
  overload: Unity.Reflect.Model.SyncColor.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Unity.Reflect.Model.SyncColor.Parser
  commentId: P:Unity.Reflect.Model.SyncColor.Parser
  id: Parser
  parent: Unity.Reflect.Model.SyncColor
  langs:
  - csharp
  - vb
  name: Parser
  nameWithType: SyncColor.Parser
  fullName: Unity.Reflect.Model.SyncColor.Parser
  type: Property
  source:
    id: Parser
    path: ''
    startLine: 22386
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public static pb.MessageParser<SyncColor> Parser { get; }
    parameters: []
    return:
      type: pb.MessageParser{Unity.Reflect.Model.SyncColor}
    content.vb: Public Shared ReadOnly Property Parser As pb.MessageParser(Of SyncColor)
  overload: Unity.Reflect.Model.SyncColor.Parser*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Unity.Reflect.Model.SyncColor.Descriptor
  commentId: P:Unity.Reflect.Model.SyncColor.Descriptor
  id: Descriptor
  parent: Unity.Reflect.Model.SyncColor
  langs:
  - csharp
  - vb
  name: Descriptor
  nameWithType: SyncColor.Descriptor
  fullName: Unity.Reflect.Model.SyncColor.Descriptor
  type: Property
  source:
    id: Descriptor
    path: ''
    startLine: 22389
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public static pbr.MessageDescriptor Descriptor { get; }
    parameters: []
    return:
      type: pbr.MessageDescriptor
    content.vb: Public Shared ReadOnly Property Descriptor As pbr.MessageDescriptor
  overload: Unity.Reflect.Model.SyncColor.Descriptor*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Unity.Reflect.Model.SyncColor.#ctor
  commentId: M:Unity.Reflect.Model.SyncColor.#ctor
  id: '#ctor'
  parent: Unity.Reflect.Model.SyncColor
  langs:
  - csharp
  - vb
  name: SyncColor()
  nameWithType: SyncColor.SyncColor()
  fullName: Unity.Reflect.Model.SyncColor.SyncColor()
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 22399
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public SyncColor()
    content.vb: Public Sub New
  overload: Unity.Reflect.Model.SyncColor.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unity.Reflect.Model.SyncColor.#ctor(Unity.Reflect.Model.SyncColor)
  commentId: M:Unity.Reflect.Model.SyncColor.#ctor(Unity.Reflect.Model.SyncColor)
  id: '#ctor(Unity.Reflect.Model.SyncColor)'
  parent: Unity.Reflect.Model.SyncColor
  langs:
  - csharp
  - vb
  name: SyncColor(SyncColor)
  nameWithType: SyncColor.SyncColor(SyncColor)
  fullName: Unity.Reflect.Model.SyncColor.SyncColor(Unity.Reflect.Model.SyncColor)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 22406
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public SyncColor(SyncColor other)
    parameters:
    - id: other
      type: Unity.Reflect.Model.SyncColor
    content.vb: Public Sub New(other As SyncColor)
  overload: Unity.Reflect.Model.SyncColor.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unity.Reflect.Model.SyncColor.Clone
  commentId: M:Unity.Reflect.Model.SyncColor.Clone
  id: Clone
  parent: Unity.Reflect.Model.SyncColor
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: SyncColor.Clone()
  fullName: Unity.Reflect.Model.SyncColor.Clone()
  type: Method
  source:
    id: Clone
    path: ''
    startLine: 22415
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public SyncColor Clone()
    return:
      type: Unity.Reflect.Model.SyncColor
    content.vb: Public Function Clone As SyncColor
  overload: Unity.Reflect.Model.SyncColor.Clone*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unity.Reflect.Model.SyncColor.RFieldNumber
  commentId: F:Unity.Reflect.Model.SyncColor.RFieldNumber
  id: RFieldNumber
  parent: Unity.Reflect.Model.SyncColor
  langs:
  - csharp
  - vb
  name: RFieldNumber
  nameWithType: SyncColor.RFieldNumber
  fullName: Unity.Reflect.Model.SyncColor.RFieldNumber
  type: Field
  source:
    id: RFieldNumber
    path: ''
    startLine: 22421
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  summary: Field number for the &quot;r&quot; field.
  example: []
  syntax:
    content: public const int RFieldNumber = 1
    return:
      type: System.Int32
    content.vb: Public Const RFieldNumber As Integer = 1
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Unity.Reflect.Model.SyncColor.R
  commentId: P:Unity.Reflect.Model.SyncColor.R
  id: R
  parent: Unity.Reflect.Model.SyncColor
  langs:
  - csharp
  - vb
  name: R
  nameWithType: SyncColor.R
  fullName: Unity.Reflect.Model.SyncColor.R
  type: Property
  source:
    id: R
    path: ''
    startLine: 22423
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public float R { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property R As Single
  overload: Unity.Reflect.Model.SyncColor.R*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unity.Reflect.Model.SyncColor.GFieldNumber
  commentId: F:Unity.Reflect.Model.SyncColor.GFieldNumber
  id: GFieldNumber
  parent: Unity.Reflect.Model.SyncColor
  langs:
  - csharp
  - vb
  name: GFieldNumber
  nameWithType: SyncColor.GFieldNumber
  fullName: Unity.Reflect.Model.SyncColor.GFieldNumber
  type: Field
  source:
    id: GFieldNumber
    path: ''
    startLine: 22432
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  summary: Field number for the &quot;g&quot; field.
  example: []
  syntax:
    content: public const int GFieldNumber = 2
    return:
      type: System.Int32
    content.vb: Public Const GFieldNumber As Integer = 2
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Unity.Reflect.Model.SyncColor.G
  commentId: P:Unity.Reflect.Model.SyncColor.G
  id: G
  parent: Unity.Reflect.Model.SyncColor
  langs:
  - csharp
  - vb
  name: G
  nameWithType: SyncColor.G
  fullName: Unity.Reflect.Model.SyncColor.G
  type: Property
  source:
    id: G
    path: ''
    startLine: 22434
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public float G { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property G As Single
  overload: Unity.Reflect.Model.SyncColor.G*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unity.Reflect.Model.SyncColor.BFieldNumber
  commentId: F:Unity.Reflect.Model.SyncColor.BFieldNumber
  id: BFieldNumber
  parent: Unity.Reflect.Model.SyncColor
  langs:
  - csharp
  - vb
  name: BFieldNumber
  nameWithType: SyncColor.BFieldNumber
  fullName: Unity.Reflect.Model.SyncColor.BFieldNumber
  type: Field
  source:
    id: BFieldNumber
    path: ''
    startLine: 22443
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  summary: Field number for the &quot;b&quot; field.
  example: []
  syntax:
    content: public const int BFieldNumber = 3
    return:
      type: System.Int32
    content.vb: Public Const BFieldNumber As Integer = 3
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Unity.Reflect.Model.SyncColor.B
  commentId: P:Unity.Reflect.Model.SyncColor.B
  id: B
  parent: Unity.Reflect.Model.SyncColor
  langs:
  - csharp
  - vb
  name: B
  nameWithType: SyncColor.B
  fullName: Unity.Reflect.Model.SyncColor.B
  type: Property
  source:
    id: B
    path: ''
    startLine: 22445
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public float B { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property B As Single
  overload: Unity.Reflect.Model.SyncColor.B*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unity.Reflect.Model.SyncColor.AFieldNumber
  commentId: F:Unity.Reflect.Model.SyncColor.AFieldNumber
  id: AFieldNumber
  parent: Unity.Reflect.Model.SyncColor
  langs:
  - csharp
  - vb
  name: AFieldNumber
  nameWithType: SyncColor.AFieldNumber
  fullName: Unity.Reflect.Model.SyncColor.AFieldNumber
  type: Field
  source:
    id: AFieldNumber
    path: ''
    startLine: 22454
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  summary: Field number for the &quot;a&quot; field.
  example: []
  syntax:
    content: public const int AFieldNumber = 4
    return:
      type: System.Int32
    content.vb: Public Const AFieldNumber As Integer = 4
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Unity.Reflect.Model.SyncColor.A
  commentId: P:Unity.Reflect.Model.SyncColor.A
  id: A
  parent: Unity.Reflect.Model.SyncColor
  langs:
  - csharp
  - vb
  name: A
  nameWithType: SyncColor.A
  fullName: Unity.Reflect.Model.SyncColor.A
  type: Property
  source:
    id: A
    path: ''
    startLine: 22456
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public float A { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property A As Single
  overload: Unity.Reflect.Model.SyncColor.A*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unity.Reflect.Model.SyncColor.Equals(System.Object)
  commentId: M:Unity.Reflect.Model.SyncColor.Equals(System.Object)
  id: Equals(System.Object)
  parent: Unity.Reflect.Model.SyncColor
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: SyncColor.Equals(Object)
  fullName: Unity.Reflect.Model.SyncColor.Equals(System.Object)
  type: Method
  source:
    id: Equals
    path: ''
    startLine: 22464
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public override bool Equals(object other)
    parameters:
    - id: other
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(other As Object) As Boolean
  overload: Unity.Reflect.Model.SyncColor.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Unity.Reflect.Model.SyncColor.Equals(Unity.Reflect.Model.SyncColor)
  commentId: M:Unity.Reflect.Model.SyncColor.Equals(Unity.Reflect.Model.SyncColor)
  id: Equals(Unity.Reflect.Model.SyncColor)
  parent: Unity.Reflect.Model.SyncColor
  langs:
  - csharp
  - vb
  name: Equals(SyncColor)
  nameWithType: SyncColor.Equals(SyncColor)
  fullName: Unity.Reflect.Model.SyncColor.Equals(Unity.Reflect.Model.SyncColor)
  type: Method
  source:
    id: Equals
    path: ''
    startLine: 22469
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public bool Equals(SyncColor other)
    parameters:
    - id: other
      type: Unity.Reflect.Model.SyncColor
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As SyncColor) As Boolean
  overload: Unity.Reflect.Model.SyncColor.Equals*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unity.Reflect.Model.SyncColor.GetHashCode
  commentId: M:Unity.Reflect.Model.SyncColor.GetHashCode
  id: GetHashCode
  parent: Unity.Reflect.Model.SyncColor
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: SyncColor.GetHashCode()
  fullName: Unity.Reflect.Model.SyncColor.GetHashCode()
  type: Method
  source:
    id: GetHashCode
    path: ''
    startLine: 22484
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overload: Unity.Reflect.Model.SyncColor.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Unity.Reflect.Model.SyncColor.ToString
  commentId: M:Unity.Reflect.Model.SyncColor.ToString
  id: ToString
  parent: Unity.Reflect.Model.SyncColor
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: SyncColor.ToString()
  fullName: Unity.Reflect.Model.SyncColor.ToString()
  type: Method
  source:
    id: ToString
    path: ''
    startLine: 22497
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overload: Unity.Reflect.Model.SyncColor.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Unity.Reflect.Model.SyncColor.WriteTo(pb.CodedOutputStream)
  commentId: M:Unity.Reflect.Model.SyncColor.WriteTo(pb.CodedOutputStream)
  id: WriteTo(pb.CodedOutputStream)
  parent: Unity.Reflect.Model.SyncColor
  langs:
  - csharp
  - vb
  name: WriteTo(pb.CodedOutputStream)
  nameWithType: SyncColor.WriteTo(pb.CodedOutputStream)
  fullName: Unity.Reflect.Model.SyncColor.WriteTo(pb.CodedOutputStream)
  type: Method
  source:
    id: WriteTo
    path: ''
    startLine: 22502
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public void WriteTo(pb.CodedOutputStream output)
    parameters:
    - id: output
      type: pb.CodedOutputStream
    content.vb: Public Sub WriteTo(output As pb.CodedOutputStream)
  overload: Unity.Reflect.Model.SyncColor.WriteTo*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unity.Reflect.Model.SyncColor.CalculateSize
  commentId: M:Unity.Reflect.Model.SyncColor.CalculateSize
  id: CalculateSize
  parent: Unity.Reflect.Model.SyncColor
  langs:
  - csharp
  - vb
  name: CalculateSize()
  nameWithType: SyncColor.CalculateSize()
  fullName: Unity.Reflect.Model.SyncColor.CalculateSize()
  type: Method
  source:
    id: CalculateSize
    path: ''
    startLine: 22525
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public int CalculateSize()
    return:
      type: System.Int32
    content.vb: Public Function CalculateSize As Integer
  overload: Unity.Reflect.Model.SyncColor.CalculateSize*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unity.Reflect.Model.SyncColor.MergeFrom(Unity.Reflect.Model.SyncColor)
  commentId: M:Unity.Reflect.Model.SyncColor.MergeFrom(Unity.Reflect.Model.SyncColor)
  id: MergeFrom(Unity.Reflect.Model.SyncColor)
  parent: Unity.Reflect.Model.SyncColor
  langs:
  - csharp
  - vb
  name: MergeFrom(SyncColor)
  nameWithType: SyncColor.MergeFrom(SyncColor)
  fullName: Unity.Reflect.Model.SyncColor.MergeFrom(Unity.Reflect.Model.SyncColor)
  type: Method
  source:
    id: MergeFrom
    path: ''
    startLine: 22546
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public void MergeFrom(SyncColor other)
    parameters:
    - id: other
      type: Unity.Reflect.Model.SyncColor
    content.vb: Public Sub MergeFrom(other As SyncColor)
  overload: Unity.Reflect.Model.SyncColor.MergeFrom*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unity.Reflect.Model.SyncColor.MergeFrom(pb.CodedInputStream)
  commentId: M:Unity.Reflect.Model.SyncColor.MergeFrom(pb.CodedInputStream)
  id: MergeFrom(pb.CodedInputStream)
  parent: Unity.Reflect.Model.SyncColor
  langs:
  - csharp
  - vb
  name: MergeFrom(pb.CodedInputStream)
  nameWithType: SyncColor.MergeFrom(pb.CodedInputStream)
  fullName: Unity.Reflect.Model.SyncColor.MergeFrom(pb.CodedInputStream)
  type: Method
  source:
    id: MergeFrom
    path: ''
    startLine: 22566
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public void MergeFrom(pb.CodedInputStream input)
    parameters:
    - id: input
      type: pb.CodedInputStream
    content.vb: Public Sub MergeFrom(input As pb.CodedInputStream)
  overload: Unity.Reflect.Model.SyncColor.MergeFrom*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Unity.Reflect.Model
  commentId: N:Unity.Reflect.Model
  name: Unity.Reflect.Model
  nameWithType: Unity.Reflect.Model
  fullName: Unity.Reflect.Model
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: pb.IMessage{Unity.Reflect.Model.SyncColor}
  commentId: '!:pb.IMessage{Unity.Reflect.Model.SyncColor}'
  definition: pb.IMessage`1
  name: pb.IMessage<SyncColor>
  nameWithType: pb.IMessage<SyncColor>
  fullName: pb.IMessage<Unity.Reflect.Model.SyncColor>
  nameWithType.vb: pb.IMessage(Of SyncColor)
  fullName.vb: pb.IMessage(Of Unity.Reflect.Model.SyncColor)
  name.vb: pb.IMessage(Of SyncColor)
  spec.csharp:
  - uid: pb.IMessage`1
    name: pb.IMessage
    nameWithType: pb.IMessage
    fullName: pb.IMessage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Unity.Reflect.Model.SyncColor
    name: SyncColor
    nameWithType: SyncColor
    fullName: Unity.Reflect.Model.SyncColor
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: pb.IMessage`1
    name: pb.IMessage
    nameWithType: pb.IMessage
    fullName: pb.IMessage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Unity.Reflect.Model.SyncColor
    name: SyncColor
    nameWithType: SyncColor
    fullName: Unity.Reflect.Model.SyncColor
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: pb.IMessage`1
  isExternal: true
  name: pb.IMessage<>
  nameWithType: pb.IMessage<>
  fullName: pb.IMessage<>
  nameWithType.vb: pb.IMessage(Of )
  fullName.vb: pb.IMessage(Of )
  name.vb: pb.IMessage(Of )
  spec.csharp:
  - uid: pb.IMessage`1
    name: pb.IMessage
    nameWithType: pb.IMessage
    fullName: pb.IMessage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: pb.IMessage`1
    name: pb.IMessage
    nameWithType: pb.IMessage
    fullName: pb.IMessage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Unity.Reflect.Model.SyncColor.Black*
  commentId: Overload:Unity.Reflect.Model.SyncColor.Black
  name: Black
  nameWithType: SyncColor.Black
  fullName: Unity.Reflect.Model.SyncColor.Black
- uid: Unity.Reflect.Model.SyncColor
  commentId: T:Unity.Reflect.Model.SyncColor
  parent: Unity.Reflect.Model
  name: SyncColor
  nameWithType: SyncColor
  fullName: Unity.Reflect.Model.SyncColor
- uid: Unity.Reflect.Model.SyncColor.White*
  commentId: Overload:Unity.Reflect.Model.SyncColor.White
  name: White
  nameWithType: SyncColor.White
  fullName: Unity.Reflect.Model.SyncColor.White
- uid: Unity.Reflect.Model.SyncColor.#ctor*
  commentId: Overload:Unity.Reflect.Model.SyncColor.#ctor
  name: SyncColor
  nameWithType: SyncColor.SyncColor
  fullName: Unity.Reflect.Model.SyncColor.SyncColor
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: Unity.Reflect.Model.SyncColor.From256*
  commentId: Overload:Unity.Reflect.Model.SyncColor.From256
  name: From256
  nameWithType: SyncColor.From256
  fullName: Unity.Reflect.Model.SyncColor.From256
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Unity.Reflect.Model.SyncColor.op_Multiply*
  commentId: Overload:Unity.Reflect.Model.SyncColor.op_Multiply
  name: Multiply
  nameWithType: SyncColor.Multiply
  fullName: Unity.Reflect.Model.SyncColor.Multiply
- uid: Unity.Reflect.Model.SyncColor.op_Addition*
  commentId: Overload:Unity.Reflect.Model.SyncColor.op_Addition
  name: Addition
  nameWithType: SyncColor.Addition
  fullName: Unity.Reflect.Model.SyncColor.Addition
- uid: Unity.Reflect.Model.SyncColor.Lerp*
  commentId: Overload:Unity.Reflect.Model.SyncColor.Lerp
  name: Lerp
  nameWithType: SyncColor.Lerp
  fullName: Unity.Reflect.Model.SyncColor.Lerp
- uid: Unity.Reflect.Model.SyncColor.op_Equality*
  commentId: Overload:Unity.Reflect.Model.SyncColor.op_Equality
  name: Equality
  nameWithType: SyncColor.Equality
  fullName: Unity.Reflect.Model.SyncColor.Equality
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Unity.Reflect.Model.SyncColor.op_Inequality*
  commentId: Overload:Unity.Reflect.Model.SyncColor.op_Inequality
  name: Inequality
  nameWithType: SyncColor.Inequality
  fullName: Unity.Reflect.Model.SyncColor.Inequality
- uid: Unity.Reflect.Model.SyncColor.Parser*
  commentId: Overload:Unity.Reflect.Model.SyncColor.Parser
  name: Parser
  nameWithType: SyncColor.Parser
  fullName: Unity.Reflect.Model.SyncColor.Parser
- uid: pb.MessageParser{Unity.Reflect.Model.SyncColor}
  commentId: '!:pb.MessageParser{Unity.Reflect.Model.SyncColor}'
  definition: pb.MessageParser`1
  name: pb.MessageParser<SyncColor>
  nameWithType: pb.MessageParser<SyncColor>
  fullName: pb.MessageParser<Unity.Reflect.Model.SyncColor>
  nameWithType.vb: pb.MessageParser(Of SyncColor)
  fullName.vb: pb.MessageParser(Of Unity.Reflect.Model.SyncColor)
  name.vb: pb.MessageParser(Of SyncColor)
  spec.csharp:
  - uid: pb.MessageParser`1
    name: pb.MessageParser
    nameWithType: pb.MessageParser
    fullName: pb.MessageParser
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Unity.Reflect.Model.SyncColor
    name: SyncColor
    nameWithType: SyncColor
    fullName: Unity.Reflect.Model.SyncColor
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: pb.MessageParser`1
    name: pb.MessageParser
    nameWithType: pb.MessageParser
    fullName: pb.MessageParser
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Unity.Reflect.Model.SyncColor
    name: SyncColor
    nameWithType: SyncColor
    fullName: Unity.Reflect.Model.SyncColor
  - name: )
    nameWithType: )
    fullName: )
- uid: pb.MessageParser`1
  isExternal: true
  name: pb.MessageParser<>
  nameWithType: pb.MessageParser<>
  fullName: pb.MessageParser<>
  nameWithType.vb: pb.MessageParser(Of )
  fullName.vb: pb.MessageParser(Of )
  name.vb: pb.MessageParser(Of )
  spec.csharp:
  - uid: pb.MessageParser`1
    name: pb.MessageParser
    nameWithType: pb.MessageParser
    fullName: pb.MessageParser
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: pb.MessageParser`1
    name: pb.MessageParser
    nameWithType: pb.MessageParser
    fullName: pb.MessageParser
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Unity.Reflect.Model.SyncColor.Descriptor*
  commentId: Overload:Unity.Reflect.Model.SyncColor.Descriptor
  name: Descriptor
  nameWithType: SyncColor.Descriptor
  fullName: Unity.Reflect.Model.SyncColor.Descriptor
- uid: pbr.MessageDescriptor
  isExternal: true
  name: pbr.MessageDescriptor
  nameWithType: pbr.MessageDescriptor
  fullName: pbr.MessageDescriptor
- uid: Unity.Reflect.Model.SyncColor.Clone*
  commentId: Overload:Unity.Reflect.Model.SyncColor.Clone
  name: Clone
  nameWithType: SyncColor.Clone
  fullName: Unity.Reflect.Model.SyncColor.Clone
- uid: Unity.Reflect.Model.SyncColor.R*
  commentId: Overload:Unity.Reflect.Model.SyncColor.R
  name: R
  nameWithType: SyncColor.R
  fullName: Unity.Reflect.Model.SyncColor.R
- uid: Unity.Reflect.Model.SyncColor.G*
  commentId: Overload:Unity.Reflect.Model.SyncColor.G
  name: G
  nameWithType: SyncColor.G
  fullName: Unity.Reflect.Model.SyncColor.G
- uid: Unity.Reflect.Model.SyncColor.B*
  commentId: Overload:Unity.Reflect.Model.SyncColor.B
  name: B
  nameWithType: SyncColor.B
  fullName: Unity.Reflect.Model.SyncColor.B
- uid: Unity.Reflect.Model.SyncColor.A*
  commentId: Overload:Unity.Reflect.Model.SyncColor.A
  name: A
  nameWithType: SyncColor.A
  fullName: Unity.Reflect.Model.SyncColor.A
- uid: Unity.Reflect.Model.SyncColor.Equals*
  commentId: Overload:Unity.Reflect.Model.SyncColor.Equals
  name: Equals
  nameWithType: SyncColor.Equals
  fullName: Unity.Reflect.Model.SyncColor.Equals
- uid: Unity.Reflect.Model.SyncColor.GetHashCode*
  commentId: Overload:Unity.Reflect.Model.SyncColor.GetHashCode
  name: GetHashCode
  nameWithType: SyncColor.GetHashCode
  fullName: Unity.Reflect.Model.SyncColor.GetHashCode
- uid: Unity.Reflect.Model.SyncColor.ToString*
  commentId: Overload:Unity.Reflect.Model.SyncColor.ToString
  name: ToString
  nameWithType: SyncColor.ToString
  fullName: Unity.Reflect.Model.SyncColor.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Unity.Reflect.Model.SyncColor.WriteTo*
  commentId: Overload:Unity.Reflect.Model.SyncColor.WriteTo
  name: WriteTo
  nameWithType: SyncColor.WriteTo
  fullName: Unity.Reflect.Model.SyncColor.WriteTo
- uid: pb.CodedOutputStream
  isExternal: true
  name: pb.CodedOutputStream
  nameWithType: pb.CodedOutputStream
  fullName: pb.CodedOutputStream
- uid: Unity.Reflect.Model.SyncColor.CalculateSize*
  commentId: Overload:Unity.Reflect.Model.SyncColor.CalculateSize
  name: CalculateSize
  nameWithType: SyncColor.CalculateSize
  fullName: Unity.Reflect.Model.SyncColor.CalculateSize
- uid: Unity.Reflect.Model.SyncColor.MergeFrom*
  commentId: Overload:Unity.Reflect.Model.SyncColor.MergeFrom
  name: MergeFrom
  nameWithType: SyncColor.MergeFrom
  fullName: Unity.Reflect.Model.SyncColor.MergeFrom
- uid: pb.CodedInputStream
  isExternal: true
  name: pb.CodedInputStream
  nameWithType: pb.CodedInputStream
  fullName: pb.CodedInputStream
