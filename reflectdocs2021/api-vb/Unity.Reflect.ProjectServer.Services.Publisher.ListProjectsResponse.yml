### YamlMime:ManagedReference
items:
- uid: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse
  commentId: T:Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse
  id: ListProjectsResponse
  parent: Unity.Reflect.ProjectServer.Services.Publisher
  children:
  - Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.#ctor
  - Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.#ctor
  - Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.#ctor(Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse)
  - Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.#ctor(Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse)
  - Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.CalculateSize
  - Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.CalculateSize
  - Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Clone
  - Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Clone
  - Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Descriptor
  - Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Descriptor
  - Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Equals(System.Object)
  - Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Equals(System.Object)
  - Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Equals(Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse)
  - Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Equals(Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse)
  - Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.GetHashCode
  - Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.GetHashCode
  - Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.MergeFrom(pb.CodedInputStream)
  - Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.MergeFrom(pb.CodedInputStream)
  - Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.MergeFrom(Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse)
  - Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.MergeFrom(Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse)
  - Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Parser
  - Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Parser
  - Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Projects
  - Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Projects
  - Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.ProjectsFieldNumber
  - Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.ProjectsFieldNumber
  - Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.ToString
  - Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.ToString
  - Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.WriteTo(pb.CodedOutputStream)
  - Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.WriteTo(pb.CodedOutputStream)
  langs:
  - csharp
  - vb
  name: ListProjectsResponse
  nameWithType: ListProjectsResponse
  fullName: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse
  type: Class
  source:
    id: ListProjectsResponse
    path: ''
    startLine: 35434
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.Publisher
  syntax:
    content: 'public sealed class ListProjectsResponse : pb.IMessage<ListProjectsResponse>, pb.IMessage<ListProjectsResponse>'
    content.vb: >-
      Public NotInheritable Class ListProjectsResponse
          Inherits pb.IMessage(Of ListProjectsResponse)
          Implements pb.IMessage(Of ListProjectsResponse)
  inheritance:
  - System.Object
  implements:
  - pb.IMessage{Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse}
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Parser
  commentId: P:Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Parser
  id: Parser
  parent: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse
  langs:
  - csharp
  - vb
  name: Parser
  nameWithType: ListProjectsResponse.Parser
  fullName: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Parser
  type: Property
  source:
    id: Parser
    path: ''
    startLine: 15278
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.Publisher
  syntax:
    content: public static pb.MessageParser<ListProjectsResponse> Parser { get; }
    parameters: []
    return:
      type: pb.MessageParser{Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse}
    content.vb: Public Shared ReadOnly Property Parser As pb.MessageParser(Of ListProjectsResponse)
  overload: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Parser*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Descriptor
  commentId: P:Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Descriptor
  id: Descriptor
  parent: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse
  langs:
  - csharp
  - vb
  name: Descriptor
  nameWithType: ListProjectsResponse.Descriptor
  fullName: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Descriptor
  type: Property
  source:
    id: Descriptor
    path: ''
    startLine: 15281
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.Publisher
  syntax:
    content: public static pbr.MessageDescriptor Descriptor { get; }
    parameters: []
    return:
      type: pbr.MessageDescriptor
    content.vb: Public Shared ReadOnly Property Descriptor As pbr.MessageDescriptor
  overload: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Descriptor*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.#ctor
  commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.#ctor
  id: '#ctor'
  parent: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse
  langs:
  - csharp
  - vb
  name: ListProjectsResponse()
  nameWithType: ListProjectsResponse.ListProjectsResponse()
  fullName: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.ListProjectsResponse()
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 15291
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.Publisher
  syntax:
    content: public ListProjectsResponse()
    content.vb: Public Sub New
  overload: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.#ctor(Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse)
  commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.#ctor(Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse)
  id: '#ctor(Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse)'
  parent: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse
  langs:
  - csharp
  - vb
  name: ListProjectsResponse(ListProjectsResponse)
  nameWithType: ListProjectsResponse.ListProjectsResponse(ListProjectsResponse)
  fullName: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.ListProjectsResponse(Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 15298
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.Publisher
  syntax:
    content: public ListProjectsResponse(ListProjectsResponse other)
    parameters:
    - id: other
      type: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse
    content.vb: Public Sub New(other As ListProjectsResponse)
  overload: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Clone
  commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Clone
  id: Clone
  parent: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: ListProjectsResponse.Clone()
  fullName: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Clone()
  type: Method
  source:
    id: Clone
    path: ''
    startLine: 15304
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.Publisher
  syntax:
    content: public ListProjectsResponse Clone()
    return:
      type: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse
    content.vb: Public Function Clone As ListProjectsResponse
  overload: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Clone*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.ProjectsFieldNumber
  commentId: F:Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.ProjectsFieldNumber
  id: ProjectsFieldNumber
  parent: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse
  langs:
  - csharp
  - vb
  name: ProjectsFieldNumber
  nameWithType: ListProjectsResponse.ProjectsFieldNumber
  fullName: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.ProjectsFieldNumber
  type: Field
  source:
    id: ProjectsFieldNumber
    path: ''
    startLine: 15310
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.Publisher
  summary: Field number for the &quot;projects&quot; field.
  example: []
  syntax:
    content: public const int ProjectsFieldNumber = 1
    return:
      type: System.Int32
    content.vb: Public Const ProjectsFieldNumber As Integer = 1
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Projects
  commentId: P:Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Projects
  id: Projects
  parent: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse
  langs:
  - csharp
  - vb
  name: Projects
  nameWithType: ListProjectsResponse.Projects
  fullName: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Projects
  type: Property
  source:
    id: Projects
    path: ''
    startLine: 15314
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.Publisher
  syntax:
    content: public pbc.RepeatedField<Project> Projects { get; }
    parameters: []
    return:
      type: pbc.RepeatedField{Unity.Reflect.ProjectServer.Services.Publisher.Project}
    content.vb: Public ReadOnly Property Projects As pbc.RepeatedField(Of Project)
  overload: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Projects*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Equals(System.Object)
  commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Equals(System.Object)
  id: Equals(System.Object)
  parent: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: ListProjectsResponse.Equals(Object)
  fullName: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Equals(System.Object)
  type: Method
  source:
    id: Equals
    path: ''
    startLine: 15319
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.Publisher
  syntax:
    content: public override bool Equals(object other)
    parameters:
    - id: other
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(other As Object) As Boolean
  overload: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Equals(Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse)
  commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Equals(Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse)
  id: Equals(Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse)
  parent: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse
  langs:
  - csharp
  - vb
  name: Equals(ListProjectsResponse)
  nameWithType: ListProjectsResponse.Equals(ListProjectsResponse)
  fullName: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Equals(Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse)
  type: Method
  source:
    id: Equals
    path: ''
    startLine: 15324
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.Publisher
  syntax:
    content: public bool Equals(ListProjectsResponse other)
    parameters:
    - id: other
      type: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As ListProjectsResponse) As Boolean
  overload: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Equals*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.GetHashCode
  commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.GetHashCode
  id: GetHashCode
  parent: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: ListProjectsResponse.GetHashCode()
  fullName: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.GetHashCode()
  type: Method
  source:
    id: GetHashCode
    path: ''
    startLine: 15336
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.Publisher
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overload: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.ToString
  commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.ToString
  id: ToString
  parent: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ListProjectsResponse.ToString()
  fullName: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.ToString()
  type: Method
  source:
    id: ToString
    path: ''
    startLine: 15346
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.Publisher
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overload: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.WriteTo(pb.CodedOutputStream)
  commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.WriteTo(pb.CodedOutputStream)
  id: WriteTo(pb.CodedOutputStream)
  parent: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse
  langs:
  - csharp
  - vb
  name: WriteTo(pb.CodedOutputStream)
  nameWithType: ListProjectsResponse.WriteTo(pb.CodedOutputStream)
  fullName: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.WriteTo(pb.CodedOutputStream)
  type: Method
  source:
    id: WriteTo
    path: ''
    startLine: 15351
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.Publisher
  syntax:
    content: public void WriteTo(pb.CodedOutputStream output)
    parameters:
    - id: output
      type: pb.CodedOutputStream
    content.vb: Public Sub WriteTo(output As pb.CodedOutputStream)
  overload: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.WriteTo*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.CalculateSize
  commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.CalculateSize
  id: CalculateSize
  parent: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse
  langs:
  - csharp
  - vb
  name: CalculateSize()
  nameWithType: ListProjectsResponse.CalculateSize()
  fullName: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.CalculateSize()
  type: Method
  source:
    id: CalculateSize
    path: ''
    startLine: 15359
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.Publisher
  syntax:
    content: public int CalculateSize()
    return:
      type: System.Int32
    content.vb: Public Function CalculateSize As Integer
  overload: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.CalculateSize*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.MergeFrom(Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse)
  commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.MergeFrom(Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse)
  id: MergeFrom(Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse)
  parent: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse
  langs:
  - csharp
  - vb
  name: MergeFrom(ListProjectsResponse)
  nameWithType: ListProjectsResponse.MergeFrom(ListProjectsResponse)
  fullName: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.MergeFrom(Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse)
  type: Method
  source:
    id: MergeFrom
    path: ''
    startLine: 15369
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.Publisher
  syntax:
    content: public void MergeFrom(ListProjectsResponse other)
    parameters:
    - id: other
      type: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse
    content.vb: Public Sub MergeFrom(other As ListProjectsResponse)
  overload: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.MergeFrom*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.MergeFrom(pb.CodedInputStream)
  commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.MergeFrom(pb.CodedInputStream)
  id: MergeFrom(pb.CodedInputStream)
  parent: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse
  langs:
  - csharp
  - vb
  name: MergeFrom(pb.CodedInputStream)
  nameWithType: ListProjectsResponse.MergeFrom(pb.CodedInputStream)
  fullName: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.MergeFrom(pb.CodedInputStream)
  type: Method
  source:
    id: MergeFrom
    path: ''
    startLine: 15378
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.Publisher
  syntax:
    content: public void MergeFrom(pb.CodedInputStream input)
    parameters:
    - id: input
      type: pb.CodedInputStream
    content.vb: Public Sub MergeFrom(input As pb.CodedInputStream)
  overload: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.MergeFrom*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Parser
  commentId: P:Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Parser
  id: Parser
  parent: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse
  langs:
  - csharp
  - vb
  name: Parser
  nameWithType: ListProjectsResponse.Parser
  fullName: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Parser
  type: Property
  source:
    id: Parser
    path: ''
    startLine: 35437
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.Publisher
  syntax:
    content: public static pb.MessageParser<ListProjectsResponse> Parser { get; }
    parameters: []
    return:
      type: pb.MessageParser{Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse}
    content.vb: Public Shared ReadOnly Property Parser As pb.MessageParser(Of ListProjectsResponse)
  overload: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Parser*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Descriptor
  commentId: P:Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Descriptor
  id: Descriptor
  parent: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse
  langs:
  - csharp
  - vb
  name: Descriptor
  nameWithType: ListProjectsResponse.Descriptor
  fullName: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Descriptor
  type: Property
  source:
    id: Descriptor
    path: ''
    startLine: 35440
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.Publisher
  syntax:
    content: public static pbr.MessageDescriptor Descriptor { get; }
    parameters: []
    return:
      type: pbr.MessageDescriptor
    content.vb: Public Shared ReadOnly Property Descriptor As pbr.MessageDescriptor
  overload: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Descriptor*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.#ctor
  commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.#ctor
  id: '#ctor'
  parent: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse
  langs:
  - csharp
  - vb
  name: ListProjectsResponse()
  nameWithType: ListProjectsResponse.ListProjectsResponse()
  fullName: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.ListProjectsResponse()
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 35450
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.Publisher
  syntax:
    content: public ListProjectsResponse()
    content.vb: Public Sub New
  overload: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.#ctor(Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse)
  commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.#ctor(Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse)
  id: '#ctor(Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse)'
  parent: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse
  langs:
  - csharp
  - vb
  name: ListProjectsResponse(ListProjectsResponse)
  nameWithType: ListProjectsResponse.ListProjectsResponse(ListProjectsResponse)
  fullName: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.ListProjectsResponse(Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 35457
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.Publisher
  syntax:
    content: public ListProjectsResponse(ListProjectsResponse other)
    parameters:
    - id: other
      type: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse
    content.vb: Public Sub New(other As ListProjectsResponse)
  overload: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Clone
  commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Clone
  id: Clone
  parent: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: ListProjectsResponse.Clone()
  fullName: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Clone()
  type: Method
  source:
    id: Clone
    path: ''
    startLine: 35463
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.Publisher
  syntax:
    content: public ListProjectsResponse Clone()
    return:
      type: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse
    content.vb: Public Function Clone As ListProjectsResponse
  overload: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Clone*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.ProjectsFieldNumber
  commentId: F:Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.ProjectsFieldNumber
  id: ProjectsFieldNumber
  parent: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse
  langs:
  - csharp
  - vb
  name: ProjectsFieldNumber
  nameWithType: ListProjectsResponse.ProjectsFieldNumber
  fullName: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.ProjectsFieldNumber
  type: Field
  source:
    id: ProjectsFieldNumber
    path: ''
    startLine: 35469
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.Publisher
  summary: Field number for the &quot;projects&quot; field.
  example: []
  syntax:
    content: public const int ProjectsFieldNumber = 1
    return:
      type: System.Int32
    content.vb: Public Const ProjectsFieldNumber As Integer = 1
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Projects
  commentId: P:Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Projects
  id: Projects
  parent: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse
  langs:
  - csharp
  - vb
  name: Projects
  nameWithType: ListProjectsResponse.Projects
  fullName: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Projects
  type: Property
  source:
    id: Projects
    path: ''
    startLine: 35473
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.Publisher
  syntax:
    content: public pbc.RepeatedField<Project> Projects { get; }
    parameters: []
    return:
      type: pbc.RepeatedField{Unity.Reflect.ProjectServer.Services.Publisher.Project}
    content.vb: Public ReadOnly Property Projects As pbc.RepeatedField(Of Project)
  overload: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Projects*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Equals(System.Object)
  commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Equals(System.Object)
  id: Equals(System.Object)
  parent: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: ListProjectsResponse.Equals(Object)
  fullName: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Equals(System.Object)
  type: Method
  source:
    id: Equals
    path: ''
    startLine: 35478
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.Publisher
  syntax:
    content: public override bool Equals(object other)
    parameters:
    - id: other
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(other As Object) As Boolean
  overload: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Equals(Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse)
  commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Equals(Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse)
  id: Equals(Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse)
  parent: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse
  langs:
  - csharp
  - vb
  name: Equals(ListProjectsResponse)
  nameWithType: ListProjectsResponse.Equals(ListProjectsResponse)
  fullName: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Equals(Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse)
  type: Method
  source:
    id: Equals
    path: ''
    startLine: 35483
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.Publisher
  syntax:
    content: public bool Equals(ListProjectsResponse other)
    parameters:
    - id: other
      type: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As ListProjectsResponse) As Boolean
  overload: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Equals*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.GetHashCode
  commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.GetHashCode
  id: GetHashCode
  parent: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: ListProjectsResponse.GetHashCode()
  fullName: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.GetHashCode()
  type: Method
  source:
    id: GetHashCode
    path: ''
    startLine: 35495
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.Publisher
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overload: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.ToString
  commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.ToString
  id: ToString
  parent: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ListProjectsResponse.ToString()
  fullName: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.ToString()
  type: Method
  source:
    id: ToString
    path: ''
    startLine: 35505
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.Publisher
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overload: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.WriteTo(pb.CodedOutputStream)
  commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.WriteTo(pb.CodedOutputStream)
  id: WriteTo(pb.CodedOutputStream)
  parent: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse
  langs:
  - csharp
  - vb
  name: WriteTo(pb.CodedOutputStream)
  nameWithType: ListProjectsResponse.WriteTo(pb.CodedOutputStream)
  fullName: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.WriteTo(pb.CodedOutputStream)
  type: Method
  source:
    id: WriteTo
    path: ''
    startLine: 35510
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.Publisher
  syntax:
    content: public void WriteTo(pb.CodedOutputStream output)
    parameters:
    - id: output
      type: pb.CodedOutputStream
    content.vb: Public Sub WriteTo(output As pb.CodedOutputStream)
  overload: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.WriteTo*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.CalculateSize
  commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.CalculateSize
  id: CalculateSize
  parent: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse
  langs:
  - csharp
  - vb
  name: CalculateSize()
  nameWithType: ListProjectsResponse.CalculateSize()
  fullName: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.CalculateSize()
  type: Method
  source:
    id: CalculateSize
    path: ''
    startLine: 35518
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.Publisher
  syntax:
    content: public int CalculateSize()
    return:
      type: System.Int32
    content.vb: Public Function CalculateSize As Integer
  overload: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.CalculateSize*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.MergeFrom(Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse)
  commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.MergeFrom(Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse)
  id: MergeFrom(Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse)
  parent: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse
  langs:
  - csharp
  - vb
  name: MergeFrom(ListProjectsResponse)
  nameWithType: ListProjectsResponse.MergeFrom(ListProjectsResponse)
  fullName: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.MergeFrom(Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse)
  type: Method
  source:
    id: MergeFrom
    path: ''
    startLine: 35528
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.Publisher
  syntax:
    content: public void MergeFrom(ListProjectsResponse other)
    parameters:
    - id: other
      type: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse
    content.vb: Public Sub MergeFrom(other As ListProjectsResponse)
  overload: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.MergeFrom*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.MergeFrom(pb.CodedInputStream)
  commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.MergeFrom(pb.CodedInputStream)
  id: MergeFrom(pb.CodedInputStream)
  parent: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse
  langs:
  - csharp
  - vb
  name: MergeFrom(pb.CodedInputStream)
  nameWithType: ListProjectsResponse.MergeFrom(pb.CodedInputStream)
  fullName: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.MergeFrom(pb.CodedInputStream)
  type: Method
  source:
    id: MergeFrom
    path: ''
    startLine: 35537
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.ProjectServer.Services.Publisher
  syntax:
    content: public void MergeFrom(pb.CodedInputStream input)
    parameters:
    - id: input
      type: pb.CodedInputStream
    content.vb: Public Sub MergeFrom(input As pb.CodedInputStream)
  overload: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.MergeFrom*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Unity.Reflect.ProjectServer.Services.Publisher
  commentId: N:Unity.Reflect.ProjectServer.Services.Publisher
  name: Unity.Reflect.ProjectServer.Services.Publisher
  nameWithType: Unity.Reflect.ProjectServer.Services.Publisher
  fullName: Unity.Reflect.ProjectServer.Services.Publisher
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: pb.IMessage{Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse}
  commentId: '!:pb.IMessage{Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse}'
  definition: pb.IMessage`1
  name: pb.IMessage<ListProjectsResponse>
  nameWithType: pb.IMessage<ListProjectsResponse>
  fullName: pb.IMessage<Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse>
  nameWithType.vb: pb.IMessage(Of ListProjectsResponse)
  fullName.vb: pb.IMessage(Of Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse)
  name.vb: pb.IMessage(Of ListProjectsResponse)
  spec.csharp:
  - uid: pb.IMessage`1
    name: pb.IMessage
    nameWithType: pb.IMessage
    fullName: pb.IMessage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse
    name: ListProjectsResponse
    nameWithType: ListProjectsResponse
    fullName: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: pb.IMessage`1
    name: pb.IMessage
    nameWithType: pb.IMessage
    fullName: pb.IMessage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse
    name: ListProjectsResponse
    nameWithType: ListProjectsResponse
    fullName: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: pb.IMessage`1
  isExternal: true
  name: pb.IMessage<>
  nameWithType: pb.IMessage<>
  fullName: pb.IMessage<>
  nameWithType.vb: pb.IMessage(Of )
  fullName.vb: pb.IMessage(Of )
  name.vb: pb.IMessage(Of )
  spec.csharp:
  - uid: pb.IMessage`1
    name: pb.IMessage
    nameWithType: pb.IMessage
    fullName: pb.IMessage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: pb.IMessage`1
    name: pb.IMessage
    nameWithType: pb.IMessage
    fullName: pb.IMessage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Parser*
  commentId: Overload:Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Parser
  name: Parser
  nameWithType: ListProjectsResponse.Parser
  fullName: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Parser
- uid: pb.MessageParser{Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse}
  commentId: '!:pb.MessageParser{Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse}'
  definition: pb.MessageParser`1
  name: pb.MessageParser<ListProjectsResponse>
  nameWithType: pb.MessageParser<ListProjectsResponse>
  fullName: pb.MessageParser<Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse>
  nameWithType.vb: pb.MessageParser(Of ListProjectsResponse)
  fullName.vb: pb.MessageParser(Of Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse)
  name.vb: pb.MessageParser(Of ListProjectsResponse)
  spec.csharp:
  - uid: pb.MessageParser`1
    name: pb.MessageParser
    nameWithType: pb.MessageParser
    fullName: pb.MessageParser
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse
    name: ListProjectsResponse
    nameWithType: ListProjectsResponse
    fullName: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: pb.MessageParser`1
    name: pb.MessageParser
    nameWithType: pb.MessageParser
    fullName: pb.MessageParser
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse
    name: ListProjectsResponse
    nameWithType: ListProjectsResponse
    fullName: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: pb.MessageParser`1
  isExternal: true
  name: pb.MessageParser<>
  nameWithType: pb.MessageParser<>
  fullName: pb.MessageParser<>
  nameWithType.vb: pb.MessageParser(Of )
  fullName.vb: pb.MessageParser(Of )
  name.vb: pb.MessageParser(Of )
  spec.csharp:
  - uid: pb.MessageParser`1
    name: pb.MessageParser
    nameWithType: pb.MessageParser
    fullName: pb.MessageParser
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: pb.MessageParser`1
    name: pb.MessageParser
    nameWithType: pb.MessageParser
    fullName: pb.MessageParser
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Descriptor*
  commentId: Overload:Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Descriptor
  name: Descriptor
  nameWithType: ListProjectsResponse.Descriptor
  fullName: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Descriptor
- uid: pbr.MessageDescriptor
  isExternal: true
  name: pbr.MessageDescriptor
  nameWithType: pbr.MessageDescriptor
  fullName: pbr.MessageDescriptor
- uid: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.#ctor*
  commentId: Overload:Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.#ctor
  name: ListProjectsResponse
  nameWithType: ListProjectsResponse.ListProjectsResponse
  fullName: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.ListProjectsResponse
- uid: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse
  commentId: T:Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse
  parent: Unity.Reflect.ProjectServer.Services.Publisher
  name: ListProjectsResponse
  nameWithType: ListProjectsResponse
  fullName: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse
- uid: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Clone*
  commentId: Overload:Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Clone
  name: Clone
  nameWithType: ListProjectsResponse.Clone
  fullName: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Clone
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Projects*
  commentId: Overload:Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Projects
  name: Projects
  nameWithType: ListProjectsResponse.Projects
  fullName: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Projects
- uid: pbc.RepeatedField{Unity.Reflect.ProjectServer.Services.Publisher.Project}
  commentId: '!:pbc.RepeatedField{Unity.Reflect.ProjectServer.Services.Publisher.Project}'
  definition: pbc.RepeatedField`1
  name: pbc.RepeatedField<Project>
  nameWithType: pbc.RepeatedField<Project>
  fullName: pbc.RepeatedField<Unity.Reflect.ProjectServer.Services.Publisher.Project>
  nameWithType.vb: pbc.RepeatedField(Of Project)
  fullName.vb: pbc.RepeatedField(Of Unity.Reflect.ProjectServer.Services.Publisher.Project)
  name.vb: pbc.RepeatedField(Of Project)
  spec.csharp:
  - uid: pbc.RepeatedField`1
    name: pbc.RepeatedField
    nameWithType: pbc.RepeatedField
    fullName: pbc.RepeatedField
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Unity.Reflect.ProjectServer.Services.Publisher.Project
    name: Project
    nameWithType: Project
    fullName: Unity.Reflect.ProjectServer.Services.Publisher.Project
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: pbc.RepeatedField`1
    name: pbc.RepeatedField
    nameWithType: pbc.RepeatedField
    fullName: pbc.RepeatedField
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Unity.Reflect.ProjectServer.Services.Publisher.Project
    name: Project
    nameWithType: Project
    fullName: Unity.Reflect.ProjectServer.Services.Publisher.Project
  - name: )
    nameWithType: )
    fullName: )
- uid: pbc.RepeatedField`1
  isExternal: true
  name: pbc.RepeatedField<>
  nameWithType: pbc.RepeatedField<>
  fullName: pbc.RepeatedField<>
  nameWithType.vb: pbc.RepeatedField(Of )
  fullName.vb: pbc.RepeatedField(Of )
  name.vb: pbc.RepeatedField(Of )
  spec.csharp:
  - uid: pbc.RepeatedField`1
    name: pbc.RepeatedField
    nameWithType: pbc.RepeatedField
    fullName: pbc.RepeatedField
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: pbc.RepeatedField`1
    name: pbc.RepeatedField
    nameWithType: pbc.RepeatedField
    fullName: pbc.RepeatedField
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Equals*
  commentId: Overload:Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Equals
  name: Equals
  nameWithType: ListProjectsResponse.Equals
  fullName: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.GetHashCode*
  commentId: Overload:Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.GetHashCode
  name: GetHashCode
  nameWithType: ListProjectsResponse.GetHashCode
  fullName: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.GetHashCode
- uid: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.ToString*
  commentId: Overload:Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.ToString
  name: ToString
  nameWithType: ListProjectsResponse.ToString
  fullName: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.WriteTo*
  commentId: Overload:Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.WriteTo
  name: WriteTo
  nameWithType: ListProjectsResponse.WriteTo
  fullName: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.WriteTo
- uid: pb.CodedOutputStream
  isExternal: true
  name: pb.CodedOutputStream
  nameWithType: pb.CodedOutputStream
  fullName: pb.CodedOutputStream
- uid: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.CalculateSize*
  commentId: Overload:Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.CalculateSize
  name: CalculateSize
  nameWithType: ListProjectsResponse.CalculateSize
  fullName: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.CalculateSize
- uid: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.MergeFrom*
  commentId: Overload:Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.MergeFrom
  name: MergeFrom
  nameWithType: ListProjectsResponse.MergeFrom
  fullName: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.MergeFrom
- uid: pb.CodedInputStream
  isExternal: true
  name: pb.CodedInputStream
  nameWithType: pb.CodedInputStream
  fullName: pb.CodedInputStream
