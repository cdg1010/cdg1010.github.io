### YamlMime:ManagedReference
items:
- uid: Unity.Reflect.Model.SyncTexture
  commentId: T:Unity.Reflect.Model.SyncTexture
  id: SyncTexture
  parent: Unity.Reflect.Model
  children:
  - Unity.Reflect.Model.SyncTexture.#ctor
  - Unity.Reflect.Model.SyncTexture.#ctor
  - Unity.Reflect.Model.SyncTexture.#ctor(Unity.Reflect.Model.SyncTexture)
  - Unity.Reflect.Model.SyncTexture.#ctor(Unity.Reflect.Model.SyncTexture)
  - Unity.Reflect.Model.SyncTexture.CalculateSize
  - Unity.Reflect.Model.SyncTexture.CalculateSize
  - Unity.Reflect.Model.SyncTexture.Clone
  - Unity.Reflect.Model.SyncTexture.Clone
  - Unity.Reflect.Model.SyncTexture.ConvertToNormalMap
  - Unity.Reflect.Model.SyncTexture.ConvertToNormalMap
  - Unity.Reflect.Model.SyncTexture.ConvertToNormalMapFieldNumber
  - Unity.Reflect.Model.SyncTexture.ConvertToNormalMapFieldNumber
  - Unity.Reflect.Model.SyncTexture.Descriptor
  - Unity.Reflect.Model.SyncTexture.Descriptor
  - Unity.Reflect.Model.SyncTexture.Equals(System.Object)
  - Unity.Reflect.Model.SyncTexture.Equals(System.Object)
  - Unity.Reflect.Model.SyncTexture.Equals(Unity.Reflect.Model.SyncTexture)
  - Unity.Reflect.Model.SyncTexture.Equals(Unity.Reflect.Model.SyncTexture)
  - Unity.Reflect.Model.SyncTexture.Extension
  - Unity.Reflect.Model.SyncTexture.Extension
  - Unity.Reflect.Model.SyncTexture.GetHashCode
  - Unity.Reflect.Model.SyncTexture.GetHashCode
  - Unity.Reflect.Model.SyncTexture.MergeFrom(pb.CodedInputStream)
  - Unity.Reflect.Model.SyncTexture.MergeFrom(pb.CodedInputStream)
  - Unity.Reflect.Model.SyncTexture.MergeFrom(Unity.Reflect.Model.SyncTexture)
  - Unity.Reflect.Model.SyncTexture.MergeFrom(Unity.Reflect.Model.SyncTexture)
  - Unity.Reflect.Model.SyncTexture.Name
  - Unity.Reflect.Model.SyncTexture.Name
  - Unity.Reflect.Model.SyncTexture.NameFieldNumber
  - Unity.Reflect.Model.SyncTexture.NameFieldNumber
  - Unity.Reflect.Model.SyncTexture.Parser
  - Unity.Reflect.Model.SyncTexture.Parser
  - Unity.Reflect.Model.SyncTexture.Source
  - Unity.Reflect.Model.SyncTexture.Source
  - Unity.Reflect.Model.SyncTexture.SourceFieldNumber
  - Unity.Reflect.Model.SyncTexture.SourceFieldNumber
  - Unity.Reflect.Model.SyncTexture.ToString
  - Unity.Reflect.Model.SyncTexture.ToString
  - Unity.Reflect.Model.SyncTexture.WriteTo(pb.CodedOutputStream)
  - Unity.Reflect.Model.SyncTexture.WriteTo(pb.CodedOutputStream)
  langs:
  - csharp
  - vb
  name: SyncTexture
  nameWithType: SyncTexture
  fullName: Unity.Reflect.Model.SyncTexture
  type: Class
  source:
    id: SyncTexture
    path: ''
    startLine: 33736
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: 'public sealed class SyncTexture : pb.IMessage<SyncTexture>, ISyncModel, ISyncSendable, pb.IMessage<SyncTexture>'
    content.vb: >-
      Public NotInheritable Class SyncTexture
          Inherits pb.IMessage(Of SyncTexture)
          Implements ISyncModel, ISyncSendable, pb.IMessage(Of SyncTexture)
  inheritance:
  - System.Object
  implements:
  - Unity.Reflect.Model.ISyncModel
  - pb.IMessage{Unity.Reflect.Model.SyncTexture}
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Unity.Reflect.Model.SyncTexture.Extension
  commentId: F:Unity.Reflect.Model.SyncTexture.Extension
  id: Extension
  parent: Unity.Reflect.Model.SyncTexture
  langs:
  - csharp
  - vb
  name: Extension
  nameWithType: SyncTexture.Extension
  fullName: Unity.Reflect.Model.SyncTexture.Extension
  type: Field
  source:
    id: Extension
    path: ''
    startLine: 1679
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public static string Extension
    return:
      type: System.String
    content.vb: Public Shared Extension As String
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Unity.Reflect.Model.SyncTexture.Parser
  commentId: P:Unity.Reflect.Model.SyncTexture.Parser
  id: Parser
  parent: Unity.Reflect.Model.SyncTexture
  langs:
  - csharp
  - vb
  name: Parser
  nameWithType: SyncTexture.Parser
  fullName: Unity.Reflect.Model.SyncTexture.Parser
  type: Property
  source:
    id: Parser
    path: ''
    startLine: 13580
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public static pb.MessageParser<SyncTexture> Parser { get; }
    parameters: []
    return:
      type: pb.MessageParser{Unity.Reflect.Model.SyncTexture}
    content.vb: Public Shared ReadOnly Property Parser As pb.MessageParser(Of SyncTexture)
  overload: Unity.Reflect.Model.SyncTexture.Parser*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Unity.Reflect.Model.SyncTexture.Descriptor
  commentId: P:Unity.Reflect.Model.SyncTexture.Descriptor
  id: Descriptor
  parent: Unity.Reflect.Model.SyncTexture
  langs:
  - csharp
  - vb
  name: Descriptor
  nameWithType: SyncTexture.Descriptor
  fullName: Unity.Reflect.Model.SyncTexture.Descriptor
  type: Property
  source:
    id: Descriptor
    path: ''
    startLine: 13583
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public static pbr.MessageDescriptor Descriptor { get; }
    parameters: []
    return:
      type: pbr.MessageDescriptor
    content.vb: Public Shared ReadOnly Property Descriptor As pbr.MessageDescriptor
  overload: Unity.Reflect.Model.SyncTexture.Descriptor*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Unity.Reflect.Model.SyncTexture.#ctor
  commentId: M:Unity.Reflect.Model.SyncTexture.#ctor
  id: '#ctor'
  parent: Unity.Reflect.Model.SyncTexture
  langs:
  - csharp
  - vb
  name: SyncTexture()
  nameWithType: SyncTexture.SyncTexture()
  fullName: Unity.Reflect.Model.SyncTexture.SyncTexture()
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 13593
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public SyncTexture()
    content.vb: Public Sub New
  overload: Unity.Reflect.Model.SyncTexture.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unity.Reflect.Model.SyncTexture.#ctor(Unity.Reflect.Model.SyncTexture)
  commentId: M:Unity.Reflect.Model.SyncTexture.#ctor(Unity.Reflect.Model.SyncTexture)
  id: '#ctor(Unity.Reflect.Model.SyncTexture)'
  parent: Unity.Reflect.Model.SyncTexture
  langs:
  - csharp
  - vb
  name: SyncTexture(SyncTexture)
  nameWithType: SyncTexture.SyncTexture(SyncTexture)
  fullName: Unity.Reflect.Model.SyncTexture.SyncTexture(Unity.Reflect.Model.SyncTexture)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 13600
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public SyncTexture(SyncTexture other)
    parameters:
    - id: other
      type: Unity.Reflect.Model.SyncTexture
    content.vb: Public Sub New(other As SyncTexture)
  overload: Unity.Reflect.Model.SyncTexture.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unity.Reflect.Model.SyncTexture.Clone
  commentId: M:Unity.Reflect.Model.SyncTexture.Clone
  id: Clone
  parent: Unity.Reflect.Model.SyncTexture
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: SyncTexture.Clone()
  fullName: Unity.Reflect.Model.SyncTexture.Clone()
  type: Method
  source:
    id: Clone
    path: ''
    startLine: 13608
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public SyncTexture Clone()
    return:
      type: Unity.Reflect.Model.SyncTexture
    content.vb: Public Function Clone As SyncTexture
  overload: Unity.Reflect.Model.SyncTexture.Clone*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unity.Reflect.Model.SyncTexture.NameFieldNumber
  commentId: F:Unity.Reflect.Model.SyncTexture.NameFieldNumber
  id: NameFieldNumber
  parent: Unity.Reflect.Model.SyncTexture
  langs:
  - csharp
  - vb
  name: NameFieldNumber
  nameWithType: SyncTexture.NameFieldNumber
  fullName: Unity.Reflect.Model.SyncTexture.NameFieldNumber
  type: Field
  source:
    id: NameFieldNumber
    path: ''
    startLine: 13614
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  summary: Field number for the &quot;name&quot; field.
  example: []
  syntax:
    content: public const int NameFieldNumber = 1
    return:
      type: System.Int32
    content.vb: Public Const NameFieldNumber As Integer = 1
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Unity.Reflect.Model.SyncTexture.Name
  commentId: P:Unity.Reflect.Model.SyncTexture.Name
  id: Name
  parent: Unity.Reflect.Model.SyncTexture
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: SyncTexture.Name
  fullName: Unity.Reflect.Model.SyncTexture.Name
  type: Property
  source:
    id: Name
    path: ''
    startLine: 13616
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: Unity.Reflect.Model.SyncTexture.Name*
  implements:
  - Unity.Reflect.Model.ISyncModel.Name
  - Unity.Reflect.Model.ISyncModel.Name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unity.Reflect.Model.SyncTexture.SourceFieldNumber
  commentId: F:Unity.Reflect.Model.SyncTexture.SourceFieldNumber
  id: SourceFieldNumber
  parent: Unity.Reflect.Model.SyncTexture
  langs:
  - csharp
  - vb
  name: SourceFieldNumber
  nameWithType: SyncTexture.SourceFieldNumber
  fullName: Unity.Reflect.Model.SyncTexture.SourceFieldNumber
  type: Field
  source:
    id: SourceFieldNumber
    path: ''
    startLine: 13625
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  summary: Field number for the &quot;source&quot; field.
  example: []
  syntax:
    content: public const int SourceFieldNumber = 2
    return:
      type: System.Int32
    content.vb: Public Const SourceFieldNumber As Integer = 2
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Unity.Reflect.Model.SyncTexture.Source
  commentId: P:Unity.Reflect.Model.SyncTexture.Source
  id: Source
  parent: Unity.Reflect.Model.SyncTexture
  langs:
  - csharp
  - vb
  name: Source
  nameWithType: SyncTexture.Source
  fullName: Unity.Reflect.Model.SyncTexture.Source
  type: Property
  source:
    id: Source
    path: ''
    startLine: 13627
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public pb.ByteString Source { get; set; }
    parameters: []
    return:
      type: pb.ByteString
    content.vb: Public Property Source As pb.ByteString
  overload: Unity.Reflect.Model.SyncTexture.Source*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unity.Reflect.Model.SyncTexture.ConvertToNormalMapFieldNumber
  commentId: F:Unity.Reflect.Model.SyncTexture.ConvertToNormalMapFieldNumber
  id: ConvertToNormalMapFieldNumber
  parent: Unity.Reflect.Model.SyncTexture
  langs:
  - csharp
  - vb
  name: ConvertToNormalMapFieldNumber
  nameWithType: SyncTexture.ConvertToNormalMapFieldNumber
  fullName: Unity.Reflect.Model.SyncTexture.ConvertToNormalMapFieldNumber
  type: Field
  source:
    id: ConvertToNormalMapFieldNumber
    path: ''
    startLine: 13636
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  summary: Field number for the &quot;convertToNormalMap&quot; field.
  example: []
  syntax:
    content: public const int ConvertToNormalMapFieldNumber = 3
    return:
      type: System.Int32
    content.vb: Public Const ConvertToNormalMapFieldNumber As Integer = 3
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Unity.Reflect.Model.SyncTexture.ConvertToNormalMap
  commentId: P:Unity.Reflect.Model.SyncTexture.ConvertToNormalMap
  id: ConvertToNormalMap
  parent: Unity.Reflect.Model.SyncTexture
  langs:
  - csharp
  - vb
  name: ConvertToNormalMap
  nameWithType: SyncTexture.ConvertToNormalMap
  fullName: Unity.Reflect.Model.SyncTexture.ConvertToNormalMap
  type: Property
  source:
    id: ConvertToNormalMap
    path: ''
    startLine: 13638
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public bool ConvertToNormalMap { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property ConvertToNormalMap As Boolean
  overload: Unity.Reflect.Model.SyncTexture.ConvertToNormalMap*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unity.Reflect.Model.SyncTexture.Equals(System.Object)
  commentId: M:Unity.Reflect.Model.SyncTexture.Equals(System.Object)
  id: Equals(System.Object)
  parent: Unity.Reflect.Model.SyncTexture
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: SyncTexture.Equals(Object)
  fullName: Unity.Reflect.Model.SyncTexture.Equals(System.Object)
  type: Method
  source:
    id: Equals
    path: ''
    startLine: 13646
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public override bool Equals(object other)
    parameters:
    - id: other
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(other As Object) As Boolean
  overload: Unity.Reflect.Model.SyncTexture.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Unity.Reflect.Model.SyncTexture.Equals(Unity.Reflect.Model.SyncTexture)
  commentId: M:Unity.Reflect.Model.SyncTexture.Equals(Unity.Reflect.Model.SyncTexture)
  id: Equals(Unity.Reflect.Model.SyncTexture)
  parent: Unity.Reflect.Model.SyncTexture
  langs:
  - csharp
  - vb
  name: Equals(SyncTexture)
  nameWithType: SyncTexture.Equals(SyncTexture)
  fullName: Unity.Reflect.Model.SyncTexture.Equals(Unity.Reflect.Model.SyncTexture)
  type: Method
  source:
    id: Equals
    path: ''
    startLine: 13651
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public bool Equals(SyncTexture other)
    parameters:
    - id: other
      type: Unity.Reflect.Model.SyncTexture
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As SyncTexture) As Boolean
  overload: Unity.Reflect.Model.SyncTexture.Equals*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unity.Reflect.Model.SyncTexture.GetHashCode
  commentId: M:Unity.Reflect.Model.SyncTexture.GetHashCode
  id: GetHashCode
  parent: Unity.Reflect.Model.SyncTexture
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: SyncTexture.GetHashCode()
  fullName: Unity.Reflect.Model.SyncTexture.GetHashCode()
  type: Method
  source:
    id: GetHashCode
    path: ''
    startLine: 13665
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overload: Unity.Reflect.Model.SyncTexture.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Unity.Reflect.Model.SyncTexture.ToString
  commentId: M:Unity.Reflect.Model.SyncTexture.ToString
  id: ToString
  parent: Unity.Reflect.Model.SyncTexture
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: SyncTexture.ToString()
  fullName: Unity.Reflect.Model.SyncTexture.ToString()
  type: Method
  source:
    id: ToString
    path: ''
    startLine: 13677
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overload: Unity.Reflect.Model.SyncTexture.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Unity.Reflect.Model.SyncTexture.WriteTo(pb.CodedOutputStream)
  commentId: M:Unity.Reflect.Model.SyncTexture.WriteTo(pb.CodedOutputStream)
  id: WriteTo(pb.CodedOutputStream)
  parent: Unity.Reflect.Model.SyncTexture
  langs:
  - csharp
  - vb
  name: WriteTo(pb.CodedOutputStream)
  nameWithType: SyncTexture.WriteTo(pb.CodedOutputStream)
  fullName: Unity.Reflect.Model.SyncTexture.WriteTo(pb.CodedOutputStream)
  type: Method
  source:
    id: WriteTo
    path: ''
    startLine: 13682
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public void WriteTo(pb.CodedOutputStream output)
    parameters:
    - id: output
      type: pb.CodedOutputStream
    content.vb: Public Sub WriteTo(output As pb.CodedOutputStream)
  overload: Unity.Reflect.Model.SyncTexture.WriteTo*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unity.Reflect.Model.SyncTexture.CalculateSize
  commentId: M:Unity.Reflect.Model.SyncTexture.CalculateSize
  id: CalculateSize
  parent: Unity.Reflect.Model.SyncTexture
  langs:
  - csharp
  - vb
  name: CalculateSize()
  nameWithType: SyncTexture.CalculateSize()
  fullName: Unity.Reflect.Model.SyncTexture.CalculateSize()
  type: Method
  source:
    id: CalculateSize
    path: ''
    startLine: 13701
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public int CalculateSize()
    return:
      type: System.Int32
    content.vb: Public Function CalculateSize As Integer
  overload: Unity.Reflect.Model.SyncTexture.CalculateSize*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unity.Reflect.Model.SyncTexture.MergeFrom(Unity.Reflect.Model.SyncTexture)
  commentId: M:Unity.Reflect.Model.SyncTexture.MergeFrom(Unity.Reflect.Model.SyncTexture)
  id: MergeFrom(Unity.Reflect.Model.SyncTexture)
  parent: Unity.Reflect.Model.SyncTexture
  langs:
  - csharp
  - vb
  name: MergeFrom(SyncTexture)
  nameWithType: SyncTexture.MergeFrom(SyncTexture)
  fullName: Unity.Reflect.Model.SyncTexture.MergeFrom(Unity.Reflect.Model.SyncTexture)
  type: Method
  source:
    id: MergeFrom
    path: ''
    startLine: 13719
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public void MergeFrom(SyncTexture other)
    parameters:
    - id: other
      type: Unity.Reflect.Model.SyncTexture
    content.vb: Public Sub MergeFrom(other As SyncTexture)
  overload: Unity.Reflect.Model.SyncTexture.MergeFrom*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unity.Reflect.Model.SyncTexture.MergeFrom(pb.CodedInputStream)
  commentId: M:Unity.Reflect.Model.SyncTexture.MergeFrom(pb.CodedInputStream)
  id: MergeFrom(pb.CodedInputStream)
  parent: Unity.Reflect.Model.SyncTexture
  langs:
  - csharp
  - vb
  name: MergeFrom(pb.CodedInputStream)
  nameWithType: SyncTexture.MergeFrom(pb.CodedInputStream)
  fullName: Unity.Reflect.Model.SyncTexture.MergeFrom(pb.CodedInputStream)
  type: Method
  source:
    id: MergeFrom
    path: ''
    startLine: 13736
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public void MergeFrom(pb.CodedInputStream input)
    parameters:
    - id: input
      type: pb.CodedInputStream
    content.vb: Public Sub MergeFrom(input As pb.CodedInputStream)
  overload: Unity.Reflect.Model.SyncTexture.MergeFrom*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unity.Reflect.Model.SyncTexture.Extension
  commentId: F:Unity.Reflect.Model.SyncTexture.Extension
  id: Extension
  parent: Unity.Reflect.Model.SyncTexture
  langs:
  - csharp
  - vb
  name: Extension
  nameWithType: SyncTexture.Extension
  fullName: Unity.Reflect.Model.SyncTexture.Extension
  type: Field
  source:
    id: Extension
    path: ''
    startLine: 21838
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public static string Extension
    return:
      type: System.String
    content.vb: Public Shared Extension As String
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Unity.Reflect.Model.SyncTexture.Parser
  commentId: P:Unity.Reflect.Model.SyncTexture.Parser
  id: Parser
  parent: Unity.Reflect.Model.SyncTexture
  langs:
  - csharp
  - vb
  name: Parser
  nameWithType: SyncTexture.Parser
  fullName: Unity.Reflect.Model.SyncTexture.Parser
  type: Property
  source:
    id: Parser
    path: ''
    startLine: 33739
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public static pb.MessageParser<SyncTexture> Parser { get; }
    parameters: []
    return:
      type: pb.MessageParser{Unity.Reflect.Model.SyncTexture}
    content.vb: Public Shared ReadOnly Property Parser As pb.MessageParser(Of SyncTexture)
  overload: Unity.Reflect.Model.SyncTexture.Parser*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Unity.Reflect.Model.SyncTexture.Descriptor
  commentId: P:Unity.Reflect.Model.SyncTexture.Descriptor
  id: Descriptor
  parent: Unity.Reflect.Model.SyncTexture
  langs:
  - csharp
  - vb
  name: Descriptor
  nameWithType: SyncTexture.Descriptor
  fullName: Unity.Reflect.Model.SyncTexture.Descriptor
  type: Property
  source:
    id: Descriptor
    path: ''
    startLine: 33742
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public static pbr.MessageDescriptor Descriptor { get; }
    parameters: []
    return:
      type: pbr.MessageDescriptor
    content.vb: Public Shared ReadOnly Property Descriptor As pbr.MessageDescriptor
  overload: Unity.Reflect.Model.SyncTexture.Descriptor*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Unity.Reflect.Model.SyncTexture.#ctor
  commentId: M:Unity.Reflect.Model.SyncTexture.#ctor
  id: '#ctor'
  parent: Unity.Reflect.Model.SyncTexture
  langs:
  - csharp
  - vb
  name: SyncTexture()
  nameWithType: SyncTexture.SyncTexture()
  fullName: Unity.Reflect.Model.SyncTexture.SyncTexture()
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 33752
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public SyncTexture()
    content.vb: Public Sub New
  overload: Unity.Reflect.Model.SyncTexture.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unity.Reflect.Model.SyncTexture.#ctor(Unity.Reflect.Model.SyncTexture)
  commentId: M:Unity.Reflect.Model.SyncTexture.#ctor(Unity.Reflect.Model.SyncTexture)
  id: '#ctor(Unity.Reflect.Model.SyncTexture)'
  parent: Unity.Reflect.Model.SyncTexture
  langs:
  - csharp
  - vb
  name: SyncTexture(SyncTexture)
  nameWithType: SyncTexture.SyncTexture(SyncTexture)
  fullName: Unity.Reflect.Model.SyncTexture.SyncTexture(Unity.Reflect.Model.SyncTexture)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 33759
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public SyncTexture(SyncTexture other)
    parameters:
    - id: other
      type: Unity.Reflect.Model.SyncTexture
    content.vb: Public Sub New(other As SyncTexture)
  overload: Unity.Reflect.Model.SyncTexture.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unity.Reflect.Model.SyncTexture.Clone
  commentId: M:Unity.Reflect.Model.SyncTexture.Clone
  id: Clone
  parent: Unity.Reflect.Model.SyncTexture
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: SyncTexture.Clone()
  fullName: Unity.Reflect.Model.SyncTexture.Clone()
  type: Method
  source:
    id: Clone
    path: ''
    startLine: 33767
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public SyncTexture Clone()
    return:
      type: Unity.Reflect.Model.SyncTexture
    content.vb: Public Function Clone As SyncTexture
  overload: Unity.Reflect.Model.SyncTexture.Clone*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unity.Reflect.Model.SyncTexture.NameFieldNumber
  commentId: F:Unity.Reflect.Model.SyncTexture.NameFieldNumber
  id: NameFieldNumber
  parent: Unity.Reflect.Model.SyncTexture
  langs:
  - csharp
  - vb
  name: NameFieldNumber
  nameWithType: SyncTexture.NameFieldNumber
  fullName: Unity.Reflect.Model.SyncTexture.NameFieldNumber
  type: Field
  source:
    id: NameFieldNumber
    path: ''
    startLine: 33773
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  summary: Field number for the &quot;name&quot; field.
  example: []
  syntax:
    content: public const int NameFieldNumber = 1
    return:
      type: System.Int32
    content.vb: Public Const NameFieldNumber As Integer = 1
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Unity.Reflect.Model.SyncTexture.Name
  commentId: P:Unity.Reflect.Model.SyncTexture.Name
  id: Name
  parent: Unity.Reflect.Model.SyncTexture
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: SyncTexture.Name
  fullName: Unity.Reflect.Model.SyncTexture.Name
  type: Property
  source:
    id: Name
    path: ''
    startLine: 33775
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: Unity.Reflect.Model.SyncTexture.Name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unity.Reflect.Model.SyncTexture.SourceFieldNumber
  commentId: F:Unity.Reflect.Model.SyncTexture.SourceFieldNumber
  id: SourceFieldNumber
  parent: Unity.Reflect.Model.SyncTexture
  langs:
  - csharp
  - vb
  name: SourceFieldNumber
  nameWithType: SyncTexture.SourceFieldNumber
  fullName: Unity.Reflect.Model.SyncTexture.SourceFieldNumber
  type: Field
  source:
    id: SourceFieldNumber
    path: ''
    startLine: 33784
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  summary: Field number for the &quot;source&quot; field.
  example: []
  syntax:
    content: public const int SourceFieldNumber = 2
    return:
      type: System.Int32
    content.vb: Public Const SourceFieldNumber As Integer = 2
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Unity.Reflect.Model.SyncTexture.Source
  commentId: P:Unity.Reflect.Model.SyncTexture.Source
  id: Source
  parent: Unity.Reflect.Model.SyncTexture
  langs:
  - csharp
  - vb
  name: Source
  nameWithType: SyncTexture.Source
  fullName: Unity.Reflect.Model.SyncTexture.Source
  type: Property
  source:
    id: Source
    path: ''
    startLine: 33786
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public pb.ByteString Source { get; set; }
    parameters: []
    return:
      type: pb.ByteString
    content.vb: Public Property Source As pb.ByteString
  overload: Unity.Reflect.Model.SyncTexture.Source*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unity.Reflect.Model.SyncTexture.ConvertToNormalMapFieldNumber
  commentId: F:Unity.Reflect.Model.SyncTexture.ConvertToNormalMapFieldNumber
  id: ConvertToNormalMapFieldNumber
  parent: Unity.Reflect.Model.SyncTexture
  langs:
  - csharp
  - vb
  name: ConvertToNormalMapFieldNumber
  nameWithType: SyncTexture.ConvertToNormalMapFieldNumber
  fullName: Unity.Reflect.Model.SyncTexture.ConvertToNormalMapFieldNumber
  type: Field
  source:
    id: ConvertToNormalMapFieldNumber
    path: ''
    startLine: 33795
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  summary: Field number for the &quot;convertToNormalMap&quot; field.
  example: []
  syntax:
    content: public const int ConvertToNormalMapFieldNumber = 3
    return:
      type: System.Int32
    content.vb: Public Const ConvertToNormalMapFieldNumber As Integer = 3
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Unity.Reflect.Model.SyncTexture.ConvertToNormalMap
  commentId: P:Unity.Reflect.Model.SyncTexture.ConvertToNormalMap
  id: ConvertToNormalMap
  parent: Unity.Reflect.Model.SyncTexture
  langs:
  - csharp
  - vb
  name: ConvertToNormalMap
  nameWithType: SyncTexture.ConvertToNormalMap
  fullName: Unity.Reflect.Model.SyncTexture.ConvertToNormalMap
  type: Property
  source:
    id: ConvertToNormalMap
    path: ''
    startLine: 33797
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public bool ConvertToNormalMap { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property ConvertToNormalMap As Boolean
  overload: Unity.Reflect.Model.SyncTexture.ConvertToNormalMap*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unity.Reflect.Model.SyncTexture.Equals(System.Object)
  commentId: M:Unity.Reflect.Model.SyncTexture.Equals(System.Object)
  id: Equals(System.Object)
  parent: Unity.Reflect.Model.SyncTexture
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: SyncTexture.Equals(Object)
  fullName: Unity.Reflect.Model.SyncTexture.Equals(System.Object)
  type: Method
  source:
    id: Equals
    path: ''
    startLine: 33805
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public override bool Equals(object other)
    parameters:
    - id: other
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(other As Object) As Boolean
  overload: Unity.Reflect.Model.SyncTexture.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Unity.Reflect.Model.SyncTexture.Equals(Unity.Reflect.Model.SyncTexture)
  commentId: M:Unity.Reflect.Model.SyncTexture.Equals(Unity.Reflect.Model.SyncTexture)
  id: Equals(Unity.Reflect.Model.SyncTexture)
  parent: Unity.Reflect.Model.SyncTexture
  langs:
  - csharp
  - vb
  name: Equals(SyncTexture)
  nameWithType: SyncTexture.Equals(SyncTexture)
  fullName: Unity.Reflect.Model.SyncTexture.Equals(Unity.Reflect.Model.SyncTexture)
  type: Method
  source:
    id: Equals
    path: ''
    startLine: 33810
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public bool Equals(SyncTexture other)
    parameters:
    - id: other
      type: Unity.Reflect.Model.SyncTexture
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As SyncTexture) As Boolean
  overload: Unity.Reflect.Model.SyncTexture.Equals*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unity.Reflect.Model.SyncTexture.GetHashCode
  commentId: M:Unity.Reflect.Model.SyncTexture.GetHashCode
  id: GetHashCode
  parent: Unity.Reflect.Model.SyncTexture
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: SyncTexture.GetHashCode()
  fullName: Unity.Reflect.Model.SyncTexture.GetHashCode()
  type: Method
  source:
    id: GetHashCode
    path: ''
    startLine: 33824
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overload: Unity.Reflect.Model.SyncTexture.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Unity.Reflect.Model.SyncTexture.ToString
  commentId: M:Unity.Reflect.Model.SyncTexture.ToString
  id: ToString
  parent: Unity.Reflect.Model.SyncTexture
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: SyncTexture.ToString()
  fullName: Unity.Reflect.Model.SyncTexture.ToString()
  type: Method
  source:
    id: ToString
    path: ''
    startLine: 33836
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overload: Unity.Reflect.Model.SyncTexture.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Unity.Reflect.Model.SyncTexture.WriteTo(pb.CodedOutputStream)
  commentId: M:Unity.Reflect.Model.SyncTexture.WriteTo(pb.CodedOutputStream)
  id: WriteTo(pb.CodedOutputStream)
  parent: Unity.Reflect.Model.SyncTexture
  langs:
  - csharp
  - vb
  name: WriteTo(pb.CodedOutputStream)
  nameWithType: SyncTexture.WriteTo(pb.CodedOutputStream)
  fullName: Unity.Reflect.Model.SyncTexture.WriteTo(pb.CodedOutputStream)
  type: Method
  source:
    id: WriteTo
    path: ''
    startLine: 33841
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public void WriteTo(pb.CodedOutputStream output)
    parameters:
    - id: output
      type: pb.CodedOutputStream
    content.vb: Public Sub WriteTo(output As pb.CodedOutputStream)
  overload: Unity.Reflect.Model.SyncTexture.WriteTo*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unity.Reflect.Model.SyncTexture.CalculateSize
  commentId: M:Unity.Reflect.Model.SyncTexture.CalculateSize
  id: CalculateSize
  parent: Unity.Reflect.Model.SyncTexture
  langs:
  - csharp
  - vb
  name: CalculateSize()
  nameWithType: SyncTexture.CalculateSize()
  fullName: Unity.Reflect.Model.SyncTexture.CalculateSize()
  type: Method
  source:
    id: CalculateSize
    path: ''
    startLine: 33860
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public int CalculateSize()
    return:
      type: System.Int32
    content.vb: Public Function CalculateSize As Integer
  overload: Unity.Reflect.Model.SyncTexture.CalculateSize*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unity.Reflect.Model.SyncTexture.MergeFrom(Unity.Reflect.Model.SyncTexture)
  commentId: M:Unity.Reflect.Model.SyncTexture.MergeFrom(Unity.Reflect.Model.SyncTexture)
  id: MergeFrom(Unity.Reflect.Model.SyncTexture)
  parent: Unity.Reflect.Model.SyncTexture
  langs:
  - csharp
  - vb
  name: MergeFrom(SyncTexture)
  nameWithType: SyncTexture.MergeFrom(SyncTexture)
  fullName: Unity.Reflect.Model.SyncTexture.MergeFrom(Unity.Reflect.Model.SyncTexture)
  type: Method
  source:
    id: MergeFrom
    path: ''
    startLine: 33878
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public void MergeFrom(SyncTexture other)
    parameters:
    - id: other
      type: Unity.Reflect.Model.SyncTexture
    content.vb: Public Sub MergeFrom(other As SyncTexture)
  overload: Unity.Reflect.Model.SyncTexture.MergeFrom*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unity.Reflect.Model.SyncTexture.MergeFrom(pb.CodedInputStream)
  commentId: M:Unity.Reflect.Model.SyncTexture.MergeFrom(pb.CodedInputStream)
  id: MergeFrom(pb.CodedInputStream)
  parent: Unity.Reflect.Model.SyncTexture
  langs:
  - csharp
  - vb
  name: MergeFrom(pb.CodedInputStream)
  nameWithType: SyncTexture.MergeFrom(pb.CodedInputStream)
  fullName: Unity.Reflect.Model.SyncTexture.MergeFrom(pb.CodedInputStream)
  type: Method
  source:
    id: MergeFrom
    path: ''
    startLine: 33895
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect.Model
  syntax:
    content: public void MergeFrom(pb.CodedInputStream input)
    parameters:
    - id: input
      type: pb.CodedInputStream
    content.vb: Public Sub MergeFrom(input As pb.CodedInputStream)
  overload: Unity.Reflect.Model.SyncTexture.MergeFrom*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Unity.Reflect.Model
  commentId: N:Unity.Reflect.Model
  name: Unity.Reflect.Model
  nameWithType: Unity.Reflect.Model
  fullName: Unity.Reflect.Model
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Unity.Reflect.Model.ISyncModel
  commentId: T:Unity.Reflect.Model.ISyncModel
  parent: Unity.Reflect.Model
  name: ISyncModel
  nameWithType: ISyncModel
  fullName: Unity.Reflect.Model.ISyncModel
- uid: pb.IMessage{Unity.Reflect.Model.SyncTexture}
  commentId: '!:pb.IMessage{Unity.Reflect.Model.SyncTexture}'
  definition: pb.IMessage`1
  name: pb.IMessage<SyncTexture>
  nameWithType: pb.IMessage<SyncTexture>
  fullName: pb.IMessage<Unity.Reflect.Model.SyncTexture>
  nameWithType.vb: pb.IMessage(Of SyncTexture)
  fullName.vb: pb.IMessage(Of Unity.Reflect.Model.SyncTexture)
  name.vb: pb.IMessage(Of SyncTexture)
  spec.csharp:
  - uid: pb.IMessage`1
    name: pb.IMessage
    nameWithType: pb.IMessage
    fullName: pb.IMessage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Unity.Reflect.Model.SyncTexture
    name: SyncTexture
    nameWithType: SyncTexture
    fullName: Unity.Reflect.Model.SyncTexture
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: pb.IMessage`1
    name: pb.IMessage
    nameWithType: pb.IMessage
    fullName: pb.IMessage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Unity.Reflect.Model.SyncTexture
    name: SyncTexture
    nameWithType: SyncTexture
    fullName: Unity.Reflect.Model.SyncTexture
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: pb.IMessage`1
  isExternal: true
  name: pb.IMessage<>
  nameWithType: pb.IMessage<>
  fullName: pb.IMessage<>
  nameWithType.vb: pb.IMessage(Of )
  fullName.vb: pb.IMessage(Of )
  name.vb: pb.IMessage(Of )
  spec.csharp:
  - uid: pb.IMessage`1
    name: pb.IMessage
    nameWithType: pb.IMessage
    fullName: pb.IMessage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: pb.IMessage`1
    name: pb.IMessage
    nameWithType: pb.IMessage
    fullName: pb.IMessage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Unity.Reflect.Model.SyncTexture.Parser*
  commentId: Overload:Unity.Reflect.Model.SyncTexture.Parser
  name: Parser
  nameWithType: SyncTexture.Parser
  fullName: Unity.Reflect.Model.SyncTexture.Parser
- uid: pb.MessageParser{Unity.Reflect.Model.SyncTexture}
  commentId: '!:pb.MessageParser{Unity.Reflect.Model.SyncTexture}'
  definition: pb.MessageParser`1
  name: pb.MessageParser<SyncTexture>
  nameWithType: pb.MessageParser<SyncTexture>
  fullName: pb.MessageParser<Unity.Reflect.Model.SyncTexture>
  nameWithType.vb: pb.MessageParser(Of SyncTexture)
  fullName.vb: pb.MessageParser(Of Unity.Reflect.Model.SyncTexture)
  name.vb: pb.MessageParser(Of SyncTexture)
  spec.csharp:
  - uid: pb.MessageParser`1
    name: pb.MessageParser
    nameWithType: pb.MessageParser
    fullName: pb.MessageParser
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Unity.Reflect.Model.SyncTexture
    name: SyncTexture
    nameWithType: SyncTexture
    fullName: Unity.Reflect.Model.SyncTexture
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: pb.MessageParser`1
    name: pb.MessageParser
    nameWithType: pb.MessageParser
    fullName: pb.MessageParser
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Unity.Reflect.Model.SyncTexture
    name: SyncTexture
    nameWithType: SyncTexture
    fullName: Unity.Reflect.Model.SyncTexture
  - name: )
    nameWithType: )
    fullName: )
- uid: pb.MessageParser`1
  isExternal: true
  name: pb.MessageParser<>
  nameWithType: pb.MessageParser<>
  fullName: pb.MessageParser<>
  nameWithType.vb: pb.MessageParser(Of )
  fullName.vb: pb.MessageParser(Of )
  name.vb: pb.MessageParser(Of )
  spec.csharp:
  - uid: pb.MessageParser`1
    name: pb.MessageParser
    nameWithType: pb.MessageParser
    fullName: pb.MessageParser
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: pb.MessageParser`1
    name: pb.MessageParser
    nameWithType: pb.MessageParser
    fullName: pb.MessageParser
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Unity.Reflect.Model.SyncTexture.Descriptor*
  commentId: Overload:Unity.Reflect.Model.SyncTexture.Descriptor
  name: Descriptor
  nameWithType: SyncTexture.Descriptor
  fullName: Unity.Reflect.Model.SyncTexture.Descriptor
- uid: pbr.MessageDescriptor
  isExternal: true
  name: pbr.MessageDescriptor
  nameWithType: pbr.MessageDescriptor
  fullName: pbr.MessageDescriptor
- uid: Unity.Reflect.Model.SyncTexture.#ctor*
  commentId: Overload:Unity.Reflect.Model.SyncTexture.#ctor
  name: SyncTexture
  nameWithType: SyncTexture.SyncTexture
  fullName: Unity.Reflect.Model.SyncTexture.SyncTexture
- uid: Unity.Reflect.Model.SyncTexture
  commentId: T:Unity.Reflect.Model.SyncTexture
  parent: Unity.Reflect.Model
  name: SyncTexture
  nameWithType: SyncTexture
  fullName: Unity.Reflect.Model.SyncTexture
- uid: Unity.Reflect.Model.SyncTexture.Clone*
  commentId: Overload:Unity.Reflect.Model.SyncTexture.Clone
  name: Clone
  nameWithType: SyncTexture.Clone
  fullName: Unity.Reflect.Model.SyncTexture.Clone
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Unity.Reflect.Model.SyncTexture.Name*
  commentId: Overload:Unity.Reflect.Model.SyncTexture.Name
  name: Name
  nameWithType: SyncTexture.Name
  fullName: Unity.Reflect.Model.SyncTexture.Name
- uid: Unity.Reflect.Model.ISyncModel.Name
  commentId: P:Unity.Reflect.Model.ISyncModel.Name
  parent: Unity.Reflect.Model.ISyncModel
  name: Name
  nameWithType: ISyncModel.Name
  fullName: Unity.Reflect.Model.ISyncModel.Name
- uid: Unity.Reflect.Model.SyncTexture.Source*
  commentId: Overload:Unity.Reflect.Model.SyncTexture.Source
  name: Source
  nameWithType: SyncTexture.Source
  fullName: Unity.Reflect.Model.SyncTexture.Source
- uid: pb.ByteString
  isExternal: true
  name: pb.ByteString
  nameWithType: pb.ByteString
  fullName: pb.ByteString
- uid: Unity.Reflect.Model.SyncTexture.ConvertToNormalMap*
  commentId: Overload:Unity.Reflect.Model.SyncTexture.ConvertToNormalMap
  name: ConvertToNormalMap
  nameWithType: SyncTexture.ConvertToNormalMap
  fullName: Unity.Reflect.Model.SyncTexture.ConvertToNormalMap
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Unity.Reflect.Model.SyncTexture.Equals*
  commentId: Overload:Unity.Reflect.Model.SyncTexture.Equals
  name: Equals
  nameWithType: SyncTexture.Equals
  fullName: Unity.Reflect.Model.SyncTexture.Equals
- uid: Unity.Reflect.Model.SyncTexture.GetHashCode*
  commentId: Overload:Unity.Reflect.Model.SyncTexture.GetHashCode
  name: GetHashCode
  nameWithType: SyncTexture.GetHashCode
  fullName: Unity.Reflect.Model.SyncTexture.GetHashCode
- uid: Unity.Reflect.Model.SyncTexture.ToString*
  commentId: Overload:Unity.Reflect.Model.SyncTexture.ToString
  name: ToString
  nameWithType: SyncTexture.ToString
  fullName: Unity.Reflect.Model.SyncTexture.ToString
- uid: Unity.Reflect.Model.SyncTexture.WriteTo*
  commentId: Overload:Unity.Reflect.Model.SyncTexture.WriteTo
  name: WriteTo
  nameWithType: SyncTexture.WriteTo
  fullName: Unity.Reflect.Model.SyncTexture.WriteTo
- uid: pb.CodedOutputStream
  isExternal: true
  name: pb.CodedOutputStream
  nameWithType: pb.CodedOutputStream
  fullName: pb.CodedOutputStream
- uid: Unity.Reflect.Model.SyncTexture.CalculateSize*
  commentId: Overload:Unity.Reflect.Model.SyncTexture.CalculateSize
  name: CalculateSize
  nameWithType: SyncTexture.CalculateSize
  fullName: Unity.Reflect.Model.SyncTexture.CalculateSize
- uid: Unity.Reflect.Model.SyncTexture.MergeFrom*
  commentId: Overload:Unity.Reflect.Model.SyncTexture.MergeFrom
  name: MergeFrom
  nameWithType: SyncTexture.MergeFrom
  fullName: Unity.Reflect.Model.SyncTexture.MergeFrom
- uid: pb.CodedInputStream
  isExternal: true
  name: pb.CodedInputStream
  nameWithType: pb.CodedInputStream
  fullName: pb.CodedInputStream
