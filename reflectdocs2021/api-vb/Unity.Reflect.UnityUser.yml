### YamlMime:ManagedReference
items:
- uid: Unity.Reflect.UnityUser
  commentId: T:Unity.Reflect.UnityUser
  id: UnityUser
  parent: Unity.Reflect
  children:
  - Unity.Reflect.UnityUser.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean)
  - Unity.Reflect.UnityUser.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean)
  - Unity.Reflect.UnityUser.AccessToken
  - Unity.Reflect.UnityUser.AccessToken
  - Unity.Reflect.UnityUser.DisplayName
  - Unity.Reflect.UnityUser.DisplayName
  - Unity.Reflect.UnityUser.Name
  - Unity.Reflect.UnityUser.Name
  - Unity.Reflect.UnityUser.OrganizationForeignKeys
  - Unity.Reflect.UnityUser.OrganizationForeignKeys
  - Unity.Reflect.UnityUser.PrimaryOrg
  - Unity.Reflect.UnityUser.PrimaryOrg
  - Unity.Reflect.UnityUser.UserId
  - Unity.Reflect.UnityUser.UserId
  - Unity.Reflect.UnityUser.Valid
  - Unity.Reflect.UnityUser.Valid
  - Unity.Reflect.UnityUser.Whitelisted
  - Unity.Reflect.UnityUser.Whitelisted
  langs:
  - csharp
  - vb
  name: UnityUser
  nameWithType: UnityUser
  fullName: Unity.Reflect.UnityUser
  type: Struct
  source:
    id: UnityUser
    path: ''
    startLine: 39648
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect
  summary: "\nThis struct specifies information about a Unity user.\n"
  example: []
  syntax:
    content: public struct UnityUser
    content.vb: Public Structure UnityUser
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: Unity.Reflect.UnityUser.AccessToken
  commentId: F:Unity.Reflect.UnityUser.AccessToken
  id: AccessToken
  parent: Unity.Reflect.UnityUser
  langs:
  - csharp
  - vb
  name: AccessToken
  nameWithType: UnityUser.AccessToken
  fullName: Unity.Reflect.UnityUser.AccessToken
  type: Field
  source:
    id: AccessToken
    path: ''
    startLine: 19491
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect
  syntax:
    content: public readonly string AccessToken
    return:
      type: System.String
    content.vb: Public ReadOnly AccessToken As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Unity.Reflect.UnityUser.OrganizationForeignKeys
  commentId: F:Unity.Reflect.UnityUser.OrganizationForeignKeys
  id: OrganizationForeignKeys
  parent: Unity.Reflect.UnityUser
  langs:
  - csharp
  - vb
  name: OrganizationForeignKeys
  nameWithType: UnityUser.OrganizationForeignKeys
  fullName: Unity.Reflect.UnityUser.OrganizationForeignKeys
  type: Field
  source:
    id: OrganizationForeignKeys
    path: ''
    startLine: 19492
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect
  syntax:
    content: public readonly string OrganizationForeignKeys
    return:
      type: System.String
    content.vb: Public ReadOnly OrganizationForeignKeys As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Unity.Reflect.UnityUser.PrimaryOrg
  commentId: F:Unity.Reflect.UnityUser.PrimaryOrg
  id: PrimaryOrg
  parent: Unity.Reflect.UnityUser
  langs:
  - csharp
  - vb
  name: PrimaryOrg
  nameWithType: UnityUser.PrimaryOrg
  fullName: Unity.Reflect.UnityUser.PrimaryOrg
  type: Field
  source:
    id: PrimaryOrg
    path: ''
    startLine: 19493
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect
  syntax:
    content: public readonly string PrimaryOrg
    return:
      type: System.String
    content.vb: Public ReadOnly PrimaryOrg As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Unity.Reflect.UnityUser.Valid
  commentId: F:Unity.Reflect.UnityUser.Valid
  id: Valid
  parent: Unity.Reflect.UnityUser
  langs:
  - csharp
  - vb
  name: Valid
  nameWithType: UnityUser.Valid
  fullName: Unity.Reflect.UnityUser.Valid
  type: Field
  source:
    id: Valid
    path: ''
    startLine: 19494
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect
  syntax:
    content: public readonly bool Valid
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Valid As Boolean
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Unity.Reflect.UnityUser.Whitelisted
  commentId: F:Unity.Reflect.UnityUser.Whitelisted
  id: Whitelisted
  parent: Unity.Reflect.UnityUser
  langs:
  - csharp
  - vb
  name: Whitelisted
  nameWithType: UnityUser.Whitelisted
  fullName: Unity.Reflect.UnityUser.Whitelisted
  type: Field
  source:
    id: Whitelisted
    path: ''
    startLine: 19495
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect
  syntax:
    content: public readonly bool Whitelisted
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Whitelisted As Boolean
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Unity.Reflect.UnityUser.DisplayName
  commentId: F:Unity.Reflect.UnityUser.DisplayName
  id: DisplayName
  parent: Unity.Reflect.UnityUser
  langs:
  - csharp
  - vb
  name: DisplayName
  nameWithType: UnityUser.DisplayName
  fullName: Unity.Reflect.UnityUser.DisplayName
  type: Field
  source:
    id: DisplayName
    path: ''
    startLine: 19500
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect
  summary: "\nThe display name of the user.\n"
  example: []
  syntax:
    content: public readonly string DisplayName
    return:
      type: System.String
    content.vb: Public ReadOnly DisplayName As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Unity.Reflect.UnityUser.UserId
  commentId: F:Unity.Reflect.UnityUser.UserId
  id: UserId
  parent: Unity.Reflect.UnityUser
  langs:
  - csharp
  - vb
  name: UserId
  nameWithType: UnityUser.UserId
  fullName: Unity.Reflect.UnityUser.UserId
  type: Field
  source:
    id: UserId
    path: ''
    startLine: 19505
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect
  summary: "\nThe id of the user.\n"
  example: []
  syntax:
    content: public readonly string UserId
    return:
      type: System.String
    content.vb: Public ReadOnly UserId As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Unity.Reflect.UnityUser.Name
  commentId: F:Unity.Reflect.UnityUser.Name
  id: Name
  parent: Unity.Reflect.UnityUser
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: UnityUser.Name
  fullName: Unity.Reflect.UnityUser.Name
  type: Field
  source:
    id: Name
    path: ''
    startLine: 19510
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect
  summary: "\nThe name of the user.\n"
  example: []
  syntax:
    content: public readonly string Name
    return:
      type: System.String
    content.vb: Public ReadOnly Name As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Unity.Reflect.UnityUser.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean)
  commentId: M:Unity.Reflect.UnityUser.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean)
  id: '#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean)'
  parent: Unity.Reflect.UnityUser
  langs:
  - csharp
  - vb
  name: UnityUser(String, String, String, String, String, String, Boolean, Boolean)
  nameWithType: UnityUser.UnityUser(String, String, String, String, String, String, Boolean, Boolean)
  fullName: Unity.Reflect.UnityUser.UnityUser(System.String, System.String, System.String, System.String, System.String, System.String, System.Boolean, System.Boolean)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 19512
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect
  syntax:
    content: public UnityUser(string accessToken, string displayName, string organizationForeignKeys, string primaryOrg, string userId, string name, bool valid, bool whitelisted)
    parameters:
    - id: accessToken
      type: System.String
    - id: displayName
      type: System.String
    - id: organizationForeignKeys
      type: System.String
    - id: primaryOrg
      type: System.String
    - id: userId
      type: System.String
    - id: name
      type: System.String
    - id: valid
      type: System.Boolean
    - id: whitelisted
      type: System.Boolean
    content.vb: Public Sub New(accessToken As String, displayName As String, organizationForeignKeys As String, primaryOrg As String, userId As String, name As String, valid As Boolean, whitelisted As Boolean)
  overload: Unity.Reflect.UnityUser.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unity.Reflect.UnityUser.AccessToken
  commentId: F:Unity.Reflect.UnityUser.AccessToken
  id: AccessToken
  parent: Unity.Reflect.UnityUser
  langs:
  - csharp
  - vb
  name: AccessToken
  nameWithType: UnityUser.AccessToken
  fullName: Unity.Reflect.UnityUser.AccessToken
  type: Field
  source:
    id: AccessToken
    path: ''
    startLine: 39650
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect
  syntax:
    content: public readonly string AccessToken
    return:
      type: System.String
    content.vb: Public ReadOnly AccessToken As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Unity.Reflect.UnityUser.OrganizationForeignKeys
  commentId: F:Unity.Reflect.UnityUser.OrganizationForeignKeys
  id: OrganizationForeignKeys
  parent: Unity.Reflect.UnityUser
  langs:
  - csharp
  - vb
  name: OrganizationForeignKeys
  nameWithType: UnityUser.OrganizationForeignKeys
  fullName: Unity.Reflect.UnityUser.OrganizationForeignKeys
  type: Field
  source:
    id: OrganizationForeignKeys
    path: ''
    startLine: 39651
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect
  syntax:
    content: public readonly string OrganizationForeignKeys
    return:
      type: System.String
    content.vb: Public ReadOnly OrganizationForeignKeys As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Unity.Reflect.UnityUser.PrimaryOrg
  commentId: F:Unity.Reflect.UnityUser.PrimaryOrg
  id: PrimaryOrg
  parent: Unity.Reflect.UnityUser
  langs:
  - csharp
  - vb
  name: PrimaryOrg
  nameWithType: UnityUser.PrimaryOrg
  fullName: Unity.Reflect.UnityUser.PrimaryOrg
  type: Field
  source:
    id: PrimaryOrg
    path: ''
    startLine: 39652
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect
  syntax:
    content: public readonly string PrimaryOrg
    return:
      type: System.String
    content.vb: Public ReadOnly PrimaryOrg As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Unity.Reflect.UnityUser.Valid
  commentId: F:Unity.Reflect.UnityUser.Valid
  id: Valid
  parent: Unity.Reflect.UnityUser
  langs:
  - csharp
  - vb
  name: Valid
  nameWithType: UnityUser.Valid
  fullName: Unity.Reflect.UnityUser.Valid
  type: Field
  source:
    id: Valid
    path: ''
    startLine: 39653
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect
  syntax:
    content: public readonly bool Valid
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Valid As Boolean
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Unity.Reflect.UnityUser.Whitelisted
  commentId: F:Unity.Reflect.UnityUser.Whitelisted
  id: Whitelisted
  parent: Unity.Reflect.UnityUser
  langs:
  - csharp
  - vb
  name: Whitelisted
  nameWithType: UnityUser.Whitelisted
  fullName: Unity.Reflect.UnityUser.Whitelisted
  type: Field
  source:
    id: Whitelisted
    path: ''
    startLine: 39654
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect
  syntax:
    content: public readonly bool Whitelisted
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Whitelisted As Boolean
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Unity.Reflect.UnityUser.DisplayName
  commentId: F:Unity.Reflect.UnityUser.DisplayName
  id: DisplayName
  parent: Unity.Reflect.UnityUser
  langs:
  - csharp
  - vb
  name: DisplayName
  nameWithType: UnityUser.DisplayName
  fullName: Unity.Reflect.UnityUser.DisplayName
  type: Field
  source:
    id: DisplayName
    path: ''
    startLine: 39659
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect
  summary: "\nThe display name of the user.\n"
  example: []
  syntax:
    content: public readonly string DisplayName
    return:
      type: System.String
    content.vb: Public ReadOnly DisplayName As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Unity.Reflect.UnityUser.UserId
  commentId: F:Unity.Reflect.UnityUser.UserId
  id: UserId
  parent: Unity.Reflect.UnityUser
  langs:
  - csharp
  - vb
  name: UserId
  nameWithType: UnityUser.UserId
  fullName: Unity.Reflect.UnityUser.UserId
  type: Field
  source:
    id: UserId
    path: ''
    startLine: 39664
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect
  summary: "\nThe id of the user.\n"
  example: []
  syntax:
    content: public readonly string UserId
    return:
      type: System.String
    content.vb: Public ReadOnly UserId As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Unity.Reflect.UnityUser.Name
  commentId: F:Unity.Reflect.UnityUser.Name
  id: Name
  parent: Unity.Reflect.UnityUser
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: UnityUser.Name
  fullName: Unity.Reflect.UnityUser.Name
  type: Field
  source:
    id: Name
    path: ''
    startLine: 39669
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect
  summary: "\nThe name of the user.\n"
  example: []
  syntax:
    content: public readonly string Name
    return:
      type: System.String
    content.vb: Public ReadOnly Name As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Unity.Reflect.UnityUser.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean)
  commentId: M:Unity.Reflect.UnityUser.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean)
  id: '#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean)'
  parent: Unity.Reflect.UnityUser
  langs:
  - csharp
  - vb
  name: UnityUser(String, String, String, String, String, String, Boolean, Boolean)
  nameWithType: UnityUser.UnityUser(String, String, String, String, String, String, Boolean, Boolean)
  fullName: Unity.Reflect.UnityUser.UnityUser(System.String, System.String, System.String, System.String, System.String, System.String, System.Boolean, System.Boolean)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 39671
  assemblies:
  - cs.temp.dll
  namespace: Unity.Reflect
  syntax:
    content: public UnityUser(string accessToken, string displayName, string organizationForeignKeys, string primaryOrg, string userId, string name, bool valid, bool whitelisted)
    parameters:
    - id: accessToken
      type: System.String
    - id: displayName
      type: System.String
    - id: organizationForeignKeys
      type: System.String
    - id: primaryOrg
      type: System.String
    - id: userId
      type: System.String
    - id: name
      type: System.String
    - id: valid
      type: System.Boolean
    - id: whitelisted
      type: System.Boolean
    content.vb: Public Sub New(accessToken As String, displayName As String, organizationForeignKeys As String, primaryOrg As String, userId As String, name As String, valid As Boolean, whitelisted As Boolean)
  overload: Unity.Reflect.UnityUser.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Unity.Reflect
  commentId: N:Unity.Reflect
  name: Unity.Reflect
  nameWithType: Unity.Reflect
  fullName: Unity.Reflect
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Unity.Reflect.UnityUser.#ctor*
  commentId: Overload:Unity.Reflect.UnityUser.#ctor
  name: UnityUser
  nameWithType: UnityUser.UnityUser
  fullName: Unity.Reflect.UnityUser.UnityUser
