<?xml version="1.0" encoding="utf-8"?>
<Project Sdk="Microsoft.NET.Sdk" ToolsVersion="12.0" InitialTargets="ProtoCompiler" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

    <PropertyGroup>
        <ProjectGuid>{2086CBDD-42C3-4512-8493-29168D9EA119}</ProjectGuid>
        <OutputType>Library</OutputType>
        <RootNamespace>Unity.Reflect</RootNamespace>
        <AssemblyName>Reflect</AssemblyName>
        <TargetFramework>netstandard2.0</TargetFramework>
        <LangVersion>7</LangVersion>
    </PropertyGroup>

    <!-- Protobuf integration; see https://github.com/grpc/grpc/blob/master/src/csharp/BUILD-INTEGRATION.md -->
    <Target Name="ProtoCompiler">
        <PropertyGroup>
            <Protobuf_NoWarnMissingExpected>true</Protobuf_NoWarnMissingExpected>
        </PropertyGroup>
        <ItemGroup>
            <PackageReference Include="Google.Protobuf" Version="3.7.0" />
            <PackageReference Include="Grpc" Version="1.21.0" />
            <PackageReference Include="Grpc.Tools" Version="1.21.0" PrivateAssets="All">
                <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
                <PrivateAssets>all</PrivateAssets>
            </PackageReference>
            <Protobuf ProtoRoot="Source/Protos" Include="Source/Protos/*.proto" OutputDir="Source/Models/Generated" CompileOutputs="false" />
            <Protobuf ProtoRoot="Source/Protos" Include="Source/Protos/ProjectServer/*.proto" OutputDir="Source/Models/Generated/ProjectServer" CompileOutputs="false" />
            <Protobuf ProtoRoot="Source/Protos" Include="Source/Protos/Service.proto" OutputDir="Source/Models/Generated" CompileOutputs="false" Access="internal" />
        </ItemGroup>
    </Target>

    <!-- Compile all source including generated Protobuf -->
    <Target Name="Build">
        <ItemGroup>
            <Compile Include="Source/**/*.cs" />
        </ItemGroup>
    </Target>

    <!-- On dotnet build: update Unity package at com.reflect.unity/Plugins -->
    <Target Name="CopyAssemblies" AfterTargets="Build">
        <ItemGroup>
            <BuiltAssemblies Include="$(ProjectDir)$(OutputPath)*" />
        </ItemGroup>
        <Copy SourceFiles="@(BuiltAssemblies)" DestinationFolder="$(ProjectDir)../Plugins/Reflect" />
    </Target>

	<!-- Look in https://packages.grpc.io to match the GRPC.Core version used in the solution -->
	<PropertyGroup>
      <GrpcUnityPackageUrl>https://packages.grpc.io/archive/2019/05/d84b76c2c0c8df518a21f4ffc05fc7561437107d-c92b631c-166c-462e-9396-fc243dc8f9ee/csharp/grpc_unity_package.1.21.0-dev.zip</GrpcUnityPackageUrl>
    </PropertyGroup>

	<PropertyGroup>
      <GrpcUnityPackageFilename>grpc_unity_package.1.21.0-dev.zip</GrpcUnityPackageFilename>
    </PropertyGroup>

    <Target Name="DownloadGrpcRuntimeFiles" AfterTargets="CopyAssemblies" Condition="!Exists('$(ProjectDir)../.Downloads/$(GrpcUnityPackageFilename)')">
        <Message Text="DownloadGrpcRuntimeFiles starting" />
        <DownloadFile SkipUnchangedFiles="true" SourceUrl="$(GrpcUnityPackageUrl)" DestinationFileName="$(GrpcUnityPackageFilename)" DestinationFolder="$(ProjectDir)../.Downloads/">
        <Output TaskParameter="DownloadedFile" ItemName="Content" />
      </DownloadFile>
    </Target>

	<Target Name="UnzipGrpcArchive" AfterTargets="DownloadGrpcRuntimeFiles">
        <Message Text="UnzipGrpcArchive starting" />
        <PropertyGroup>
            <IsWindows>$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Windows)))</IsWindows>
            <IsMac>$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::OSX)))</IsMac>

            <SourceZipFile>'$(ProjectDir)../.Downloads/$(GrpcUnityPackageFilename)'</SourceZipFile>
            <DestinationFolder>'$(ProjectDir)../../com.unity.reflect.runtime/'</DestinationFolder>
        </PropertyGroup>

        <RemoveDir Directories="$(DestinationFolder)/Plugins" />

        <!-- Windows uses Powershell to unzip as MSBuild's Unzip task is too simple and prints unnecessary warnings -->
        <Exec Condition="$(IsWindows)" Command="powershell.exe -command Expand-Archive -Path $(SourceZipFile) -DestinationPath $(DestinationFolder)" />

        <!-- Problem on Mac - see https://github.com/Microsoft/msbuild/issues/3884 - so use OS X unzip command -->
        <Exec Condition="$(IsMac)" Command="unzip $(SourceZipFile) -d $(DestinationFolder)" />
	</Target>
</Project>
