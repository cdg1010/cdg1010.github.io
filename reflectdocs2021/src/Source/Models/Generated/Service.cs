// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Service.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Unity.Reflect.Services {

  /// <summary>Holder for reflection information generated from Service.proto</summary>
  internal static partial class ServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for Service.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg1TZXJ2aWNlLnByb3RvEgdSZWZsZWN0Gg5NYW5pZmVzdC5wcm90bxoMT2Jq",
            "ZWN0LnByb3RvGg1UZXh0dXJlLnByb3RvGg5NYXRlcmlhbC5wcm90bxoKTWVz",
            "aC5wcm90byIHCgVFbXB0eSIhCgxDbG9zZVJlcXVlc3QSEQoJcHJvY2Vzc0lk",
            "GAEgASgJIjEKDlJlc3BvbnNlU3RhdHVzEh8KBnN0YXR1cxgBIAEoDjIPLlJl",
            "ZmxlY3QuU3RhdHVzIkQKD1Jlc3BvbnNlU2Vzc2lvbhIfCgZzdGF0dXMYASAB",
            "KA4yDy5SZWZsZWN0LlN0YXR1cxIQCghzb3VyY2VJZBgCIAEoCSK9AQoHU2Vz",
            "c2lvbhIQCghzb3VyY2VJZBgBIAEoCRIOCgZ1c2VySWQYAiABKAkSEQoJcHJv",
            "amVjdElkGAMgASgJEgwKBG5hbWUYBCABKAkSLwoOdW5pdENvbnZlcnNpb24Y",
            "BSABKA4yFy5SZWZsZWN0LlVuaXRDb252ZXJzaW9uEi8KDmF4aXNDb252ZXJz",
            "aW9uGAYgASgOMhcuUmVmbGVjdC5BeGlzQ29udmVyc2lvbhINCgVydWxlcxgH",
            "IAEoCSIgCgxTZXNzaW9uQXNzZXQSEAoIc291cmNlSWQYASABKAkiUgoLT2Jq",
            "ZWN0QXNzZXQSEAoIc291cmNlSWQYASABKAkSDAoEaGFzaBgCIAEoCRIjCgZv",
            "YmplY3QYAyABKAsyEy5SZWZsZWN0LlN5bmNPYmplY3QiOwoVT2JqZWN0SW5z",
            "dGFuY2VJZEFzc2V0EhAKCHNvdXJjZUlkGAEgASgJEhAKCGluc3RhbmNlGAIg",
            "ASgJIlYKE09iamVjdEluc3RhbmNlQXNzZXQSEAoIc291cmNlSWQYASABKAkS",
            "LQoIaW5zdGFuY2UYAiABKAsyGy5SZWZsZWN0LlN5bmNPYmplY3RJbnN0YW5j",
            "ZSJSCgtQcmVmYWJBc3NldBIQCghzb3VyY2VJZBgBIAEoCRIMCgRoYXNoGAIg",
            "ASgJEiMKBnByZWZhYhgDIAEoCzITLlJlZmxlY3QuU3luY1ByZWZhYiJMCglN",
            "ZXNoQXNzZXQSEAoIc291cmNlSWQYASABKAkSDAoEaGFzaBgCIAEoCRIfCgRt",
            "ZXNoGAMgASgLMhEuUmVmbGVjdC5TeW5jTWVzaCJYCg1NYXRlcmlhbEFzc2V0",
            "EhAKCHNvdXJjZUlkGAEgASgJEgwKBGhhc2gYAiABKAkSJwoIbWF0ZXJpYWwY",
            "AyABKAsyFS5SZWZsZWN0LlN5bmNNYXRlcmlhbCJVCgxUZXh0dXJlQXNzZXQS",
            "EAoIc291cmNlSWQYASABKAkSDAoEaGFzaBgCIAEoCRIlCgd0ZXh0dXJlGAMg",
            "ASgLMhQuUmVmbGVjdC5TeW5jVGV4dHVyZSIlChBNYW5pZmVzdHNSZXF1ZXN0",
            "EhEKCXByb2plY3RJZBgBIAEoCSI+ChFSZXNwb25zZU1hbmlmZXN0cxIpCglt",
            "YW5pZmVzdHMYASADKAsyFi5SZWZsZWN0Lk1hbmlmZXN0QXNzZXQiXQoNTWFu",
            "aWZlc3RBc3NldBIRCglwcm9qZWN0SWQYASABKAkSEAoIc291cmNlSWQYAiAB",
            "KAkSJwoIbWFuaWZlc3QYAyABKAsyFS5SZWZsZWN0LlN5bmNNYW5pZmVzdCI2",
            "Cg9NYW5pZmVzdFJlcXVlc3QSEQoJcHJvamVjdElkGAEgASgJEhAKCHNvdXJj",
            "ZUlkGAIgASgJInkKE1VuaXR5UHJvamVjdFJlcXVlc3QSDgoGdXNlcklkGAEg",
            "ASgJEhYKDm9yZ2FuaXNhdGlvbklkGAIgASgJEhsKE2luY2x1ZGVDbG91ZFBy",
            "b2plY3QYAyABKAgSHQoVaW5jbHVkZVJlbW90ZVByb2plY3RzGAQgASgIIlAK",
            "FFVuaXR5UHJvamVjdFJlc3BvbnNlEg8KB3N1Y2Nlc3MYASABKAgSJwoIcHJv",
            "amVjdHMYAiADKAsyFS5SZWZsZWN0LlVuaXR5UHJvamVjdCJ5CgxVbml0eVBy",
            "b2plY3QSCgoCaWQYASABKAkSEQoJcHJvamVjdElkGAIgASgJEgwKBG5hbWUY",
            "AyABKAkSEgoKc2VydmVyTmFtZRgEIAEoCRIVCg1zZXJ2ZXJBZGRyZXNzGAUg",
            "ASgJEhEKCWNsb3VkT25seRgGIAEoCCJGChFVbml0eVVzZXJSZXNwb25zZRIP",
            "CgdzdWNjZXNzGAEgASgIEiAKBHVzZXIYAiABKAsyEi5SZWZsZWN0LlVuaXR5",
            "VXNlciKsAQoJVW5pdHlVc2VyEhMKC2FjY2Vzc1Rva2VuGAEgASgJEhMKC2Rp",
            "c3BsYXlOYW1lGAIgASgJEh8KF29yZ2FuaXphdGlvbkZvcmVpZ25LZXlzGAMg",
            "ASgJEhIKCnByaW1hcnlPcmcYBCABKAkSDgoGdXNlcklkGAUgASgJEgwKBG5h",
            "bWUYBiABKAkSDQoFdmFsaWQYByABKAgSEwoLd2hpdGVsaXN0ZWQYCCABKAgi",
            "UwoOT2JzZXJ2ZVJlcXVlc3QSFAoMb2JzZXJ2YWJsZUlkGAEgASgJEisKDm9i",
            "c2VydmFibGVUeXBlGAIgASgOMhMuUmVmbGVjdC5PYnNlcnZhYmxlIkgKEFN5",
            "bmNNb2RlbFJlcXVlc3QSEQoJcHJvamVjdElkGAEgASgJEhAKCHNvdXJjZUlk",
            "GAIgASgJEg8KB2RzdFBhdGgYAyABKAkiUwoOUmVsZWFzZVJlcXVlc3QSFAoM",
            "b2JzZXJ2YWJsZUlkGAEgASgJEisKDm9ic2VydmFibGVUeXBlGAIgASgOMhMu",
            "UmVmbGVjdC5PYnNlcnZhYmxlIjkKDVJlbGVhc2VTdGF0dXMSDwoHc3VjY2Vz",
            "cxgBIAEoCBIXCg9vYnNlcnZlQ29tcGxldGUYAiABKAgiWAoTT2JzZXJ2ZU5v",
            "dGlmaWNhdGlvbhIUCgxvYnNlcnZhYmxlSWQYASABKAkSKwoOb2JzZXJ2YWJs",
            "ZVR5cGUYAiABKA4yEy5SZWZsZWN0Lk9ic2VydmFibGUqIgoGU3RhdHVzEgsK",
            "B1NVQ0NFU1MQABILCgdGQUlMVVJFEAEqUQoOVW5pdENvbnZlcnNpb24SDQoJ",
            "VU5JVF9OT05FEAASFgoSVU5JVF9GRUVUX1RPX01FVEVSEAESGAoUVU5JVF9J",
            "TkNIRVNfVE9fTUVURVIQAioyCg5BeGlzQ29udmVyc2lvbhINCglBWElTX05P",
            "TkUQABIRCg1BWElTX0ZMSVBfWV9aEAEqhQEKCk9ic2VydmFibGUSDgoKS0VF",
            "UF9BTElWRRAAEg8KC1VTRVJfVVBEQVRFEAESEQoNU0VTU0lPTl9CRUdJThAC",
            "Eg8KC1NFU1NJT05fRU5EEAMSHQoZVU5JVFlfUFJPSkVDVF9MSVNUX1VQREFU",
            "RRAEEhMKD01BTklGRVNUX1VQREFURRAFMoANCglTeW5jQWdlbnQSOAoLSGVh",
            "bHRoQ2hlY2sSDi5SZWZsZWN0LkVtcHR5GhcuUmVmbGVjdC5SZXNwb25zZVN0",
            "YXR1cyIAEkAKDENsb3NlU2VydmljZRIVLlJlZmxlY3QuQ2xvc2VSZXF1ZXN0",
            "GhcuUmVmbGVjdC5SZXNwb25zZVN0YXR1cyIAElEKEExpc3RVbml0eVByb2pl",
            "Y3QSHC5SZWZsZWN0LlVuaXR5UHJvamVjdFJlcXVlc3QaHS5SZWZsZWN0LlVu",
            "aXR5UHJvamVjdFJlc3BvbnNlIgASPwoSQ3JlYXRlVW5pdHlQcm9qZWN0Eg4u",
            "UmVmbGVjdC5FbXB0eRoXLlJlZmxlY3QuUmVzcG9uc2VTdGF0dXMiABI8CgxH",
            "ZXRVbml0eVVzZXISDi5SZWZsZWN0LkVtcHR5GhouUmVmbGVjdC5Vbml0eVVz",
            "ZXJSZXNwb25zZSIAEjYKCVVzZXJMb2dpbhIOLlJlZmxlY3QuRW1wdHkaFy5S",
            "ZWZsZWN0LlJlc3BvbnNlU3RhdHVzIgASPAoMQmVnaW5TZXNzaW9uEhAuUmVm",
            "bGVjdC5TZXNzaW9uGhguUmVmbGVjdC5SZXNwb25zZVNlc3Npb24iABI/CgtT",
            "ZW5kVGV4dHVyZRIVLlJlZmxlY3QuVGV4dHVyZUFzc2V0GhcuUmVmbGVjdC5S",
            "ZXNwb25zZVN0YXR1cyIAEkEKDFNlbmRNYXRlcmlhbBIWLlJlZmxlY3QuTWF0",
            "ZXJpYWxBc3NldBoXLlJlZmxlY3QuUmVzcG9uc2VTdGF0dXMiABI5CghTZW5k",
            "TWVzaBISLlJlZmxlY3QuTWVzaEFzc2V0GhcuUmVmbGVjdC5SZXNwb25zZVN0",
            "YXR1cyIAEj0KClNlbmRPYmplY3QSFC5SZWZsZWN0Lk9iamVjdEFzc2V0Ghcu",
            "UmVmbGVjdC5SZXNwb25zZVN0YXR1cyIAEk0KElNlbmRPYmplY3RJbnN0YW5j",
            "ZRIcLlJlZmxlY3QuT2JqZWN0SW5zdGFuY2VBc3NldBoXLlJlZmxlY3QuUmVz",
            "cG9uc2VTdGF0dXMiABJRChRSZW1vdmVPYmplY3RJbnN0YW5jZRIeLlJlZmxl",
            "Y3QuT2JqZWN0SW5zdGFuY2VJZEFzc2V0GhcuUmVmbGVjdC5SZXNwb25zZVN0",
            "YXR1cyIAEjgKBFB1c2gSFS5SZWZsZWN0LlNlc3Npb25Bc3NldBoXLlJlZmxl",
            "Y3QuUmVzcG9uc2VTdGF0dXMiABI+CgpFbmRTZXNzaW9uEhUuUmVmbGVjdC5T",
            "ZXNzaW9uQXNzZXQaFy5SZWZsZWN0LlJlc3BvbnNlU3RhdHVzIgASRAoHT2Jz",
            "ZXJ2ZRIXLlJlZmxlY3QuT2JzZXJ2ZVJlcXVlc3QaHC5SZWZsZWN0Lk9ic2Vy",
            "dmVOb3RpZmljYXRpb24iADABEkMKDUFkZE9ic2VydmFibGUSFy5SZWZsZWN0",
            "Lk9ic2VydmVSZXF1ZXN0GhcuUmVmbGVjdC5SZXNwb25zZVN0YXR1cyIAEjwK",
            "B1JlbGVhc2USFy5SZWZsZWN0LlJlbGVhc2VSZXF1ZXN0GhYuUmVmbGVjdC5S",
            "ZWxlYXNlU3RhdHVzIgASRwoMR2V0TWFuaWZlc3RzEhkuUmVmbGVjdC5NYW5p",
            "ZmVzdHNSZXF1ZXN0GhouUmVmbGVjdC5SZXNwb25zZU1hbmlmZXN0cyIAEkEK",
            "C0dldE1hbmlmZXN0EhguUmVmbGVjdC5NYW5pZmVzdFJlcXVlc3QaFi5SZWZs",
            "ZWN0Lk1hbmlmZXN0QXNzZXQiABJACgpHZXRUZXh0dXJlEhkuUmVmbGVjdC5T",
            "eW5jTW9kZWxSZXF1ZXN0GhUuUmVmbGVjdC5UZXh0dXJlQXNzZXQiABJCCgtH",
            "ZXRNYXRlcmlhbBIZLlJlZmxlY3QuU3luY01vZGVsUmVxdWVzdBoWLlJlZmxl",
            "Y3QuTWF0ZXJpYWxBc3NldCIAEjoKB0dldE1lc2gSGS5SZWZsZWN0LlN5bmNN",
            "b2RlbFJlcXVlc3QaEi5SZWZsZWN0Lk1lc2hBc3NldCIAEj4KCUdldE9iamVj",
            "dBIZLlJlZmxlY3QuU3luY01vZGVsUmVxdWVzdBoULlJlZmxlY3QuT2JqZWN0",
            "QXNzZXQiABI+CglHZXRQcmVmYWISGS5SZWZsZWN0LlN5bmNNb2RlbFJlcXVl",
            "c3QaFC5SZWZsZWN0LlByZWZhYkFzc2V0IgBCVAoZaW8uZ3JwYy51bml0eXN5",
            "bmNzZXJ2aWNlc0IWVW5pdHkuUmVmbGVjdC5TZXJ2aWNlc1ABogIDSExXqgIW",
            "VW5pdHkuUmVmbGVjdC5TZXJ2aWNlc2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Unity.Reflect.Data.ManifestReflection.Descriptor, global::Unity.Reflect.Model.ObjectReflection.Descriptor, global::Unity.Reflect.Model.TextureReflection.Descriptor, global::Unity.Reflect.Model.MaterialReflection.Descriptor, global::Unity.Reflect.Model.MeshReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Unity.Reflect.Services.Status), typeof(global::Unity.Reflect.Services.UnitConversion), typeof(global::Unity.Reflect.Services.AxisConversion), typeof(global::Unity.Reflect.Services.Observable), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Unity.Reflect.Services.Empty), global::Unity.Reflect.Services.Empty.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Unity.Reflect.Services.CloseRequest), global::Unity.Reflect.Services.CloseRequest.Parser, new[]{ "ProcessId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Unity.Reflect.Services.ResponseStatus), global::Unity.Reflect.Services.ResponseStatus.Parser, new[]{ "Status" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Unity.Reflect.Services.ResponseSession), global::Unity.Reflect.Services.ResponseSession.Parser, new[]{ "Status", "SourceId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Unity.Reflect.Services.Session), global::Unity.Reflect.Services.Session.Parser, new[]{ "SourceId", "UserId", "ProjectId", "Name", "UnitConversion", "AxisConversion", "Rules" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Unity.Reflect.Services.SessionAsset), global::Unity.Reflect.Services.SessionAsset.Parser, new[]{ "SourceId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Unity.Reflect.Services.ObjectAsset), global::Unity.Reflect.Services.ObjectAsset.Parser, new[]{ "SourceId", "Hash", "Object" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Unity.Reflect.Services.ObjectInstanceIdAsset), global::Unity.Reflect.Services.ObjectInstanceIdAsset.Parser, new[]{ "SourceId", "Instance" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Unity.Reflect.Services.ObjectInstanceAsset), global::Unity.Reflect.Services.ObjectInstanceAsset.Parser, new[]{ "SourceId", "Instance" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Unity.Reflect.Services.PrefabAsset), global::Unity.Reflect.Services.PrefabAsset.Parser, new[]{ "SourceId", "Hash", "Prefab" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Unity.Reflect.Services.MeshAsset), global::Unity.Reflect.Services.MeshAsset.Parser, new[]{ "SourceId", "Hash", "Mesh" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Unity.Reflect.Services.MaterialAsset), global::Unity.Reflect.Services.MaterialAsset.Parser, new[]{ "SourceId", "Hash", "Material" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Unity.Reflect.Services.TextureAsset), global::Unity.Reflect.Services.TextureAsset.Parser, new[]{ "SourceId", "Hash", "Texture" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Unity.Reflect.Services.ManifestsRequest), global::Unity.Reflect.Services.ManifestsRequest.Parser, new[]{ "ProjectId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Unity.Reflect.Services.ResponseManifests), global::Unity.Reflect.Services.ResponseManifests.Parser, new[]{ "Manifests" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Unity.Reflect.Services.ManifestAsset), global::Unity.Reflect.Services.ManifestAsset.Parser, new[]{ "ProjectId", "SourceId", "Manifest" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Unity.Reflect.Services.ManifestRequest), global::Unity.Reflect.Services.ManifestRequest.Parser, new[]{ "ProjectId", "SourceId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Unity.Reflect.Services.UnityProjectRequest), global::Unity.Reflect.Services.UnityProjectRequest.Parser, new[]{ "UserId", "OrganisationId", "IncludeCloudProject", "IncludeRemoteProjects" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Unity.Reflect.Services.UnityProjectResponse), global::Unity.Reflect.Services.UnityProjectResponse.Parser, new[]{ "Success", "Projects" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Unity.Reflect.Services.UnityProject), global::Unity.Reflect.Services.UnityProject.Parser, new[]{ "Id", "ProjectId", "Name", "ServerName", "ServerAddress", "CloudOnly" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Unity.Reflect.Services.UnityUserResponse), global::Unity.Reflect.Services.UnityUserResponse.Parser, new[]{ "Success", "User" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Unity.Reflect.Services.UnityUser), global::Unity.Reflect.Services.UnityUser.Parser, new[]{ "AccessToken", "DisplayName", "OrganizationForeignKeys", "PrimaryOrg", "UserId", "Name", "Valid", "Whitelisted" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Unity.Reflect.Services.ObserveRequest), global::Unity.Reflect.Services.ObserveRequest.Parser, new[]{ "ObservableId", "ObservableType" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Unity.Reflect.Services.SyncModelRequest), global::Unity.Reflect.Services.SyncModelRequest.Parser, new[]{ "ProjectId", "SourceId", "DstPath" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Unity.Reflect.Services.ReleaseRequest), global::Unity.Reflect.Services.ReleaseRequest.Parser, new[]{ "ObservableId", "ObservableType" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Unity.Reflect.Services.ReleaseStatus), global::Unity.Reflect.Services.ReleaseStatus.Parser, new[]{ "Success", "ObserveComplete" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Unity.Reflect.Services.ObserveNotification), global::Unity.Reflect.Services.ObserveNotification.Parser, new[]{ "ObservableId", "ObservableType" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  internal enum Status {
    [pbr::OriginalName("SUCCESS")] Success = 0,
    [pbr::OriginalName("FAILURE")] Failure = 1,
  }

  internal enum UnitConversion {
    [pbr::OriginalName("UNIT_NONE")] UnitNone = 0,
    [pbr::OriginalName("UNIT_FEET_TO_METER")] UnitFeetToMeter = 1,
    [pbr::OriginalName("UNIT_INCHES_TO_METER")] UnitInchesToMeter = 2,
  }

  internal enum AxisConversion {
    [pbr::OriginalName("AXIS_NONE")] AxisNone = 0,
    [pbr::OriginalName("AXIS_FLIP_Y_Z")] AxisFlipYZ = 1,
  }

  internal enum Observable {
    [pbr::OriginalName("KEEP_ALIVE")] KeepAlive = 0,
    [pbr::OriginalName("USER_UPDATE")] UserUpdate = 1,
    [pbr::OriginalName("SESSION_BEGIN")] SessionBegin = 2,
    [pbr::OriginalName("SESSION_END")] SessionEnd = 3,
    [pbr::OriginalName("UNITY_PROJECT_LIST_UPDATE")] UnityProjectListUpdate = 4,
    [pbr::OriginalName("MANIFEST_UPDATE")] ManifestUpdate = 5,
  }

  #endregion

  #region Messages
  internal sealed partial class Empty : pb::IMessage<Empty> {
    private static readonly pb::MessageParser<Empty> _parser = new pb::MessageParser<Empty>(() => new Empty());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Empty> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Unity.Reflect.Services.ServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Empty() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Empty(Empty other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Empty Clone() {
      return new Empty(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Empty);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Empty other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Empty other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  internal sealed partial class CloseRequest : pb::IMessage<CloseRequest> {
    private static readonly pb::MessageParser<CloseRequest> _parser = new pb::MessageParser<CloseRequest>(() => new CloseRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CloseRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Unity.Reflect.Services.ServiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CloseRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CloseRequest(CloseRequest other) : this() {
      processId_ = other.processId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CloseRequest Clone() {
      return new CloseRequest(this);
    }

    /// <summary>Field number for the "processId" field.</summary>
    public const int ProcessIdFieldNumber = 1;
    private string processId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProcessId {
      get { return processId_; }
      set {
        processId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CloseRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CloseRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProcessId != other.ProcessId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProcessId.Length != 0) hash ^= ProcessId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProcessId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProcessId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProcessId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProcessId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CloseRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProcessId.Length != 0) {
        ProcessId = other.ProcessId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProcessId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class ResponseStatus : pb::IMessage<ResponseStatus> {
    private static readonly pb::MessageParser<ResponseStatus> _parser = new pb::MessageParser<ResponseStatus>(() => new ResponseStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResponseStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Unity.Reflect.Services.ServiceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseStatus(ResponseStatus other) : this() {
      status_ = other.status_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseStatus Clone() {
      return new ResponseStatus(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::Unity.Reflect.Services.Status status_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Unity.Reflect.Services.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResponseStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResponseStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Status != 0) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Status != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResponseStatus other) {
      if (other == null) {
        return;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Status = (global::Unity.Reflect.Services.Status) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class ResponseSession : pb::IMessage<ResponseSession> {
    private static readonly pb::MessageParser<ResponseSession> _parser = new pb::MessageParser<ResponseSession>(() => new ResponseSession());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResponseSession> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Unity.Reflect.Services.ServiceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseSession() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseSession(ResponseSession other) : this() {
      status_ = other.status_;
      sourceId_ = other.sourceId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseSession Clone() {
      return new ResponseSession(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::Unity.Reflect.Services.Status status_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Unity.Reflect.Services.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "sourceId" field.</summary>
    public const int SourceIdFieldNumber = 2;
    private string sourceId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SourceId {
      get { return sourceId_; }
      set {
        sourceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResponseSession);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResponseSession other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      if (SourceId != other.SourceId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Status != 0) hash ^= Status.GetHashCode();
      if (SourceId.Length != 0) hash ^= SourceId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Status != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Status);
      }
      if (SourceId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SourceId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (SourceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SourceId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResponseSession other) {
      if (other == null) {
        return;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.SourceId.Length != 0) {
        SourceId = other.SourceId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Status = (global::Unity.Reflect.Services.Status) input.ReadEnum();
            break;
          }
          case 18: {
            SourceId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class Session : pb::IMessage<Session> {
    private static readonly pb::MessageParser<Session> _parser = new pb::MessageParser<Session>(() => new Session());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Session> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Unity.Reflect.Services.ServiceReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Session() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Session(Session other) : this() {
      sourceId_ = other.sourceId_;
      userId_ = other.userId_;
      projectId_ = other.projectId_;
      name_ = other.name_;
      unitConversion_ = other.unitConversion_;
      axisConversion_ = other.axisConversion_;
      rules_ = other.rules_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Session Clone() {
      return new Session(this);
    }

    /// <summary>Field number for the "sourceId" field.</summary>
    public const int SourceIdFieldNumber = 1;
    private string sourceId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SourceId {
      get { return sourceId_; }
      set {
        sourceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "userId" field.</summary>
    public const int UserIdFieldNumber = 2;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "projectId" field.</summary>
    public const int ProjectIdFieldNumber = 3;
    private string projectId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 4;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "unitConversion" field.</summary>
    public const int UnitConversionFieldNumber = 5;
    private global::Unity.Reflect.Services.UnitConversion unitConversion_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Unity.Reflect.Services.UnitConversion UnitConversion {
      get { return unitConversion_; }
      set {
        unitConversion_ = value;
      }
    }

    /// <summary>Field number for the "axisConversion" field.</summary>
    public const int AxisConversionFieldNumber = 6;
    private global::Unity.Reflect.Services.AxisConversion axisConversion_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Unity.Reflect.Services.AxisConversion AxisConversion {
      get { return axisConversion_; }
      set {
        axisConversion_ = value;
      }
    }

    /// <summary>Field number for the "rules" field.</summary>
    public const int RulesFieldNumber = 7;
    private string rules_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Rules {
      get { return rules_; }
      set {
        rules_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Session);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Session other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SourceId != other.SourceId) return false;
      if (UserId != other.UserId) return false;
      if (ProjectId != other.ProjectId) return false;
      if (Name != other.Name) return false;
      if (UnitConversion != other.UnitConversion) return false;
      if (AxisConversion != other.AxisConversion) return false;
      if (Rules != other.Rules) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SourceId.Length != 0) hash ^= SourceId.GetHashCode();
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (UnitConversion != 0) hash ^= UnitConversion.GetHashCode();
      if (AxisConversion != 0) hash ^= AxisConversion.GetHashCode();
      if (Rules.Length != 0) hash ^= Rules.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SourceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SourceId);
      }
      if (UserId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UserId);
      }
      if (ProjectId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ProjectId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      if (UnitConversion != 0) {
        output.WriteRawTag(40);
        output.WriteEnum((int) UnitConversion);
      }
      if (AxisConversion != 0) {
        output.WriteRawTag(48);
        output.WriteEnum((int) AxisConversion);
      }
      if (Rules.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Rules);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SourceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SourceId);
      }
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (UnitConversion != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) UnitConversion);
      }
      if (AxisConversion != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AxisConversion);
      }
      if (Rules.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Rules);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Session other) {
      if (other == null) {
        return;
      }
      if (other.SourceId.Length != 0) {
        SourceId = other.SourceId;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.UnitConversion != 0) {
        UnitConversion = other.UnitConversion;
      }
      if (other.AxisConversion != 0) {
        AxisConversion = other.AxisConversion;
      }
      if (other.Rules.Length != 0) {
        Rules = other.Rules;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SourceId = input.ReadString();
            break;
          }
          case 18: {
            UserId = input.ReadString();
            break;
          }
          case 26: {
            ProjectId = input.ReadString();
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
          case 40: {
            UnitConversion = (global::Unity.Reflect.Services.UnitConversion) input.ReadEnum();
            break;
          }
          case 48: {
            AxisConversion = (global::Unity.Reflect.Services.AxisConversion) input.ReadEnum();
            break;
          }
          case 58: {
            Rules = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class SessionAsset : pb::IMessage<SessionAsset> {
    private static readonly pb::MessageParser<SessionAsset> _parser = new pb::MessageParser<SessionAsset>(() => new SessionAsset());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SessionAsset> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Unity.Reflect.Services.ServiceReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SessionAsset() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SessionAsset(SessionAsset other) : this() {
      sourceId_ = other.sourceId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SessionAsset Clone() {
      return new SessionAsset(this);
    }

    /// <summary>Field number for the "sourceId" field.</summary>
    public const int SourceIdFieldNumber = 1;
    private string sourceId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SourceId {
      get { return sourceId_; }
      set {
        sourceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SessionAsset);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SessionAsset other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SourceId != other.SourceId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SourceId.Length != 0) hash ^= SourceId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SourceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SourceId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SourceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SourceId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SessionAsset other) {
      if (other == null) {
        return;
      }
      if (other.SourceId.Length != 0) {
        SourceId = other.SourceId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SourceId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class ObjectAsset : pb::IMessage<ObjectAsset> {
    private static readonly pb::MessageParser<ObjectAsset> _parser = new pb::MessageParser<ObjectAsset>(() => new ObjectAsset());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ObjectAsset> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Unity.Reflect.Services.ServiceReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjectAsset() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjectAsset(ObjectAsset other) : this() {
      sourceId_ = other.sourceId_;
      hash_ = other.hash_;
      object_ = other.object_ != null ? other.object_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjectAsset Clone() {
      return new ObjectAsset(this);
    }

    /// <summary>Field number for the "sourceId" field.</summary>
    public const int SourceIdFieldNumber = 1;
    private string sourceId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SourceId {
      get { return sourceId_; }
      set {
        sourceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "hash" field.</summary>
    public const int HashFieldNumber = 2;
    private string hash_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Hash {
      get { return hash_; }
      set {
        hash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "object" field.</summary>
    public const int ObjectFieldNumber = 3;
    private global::Unity.Reflect.Model.SyncObject object_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Unity.Reflect.Model.SyncObject Object {
      get { return object_; }
      set {
        object_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ObjectAsset);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ObjectAsset other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SourceId != other.SourceId) return false;
      if (Hash != other.Hash) return false;
      if (!object.Equals(Object, other.Object)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SourceId.Length != 0) hash ^= SourceId.GetHashCode();
      if (Hash.Length != 0) hash ^= Hash.GetHashCode();
      if (object_ != null) hash ^= Object.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SourceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SourceId);
      }
      if (Hash.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Hash);
      }
      if (object_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Object);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SourceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SourceId);
      }
      if (Hash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Hash);
      }
      if (object_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Object);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ObjectAsset other) {
      if (other == null) {
        return;
      }
      if (other.SourceId.Length != 0) {
        SourceId = other.SourceId;
      }
      if (other.Hash.Length != 0) {
        Hash = other.Hash;
      }
      if (other.object_ != null) {
        if (object_ == null) {
          Object = new global::Unity.Reflect.Model.SyncObject();
        }
        Object.MergeFrom(other.Object);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SourceId = input.ReadString();
            break;
          }
          case 18: {
            Hash = input.ReadString();
            break;
          }
          case 26: {
            if (object_ == null) {
              Object = new global::Unity.Reflect.Model.SyncObject();
            }
            input.ReadMessage(Object);
            break;
          }
        }
      }
    }

  }

  internal sealed partial class ObjectInstanceIdAsset : pb::IMessage<ObjectInstanceIdAsset> {
    private static readonly pb::MessageParser<ObjectInstanceIdAsset> _parser = new pb::MessageParser<ObjectInstanceIdAsset>(() => new ObjectInstanceIdAsset());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ObjectInstanceIdAsset> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Unity.Reflect.Services.ServiceReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjectInstanceIdAsset() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjectInstanceIdAsset(ObjectInstanceIdAsset other) : this() {
      sourceId_ = other.sourceId_;
      instance_ = other.instance_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjectInstanceIdAsset Clone() {
      return new ObjectInstanceIdAsset(this);
    }

    /// <summary>Field number for the "sourceId" field.</summary>
    public const int SourceIdFieldNumber = 1;
    private string sourceId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SourceId {
      get { return sourceId_; }
      set {
        sourceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "instance" field.</summary>
    public const int InstanceFieldNumber = 2;
    private string instance_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Instance {
      get { return instance_; }
      set {
        instance_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ObjectInstanceIdAsset);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ObjectInstanceIdAsset other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SourceId != other.SourceId) return false;
      if (Instance != other.Instance) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SourceId.Length != 0) hash ^= SourceId.GetHashCode();
      if (Instance.Length != 0) hash ^= Instance.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SourceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SourceId);
      }
      if (Instance.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Instance);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SourceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SourceId);
      }
      if (Instance.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Instance);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ObjectInstanceIdAsset other) {
      if (other == null) {
        return;
      }
      if (other.SourceId.Length != 0) {
        SourceId = other.SourceId;
      }
      if (other.Instance.Length != 0) {
        Instance = other.Instance;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SourceId = input.ReadString();
            break;
          }
          case 18: {
            Instance = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class ObjectInstanceAsset : pb::IMessage<ObjectInstanceAsset> {
    private static readonly pb::MessageParser<ObjectInstanceAsset> _parser = new pb::MessageParser<ObjectInstanceAsset>(() => new ObjectInstanceAsset());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ObjectInstanceAsset> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Unity.Reflect.Services.ServiceReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjectInstanceAsset() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjectInstanceAsset(ObjectInstanceAsset other) : this() {
      sourceId_ = other.sourceId_;
      instance_ = other.instance_ != null ? other.instance_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjectInstanceAsset Clone() {
      return new ObjectInstanceAsset(this);
    }

    /// <summary>Field number for the "sourceId" field.</summary>
    public const int SourceIdFieldNumber = 1;
    private string sourceId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SourceId {
      get { return sourceId_; }
      set {
        sourceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "instance" field.</summary>
    public const int InstanceFieldNumber = 2;
    private global::Unity.Reflect.Model.SyncObjectInstance instance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Unity.Reflect.Model.SyncObjectInstance Instance {
      get { return instance_; }
      set {
        instance_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ObjectInstanceAsset);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ObjectInstanceAsset other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SourceId != other.SourceId) return false;
      if (!object.Equals(Instance, other.Instance)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SourceId.Length != 0) hash ^= SourceId.GetHashCode();
      if (instance_ != null) hash ^= Instance.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SourceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SourceId);
      }
      if (instance_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Instance);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SourceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SourceId);
      }
      if (instance_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Instance);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ObjectInstanceAsset other) {
      if (other == null) {
        return;
      }
      if (other.SourceId.Length != 0) {
        SourceId = other.SourceId;
      }
      if (other.instance_ != null) {
        if (instance_ == null) {
          Instance = new global::Unity.Reflect.Model.SyncObjectInstance();
        }
        Instance.MergeFrom(other.Instance);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SourceId = input.ReadString();
            break;
          }
          case 18: {
            if (instance_ == null) {
              Instance = new global::Unity.Reflect.Model.SyncObjectInstance();
            }
            input.ReadMessage(Instance);
            break;
          }
        }
      }
    }

  }

  internal sealed partial class PrefabAsset : pb::IMessage<PrefabAsset> {
    private static readonly pb::MessageParser<PrefabAsset> _parser = new pb::MessageParser<PrefabAsset>(() => new PrefabAsset());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PrefabAsset> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Unity.Reflect.Services.ServiceReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PrefabAsset() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PrefabAsset(PrefabAsset other) : this() {
      sourceId_ = other.sourceId_;
      hash_ = other.hash_;
      prefab_ = other.prefab_ != null ? other.prefab_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PrefabAsset Clone() {
      return new PrefabAsset(this);
    }

    /// <summary>Field number for the "sourceId" field.</summary>
    public const int SourceIdFieldNumber = 1;
    private string sourceId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SourceId {
      get { return sourceId_; }
      set {
        sourceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "hash" field.</summary>
    public const int HashFieldNumber = 2;
    private string hash_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Hash {
      get { return hash_; }
      set {
        hash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "prefab" field.</summary>
    public const int PrefabFieldNumber = 3;
    private global::Unity.Reflect.Model.SyncPrefab prefab_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Unity.Reflect.Model.SyncPrefab Prefab {
      get { return prefab_; }
      set {
        prefab_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PrefabAsset);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PrefabAsset other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SourceId != other.SourceId) return false;
      if (Hash != other.Hash) return false;
      if (!object.Equals(Prefab, other.Prefab)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SourceId.Length != 0) hash ^= SourceId.GetHashCode();
      if (Hash.Length != 0) hash ^= Hash.GetHashCode();
      if (prefab_ != null) hash ^= Prefab.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SourceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SourceId);
      }
      if (Hash.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Hash);
      }
      if (prefab_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Prefab);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SourceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SourceId);
      }
      if (Hash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Hash);
      }
      if (prefab_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Prefab);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PrefabAsset other) {
      if (other == null) {
        return;
      }
      if (other.SourceId.Length != 0) {
        SourceId = other.SourceId;
      }
      if (other.Hash.Length != 0) {
        Hash = other.Hash;
      }
      if (other.prefab_ != null) {
        if (prefab_ == null) {
          Prefab = new global::Unity.Reflect.Model.SyncPrefab();
        }
        Prefab.MergeFrom(other.Prefab);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SourceId = input.ReadString();
            break;
          }
          case 18: {
            Hash = input.ReadString();
            break;
          }
          case 26: {
            if (prefab_ == null) {
              Prefab = new global::Unity.Reflect.Model.SyncPrefab();
            }
            input.ReadMessage(Prefab);
            break;
          }
        }
      }
    }

  }

  internal sealed partial class MeshAsset : pb::IMessage<MeshAsset> {
    private static readonly pb::MessageParser<MeshAsset> _parser = new pb::MessageParser<MeshAsset>(() => new MeshAsset());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MeshAsset> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Unity.Reflect.Services.ServiceReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MeshAsset() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MeshAsset(MeshAsset other) : this() {
      sourceId_ = other.sourceId_;
      hash_ = other.hash_;
      mesh_ = other.mesh_ != null ? other.mesh_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MeshAsset Clone() {
      return new MeshAsset(this);
    }

    /// <summary>Field number for the "sourceId" field.</summary>
    public const int SourceIdFieldNumber = 1;
    private string sourceId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SourceId {
      get { return sourceId_; }
      set {
        sourceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "hash" field.</summary>
    public const int HashFieldNumber = 2;
    private string hash_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Hash {
      get { return hash_; }
      set {
        hash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "mesh" field.</summary>
    public const int MeshFieldNumber = 3;
    private global::Unity.Reflect.Model.SyncMesh mesh_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Unity.Reflect.Model.SyncMesh Mesh {
      get { return mesh_; }
      set {
        mesh_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MeshAsset);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MeshAsset other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SourceId != other.SourceId) return false;
      if (Hash != other.Hash) return false;
      if (!object.Equals(Mesh, other.Mesh)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SourceId.Length != 0) hash ^= SourceId.GetHashCode();
      if (Hash.Length != 0) hash ^= Hash.GetHashCode();
      if (mesh_ != null) hash ^= Mesh.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SourceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SourceId);
      }
      if (Hash.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Hash);
      }
      if (mesh_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Mesh);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SourceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SourceId);
      }
      if (Hash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Hash);
      }
      if (mesh_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Mesh);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MeshAsset other) {
      if (other == null) {
        return;
      }
      if (other.SourceId.Length != 0) {
        SourceId = other.SourceId;
      }
      if (other.Hash.Length != 0) {
        Hash = other.Hash;
      }
      if (other.mesh_ != null) {
        if (mesh_ == null) {
          Mesh = new global::Unity.Reflect.Model.SyncMesh();
        }
        Mesh.MergeFrom(other.Mesh);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SourceId = input.ReadString();
            break;
          }
          case 18: {
            Hash = input.ReadString();
            break;
          }
          case 26: {
            if (mesh_ == null) {
              Mesh = new global::Unity.Reflect.Model.SyncMesh();
            }
            input.ReadMessage(Mesh);
            break;
          }
        }
      }
    }

  }

  internal sealed partial class MaterialAsset : pb::IMessage<MaterialAsset> {
    private static readonly pb::MessageParser<MaterialAsset> _parser = new pb::MessageParser<MaterialAsset>(() => new MaterialAsset());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MaterialAsset> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Unity.Reflect.Services.ServiceReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MaterialAsset() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MaterialAsset(MaterialAsset other) : this() {
      sourceId_ = other.sourceId_;
      hash_ = other.hash_;
      material_ = other.material_ != null ? other.material_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MaterialAsset Clone() {
      return new MaterialAsset(this);
    }

    /// <summary>Field number for the "sourceId" field.</summary>
    public const int SourceIdFieldNumber = 1;
    private string sourceId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SourceId {
      get { return sourceId_; }
      set {
        sourceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "hash" field.</summary>
    public const int HashFieldNumber = 2;
    private string hash_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Hash {
      get { return hash_; }
      set {
        hash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "material" field.</summary>
    public const int MaterialFieldNumber = 3;
    private global::Unity.Reflect.Model.SyncMaterial material_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Unity.Reflect.Model.SyncMaterial Material {
      get { return material_; }
      set {
        material_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MaterialAsset);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MaterialAsset other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SourceId != other.SourceId) return false;
      if (Hash != other.Hash) return false;
      if (!object.Equals(Material, other.Material)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SourceId.Length != 0) hash ^= SourceId.GetHashCode();
      if (Hash.Length != 0) hash ^= Hash.GetHashCode();
      if (material_ != null) hash ^= Material.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SourceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SourceId);
      }
      if (Hash.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Hash);
      }
      if (material_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Material);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SourceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SourceId);
      }
      if (Hash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Hash);
      }
      if (material_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Material);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MaterialAsset other) {
      if (other == null) {
        return;
      }
      if (other.SourceId.Length != 0) {
        SourceId = other.SourceId;
      }
      if (other.Hash.Length != 0) {
        Hash = other.Hash;
      }
      if (other.material_ != null) {
        if (material_ == null) {
          Material = new global::Unity.Reflect.Model.SyncMaterial();
        }
        Material.MergeFrom(other.Material);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SourceId = input.ReadString();
            break;
          }
          case 18: {
            Hash = input.ReadString();
            break;
          }
          case 26: {
            if (material_ == null) {
              Material = new global::Unity.Reflect.Model.SyncMaterial();
            }
            input.ReadMessage(Material);
            break;
          }
        }
      }
    }

  }

  internal sealed partial class TextureAsset : pb::IMessage<TextureAsset> {
    private static readonly pb::MessageParser<TextureAsset> _parser = new pb::MessageParser<TextureAsset>(() => new TextureAsset());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TextureAsset> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Unity.Reflect.Services.ServiceReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TextureAsset() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TextureAsset(TextureAsset other) : this() {
      sourceId_ = other.sourceId_;
      hash_ = other.hash_;
      texture_ = other.texture_ != null ? other.texture_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TextureAsset Clone() {
      return new TextureAsset(this);
    }

    /// <summary>Field number for the "sourceId" field.</summary>
    public const int SourceIdFieldNumber = 1;
    private string sourceId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SourceId {
      get { return sourceId_; }
      set {
        sourceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "hash" field.</summary>
    public const int HashFieldNumber = 2;
    private string hash_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Hash {
      get { return hash_; }
      set {
        hash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "texture" field.</summary>
    public const int TextureFieldNumber = 3;
    private global::Unity.Reflect.Model.SyncTexture texture_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Unity.Reflect.Model.SyncTexture Texture {
      get { return texture_; }
      set {
        texture_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TextureAsset);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TextureAsset other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SourceId != other.SourceId) return false;
      if (Hash != other.Hash) return false;
      if (!object.Equals(Texture, other.Texture)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SourceId.Length != 0) hash ^= SourceId.GetHashCode();
      if (Hash.Length != 0) hash ^= Hash.GetHashCode();
      if (texture_ != null) hash ^= Texture.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SourceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SourceId);
      }
      if (Hash.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Hash);
      }
      if (texture_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Texture);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SourceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SourceId);
      }
      if (Hash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Hash);
      }
      if (texture_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Texture);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TextureAsset other) {
      if (other == null) {
        return;
      }
      if (other.SourceId.Length != 0) {
        SourceId = other.SourceId;
      }
      if (other.Hash.Length != 0) {
        Hash = other.Hash;
      }
      if (other.texture_ != null) {
        if (texture_ == null) {
          Texture = new global::Unity.Reflect.Model.SyncTexture();
        }
        Texture.MergeFrom(other.Texture);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SourceId = input.ReadString();
            break;
          }
          case 18: {
            Hash = input.ReadString();
            break;
          }
          case 26: {
            if (texture_ == null) {
              Texture = new global::Unity.Reflect.Model.SyncTexture();
            }
            input.ReadMessage(Texture);
            break;
          }
        }
      }
    }

  }

  internal sealed partial class ManifestsRequest : pb::IMessage<ManifestsRequest> {
    private static readonly pb::MessageParser<ManifestsRequest> _parser = new pb::MessageParser<ManifestsRequest>(() => new ManifestsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ManifestsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Unity.Reflect.Services.ServiceReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ManifestsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ManifestsRequest(ManifestsRequest other) : this() {
      projectId_ = other.projectId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ManifestsRequest Clone() {
      return new ManifestsRequest(this);
    }

    /// <summary>Field number for the "projectId" field.</summary>
    public const int ProjectIdFieldNumber = 1;
    private string projectId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ManifestsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ManifestsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProjectId != other.ProjectId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ManifestsRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class ResponseManifests : pb::IMessage<ResponseManifests> {
    private static readonly pb::MessageParser<ResponseManifests> _parser = new pb::MessageParser<ResponseManifests>(() => new ResponseManifests());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResponseManifests> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Unity.Reflect.Services.ServiceReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseManifests() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseManifests(ResponseManifests other) : this() {
      manifests_ = other.manifests_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseManifests Clone() {
      return new ResponseManifests(this);
    }

    /// <summary>Field number for the "manifests" field.</summary>
    public const int ManifestsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Unity.Reflect.Services.ManifestAsset> _repeated_manifests_codec
        = pb::FieldCodec.ForMessage(10, global::Unity.Reflect.Services.ManifestAsset.Parser);
    private readonly pbc::RepeatedField<global::Unity.Reflect.Services.ManifestAsset> manifests_ = new pbc::RepeatedField<global::Unity.Reflect.Services.ManifestAsset>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Unity.Reflect.Services.ManifestAsset> Manifests {
      get { return manifests_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResponseManifests);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResponseManifests other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!manifests_.Equals(other.manifests_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= manifests_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      manifests_.WriteTo(output, _repeated_manifests_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += manifests_.CalculateSize(_repeated_manifests_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResponseManifests other) {
      if (other == null) {
        return;
      }
      manifests_.Add(other.manifests_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            manifests_.AddEntriesFrom(input, _repeated_manifests_codec);
            break;
          }
        }
      }
    }

  }

  internal sealed partial class ManifestAsset : pb::IMessage<ManifestAsset> {
    private static readonly pb::MessageParser<ManifestAsset> _parser = new pb::MessageParser<ManifestAsset>(() => new ManifestAsset());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ManifestAsset> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Unity.Reflect.Services.ServiceReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ManifestAsset() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ManifestAsset(ManifestAsset other) : this() {
      projectId_ = other.projectId_;
      sourceId_ = other.sourceId_;
      manifest_ = other.manifest_ != null ? other.manifest_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ManifestAsset Clone() {
      return new ManifestAsset(this);
    }

    /// <summary>Field number for the "projectId" field.</summary>
    public const int ProjectIdFieldNumber = 1;
    private string projectId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sourceId" field.</summary>
    public const int SourceIdFieldNumber = 2;
    private string sourceId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SourceId {
      get { return sourceId_; }
      set {
        sourceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "manifest" field.</summary>
    public const int ManifestFieldNumber = 3;
    private global::Unity.Reflect.Data.SyncManifest manifest_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Unity.Reflect.Data.SyncManifest Manifest {
      get { return manifest_; }
      set {
        manifest_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ManifestAsset);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ManifestAsset other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProjectId != other.ProjectId) return false;
      if (SourceId != other.SourceId) return false;
      if (!object.Equals(Manifest, other.Manifest)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (SourceId.Length != 0) hash ^= SourceId.GetHashCode();
      if (manifest_ != null) hash ^= Manifest.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (SourceId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SourceId);
      }
      if (manifest_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Manifest);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (SourceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SourceId);
      }
      if (manifest_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Manifest);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ManifestAsset other) {
      if (other == null) {
        return;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.SourceId.Length != 0) {
        SourceId = other.SourceId;
      }
      if (other.manifest_ != null) {
        if (manifest_ == null) {
          Manifest = new global::Unity.Reflect.Data.SyncManifest();
        }
        Manifest.MergeFrom(other.Manifest);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 18: {
            SourceId = input.ReadString();
            break;
          }
          case 26: {
            if (manifest_ == null) {
              Manifest = new global::Unity.Reflect.Data.SyncManifest();
            }
            input.ReadMessage(Manifest);
            break;
          }
        }
      }
    }

  }

  internal sealed partial class ManifestRequest : pb::IMessage<ManifestRequest> {
    private static readonly pb::MessageParser<ManifestRequest> _parser = new pb::MessageParser<ManifestRequest>(() => new ManifestRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ManifestRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Unity.Reflect.Services.ServiceReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ManifestRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ManifestRequest(ManifestRequest other) : this() {
      projectId_ = other.projectId_;
      sourceId_ = other.sourceId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ManifestRequest Clone() {
      return new ManifestRequest(this);
    }

    /// <summary>Field number for the "projectId" field.</summary>
    public const int ProjectIdFieldNumber = 1;
    private string projectId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sourceId" field.</summary>
    public const int SourceIdFieldNumber = 2;
    private string sourceId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SourceId {
      get { return sourceId_; }
      set {
        sourceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ManifestRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ManifestRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProjectId != other.ProjectId) return false;
      if (SourceId != other.SourceId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (SourceId.Length != 0) hash ^= SourceId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (SourceId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SourceId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (SourceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SourceId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ManifestRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.SourceId.Length != 0) {
        SourceId = other.SourceId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 18: {
            SourceId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class UnityProjectRequest : pb::IMessage<UnityProjectRequest> {
    private static readonly pb::MessageParser<UnityProjectRequest> _parser = new pb::MessageParser<UnityProjectRequest>(() => new UnityProjectRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UnityProjectRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Unity.Reflect.Services.ServiceReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnityProjectRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnityProjectRequest(UnityProjectRequest other) : this() {
      userId_ = other.userId_;
      organisationId_ = other.organisationId_;
      includeCloudProject_ = other.includeCloudProject_;
      includeRemoteProjects_ = other.includeRemoteProjects_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnityProjectRequest Clone() {
      return new UnityProjectRequest(this);
    }

    /// <summary>Field number for the "userId" field.</summary>
    public const int UserIdFieldNumber = 1;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "organisationId" field.</summary>
    public const int OrganisationIdFieldNumber = 2;
    private string organisationId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OrganisationId {
      get { return organisationId_; }
      set {
        organisationId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "includeCloudProject" field.</summary>
    public const int IncludeCloudProjectFieldNumber = 3;
    private bool includeCloudProject_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IncludeCloudProject {
      get { return includeCloudProject_; }
      set {
        includeCloudProject_ = value;
      }
    }

    /// <summary>Field number for the "includeRemoteProjects" field.</summary>
    public const int IncludeRemoteProjectsFieldNumber = 4;
    private bool includeRemoteProjects_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IncludeRemoteProjects {
      get { return includeRemoteProjects_; }
      set {
        includeRemoteProjects_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UnityProjectRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UnityProjectRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (OrganisationId != other.OrganisationId) return false;
      if (IncludeCloudProject != other.IncludeCloudProject) return false;
      if (IncludeRemoteProjects != other.IncludeRemoteProjects) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (OrganisationId.Length != 0) hash ^= OrganisationId.GetHashCode();
      if (IncludeCloudProject != false) hash ^= IncludeCloudProject.GetHashCode();
      if (IncludeRemoteProjects != false) hash ^= IncludeRemoteProjects.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (OrganisationId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(OrganisationId);
      }
      if (IncludeCloudProject != false) {
        output.WriteRawTag(24);
        output.WriteBool(IncludeCloudProject);
      }
      if (IncludeRemoteProjects != false) {
        output.WriteRawTag(32);
        output.WriteBool(IncludeRemoteProjects);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (OrganisationId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OrganisationId);
      }
      if (IncludeCloudProject != false) {
        size += 1 + 1;
      }
      if (IncludeRemoteProjects != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UnityProjectRequest other) {
      if (other == null) {
        return;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.OrganisationId.Length != 0) {
        OrganisationId = other.OrganisationId;
      }
      if (other.IncludeCloudProject != false) {
        IncludeCloudProject = other.IncludeCloudProject;
      }
      if (other.IncludeRemoteProjects != false) {
        IncludeRemoteProjects = other.IncludeRemoteProjects;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
          case 18: {
            OrganisationId = input.ReadString();
            break;
          }
          case 24: {
            IncludeCloudProject = input.ReadBool();
            break;
          }
          case 32: {
            IncludeRemoteProjects = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class UnityProjectResponse : pb::IMessage<UnityProjectResponse> {
    private static readonly pb::MessageParser<UnityProjectResponse> _parser = new pb::MessageParser<UnityProjectResponse>(() => new UnityProjectResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UnityProjectResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Unity.Reflect.Services.ServiceReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnityProjectResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnityProjectResponse(UnityProjectResponse other) : this() {
      success_ = other.success_;
      projects_ = other.projects_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnityProjectResponse Clone() {
      return new UnityProjectResponse(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    /// <summary>Field number for the "projects" field.</summary>
    public const int ProjectsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Unity.Reflect.Services.UnityProject> _repeated_projects_codec
        = pb::FieldCodec.ForMessage(18, global::Unity.Reflect.Services.UnityProject.Parser);
    private readonly pbc::RepeatedField<global::Unity.Reflect.Services.UnityProject> projects_ = new pbc::RepeatedField<global::Unity.Reflect.Services.UnityProject>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Unity.Reflect.Services.UnityProject> Projects {
      get { return projects_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UnityProjectResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UnityProjectResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      if(!projects_.Equals(other.projects_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Success != false) hash ^= Success.GetHashCode();
      hash ^= projects_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      projects_.WriteTo(output, _repeated_projects_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Success != false) {
        size += 1 + 1;
      }
      size += projects_.CalculateSize(_repeated_projects_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UnityProjectResponse other) {
      if (other == null) {
        return;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      projects_.Add(other.projects_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
          case 18: {
            projects_.AddEntriesFrom(input, _repeated_projects_codec);
            break;
          }
        }
      }
    }

  }

  internal sealed partial class UnityProject : pb::IMessage<UnityProject> {
    private static readonly pb::MessageParser<UnityProject> _parser = new pb::MessageParser<UnityProject>(() => new UnityProject());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UnityProject> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Unity.Reflect.Services.ServiceReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnityProject() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnityProject(UnityProject other) : this() {
      id_ = other.id_;
      projectId_ = other.projectId_;
      name_ = other.name_;
      serverName_ = other.serverName_;
      serverAddress_ = other.serverAddress_;
      cloudOnly_ = other.cloudOnly_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnityProject Clone() {
      return new UnityProject(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "projectId" field.</summary>
    public const int ProjectIdFieldNumber = 2;
    private string projectId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "serverName" field.</summary>
    public const int ServerNameFieldNumber = 4;
    private string serverName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServerName {
      get { return serverName_; }
      set {
        serverName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "serverAddress" field.</summary>
    public const int ServerAddressFieldNumber = 5;
    private string serverAddress_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServerAddress {
      get { return serverAddress_; }
      set {
        serverAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cloudOnly" field.</summary>
    public const int CloudOnlyFieldNumber = 6;
    private bool cloudOnly_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CloudOnly {
      get { return cloudOnly_; }
      set {
        cloudOnly_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UnityProject);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UnityProject other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (ProjectId != other.ProjectId) return false;
      if (Name != other.Name) return false;
      if (ServerName != other.ServerName) return false;
      if (ServerAddress != other.ServerAddress) return false;
      if (CloudOnly != other.CloudOnly) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (ServerName.Length != 0) hash ^= ServerName.GetHashCode();
      if (ServerAddress.Length != 0) hash ^= ServerAddress.GetHashCode();
      if (CloudOnly != false) hash ^= CloudOnly.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (ProjectId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ProjectId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (ServerName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ServerName);
      }
      if (ServerAddress.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ServerAddress);
      }
      if (CloudOnly != false) {
        output.WriteRawTag(48);
        output.WriteBool(CloudOnly);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (ServerName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServerName);
      }
      if (ServerAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServerAddress);
      }
      if (CloudOnly != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UnityProject other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.ServerName.Length != 0) {
        ServerName = other.ServerName;
      }
      if (other.ServerAddress.Length != 0) {
        ServerAddress = other.ServerAddress;
      }
      if (other.CloudOnly != false) {
        CloudOnly = other.CloudOnly;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            ProjectId = input.ReadString();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 34: {
            ServerName = input.ReadString();
            break;
          }
          case 42: {
            ServerAddress = input.ReadString();
            break;
          }
          case 48: {
            CloudOnly = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class UnityUserResponse : pb::IMessage<UnityUserResponse> {
    private static readonly pb::MessageParser<UnityUserResponse> _parser = new pb::MessageParser<UnityUserResponse>(() => new UnityUserResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UnityUserResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Unity.Reflect.Services.ServiceReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnityUserResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnityUserResponse(UnityUserResponse other) : this() {
      success_ = other.success_;
      user_ = other.user_ != null ? other.user_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnityUserResponse Clone() {
      return new UnityUserResponse(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    /// <summary>Field number for the "user" field.</summary>
    public const int UserFieldNumber = 2;
    private global::Unity.Reflect.Services.UnityUser user_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Unity.Reflect.Services.UnityUser User {
      get { return user_; }
      set {
        user_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UnityUserResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UnityUserResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      if (!object.Equals(User, other.User)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Success != false) hash ^= Success.GetHashCode();
      if (user_ != null) hash ^= User.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (user_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(User);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Success != false) {
        size += 1 + 1;
      }
      if (user_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(User);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UnityUserResponse other) {
      if (other == null) {
        return;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      if (other.user_ != null) {
        if (user_ == null) {
          User = new global::Unity.Reflect.Services.UnityUser();
        }
        User.MergeFrom(other.User);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
          case 18: {
            if (user_ == null) {
              User = new global::Unity.Reflect.Services.UnityUser();
            }
            input.ReadMessage(User);
            break;
          }
        }
      }
    }

  }

  internal sealed partial class UnityUser : pb::IMessage<UnityUser> {
    private static readonly pb::MessageParser<UnityUser> _parser = new pb::MessageParser<UnityUser>(() => new UnityUser());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UnityUser> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Unity.Reflect.Services.ServiceReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnityUser() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnityUser(UnityUser other) : this() {
      accessToken_ = other.accessToken_;
      displayName_ = other.displayName_;
      organizationForeignKeys_ = other.organizationForeignKeys_;
      primaryOrg_ = other.primaryOrg_;
      userId_ = other.userId_;
      name_ = other.name_;
      valid_ = other.valid_;
      whitelisted_ = other.whitelisted_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnityUser Clone() {
      return new UnityUser(this);
    }

    /// <summary>Field number for the "accessToken" field.</summary>
    public const int AccessTokenFieldNumber = 1;
    private string accessToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AccessToken {
      get { return accessToken_; }
      set {
        accessToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "displayName" field.</summary>
    public const int DisplayNameFieldNumber = 2;
    private string displayName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DisplayName {
      get { return displayName_; }
      set {
        displayName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "organizationForeignKeys" field.</summary>
    public const int OrganizationForeignKeysFieldNumber = 3;
    private string organizationForeignKeys_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OrganizationForeignKeys {
      get { return organizationForeignKeys_; }
      set {
        organizationForeignKeys_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "primaryOrg" field.</summary>
    public const int PrimaryOrgFieldNumber = 4;
    private string primaryOrg_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PrimaryOrg {
      get { return primaryOrg_; }
      set {
        primaryOrg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "userId" field.</summary>
    public const int UserIdFieldNumber = 5;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 6;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "valid" field.</summary>
    public const int ValidFieldNumber = 7;
    private bool valid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Valid {
      get { return valid_; }
      set {
        valid_ = value;
      }
    }

    /// <summary>Field number for the "whitelisted" field.</summary>
    public const int WhitelistedFieldNumber = 8;
    private bool whitelisted_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Whitelisted {
      get { return whitelisted_; }
      set {
        whitelisted_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UnityUser);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UnityUser other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AccessToken != other.AccessToken) return false;
      if (DisplayName != other.DisplayName) return false;
      if (OrganizationForeignKeys != other.OrganizationForeignKeys) return false;
      if (PrimaryOrg != other.PrimaryOrg) return false;
      if (UserId != other.UserId) return false;
      if (Name != other.Name) return false;
      if (Valid != other.Valid) return false;
      if (Whitelisted != other.Whitelisted) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AccessToken.Length != 0) hash ^= AccessToken.GetHashCode();
      if (DisplayName.Length != 0) hash ^= DisplayName.GetHashCode();
      if (OrganizationForeignKeys.Length != 0) hash ^= OrganizationForeignKeys.GetHashCode();
      if (PrimaryOrg.Length != 0) hash ^= PrimaryOrg.GetHashCode();
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Valid != false) hash ^= Valid.GetHashCode();
      if (Whitelisted != false) hash ^= Whitelisted.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AccessToken.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AccessToken);
      }
      if (DisplayName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DisplayName);
      }
      if (OrganizationForeignKeys.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(OrganizationForeignKeys);
      }
      if (PrimaryOrg.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PrimaryOrg);
      }
      if (UserId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(UserId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Name);
      }
      if (Valid != false) {
        output.WriteRawTag(56);
        output.WriteBool(Valid);
      }
      if (Whitelisted != false) {
        output.WriteRawTag(64);
        output.WriteBool(Whitelisted);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AccessToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AccessToken);
      }
      if (DisplayName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayName);
      }
      if (OrganizationForeignKeys.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OrganizationForeignKeys);
      }
      if (PrimaryOrg.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PrimaryOrg);
      }
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Valid != false) {
        size += 1 + 1;
      }
      if (Whitelisted != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UnityUser other) {
      if (other == null) {
        return;
      }
      if (other.AccessToken.Length != 0) {
        AccessToken = other.AccessToken;
      }
      if (other.DisplayName.Length != 0) {
        DisplayName = other.DisplayName;
      }
      if (other.OrganizationForeignKeys.Length != 0) {
        OrganizationForeignKeys = other.OrganizationForeignKeys;
      }
      if (other.PrimaryOrg.Length != 0) {
        PrimaryOrg = other.PrimaryOrg;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Valid != false) {
        Valid = other.Valid;
      }
      if (other.Whitelisted != false) {
        Whitelisted = other.Whitelisted;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AccessToken = input.ReadString();
            break;
          }
          case 18: {
            DisplayName = input.ReadString();
            break;
          }
          case 26: {
            OrganizationForeignKeys = input.ReadString();
            break;
          }
          case 34: {
            PrimaryOrg = input.ReadString();
            break;
          }
          case 42: {
            UserId = input.ReadString();
            break;
          }
          case 50: {
            Name = input.ReadString();
            break;
          }
          case 56: {
            Valid = input.ReadBool();
            break;
          }
          case 64: {
            Whitelisted = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class ObserveRequest : pb::IMessage<ObserveRequest> {
    private static readonly pb::MessageParser<ObserveRequest> _parser = new pb::MessageParser<ObserveRequest>(() => new ObserveRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ObserveRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Unity.Reflect.Services.ServiceReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObserveRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObserveRequest(ObserveRequest other) : this() {
      observableId_ = other.observableId_;
      observableType_ = other.observableType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObserveRequest Clone() {
      return new ObserveRequest(this);
    }

    /// <summary>Field number for the "observableId" field.</summary>
    public const int ObservableIdFieldNumber = 1;
    private string observableId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ObservableId {
      get { return observableId_; }
      set {
        observableId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "observableType" field.</summary>
    public const int ObservableTypeFieldNumber = 2;
    private global::Unity.Reflect.Services.Observable observableType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Unity.Reflect.Services.Observable ObservableType {
      get { return observableType_; }
      set {
        observableType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ObserveRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ObserveRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ObservableId != other.ObservableId) return false;
      if (ObservableType != other.ObservableType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ObservableId.Length != 0) hash ^= ObservableId.GetHashCode();
      if (ObservableType != 0) hash ^= ObservableType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ObservableId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ObservableId);
      }
      if (ObservableType != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ObservableType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ObservableId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ObservableId);
      }
      if (ObservableType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ObservableType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ObserveRequest other) {
      if (other == null) {
        return;
      }
      if (other.ObservableId.Length != 0) {
        ObservableId = other.ObservableId;
      }
      if (other.ObservableType != 0) {
        ObservableType = other.ObservableType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ObservableId = input.ReadString();
            break;
          }
          case 16: {
            ObservableType = (global::Unity.Reflect.Services.Observable) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class SyncModelRequest : pb::IMessage<SyncModelRequest> {
    private static readonly pb::MessageParser<SyncModelRequest> _parser = new pb::MessageParser<SyncModelRequest>(() => new SyncModelRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SyncModelRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Unity.Reflect.Services.ServiceReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SyncModelRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SyncModelRequest(SyncModelRequest other) : this() {
      projectId_ = other.projectId_;
      sourceId_ = other.sourceId_;
      dstPath_ = other.dstPath_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SyncModelRequest Clone() {
      return new SyncModelRequest(this);
    }

    /// <summary>Field number for the "projectId" field.</summary>
    public const int ProjectIdFieldNumber = 1;
    private string projectId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sourceId" field.</summary>
    public const int SourceIdFieldNumber = 2;
    private string sourceId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SourceId {
      get { return sourceId_; }
      set {
        sourceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "dstPath" field.</summary>
    public const int DstPathFieldNumber = 3;
    private string dstPath_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DstPath {
      get { return dstPath_; }
      set {
        dstPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SyncModelRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SyncModelRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProjectId != other.ProjectId) return false;
      if (SourceId != other.SourceId) return false;
      if (DstPath != other.DstPath) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (SourceId.Length != 0) hash ^= SourceId.GetHashCode();
      if (DstPath.Length != 0) hash ^= DstPath.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (SourceId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SourceId);
      }
      if (DstPath.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DstPath);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (SourceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SourceId);
      }
      if (DstPath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DstPath);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SyncModelRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.SourceId.Length != 0) {
        SourceId = other.SourceId;
      }
      if (other.DstPath.Length != 0) {
        DstPath = other.DstPath;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 18: {
            SourceId = input.ReadString();
            break;
          }
          case 26: {
            DstPath = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class ReleaseRequest : pb::IMessage<ReleaseRequest> {
    private static readonly pb::MessageParser<ReleaseRequest> _parser = new pb::MessageParser<ReleaseRequest>(() => new ReleaseRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReleaseRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Unity.Reflect.Services.ServiceReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReleaseRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReleaseRequest(ReleaseRequest other) : this() {
      observableId_ = other.observableId_;
      observableType_ = other.observableType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReleaseRequest Clone() {
      return new ReleaseRequest(this);
    }

    /// <summary>Field number for the "observableId" field.</summary>
    public const int ObservableIdFieldNumber = 1;
    private string observableId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ObservableId {
      get { return observableId_; }
      set {
        observableId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "observableType" field.</summary>
    public const int ObservableTypeFieldNumber = 2;
    private global::Unity.Reflect.Services.Observable observableType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Unity.Reflect.Services.Observable ObservableType {
      get { return observableType_; }
      set {
        observableType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReleaseRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReleaseRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ObservableId != other.ObservableId) return false;
      if (ObservableType != other.ObservableType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ObservableId.Length != 0) hash ^= ObservableId.GetHashCode();
      if (ObservableType != 0) hash ^= ObservableType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ObservableId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ObservableId);
      }
      if (ObservableType != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ObservableType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ObservableId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ObservableId);
      }
      if (ObservableType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ObservableType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReleaseRequest other) {
      if (other == null) {
        return;
      }
      if (other.ObservableId.Length != 0) {
        ObservableId = other.ObservableId;
      }
      if (other.ObservableType != 0) {
        ObservableType = other.ObservableType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ObservableId = input.ReadString();
            break;
          }
          case 16: {
            ObservableType = (global::Unity.Reflect.Services.Observable) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class ReleaseStatus : pb::IMessage<ReleaseStatus> {
    private static readonly pb::MessageParser<ReleaseStatus> _parser = new pb::MessageParser<ReleaseStatus>(() => new ReleaseStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReleaseStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Unity.Reflect.Services.ServiceReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReleaseStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReleaseStatus(ReleaseStatus other) : this() {
      success_ = other.success_;
      observeComplete_ = other.observeComplete_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReleaseStatus Clone() {
      return new ReleaseStatus(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    /// <summary>Field number for the "observeComplete" field.</summary>
    public const int ObserveCompleteFieldNumber = 2;
    private bool observeComplete_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ObserveComplete {
      get { return observeComplete_; }
      set {
        observeComplete_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReleaseStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReleaseStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      if (ObserveComplete != other.ObserveComplete) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Success != false) hash ^= Success.GetHashCode();
      if (ObserveComplete != false) hash ^= ObserveComplete.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (ObserveComplete != false) {
        output.WriteRawTag(16);
        output.WriteBool(ObserveComplete);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Success != false) {
        size += 1 + 1;
      }
      if (ObserveComplete != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReleaseStatus other) {
      if (other == null) {
        return;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      if (other.ObserveComplete != false) {
        ObserveComplete = other.ObserveComplete;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
          case 16: {
            ObserveComplete = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class ObserveNotification : pb::IMessage<ObserveNotification> {
    private static readonly pb::MessageParser<ObserveNotification> _parser = new pb::MessageParser<ObserveNotification>(() => new ObserveNotification());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ObserveNotification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Unity.Reflect.Services.ServiceReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObserveNotification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObserveNotification(ObserveNotification other) : this() {
      observableId_ = other.observableId_;
      observableType_ = other.observableType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObserveNotification Clone() {
      return new ObserveNotification(this);
    }

    /// <summary>Field number for the "observableId" field.</summary>
    public const int ObservableIdFieldNumber = 1;
    private string observableId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ObservableId {
      get { return observableId_; }
      set {
        observableId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "observableType" field.</summary>
    public const int ObservableTypeFieldNumber = 2;
    private global::Unity.Reflect.Services.Observable observableType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Unity.Reflect.Services.Observable ObservableType {
      get { return observableType_; }
      set {
        observableType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ObserveNotification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ObserveNotification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ObservableId != other.ObservableId) return false;
      if (ObservableType != other.ObservableType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ObservableId.Length != 0) hash ^= ObservableId.GetHashCode();
      if (ObservableType != 0) hash ^= ObservableType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ObservableId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ObservableId);
      }
      if (ObservableType != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ObservableType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ObservableId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ObservableId);
      }
      if (ObservableType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ObservableType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ObserveNotification other) {
      if (other == null) {
        return;
      }
      if (other.ObservableId.Length != 0) {
        ObservableId = other.ObservableId;
      }
      if (other.ObservableType != 0) {
        ObservableType = other.ObservableType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ObservableId = input.ReadString();
            break;
          }
          case 16: {
            ObservableType = (global::Unity.Reflect.Services.Observable) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
