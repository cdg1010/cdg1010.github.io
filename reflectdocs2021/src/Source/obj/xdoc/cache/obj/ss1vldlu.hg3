id: cs.temp.dll
language: CSharp
name:
  Default: cs.temp.dll
qualifiedName:
  Default: cs.temp.dll
type: Assembly
modifiers: {}
items:
- id: Unity.Reflect
  commentId: N:Unity.Reflect
  language: CSharp
  name:
    CSharp: Unity.Reflect
    VB: Unity.Reflect
  nameWithType:
    CSharp: Unity.Reflect
    VB: Unity.Reflect
  qualifiedName:
    CSharp: Unity.Reflect
    VB: Unity.Reflect
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Unity.Reflect.Player
    commentId: T:Unity.Reflect.Player
    language: CSharp
    name:
      CSharp: Player
      VB: Player
    nameWithType:
      CSharp: Player
      VB: Player
    qualifiedName:
      CSharp: Unity.Reflect.Player
      VB: Unity.Reflect.Player
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect
    source:
      id: Player
      path: ''
      startLine: 19107
    summary: "\nAn <xref href=\"Unity.Reflect.IPlayerClient\" data-throw-if-not-resolved=\"false\"></xref> factory.\n"
    example: []
    syntax:
      content:
        CSharp: public static class Player
        VB: Public Module Player
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: Unity.Reflect.Player.CreateClient(System.String)
      commentId: M:Unity.Reflect.Player.CreateClient(System.String)
      language: CSharp
      name:
        CSharp: CreateClient(String)
        VB: CreateClient(String)
      nameWithType:
        CSharp: Player.CreateClient(String)
        VB: Player.CreateClient(String)
      qualifiedName:
        CSharp: Unity.Reflect.Player.CreateClient(System.String)
        VB: Unity.Reflect.Player.CreateClient(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect
      source:
        id: CreateClient
        path: ''
        startLine: 19115
      summary: "\nCreates and connects an <xref href=\"Unity.Reflect.IPlayerClient\" data-throw-if-not-resolved=\"false\"></xref> to a SyncServer.\n"
      example: []
      syntax:
        content:
          CSharp: public static IPlayerClient CreateClient(string channelAddress = null)
          VB: Public Shared Function CreateClient(channelAddress As String = Nothing) As IPlayerClient
        parameters:
        - id: channelAddress
          type: System.String
          description: The IP address and the port of the SyncServer, following the format &quot;XXX.XXX.XXX.XXX:YYYYY&quot;. If null, the client will try to connect to a local SyncServer.
        return:
          type: Unity.Reflect.IPlayerClient
          description: A player client that is connected to the SyncServer.
      overload: Unity.Reflect.Player.CreateClient*
      exceptions:
      - type: Unity.Reflect.ConnectionException
        commentId: T:Unity.Reflect.ConnectionException
        description: If the connection with the SyncServer fails
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Unity.Reflect.IPlayerClient: 
        Unity.Reflect.ConnectionException: 
    - id: Unity.Reflect.Player.CreateClient(Unity.Reflect.TargetChannel)
      commentId: M:Unity.Reflect.Player.CreateClient(Unity.Reflect.TargetChannel)
      language: CSharp
      name:
        CSharp: CreateClient(TargetChannel)
        VB: CreateClient(TargetChannel)
      nameWithType:
        CSharp: Player.CreateClient(TargetChannel)
        VB: Player.CreateClient(TargetChannel)
      qualifiedName:
        CSharp: Unity.Reflect.Player.CreateClient(Unity.Reflect.TargetChannel)
        VB: Unity.Reflect.Player.CreateClient(Unity.Reflect.TargetChannel)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect
      source:
        id: CreateClient
        path: ''
        startLine: 19127
      summary: "\nCreates and connects an <xref href=\"Unity.Reflect.IPlayerClient\" data-throw-if-not-resolved=\"false\"></xref> to a SyncServer.\n"
      example: []
      syntax:
        content:
          CSharp: public static IPlayerClient CreateClient(TargetChannel channel)
          VB: Public Shared Function CreateClient(channel As TargetChannel) As IPlayerClient
        parameters:
        - id: channel
          type: Unity.Reflect.TargetChannel
          description: The target channel establishing a connection to the SyncServer. Cannot be null.
        return:
          type: Unity.Reflect.IPlayerClient
          description: A player client that is connected to the SyncServer.
      overload: Unity.Reflect.Player.CreateClient*
      exceptions:
      - type: Unity.Reflect.ConnectionException
        commentId: T:Unity.Reflect.ConnectionException
        description: If the connection with the SyncServer fails
      - type: System.ArgumentException
        commentId: T:System.ArgumentException
        description: If the channel is null
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Unity.Reflect.IPlayerClient: 
        Unity.Reflect.ConnectionException: 
        System.ArgumentException: 
    references:
      Unity.Reflect.IPlayerClient: 
  - id: Unity.Reflect.Publisher
    commentId: T:Unity.Reflect.Publisher
    language: CSharp
    name:
      CSharp: Publisher
      VB: Publisher
    nameWithType:
      CSharp: Publisher
      VB: Publisher
    qualifiedName:
      CSharp: Unity.Reflect.Publisher
      VB: Unity.Reflect.Publisher
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect
    source:
      id: Publisher
      path: ''
      startLine: 19141
    summary: "\nAn <xref href=\"Unity.Reflect.IPublisherClient\" data-throw-if-not-resolved=\"false\"></xref> factory.\n"
    example: []
    syntax:
      content:
        CSharp: public static class Publisher
        VB: Public Module Publisher
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: Unity.Reflect.Publisher.OpenClient(System.String,System.String,System.String,System.String,Unity.Reflect.PublisherSettings,System.String)
      commentId: M:Unity.Reflect.Publisher.OpenClient(System.String,System.String,System.String,System.String,Unity.Reflect.PublisherSettings,System.String)
      language: CSharp
      name:
        CSharp: OpenClient(String, String, String, String, PublisherSettings, String)
        VB: OpenClient(String, String, String, String, PublisherSettings, String)
      nameWithType:
        CSharp: Publisher.OpenClient(String, String, String, String, PublisherSettings, String)
        VB: Publisher.OpenClient(String, String, String, String, PublisherSettings, String)
      qualifiedName:
        CSharp: Unity.Reflect.Publisher.OpenClient(System.String, System.String, System.String, System.String, Unity.Reflect.PublisherSettings, System.String)
        VB: Unity.Reflect.Publisher.OpenClient(System.String, System.String, System.String, System.String, Unity.Reflect.PublisherSettings, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect
      source:
        id: OpenClient
        path: ''
        startLine: 19154
      summary: "\nCreates and connects a blocking <xref href=\"Unity.Reflect.IPublisherClient\" data-throw-if-not-resolved=\"false\"></xref> to a SyncServer.\n"
      example: []
      syntax:
        content:
          CSharp: public static IPublisherClient OpenClient(string sourceName, string sourceId, string userId, string destinationProjectId, PublisherSettings settings, string channelAddress = null)
          VB: Public Shared Function OpenClient(sourceName As String, sourceId As String, userId As String, destinationProjectId As String, settings As PublisherSettings, channelAddress As String = Nothing) As IPublisherClient
        parameters:
        - id: sourceName
          type: System.String
        - id: sourceId
          type: System.String
        - id: userId
          type: System.String
          description: The ID of the Unity user publishing their project
        - id: destinationProjectId
          type: System.String
          description: The ID of the target Unity Project that is to host the data
        - id: settings
          type: Unity.Reflect.PublisherSettings
          description: Some custom publishing settings
        - id: channelAddress
          type: System.String
          description: The address of the SyncServer, following the format &quot;XXX.XXX.XXX.XXX:YYYYY&quot;. If null, the client will try to connect to a local SyncServer.
        return:
          type: Unity.Reflect.IPublisherClient
          description: A publisher client that is connected to the SyncServer, whose transaction operations are blocking.
      overload: Unity.Reflect.Publisher.OpenClient*
      exceptions:
      - type: Unity.Reflect.ConnectionException
        commentId: T:Unity.Reflect.ConnectionException
        description: If the connection with the SyncServer fails
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Unity.Reflect.IPublisherClient: 
        Unity.Reflect.ConnectionException: 
    - id: Unity.Reflect.Publisher.OpenClient(Unity.Reflect.TargetChannel,System.String,System.String,System.String,System.String,Unity.Reflect.PublisherSettings)
      commentId: M:Unity.Reflect.Publisher.OpenClient(Unity.Reflect.TargetChannel,System.String,System.String,System.String,System.String,Unity.Reflect.PublisherSettings)
      language: CSharp
      name:
        CSharp: OpenClient(TargetChannel, String, String, String, String, PublisherSettings)
        VB: OpenClient(TargetChannel, String, String, String, String, PublisherSettings)
      nameWithType:
        CSharp: Publisher.OpenClient(TargetChannel, String, String, String, String, PublisherSettings)
        VB: Publisher.OpenClient(TargetChannel, String, String, String, String, PublisherSettings)
      qualifiedName:
        CSharp: Unity.Reflect.Publisher.OpenClient(Unity.Reflect.TargetChannel, System.String, System.String, System.String, System.String, Unity.Reflect.PublisherSettings)
        VB: Unity.Reflect.Publisher.OpenClient(Unity.Reflect.TargetChannel, System.String, System.String, System.String, System.String, Unity.Reflect.PublisherSettings)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect
      source:
        id: OpenClient
        path: ''
        startLine: 19172
      example: []
      syntax:
        content:
          CSharp: public static IPublisherClient OpenClient(TargetChannel channel, string sourceName, string sourceId, string userId, string destinationProjectId, PublisherSettings settings)
          VB: Public Shared Function OpenClient(channel As TargetChannel, sourceName As String, sourceId As String, userId As String, destinationProjectId As String, settings As PublisherSettings) As IPublisherClient
        parameters:
        - id: channel
          type: Unity.Reflect.TargetChannel
        - id: sourceName
          type: System.String
        - id: sourceId
          type: System.String
        - id: userId
          type: System.String
        - id: destinationProjectId
          type: System.String
        - id: settings
          type: Unity.Reflect.PublisherSettings
        return:
          type: Unity.Reflect.IPublisherClient
      overload: Unity.Reflect.Publisher.OpenClient*
      exceptions:
      - type: System.ArgumentException
        commentId: T:System.ArgumentException
        description: If the channel is null
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        System.ArgumentException: 
    - id: Unity.Reflect.Publisher.OpenAsyncClient(System.String,System.String,System.String,System.String,Unity.Reflect.PublisherSettings,System.Int32,System.String)
      commentId: M:Unity.Reflect.Publisher.OpenAsyncClient(System.String,System.String,System.String,System.String,Unity.Reflect.PublisherSettings,System.Int32,System.String)
      language: CSharp
      name:
        CSharp: OpenAsyncClient(String, String, String, String, PublisherSettings, Int32, String)
        VB: OpenAsyncClient(String, String, String, String, PublisherSettings, Int32, String)
      nameWithType:
        CSharp: Publisher.OpenAsyncClient(String, String, String, String, PublisherSettings, Int32, String)
        VB: Publisher.OpenAsyncClient(String, String, String, String, PublisherSettings, Int32, String)
      qualifiedName:
        CSharp: Unity.Reflect.Publisher.OpenAsyncClient(System.String, System.String, System.String, System.String, Unity.Reflect.PublisherSettings, System.Int32, System.String)
        VB: Unity.Reflect.Publisher.OpenAsyncClient(System.String, System.String, System.String, System.String, Unity.Reflect.PublisherSettings, System.Int32, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect
      source:
        id: OpenAsyncClient
        path: ''
        startLine: 19195
      summary: "\nCreates and connects an asynchronous <xref href=\"Unity.Reflect.IPublisherClient\" data-throw-if-not-resolved=\"false\"></xref> to a SyncServer (experimental).\n"
      example: []
      syntax:
        content:
          CSharp: public static IPublisherClient OpenAsyncClient(string sourceName, string sourceId, string userId, string destinationProjectId, PublisherSettings settings, int nbWorkers = 1, string channelAddress = null)
          VB: Public Shared Function OpenAsyncClient(sourceName As String, sourceId As String, userId As String, destinationProjectId As String, settings As PublisherSettings, nbWorkers As Integer = 1, channelAddress As String = Nothing) As IPublisherClient
        parameters:
        - id: sourceName
          type: System.String
        - id: sourceId
          type: System.String
        - id: userId
          type: System.String
          description: The ID of the Unity user publishing their project
        - id: destinationProjectId
          type: System.String
          description: The ID of the target Unity Project that is to host the data
        - id: settings
          type: Unity.Reflect.PublisherSettings
          description: Some custom publishing settings
        - id: nbWorkers
          type: System.Int32
          description: The number of worker threads allowed in the thread pool
        - id: channelAddress
          type: System.String
          description: The address of the SyncServer, following the format &quot;XXX.XXX.XXX.XXX:YYYYY&quot;. If null, the client will try to connect to a local SyncServer.
        return:
          type: Unity.Reflect.IPublisherClient
          description: A publisher client that is connected to the SyncServer, whose transaction operations are asynchronous.
      overload: Unity.Reflect.Publisher.OpenAsyncClient*
      exceptions:
      - type: Unity.Reflect.ConnectionException
        commentId: T:Unity.Reflect.ConnectionException
        description: If the connection with the SyncServer fails
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Unity.Reflect.IPublisherClient: 
        Unity.Reflect.ConnectionException: 
    - id: Unity.Reflect.Publisher.OpenAsyncClient(Unity.Reflect.TargetChannel,System.String,System.String,System.String,System.String,Unity.Reflect.PublisherSettings,System.Int32)
      commentId: M:Unity.Reflect.Publisher.OpenAsyncClient(Unity.Reflect.TargetChannel,System.String,System.String,System.String,System.String,Unity.Reflect.PublisherSettings,System.Int32)
      language: CSharp
      name:
        CSharp: OpenAsyncClient(TargetChannel, String, String, String, String, PublisherSettings, Int32)
        VB: OpenAsyncClient(TargetChannel, String, String, String, String, PublisherSettings, Int32)
      nameWithType:
        CSharp: Publisher.OpenAsyncClient(TargetChannel, String, String, String, String, PublisherSettings, Int32)
        VB: Publisher.OpenAsyncClient(TargetChannel, String, String, String, String, PublisherSettings, Int32)
      qualifiedName:
        CSharp: Unity.Reflect.Publisher.OpenAsyncClient(Unity.Reflect.TargetChannel, System.String, System.String, System.String, System.String, Unity.Reflect.PublisherSettings, System.Int32)
        VB: Unity.Reflect.Publisher.OpenAsyncClient(Unity.Reflect.TargetChannel, System.String, System.String, System.String, System.String, Unity.Reflect.PublisherSettings, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect
      source:
        id: OpenAsyncClient
        path: ''
        startLine: 19213
      summary: "\nCreates and connects an asynchronous <xref href=\"Unity.Reflect.IPublisherClient\" data-throw-if-not-resolved=\"false\"></xref> to a SyncServer (experimental).\n"
      example: []
      syntax:
        content:
          CSharp: public static IPublisherClient OpenAsyncClient(TargetChannel channel, string sourceName, string sourceId, string userId, string destinationProjectId, PublisherSettings settings, int nbWorkers = 1)
          VB: Public Shared Function OpenAsyncClient(channel As TargetChannel, sourceName As String, sourceId As String, userId As String, destinationProjectId As String, settings As PublisherSettings, nbWorkers As Integer = 1) As IPublisherClient
        parameters:
        - id: channel
          type: Unity.Reflect.TargetChannel
          description: The target channel establishing a connection to the SyncServer. Cannot be null.
        - id: sourceName
          type: System.String
        - id: sourceId
          type: System.String
        - id: userId
          type: System.String
          description: The ID of the Unity user publishing their project
        - id: destinationProjectId
          type: System.String
          description: The ID of the target Unity Project that is to host the data
        - id: settings
          type: Unity.Reflect.PublisherSettings
          description: Some custom publishing settings
        - id: nbWorkers
          type: System.Int32
          description: The number of worker threads allowed in the thread pool
        return:
          type: Unity.Reflect.IPublisherClient
          description: A publisher client that is connected to the SyncServer, whose transaction operations are asynchronous.
      overload: Unity.Reflect.Publisher.OpenAsyncClient*
      exceptions:
      - type: Unity.Reflect.ConnectionException
        commentId: T:Unity.Reflect.ConnectionException
        description: If the connection with the SyncServer fails
      - type: System.ArgumentException
        commentId: T:System.ArgumentException
        description: If the channel is null
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Unity.Reflect.IPublisherClient: 
        Unity.Reflect.ConnectionException: 
        System.ArgumentException: 
    references:
      Unity.Reflect.IPublisherClient: 
  - id: Unity.Reflect.BaseClient
    commentId: T:Unity.Reflect.BaseClient
    language: CSharp
    name:
      CSharp: BaseClient
      VB: BaseClient
    nameWithType:
      CSharp: BaseClient
      VB: BaseClient
    qualifiedName:
      CSharp: Unity.Reflect.BaseClient
      VB: Unity.Reflect.BaseClient
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect
    source:
      id: BaseClient
      path: ''
      startLine: 19230
    summary: "\nAn <xref href=\"Unity.Reflect.IClient\" data-throw-if-not-resolved=\"false\"></xref> factory.\n"
    example: []
    syntax:
      content:
        CSharp: public static class BaseClient
        VB: Public Module BaseClient
    seealso:
    - linkId: Unity.Reflect.Publisher
      commentId: T:Unity.Reflect.Publisher
    - linkId: Unity.Reflect.Player
      commentId: T:Unity.Reflect.Player
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: Unity.Reflect.BaseClient.CreateClient(System.Boolean,System.String)
      commentId: M:Unity.Reflect.BaseClient.CreateClient(System.Boolean,System.String)
      language: CSharp
      name:
        CSharp: CreateClient(Boolean, String)
        VB: CreateClient(Boolean, String)
      nameWithType:
        CSharp: BaseClient.CreateClient(Boolean, String)
        VB: BaseClient.CreateClient(Boolean, String)
      qualifiedName:
        CSharp: Unity.Reflect.BaseClient.CreateClient(System.Boolean, System.String)
        VB: Unity.Reflect.BaseClient.CreateClient(System.Boolean, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect
      source:
        id: CreateClient
        path: ''
        startLine: 19239
      summary: "\nCreates and connects an <xref href=\"Unity.Reflect.IClient\" data-throw-if-not-resolved=\"false\"></xref> to a SyncServer.\n"
      example: []
      syntax:
        content:
          CSharp: public static IClient CreateClient(bool autoconnect = true, string channelAddress = null)
          VB: Public Shared Function CreateClient(autoconnect As Boolean = True, channelAddress As String = Nothing) As IClient
        parameters:
        - id: autoconnect
          type: System.Boolean
          description: Whether the client automatically tries to connect. If false, you can connect it yourself, by using its Connect method.
        - id: channelAddress
          type: System.String
          description: The address of the SyncServer, following the format &quot;XXX.XXX.XXX.XXX:YYYYY&quot;. If null, the client will try to connect to a local SyncServer.
        return:
          type: Unity.Reflect.IClient
          description: 'A client that is connected to the SyncServer. '
      overload: Unity.Reflect.BaseClient.CreateClient*
      exceptions:
      - type: Unity.Reflect.ConnectionException
        commentId: T:Unity.Reflect.ConnectionException
        description: If the connection with the SyncServer fails
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Unity.Reflect.IClient: 
        Unity.Reflect.ConnectionException: 
    - id: Unity.Reflect.BaseClient.CreateClient(Unity.Reflect.TargetChannel,System.Boolean)
      commentId: M:Unity.Reflect.BaseClient.CreateClient(Unity.Reflect.TargetChannel,System.Boolean)
      language: CSharp
      name:
        CSharp: CreateClient(TargetChannel, Boolean)
        VB: CreateClient(TargetChannel, Boolean)
      nameWithType:
        CSharp: BaseClient.CreateClient(TargetChannel, Boolean)
        VB: BaseClient.CreateClient(TargetChannel, Boolean)
      qualifiedName:
        CSharp: Unity.Reflect.BaseClient.CreateClient(Unity.Reflect.TargetChannel, System.Boolean)
        VB: Unity.Reflect.BaseClient.CreateClient(Unity.Reflect.TargetChannel, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect
      source:
        id: CreateClient
        path: ''
        startLine: 19252
      summary: "\nCreates and connects an <xref href=\"Unity.Reflect.IClient\" data-throw-if-not-resolved=\"false\"></xref> to a SyncServer.\n"
      example: []
      syntax:
        content:
          CSharp: public static IClient CreateClient(TargetChannel channel, bool autoconnect = true)
          VB: Public Shared Function CreateClient(channel As TargetChannel, autoconnect As Boolean = True) As IClient
        parameters:
        - id: channel
          type: Unity.Reflect.TargetChannel
          description: The target channel establishing a connection to the SyncServer. Cannot be null.
        - id: autoconnect
          type: System.Boolean
          description: Whether the client automatically tries to connect. If false, you can connect it yourself by using its Connect method.
        return:
          type: Unity.Reflect.IClient
          description: 'A client that is connected to the SyncServer. '
      overload: Unity.Reflect.BaseClient.CreateClient*
      exceptions:
      - type: Unity.Reflect.ConnectionException
        commentId: T:Unity.Reflect.ConnectionException
        description: If the connection with the SyncServer fails
      - type: System.ArgumentException
        commentId: T:System.ArgumentException
        description: If the channel is null
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Unity.Reflect.IClient: 
        Unity.Reflect.ConnectionException: 
        System.ArgumentException: 
    references:
      Unity.Reflect.IClient: 
      Unity.Reflect.Publisher: 
      Unity.Reflect.Player: 
  - id: Unity.Reflect.TargetChannel
    commentId: T:Unity.Reflect.TargetChannel
    language: CSharp
    name:
      CSharp: TargetChannel
      VB: TargetChannel
    nameWithType:
      CSharp: TargetChannel
      VB: TargetChannel
    qualifiedName:
      CSharp: Unity.Reflect.TargetChannel
      VB: Unity.Reflect.TargetChannel
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect
    source:
      id: TargetChannel
      path: ''
      startLine: 19269
    summary: "\nStores information about an established connection with a SyncServer.\n"
    example: []
    syntax:
      content:
        CSharp: public class TargetChannel
        VB: Public Class TargetChannel
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Unity.Reflect.TargetChannel.Target
      commentId: P:Unity.Reflect.TargetChannel.Target
      language: CSharp
      name:
        CSharp: Target
        VB: Target
      nameWithType:
        CSharp: TargetChannel.Target
        VB: TargetChannel.Target
      qualifiedName:
        CSharp: Unity.Reflect.TargetChannel.Target
        VB: Unity.Reflect.TargetChannel.Target
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect
      source:
        id: Target
        path: ''
        startLine: 19276
      summary: "\nShows the address and the port of the designed SyncServer, in the format &quot;XXX.XXX.XXX.XXX:YYYYY&quot;.\n"
      example: []
      syntax:
        content:
          CSharp: public string Target { get; }
          VB: Public ReadOnly Property Target As String
        parameters: []
        return:
          type: System.String
      overload: Unity.Reflect.TargetChannel.Target*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
  - id: Unity.Reflect.IClient
    commentId: T:Unity.Reflect.IClient
    language: CSharp
    name:
      CSharp: IClient
      VB: IClient
    nameWithType:
      CSharp: IClient
      VB: IClient
    qualifiedName:
      CSharp: Unity.Reflect.IClient
      VB: Unity.Reflect.IClient
    type: Interface
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect
    source:
      id: IClient
      path: ''
      startLine: 19298
    summary: "\nThis interface provides some basic client features to communicate with a SyncServer.\n"
    example: []
    syntax:
      content:
        CSharp: public interface IClient
        VB: Public Interface IClient
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: Unity.Reflect.IClient.OnConnectionStatusChanged
      commentId: E:Unity.Reflect.IClient.OnConnectionStatusChanged
      language: CSharp
      name:
        CSharp: OnConnectionStatusChanged
        VB: OnConnectionStatusChanged
      nameWithType:
        CSharp: IClient.OnConnectionStatusChanged
        VB: IClient.OnConnectionStatusChanged
      qualifiedName:
        CSharp: Unity.Reflect.IClient.OnConnectionStatusChanged
        VB: Unity.Reflect.IClient.OnConnectionStatusChanged
      type: Event
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect
      source:
        id: OnConnectionStatusChanged
        path: ''
        startLine: 19303
      summary: "\nThis event is triggered whenever the connection status changes.\n"
      example: []
      syntax:
        content:
          CSharp: event Action<ConnectionStatus, string> OnConnectionStatusChanged
          VB: Event OnConnectionStatusChanged As Action(Of ConnectionStatus, String)
        return:
          type: System.Action{Unity.Reflect.ConnectionStatus,System.String}
      modifiers:
        CSharp: []
        VB: []
    - id: Unity.Reflect.IClient.OnUnityProjectListUpdate
      commentId: E:Unity.Reflect.IClient.OnUnityProjectListUpdate
      language: CSharp
      name:
        CSharp: OnUnityProjectListUpdate
        VB: OnUnityProjectListUpdate
      nameWithType:
        CSharp: IClient.OnUnityProjectListUpdate
        VB: IClient.OnUnityProjectListUpdate
      qualifiedName:
        CSharp: Unity.Reflect.IClient.OnUnityProjectListUpdate
        VB: Unity.Reflect.IClient.OnUnityProjectListUpdate
      type: Event
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect
      source:
        id: OnUnityProjectListUpdate
        path: ''
        startLine: 19310
      summary: "\nThis event is triggered whenever the client receives an UnityProjectListUpdate notification from the SyncServer.\nAdding a callback to this event does not start the observation process. You need to use <xref href=\"Unity.Reflect.IClient.ObserveUnityProjectListUpdate\" data-throw-if-not-resolved=\"false\"></xref> for this.\n"
      example: []
      syntax:
        content:
          CSharp: event Action OnUnityProjectListUpdate
          VB: Event OnUnityProjectListUpdate As Action
        return:
          type: System.Action
      modifiers:
        CSharp: []
        VB: []
      references:
        Unity.Reflect.IClient.ObserveUnityProjectListUpdate: 
    - id: Unity.Reflect.IClient.OnUserUpdate
      commentId: E:Unity.Reflect.IClient.OnUserUpdate
      language: CSharp
      name:
        CSharp: OnUserUpdate
        VB: OnUserUpdate
      nameWithType:
        CSharp: IClient.OnUserUpdate
        VB: IClient.OnUserUpdate
      qualifiedName:
        CSharp: Unity.Reflect.IClient.OnUserUpdate
        VB: Unity.Reflect.IClient.OnUserUpdate
      type: Event
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect
      source:
        id: OnUserUpdate
        path: ''
        startLine: 19316
      summary: "\nThis event is triggered whenever the client receives an UserUpdate notification from the SyncServer.\nAdding a callback to this event does not start the observation process. You need to use <xref href=\"Unity.Reflect.IClient.ObserveUserUpdate\" data-throw-if-not-resolved=\"false\"></xref> for this.\n"
      example: []
      syntax:
        content:
          CSharp: event Action OnUserUpdate
          VB: Event OnUserUpdate As Action
        return:
          type: System.Action
      modifiers:
        CSharp: []
        VB: []
      references:
        Unity.Reflect.IClient.ObserveUserUpdate: 
    - id: Unity.Reflect.IClient.OnSessionBegin
      commentId: E:Unity.Reflect.IClient.OnSessionBegin
      language: CSharp
      name:
        CSharp: OnSessionBegin
        VB: OnSessionBegin
      nameWithType:
        CSharp: IClient.OnSessionBegin
        VB: IClient.OnSessionBegin
      qualifiedName:
        CSharp: Unity.Reflect.IClient.OnSessionBegin
        VB: Unity.Reflect.IClient.OnSessionBegin
      type: Event
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect
      source:
        id: OnSessionBegin
        path: ''
        startLine: 19322
      summary: "\nThis event is triggered whenever the client receives a SessionBegin notification from the SyncServer. The string parameter is the source ID of the concerned project.\n"
      remarks: Adding a callback to this event does not start the observation process. You need to use <xref href="Unity.Reflect.IClient.ObserveSessionBegin(System.String%5b%5d)" data-throw-if-not-resolved="false"></xref> for this.
      example: []
      syntax:
        content:
          CSharp: event Action<string> OnSessionBegin
          VB: Event OnSessionBegin As Action(Of String)
        return:
          type: System.Action{System.String}
      modifiers:
        CSharp: []
        VB: []
      references:
        Unity.Reflect.IClient.ObserveSessionBegin(System.String[]): 
    - id: Unity.Reflect.IClient.OnSessionEnd
      commentId: E:Unity.Reflect.IClient.OnSessionEnd
      language: CSharp
      name:
        CSharp: OnSessionEnd
        VB: OnSessionEnd
      nameWithType:
        CSharp: IClient.OnSessionEnd
        VB: IClient.OnSessionEnd
      qualifiedName:
        CSharp: Unity.Reflect.IClient.OnSessionEnd
        VB: Unity.Reflect.IClient.OnSessionEnd
      type: Event
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect
      source:
        id: OnSessionEnd
        path: ''
        startLine: 19328
      summary: "\nThis event is triggered whenever the client receives a SessionEnd notification from the SyncServer. The string parameter is the source ID of the concerned project.\n"
      remarks: Adding a callback to this event does not start the observation process. You need to use <xref href="Unity.Reflect.IClient.ObserveSessionEnd(System.String%5b%5d)" data-throw-if-not-resolved="false"></xref> for this.
      example: []
      syntax:
        content:
          CSharp: event Action<string> OnSessionEnd
          VB: Event OnSessionEnd As Action(Of String)
        return:
          type: System.Action{System.String}
      modifiers:
        CSharp: []
        VB: []
      references:
        Unity.Reflect.IClient.ObserveSessionEnd(System.String[]): 
    - id: Unity.Reflect.IClient.OnManifestUpdate
      commentId: E:Unity.Reflect.IClient.OnManifestUpdate
      language: CSharp
      name:
        CSharp: OnManifestUpdate
        VB: OnManifestUpdate
      nameWithType:
        CSharp: IClient.OnManifestUpdate
        VB: IClient.OnManifestUpdate
      qualifiedName:
        CSharp: Unity.Reflect.IClient.OnManifestUpdate
        VB: Unity.Reflect.IClient.OnManifestUpdate
      type: Event
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect
      source:
        id: OnManifestUpdate
        path: ''
        startLine: 19334
      summary: "\nThis event is triggered whenever the client receives a ManifestUpdate notification from the SyncServer. The string parameter is the source ID of the concerned project.\n"
      remarks: Adding a callback to this event does not start the observation process. You need to use <xref href="Unity.Reflect.IClient.ObserveManifestUpdate(System.String%5b%5d)" data-throw-if-not-resolved="false"></xref> for this.
      example: []
      syntax:
        content:
          CSharp: event Action<string> OnManifestUpdate
          VB: Event OnManifestUpdate As Action(Of String)
        return:
          type: System.Action{System.String}
      modifiers:
        CSharp: []
        VB: []
      references:
        Unity.Reflect.IClient.ObserveManifestUpdate(System.String[]): 
    - id: Unity.Reflect.IClient.ObserveUnityProjectListUpdate
      commentId: M:Unity.Reflect.IClient.ObserveUnityProjectListUpdate
      language: CSharp
      name:
        CSharp: ObserveUnityProjectListUpdate()
        VB: ObserveUnityProjectListUpdate()
      nameWithType:
        CSharp: IClient.ObserveUnityProjectListUpdate()
        VB: IClient.ObserveUnityProjectListUpdate()
      qualifiedName:
        CSharp: Unity.Reflect.IClient.ObserveUnityProjectListUpdate()
        VB: Unity.Reflect.IClient.ObserveUnityProjectListUpdate()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect
      source:
        id: ObserveUnityProjectListUpdate
        path: ''
        startLine: 19341
      summary: "\nStart observing the UnityProjectListUpdate notification.\n"
      example: []
      syntax:
        content:
          CSharp: void ObserveUnityProjectListUpdate()
          VB: Sub ObserveUnityProjectListUpdate
      overload: Unity.Reflect.IClient.ObserveUnityProjectListUpdate*
      seealso:
      - linkId: Unity.Reflect.IClient.OnUnityProjectListUpdate
        commentId: E:Unity.Reflect.IClient.OnUnityProjectListUpdate
      modifiers:
        CSharp: []
        VB: []
      references:
        Unity.Reflect.IClient.OnUnityProjectListUpdate: 
    - id: Unity.Reflect.IClient.ObserveUserUpdate
      commentId: M:Unity.Reflect.IClient.ObserveUserUpdate
      language: CSharp
      name:
        CSharp: ObserveUserUpdate()
        VB: ObserveUserUpdate()
      nameWithType:
        CSharp: IClient.ObserveUserUpdate()
        VB: IClient.ObserveUserUpdate()
      qualifiedName:
        CSharp: Unity.Reflect.IClient.ObserveUserUpdate()
        VB: Unity.Reflect.IClient.ObserveUserUpdate()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect
      source:
        id: ObserveUserUpdate
        path: ''
        startLine: 19347
      summary: "\nStart observing the UserUpdate notification.\n"
      example: []
      syntax:
        content:
          CSharp: void ObserveUserUpdate()
          VB: Sub ObserveUserUpdate
      overload: Unity.Reflect.IClient.ObserveUserUpdate*
      seealso:
      - linkId: Unity.Reflect.IClient.OnUserUpdate
        commentId: E:Unity.Reflect.IClient.OnUserUpdate
      modifiers:
        CSharp: []
        VB: []
      references:
        Unity.Reflect.IClient.OnUserUpdate: 
    - id: Unity.Reflect.IClient.ObserveSessionBegin(System.String[])
      commentId: M:Unity.Reflect.IClient.ObserveSessionBegin(System.String[])
      language: CSharp
      name:
        CSharp: ObserveSessionBegin(String[])
        VB: ObserveSessionBegin(String())
      nameWithType:
        CSharp: IClient.ObserveSessionBegin(String[])
        VB: IClient.ObserveSessionBegin(String())
      qualifiedName:
        CSharp: Unity.Reflect.IClient.ObserveSessionBegin(System.String[])
        VB: Unity.Reflect.IClient.ObserveSessionBegin(System.String())
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect
      source:
        id: ObserveSessionBegin
        path: ''
        startLine: 19354
      summary: "\nStart observing the SessionBegin notification.\n"
      example: []
      syntax:
        content:
          CSharp: void ObserveSessionBegin(params string[] sourceIds)
          VB: Sub ObserveSessionBegin(ParamArray sourceIds As String())
        parameters:
        - id: sourceIds
          type: System.String[]
          description: The source project IDs to observe. If no ID is provided, all source projects will be observed.
      overload: Unity.Reflect.IClient.ObserveSessionBegin*
      seealso:
      - linkId: Unity.Reflect.IClient.OnSessionBegin
        commentId: E:Unity.Reflect.IClient.OnSessionBegin
      modifiers:
        CSharp: []
        VB: []
      references:
        Unity.Reflect.IClient.OnSessionBegin: 
    - id: Unity.Reflect.IClient.ObserveSessionEnd(System.String[])
      commentId: M:Unity.Reflect.IClient.ObserveSessionEnd(System.String[])
      language: CSharp
      name:
        CSharp: ObserveSessionEnd(String[])
        VB: ObserveSessionEnd(String())
      nameWithType:
        CSharp: IClient.ObserveSessionEnd(String[])
        VB: IClient.ObserveSessionEnd(String())
      qualifiedName:
        CSharp: Unity.Reflect.IClient.ObserveSessionEnd(System.String[])
        VB: Unity.Reflect.IClient.ObserveSessionEnd(System.String())
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect
      source:
        id: ObserveSessionEnd
        path: ''
        startLine: 19361
      summary: "\nStart observing the SessionEnd notification.\n"
      example: []
      syntax:
        content:
          CSharp: void ObserveSessionEnd(params string[] sourceIds)
          VB: Sub ObserveSessionEnd(ParamArray sourceIds As String())
        parameters:
        - id: sourceIds
          type: System.String[]
          description: The source project IDs to observe. If no ID is provided, all source projects will be observed.
      overload: Unity.Reflect.IClient.ObserveSessionEnd*
      seealso:
      - linkId: Unity.Reflect.IClient.OnSessionEnd
        commentId: E:Unity.Reflect.IClient.OnSessionEnd
      modifiers:
        CSharp: []
        VB: []
      references:
        Unity.Reflect.IClient.OnSessionEnd: 
    - id: Unity.Reflect.IClient.ObserveManifestUpdate(System.String[])
      commentId: M:Unity.Reflect.IClient.ObserveManifestUpdate(System.String[])
      language: CSharp
      name:
        CSharp: ObserveManifestUpdate(String[])
        VB: ObserveManifestUpdate(String())
      nameWithType:
        CSharp: IClient.ObserveManifestUpdate(String[])
        VB: IClient.ObserveManifestUpdate(String())
      qualifiedName:
        CSharp: Unity.Reflect.IClient.ObserveManifestUpdate(System.String[])
        VB: Unity.Reflect.IClient.ObserveManifestUpdate(System.String())
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect
      source:
        id: ObserveManifestUpdate
        path: ''
        startLine: 19368
      summary: "\nStart observing the ManifestUpdate notification.\n"
      example: []
      syntax:
        content:
          CSharp: void ObserveManifestUpdate(params string[] sourceIds)
          VB: Sub ObserveManifestUpdate(ParamArray sourceIds As String())
        parameters:
        - id: sourceIds
          type: System.String[]
          description: The source project IDs to observe. If no ID is provided, all source projects will be observed.
      overload: Unity.Reflect.IClient.ObserveManifestUpdate*
      seealso:
      - linkId: Unity.Reflect.IClient.OnManifestUpdate
        commentId: E:Unity.Reflect.IClient.OnManifestUpdate
      modifiers:
        CSharp: []
        VB: []
      references:
        Unity.Reflect.IClient.OnManifestUpdate: 
    - id: Unity.Reflect.IClient.ReleaseUnityProjectListUpdate
      commentId: M:Unity.Reflect.IClient.ReleaseUnityProjectListUpdate
      language: CSharp
      name:
        CSharp: ReleaseUnityProjectListUpdate()
        VB: ReleaseUnityProjectListUpdate()
      nameWithType:
        CSharp: IClient.ReleaseUnityProjectListUpdate()
        VB: IClient.ReleaseUnityProjectListUpdate()
      qualifiedName:
        CSharp: Unity.Reflect.IClient.ReleaseUnityProjectListUpdate()
        VB: Unity.Reflect.IClient.ReleaseUnityProjectListUpdate()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect
      source:
        id: ReleaseUnityProjectListUpdate
        path: ''
        startLine: 19375
      summary: "\nStop observing the UnityProjectListUpdate notification.\n"
      example: []
      syntax:
        content:
          CSharp: void ReleaseUnityProjectListUpdate()
          VB: Sub ReleaseUnityProjectListUpdate
      overload: Unity.Reflect.IClient.ReleaseUnityProjectListUpdate*
      seealso:
      - linkId: Unity.Reflect.IClient.OnUnityProjectListUpdate
        commentId: E:Unity.Reflect.IClient.OnUnityProjectListUpdate
      modifiers:
        CSharp: []
        VB: []
      references:
        Unity.Reflect.IClient.OnUnityProjectListUpdate: 
    - id: Unity.Reflect.IClient.ReleaseUserUpdate
      commentId: M:Unity.Reflect.IClient.ReleaseUserUpdate
      language: CSharp
      name:
        CSharp: ReleaseUserUpdate()
        VB: ReleaseUserUpdate()
      nameWithType:
        CSharp: IClient.ReleaseUserUpdate()
        VB: IClient.ReleaseUserUpdate()
      qualifiedName:
        CSharp: Unity.Reflect.IClient.ReleaseUserUpdate()
        VB: Unity.Reflect.IClient.ReleaseUserUpdate()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect
      source:
        id: ReleaseUserUpdate
        path: ''
        startLine: 19381
      summary: "\nStop observing the UserUpdate notification.\n"
      example: []
      syntax:
        content:
          CSharp: void ReleaseUserUpdate()
          VB: Sub ReleaseUserUpdate
      overload: Unity.Reflect.IClient.ReleaseUserUpdate*
      seealso:
      - linkId: Unity.Reflect.IClient.OnUserUpdate
        commentId: E:Unity.Reflect.IClient.OnUserUpdate
      modifiers:
        CSharp: []
        VB: []
      references:
        Unity.Reflect.IClient.OnUserUpdate: 
    - id: Unity.Reflect.IClient.ReleaseSessionBegin(System.String[])
      commentId: M:Unity.Reflect.IClient.ReleaseSessionBegin(System.String[])
      language: CSharp
      name:
        CSharp: ReleaseSessionBegin(String[])
        VB: ReleaseSessionBegin(String())
      nameWithType:
        CSharp: IClient.ReleaseSessionBegin(String[])
        VB: IClient.ReleaseSessionBegin(String())
      qualifiedName:
        CSharp: Unity.Reflect.IClient.ReleaseSessionBegin(System.String[])
        VB: Unity.Reflect.IClient.ReleaseSessionBegin(System.String())
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect
      source:
        id: ReleaseSessionBegin
        path: ''
        startLine: 19388
      summary: "\nStop observing the SessionBegin notification.\n"
      example: []
      syntax:
        content:
          CSharp: void ReleaseSessionBegin(params string[] sourceIds)
          VB: Sub ReleaseSessionBegin(ParamArray sourceIds As String())
        parameters:
        - id: sourceIds
          type: System.String[]
          description: The source project IDs to release from this notification. Use the same parameters as in <xref href="Unity.Reflect.IClient.ObserveSessionBegin(System.String%5b%5d)" data-throw-if-not-resolved="false"></xref>
      overload: Unity.Reflect.IClient.ReleaseSessionBegin*
      seealso:
      - linkId: Unity.Reflect.IClient.OnSessionBegin
        commentId: E:Unity.Reflect.IClient.OnSessionBegin
      modifiers:
        CSharp: []
        VB: []
      references:
        Unity.Reflect.IClient.ObserveSessionBegin(System.String[]): 
        Unity.Reflect.IClient.OnSessionBegin: 
    - id: Unity.Reflect.IClient.ReleaseSessionEnd(System.String[])
      commentId: M:Unity.Reflect.IClient.ReleaseSessionEnd(System.String[])
      language: CSharp
      name:
        CSharp: ReleaseSessionEnd(String[])
        VB: ReleaseSessionEnd(String())
      nameWithType:
        CSharp: IClient.ReleaseSessionEnd(String[])
        VB: IClient.ReleaseSessionEnd(String())
      qualifiedName:
        CSharp: Unity.Reflect.IClient.ReleaseSessionEnd(System.String[])
        VB: Unity.Reflect.IClient.ReleaseSessionEnd(System.String())
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect
      source:
        id: ReleaseSessionEnd
        path: ''
        startLine: 19395
      summary: "\nStop observing the SessionEnd notification.\n"
      example: []
      syntax:
        content:
          CSharp: void ReleaseSessionEnd(params string[] sourceIds)
          VB: Sub ReleaseSessionEnd(ParamArray sourceIds As String())
        parameters:
        - id: sourceIds
          type: System.String[]
          description: The source project IDs to release from this notification. Use the same parameters as in <xref href="Unity.Reflect.IClient.ObserveSessionEnd(System.String%5b%5d)" data-throw-if-not-resolved="false"></xref>
      overload: Unity.Reflect.IClient.ReleaseSessionEnd*
      seealso:
      - linkId: Unity.Reflect.IClient.OnSessionEnd
        commentId: E:Unity.Reflect.IClient.OnSessionEnd
      modifiers:
        CSharp: []
        VB: []
      references:
        Unity.Reflect.IClient.ObserveSessionEnd(System.String[]): 
        Unity.Reflect.IClient.OnSessionEnd: 
    - id: Unity.Reflect.IClient.ReleaseManifestUpdate(System.String[])
      commentId: M:Unity.Reflect.IClient.ReleaseManifestUpdate(System.String[])
      language: CSharp
      name:
        CSharp: ReleaseManifestUpdate(String[])
        VB: ReleaseManifestUpdate(String())
      nameWithType:
        CSharp: IClient.ReleaseManifestUpdate(String[])
        VB: IClient.ReleaseManifestUpdate(String())
      qualifiedName:
        CSharp: Unity.Reflect.IClient.ReleaseManifestUpdate(System.String[])
        VB: Unity.Reflect.IClient.ReleaseManifestUpdate(System.String())
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect
      source:
        id: ReleaseManifestUpdate
        path: ''
        startLine: 19402
      summary: "\nStop observing the ManifestUpdate notification.\n"
      example: []
      syntax:
        content:
          CSharp: void ReleaseManifestUpdate(params string[] sourceIds)
          VB: Sub ReleaseManifestUpdate(ParamArray sourceIds As String())
        parameters:
        - id: sourceIds
          type: System.String[]
          description: The source project IDs to release from this notification. Use the same parameters as in <xref href="Unity.Reflect.IClient.ObserveManifestUpdate(System.String%5b%5d)" data-throw-if-not-resolved="false"></xref>
      overload: Unity.Reflect.IClient.ReleaseManifestUpdate*
      seealso:
      - linkId: Unity.Reflect.IClient.OnManifestUpdate
        commentId: E:Unity.Reflect.IClient.OnManifestUpdate
      modifiers:
        CSharp: []
        VB: []
      references:
        Unity.Reflect.IClient.ObserveManifestUpdate(System.String[]): 
        Unity.Reflect.IClient.OnManifestUpdate: 
    - id: Unity.Reflect.IClient.Connected
      commentId: P:Unity.Reflect.IClient.Connected
      language: CSharp
      name:
        CSharp: Connected
        VB: Connected
      nameWithType:
        CSharp: IClient.Connected
        VB: IClient.Connected
      qualifiedName:
        CSharp: Unity.Reflect.IClient.Connected
        VB: Unity.Reflect.IClient.Connected
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect
      source:
        id: Connected
        path: ''
        startLine: 19408
      summary: "\nIndicates whether the client is connected to a SyncServer.\n"
      example: []
      syntax:
        content:
          CSharp: bool Connected { get; }
          VB: ReadOnly Property Connected As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: Unity.Reflect.IClient.Connected*
      modifiers:
        CSharp:
        - get
        VB:
        - ReadOnly
    - id: Unity.Reflect.IClient.Connect
      commentId: M:Unity.Reflect.IClient.Connect
      language: CSharp
      name:
        CSharp: Connect()
        VB: Connect()
      nameWithType:
        CSharp: IClient.Connect()
        VB: IClient.Connect()
      qualifiedName:
        CSharp: Unity.Reflect.IClient.Connect()
        VB: Unity.Reflect.IClient.Connect()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect
      source:
        id: Connect
        path: ''
        startLine: 19414
      summary: "\nTries to connect to the SyncServer.\n"
      example: []
      syntax:
        content:
          CSharp: void Connect()
          VB: Sub Connect
      overload: Unity.Reflect.IClient.Connect*
      exceptions:
      - type: Unity.Reflect.ConnectionException
        commentId: T:Unity.Reflect.ConnectionException
        description: If the connection with the SyncServer fails
      modifiers:
        CSharp: []
        VB: []
      references:
        Unity.Reflect.ConnectionException: 
    - id: Unity.Reflect.IClient.Disconnect(System.Boolean)
      commentId: M:Unity.Reflect.IClient.Disconnect(System.Boolean)
      language: CSharp
      name:
        CSharp: Disconnect(Boolean)
        VB: Disconnect(Boolean)
      nameWithType:
        CSharp: IClient.Disconnect(Boolean)
        VB: IClient.Disconnect(Boolean)
      qualifiedName:
        CSharp: Unity.Reflect.IClient.Disconnect(System.Boolean)
        VB: Unity.Reflect.IClient.Disconnect(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect
      source:
        id: Disconnect
        path: ''
        startLine: 19420
      summary: "\nDisconnects from the SyncServer.\n"
      example: []
      syntax:
        content:
          CSharp: void Disconnect(bool shutdownChannel = true)
          VB: Sub Disconnect(shutdownChannel As Boolean = True)
        parameters:
        - id: shutdownChannel
          type: System.Boolean
          description: ''
      overload: Unity.Reflect.IClient.Disconnect*
      modifiers:
        CSharp: []
        VB: []
  - id: Unity.Reflect.ConnectionStatus
    commentId: T:Unity.Reflect.ConnectionStatus
    language: CSharp
    name:
      CSharp: ConnectionStatus
      VB: ConnectionStatus
    nameWithType:
      CSharp: ConnectionStatus
      VB: ConnectionStatus
    qualifiedName:
      CSharp: Unity.Reflect.ConnectionStatus
      VB: Unity.Reflect.ConnectionStatus
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect
    source:
      id: ConnectionStatus
      path: ''
      startLine: 19427
    summary: "\nOptions for the current connection status of the client.\n"
    example: []
    syntax:
      content:
        CSharp: public enum ConnectionStatus
        VB: Public Enum ConnectionStatus
    seealso:
    - linkId: Unity.Reflect.IClient.OnConnectionStatusChanged
      commentId: E:Unity.Reflect.IClient.OnConnectionStatusChanged
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Unity.Reflect.ConnectionStatus.Connected
      commentId: F:Unity.Reflect.ConnectionStatus.Connected
      language: CSharp
      name:
        CSharp: Connected
        VB: Connected
      nameWithType:
        CSharp: ConnectionStatus.Connected
        VB: ConnectionStatus.Connected
      qualifiedName:
        CSharp: Unity.Reflect.ConnectionStatus.Connected
        VB: Unity.Reflect.ConnectionStatus.Connected
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect
      source:
        id: Connected
        path: ''
        startLine: 19432
      summary: "\nThe client is connected to the SyncServer.\n"
      example: []
      syntax:
        content:
          CSharp: Connected = 0
          VB: Connected = 0
        return:
          type: Unity.Reflect.ConnectionStatus
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.ConnectionStatus.Disconnected
      commentId: F:Unity.Reflect.ConnectionStatus.Disconnected
      language: CSharp
      name:
        CSharp: Disconnected
        VB: Disconnected
      nameWithType:
        CSharp: ConnectionStatus.Disconnected
        VB: ConnectionStatus.Disconnected
      qualifiedName:
        CSharp: Unity.Reflect.ConnectionStatus.Disconnected
        VB: Unity.Reflect.ConnectionStatus.Disconnected
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect
      source:
        id: Disconnected
        path: ''
        startLine: 19437
      summary: "\nThe client is disconnected from the SyncServer.\n"
      example: []
      syntax:
        content:
          CSharp: Disconnected = 1
          VB: Disconnected = 1
        return:
          type: Unity.Reflect.ConnectionStatus
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    references:
      Unity.Reflect.IClient.OnConnectionStatusChanged: 
  - id: Unity.Reflect.UnityProject
    commentId: T:Unity.Reflect.UnityProject
    language: CSharp
    name:
      CSharp: UnityProject
      VB: UnityProject
    nameWithType:
      CSharp: UnityProject
      VB: UnityProject
    qualifiedName:
      CSharp: Unity.Reflect.UnityProject
      VB: Unity.Reflect.UnityProject
    type: Struct
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect
    source:
      id: UnityProject
      path: ''
      startLine: 19443
    summary: "\nThis struct specifies some information about an Unity project.\n"
    example: []
    syntax:
      content:
        CSharp: public struct UnityProject
        VB: Public Structure UnityProject
    inheritedMembers:
    - System.ValueType.Equals(System.Object)
    - System.ValueType.GetHashCode
    - System.ValueType.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetType
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: Unity.Reflect.UnityProject.Id
      commentId: F:Unity.Reflect.UnityProject.Id
      language: CSharp
      name:
        CSharp: Id
        VB: Id
      nameWithType:
        CSharp: UnityProject.Id
        VB: UnityProject.Id
      qualifiedName:
        CSharp: Unity.Reflect.UnityProject.Id
        VB: Unity.Reflect.UnityProject.Id
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect
      source:
        id: Id
        path: ''
        startLine: 19448
      summary: "\nThe Reflect ID of the project.\n"
      example: []
      syntax:
        content:
          CSharp: public readonly string Id
          VB: Public ReadOnly Id As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - readonly
        VB:
        - Public
        - ReadOnly
    - id: Unity.Reflect.UnityProject.ProjectId
      commentId: F:Unity.Reflect.UnityProject.ProjectId
      language: CSharp
      name:
        CSharp: ProjectId
        VB: ProjectId
      nameWithType:
        CSharp: UnityProject.ProjectId
        VB: UnityProject.ProjectId
      qualifiedName:
        CSharp: Unity.Reflect.UnityProject.ProjectId
        VB: Unity.Reflect.UnityProject.ProjectId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect
      source:
        id: ProjectId
        path: ''
        startLine: 19453
      summary: "\nThe Unity ID of the project.\n"
      example: []
      syntax:
        content:
          CSharp: public readonly string ProjectId
          VB: Public ReadOnly ProjectId As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - readonly
        VB:
        - Public
        - ReadOnly
    - id: Unity.Reflect.UnityProject.Name
      commentId: F:Unity.Reflect.UnityProject.Name
      language: CSharp
      name:
        CSharp: Name
        VB: Name
      nameWithType:
        CSharp: UnityProject.Name
        VB: UnityProject.Name
      qualifiedName:
        CSharp: Unity.Reflect.UnityProject.Name
        VB: Unity.Reflect.UnityProject.Name
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect
      source:
        id: Name
        path: ''
        startLine: 19458
      summary: "\nThe project name.\n"
      example: []
      syntax:
        content:
          CSharp: public readonly string Name
          VB: Public ReadOnly Name As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - readonly
        VB:
        - Public
        - ReadOnly
    - id: Unity.Reflect.UnityProject.ServerName
      commentId: F:Unity.Reflect.UnityProject.ServerName
      language: CSharp
      name:
        CSharp: ServerName
        VB: ServerName
      nameWithType:
        CSharp: UnityProject.ServerName
        VB: UnityProject.ServerName
      qualifiedName:
        CSharp: Unity.Reflect.UnityProject.ServerName
        VB: Unity.Reflect.UnityProject.ServerName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect
      source:
        id: ServerName
        path: ''
        startLine: 19463
      summary: "\nThe name of the host SyncServer.\n"
      example: []
      syntax:
        content:
          CSharp: public readonly string ServerName
          VB: Public ReadOnly ServerName As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - readonly
        VB:
        - Public
        - ReadOnly
    - id: Unity.Reflect.UnityProject.ServerAddress
      commentId: F:Unity.Reflect.UnityProject.ServerAddress
      language: CSharp
      name:
        CSharp: ServerAddress
        VB: ServerAddress
      nameWithType:
        CSharp: UnityProject.ServerAddress
        VB: UnityProject.ServerAddress
      qualifiedName:
        CSharp: Unity.Reflect.UnityProject.ServerAddress
        VB: Unity.Reflect.UnityProject.ServerAddress
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect
      source:
        id: ServerAddress
        path: ''
        startLine: 19468
      summary: "\nThe address of the host SyncServer.\n"
      example: []
      syntax:
        content:
          CSharp: public readonly string ServerAddress
          VB: Public ReadOnly ServerAddress As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - readonly
        VB:
        - Public
        - ReadOnly
    - id: Unity.Reflect.UnityProject.CloudOnly
      commentId: F:Unity.Reflect.UnityProject.CloudOnly
      language: CSharp
      name:
        CSharp: CloudOnly
        VB: CloudOnly
      nameWithType:
        CSharp: UnityProject.CloudOnly
        VB: UnityProject.CloudOnly
      qualifiedName:
        CSharp: Unity.Reflect.UnityProject.CloudOnly
        VB: Unity.Reflect.UnityProject.CloudOnly
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect
      source:
        id: CloudOnly
        path: ''
        startLine: 19473
      summary: "\nWhether the Unity Project has a local version registered on the Hub.\n"
      example: []
      syntax:
        content:
          CSharp: public readonly bool CloudOnly
          VB: Public ReadOnly CloudOnly As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        - readonly
        VB:
        - Public
        - ReadOnly
    - id: Unity.Reflect.UnityProject.#ctor(System.String,System.String,System.String,System.String,System.String,System.Boolean)
      commentId: M:Unity.Reflect.UnityProject.#ctor(System.String,System.String,System.String,System.String,System.String,System.Boolean)
      language: CSharp
      name:
        CSharp: UnityProject(String, String, String, String, String, Boolean)
        VB: UnityProject(String, String, String, String, String, Boolean)
      nameWithType:
        CSharp: UnityProject.UnityProject(String, String, String, String, String, Boolean)
        VB: UnityProject.UnityProject(String, String, String, String, String, Boolean)
      qualifiedName:
        CSharp: Unity.Reflect.UnityProject.UnityProject(System.String, System.String, System.String, System.String, System.String, System.Boolean)
        VB: Unity.Reflect.UnityProject.UnityProject(System.String, System.String, System.String, System.String, System.String, System.Boolean)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect
      source:
        id: .ctor
        path: ''
        startLine: 19475
      syntax:
        content:
          CSharp: public UnityProject(string projectId, string id = "", string name = "", string serverName = "", string serverAddress = "", bool cloudOnly = false)
          VB: Public Sub New(projectId As String, id As String = "", name As String = "", serverName As String = "", serverAddress As String = "", cloudOnly As Boolean = False)
        parameters:
        - id: projectId
          type: System.String
        - id: id
          type: System.String
        - id: name
          type: System.String
        - id: serverName
          type: System.String
        - id: serverAddress
          type: System.String
        - id: cloudOnly
          type: System.Boolean
      overload: Unity.Reflect.UnityProject.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Unity.Reflect.UnityUser
    commentId: T:Unity.Reflect.UnityUser
    language: CSharp
    name:
      CSharp: UnityUser
      VB: UnityUser
    nameWithType:
      CSharp: UnityUser
      VB: UnityUser
    qualifiedName:
      CSharp: Unity.Reflect.UnityUser
      VB: Unity.Reflect.UnityUser
    type: Struct
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect
    source:
      id: UnityUser
      path: ''
      startLine: 19489
    summary: "\nThis struct specifies information about a Unity user.\n"
    example: []
    syntax:
      content:
        CSharp: public struct UnityUser
        VB: Public Structure UnityUser
    inheritedMembers:
    - System.ValueType.Equals(System.Object)
    - System.ValueType.GetHashCode
    - System.ValueType.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetType
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: Unity.Reflect.UnityUser.AccessToken
      commentId: F:Unity.Reflect.UnityUser.AccessToken
      language: CSharp
      name:
        CSharp: AccessToken
        VB: AccessToken
      nameWithType:
        CSharp: UnityUser.AccessToken
        VB: UnityUser.AccessToken
      qualifiedName:
        CSharp: Unity.Reflect.UnityUser.AccessToken
        VB: Unity.Reflect.UnityUser.AccessToken
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect
      source:
        id: AccessToken
        path: ''
        startLine: 19491
      syntax:
        content:
          CSharp: public readonly string AccessToken
          VB: Public ReadOnly AccessToken As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - readonly
        VB:
        - Public
        - ReadOnly
    - id: Unity.Reflect.UnityUser.OrganizationForeignKeys
      commentId: F:Unity.Reflect.UnityUser.OrganizationForeignKeys
      language: CSharp
      name:
        CSharp: OrganizationForeignKeys
        VB: OrganizationForeignKeys
      nameWithType:
        CSharp: UnityUser.OrganizationForeignKeys
        VB: UnityUser.OrganizationForeignKeys
      qualifiedName:
        CSharp: Unity.Reflect.UnityUser.OrganizationForeignKeys
        VB: Unity.Reflect.UnityUser.OrganizationForeignKeys
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect
      source:
        id: OrganizationForeignKeys
        path: ''
        startLine: 19492
      syntax:
        content:
          CSharp: public readonly string OrganizationForeignKeys
          VB: Public ReadOnly OrganizationForeignKeys As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - readonly
        VB:
        - Public
        - ReadOnly
    - id: Unity.Reflect.UnityUser.PrimaryOrg
      commentId: F:Unity.Reflect.UnityUser.PrimaryOrg
      language: CSharp
      name:
        CSharp: PrimaryOrg
        VB: PrimaryOrg
      nameWithType:
        CSharp: UnityUser.PrimaryOrg
        VB: UnityUser.PrimaryOrg
      qualifiedName:
        CSharp: Unity.Reflect.UnityUser.PrimaryOrg
        VB: Unity.Reflect.UnityUser.PrimaryOrg
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect
      source:
        id: PrimaryOrg
        path: ''
        startLine: 19493
      syntax:
        content:
          CSharp: public readonly string PrimaryOrg
          VB: Public ReadOnly PrimaryOrg As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - readonly
        VB:
        - Public
        - ReadOnly
    - id: Unity.Reflect.UnityUser.Valid
      commentId: F:Unity.Reflect.UnityUser.Valid
      language: CSharp
      name:
        CSharp: Valid
        VB: Valid
      nameWithType:
        CSharp: UnityUser.Valid
        VB: UnityUser.Valid
      qualifiedName:
        CSharp: Unity.Reflect.UnityUser.Valid
        VB: Unity.Reflect.UnityUser.Valid
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect
      source:
        id: Valid
        path: ''
        startLine: 19494
      syntax:
        content:
          CSharp: public readonly bool Valid
          VB: Public ReadOnly Valid As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        - readonly
        VB:
        - Public
        - ReadOnly
    - id: Unity.Reflect.UnityUser.Whitelisted
      commentId: F:Unity.Reflect.UnityUser.Whitelisted
      language: CSharp
      name:
        CSharp: Whitelisted
        VB: Whitelisted
      nameWithType:
        CSharp: UnityUser.Whitelisted
        VB: UnityUser.Whitelisted
      qualifiedName:
        CSharp: Unity.Reflect.UnityUser.Whitelisted
        VB: Unity.Reflect.UnityUser.Whitelisted
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect
      source:
        id: Whitelisted
        path: ''
        startLine: 19495
      syntax:
        content:
          CSharp: public readonly bool Whitelisted
          VB: Public ReadOnly Whitelisted As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        - readonly
        VB:
        - Public
        - ReadOnly
    - id: Unity.Reflect.UnityUser.DisplayName
      commentId: F:Unity.Reflect.UnityUser.DisplayName
      language: CSharp
      name:
        CSharp: DisplayName
        VB: DisplayName
      nameWithType:
        CSharp: UnityUser.DisplayName
        VB: UnityUser.DisplayName
      qualifiedName:
        CSharp: Unity.Reflect.UnityUser.DisplayName
        VB: Unity.Reflect.UnityUser.DisplayName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect
      source:
        id: DisplayName
        path: ''
        startLine: 19500
      summary: "\nThe display name of the user.\n"
      example: []
      syntax:
        content:
          CSharp: public readonly string DisplayName
          VB: Public ReadOnly DisplayName As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - readonly
        VB:
        - Public
        - ReadOnly
    - id: Unity.Reflect.UnityUser.UserId
      commentId: F:Unity.Reflect.UnityUser.UserId
      language: CSharp
      name:
        CSharp: UserId
        VB: UserId
      nameWithType:
        CSharp: UnityUser.UserId
        VB: UnityUser.UserId
      qualifiedName:
        CSharp: Unity.Reflect.UnityUser.UserId
        VB: Unity.Reflect.UnityUser.UserId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect
      source:
        id: UserId
        path: ''
        startLine: 19505
      summary: "\nThe id of the user.\n"
      example: []
      syntax:
        content:
          CSharp: public readonly string UserId
          VB: Public ReadOnly UserId As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - readonly
        VB:
        - Public
        - ReadOnly
    - id: Unity.Reflect.UnityUser.Name
      commentId: F:Unity.Reflect.UnityUser.Name
      language: CSharp
      name:
        CSharp: Name
        VB: Name
      nameWithType:
        CSharp: UnityUser.Name
        VB: UnityUser.Name
      qualifiedName:
        CSharp: Unity.Reflect.UnityUser.Name
        VB: Unity.Reflect.UnityUser.Name
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect
      source:
        id: Name
        path: ''
        startLine: 19510
      summary: "\nThe name of the user.\n"
      example: []
      syntax:
        content:
          CSharp: public readonly string Name
          VB: Public ReadOnly Name As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - readonly
        VB:
        - Public
        - ReadOnly
    - id: Unity.Reflect.UnityUser.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean)
      commentId: M:Unity.Reflect.UnityUser.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean)
      language: CSharp
      name:
        CSharp: UnityUser(String, String, String, String, String, String, Boolean, Boolean)
        VB: UnityUser(String, String, String, String, String, String, Boolean, Boolean)
      nameWithType:
        CSharp: UnityUser.UnityUser(String, String, String, String, String, String, Boolean, Boolean)
        VB: UnityUser.UnityUser(String, String, String, String, String, String, Boolean, Boolean)
      qualifiedName:
        CSharp: Unity.Reflect.UnityUser.UnityUser(System.String, System.String, System.String, System.String, System.String, System.String, System.Boolean, System.Boolean)
        VB: Unity.Reflect.UnityUser.UnityUser(System.String, System.String, System.String, System.String, System.String, System.String, System.Boolean, System.Boolean)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect
      source:
        id: .ctor
        path: ''
        startLine: 19512
      syntax:
        content:
          CSharp: public UnityUser(string accessToken, string displayName, string organizationForeignKeys, string primaryOrg, string userId, string name, bool valid, bool whitelisted)
          VB: Public Sub New(accessToken As String, displayName As String, organizationForeignKeys As String, primaryOrg As String, userId As String, name As String, valid As Boolean, whitelisted As Boolean)
        parameters:
        - id: accessToken
          type: System.String
        - id: displayName
          type: System.String
        - id: organizationForeignKeys
          type: System.String
        - id: primaryOrg
          type: System.String
        - id: userId
          type: System.String
        - id: name
          type: System.String
        - id: valid
          type: System.Boolean
        - id: whitelisted
          type: System.Boolean
      overload: Unity.Reflect.UnityUser.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Unity.Reflect.ConnectionException
    commentId: T:Unity.Reflect.ConnectionException
    language: CSharp
    name:
      CSharp: ConnectionException
      VB: ConnectionException
    nameWithType:
      CSharp: ConnectionException
      VB: ConnectionException
    qualifiedName:
      CSharp: Unity.Reflect.ConnectionException
      VB: Unity.Reflect.ConnectionException
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect
    source:
      id: ConnectionException
      path: ''
      startLine: 19532
    summary: "\nThis exception is thrown when the connection to a SyncServer failed.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class ConnectionException : Exception, ISerializable, _Exception'
        VB: >-
          Public Class ConnectionException

              Inherits Exception

              Implements ISerializable, _Exception
    seealso:
    - linkId: Unity.Reflect.IClient.Connect
      commentId: M:Unity.Reflect.IClient.Connect
    - linkId: Unity.Reflect.BaseClient
      commentId: T:Unity.Reflect.BaseClient
    - linkId: Unity.Reflect.Player
      commentId: T:Unity.Reflect.Player
    - linkId: Unity.Reflect.Publisher
      commentId: T:Unity.Reflect.Publisher
    inheritance:
    - System.Object
    - System.Exception
    implements:
    - System.Runtime.Serialization.ISerializable
    - System.Runtime.InteropServices._Exception
    inheritedMembers:
    - System.Exception.GetBaseException
    - System.Exception.ToString
    - System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    - System.Exception.GetType
    - System.Exception.Message
    - System.Exception.Data
    - System.Exception.InnerException
    - System.Exception.TargetSite
    - System.Exception.StackTrace
    - System.Exception.HelpLink
    - System.Exception.Source
    - System.Exception.HResult
    - System.Exception.SerializeObjectState
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
    references:
      Unity.Reflect.IClient.Connect: 
      Unity.Reflect.BaseClient: 
      Unity.Reflect.Player: 
      Unity.Reflect.Publisher: 
  - id: Unity.Reflect.IPlayerClient
    commentId: T:Unity.Reflect.IPlayerClient
    language: CSharp
    name:
      CSharp: IPlayerClient
      VB: IPlayerClient
    nameWithType:
      CSharp: IPlayerClient
      VB: IPlayerClient
    qualifiedName:
      CSharp: Unity.Reflect.IPlayerClient
      VB: Unity.Reflect.IPlayerClient
    type: Interface
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect
    source:
      id: IPlayerClient
      path: ''
      startLine: 19542
    syntax:
      content:
        CSharp: 'public interface IPlayerClient : IClient'
        VB: >-
          Public Interface IPlayerClient

              Inherits IClient
    inheritedMembers:
    - Unity.Reflect.IClient.OnConnectionStatusChanged
    - Unity.Reflect.IClient.OnUnityProjectListUpdate
    - Unity.Reflect.IClient.OnUserUpdate
    - Unity.Reflect.IClient.OnSessionBegin
    - Unity.Reflect.IClient.OnSessionEnd
    - Unity.Reflect.IClient.OnManifestUpdate
    - Unity.Reflect.IClient.ObserveUnityProjectListUpdate
    - Unity.Reflect.IClient.ObserveUserUpdate
    - Unity.Reflect.IClient.ObserveSessionBegin(System.String[])
    - Unity.Reflect.IClient.ObserveSessionEnd(System.String[])
    - Unity.Reflect.IClient.ObserveManifestUpdate(System.String[])
    - Unity.Reflect.IClient.ReleaseUnityProjectListUpdate
    - Unity.Reflect.IClient.ReleaseUserUpdate
    - Unity.Reflect.IClient.ReleaseSessionBegin(System.String[])
    - Unity.Reflect.IClient.ReleaseSessionEnd(System.String[])
    - Unity.Reflect.IClient.ReleaseManifestUpdate(System.String[])
    - Unity.Reflect.IClient.Connected
    - Unity.Reflect.IClient.Connect
    - Unity.Reflect.IClient.Disconnect(System.Boolean)
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: Unity.Reflect.IPlayerClient.GetManifests(System.String)
      commentId: M:Unity.Reflect.IPlayerClient.GetManifests(System.String)
      language: CSharp
      name:
        CSharp: GetManifests(String)
        VB: GetManifests(String)
      nameWithType:
        CSharp: IPlayerClient.GetManifests(String)
        VB: IPlayerClient.GetManifests(String)
      qualifiedName:
        CSharp: Unity.Reflect.IPlayerClient.GetManifests(System.String)
        VB: Unity.Reflect.IPlayerClient.GetManifests(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect
      source:
        id: GetManifests
        path: ''
        startLine: 19544
      syntax:
        content:
          CSharp: IEnumerable<ManifestAsset> GetManifests(string projectId)
          VB: Function GetManifests(projectId As String) As IEnumerable(Of ManifestAsset)
        parameters:
        - id: projectId
          type: System.String
        return:
          type: IEnumerable{Unity.Reflect.ManifestAsset}
      overload: Unity.Reflect.IPlayerClient.GetManifests*
      modifiers:
        CSharp: []
        VB: []
    - id: Unity.Reflect.IPlayerClient.GetManifest(System.String,System.String)
      commentId: M:Unity.Reflect.IPlayerClient.GetManifest(System.String,System.String)
      language: CSharp
      name:
        CSharp: GetManifest(String, String)
        VB: GetManifest(String, String)
      nameWithType:
        CSharp: IPlayerClient.GetManifest(String, String)
        VB: IPlayerClient.GetManifest(String, String)
      qualifiedName:
        CSharp: Unity.Reflect.IPlayerClient.GetManifest(System.String, System.String)
        VB: Unity.Reflect.IPlayerClient.GetManifest(System.String, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect
      source:
        id: GetManifest
        path: ''
        startLine: 19545
      syntax:
        content:
          CSharp: SyncManifest GetManifest(string projectId, string sourceId)
          VB: Function GetManifest(projectId As String, sourceId As String) As SyncManifest
        parameters:
        - id: projectId
          type: System.String
        - id: sourceId
          type: System.String
        return:
          type: SyncManifest
      overload: Unity.Reflect.IPlayerClient.GetManifest*
      modifiers:
        CSharp: []
        VB: []
    - id: Unity.Reflect.IPlayerClient.GetSyncModel(System.String,System.String,System.String)
      commentId: M:Unity.Reflect.IPlayerClient.GetSyncModel(System.String,System.String,System.String)
      language: CSharp
      name:
        CSharp: GetSyncModel(String, String, String)
        VB: GetSyncModel(String, String, String)
      nameWithType:
        CSharp: IPlayerClient.GetSyncModel(String, String, String)
        VB: IPlayerClient.GetSyncModel(String, String, String)
      qualifiedName:
        CSharp: Unity.Reflect.IPlayerClient.GetSyncModel(System.String, System.String, System.String)
        VB: Unity.Reflect.IPlayerClient.GetSyncModel(System.String, System.String, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect
      source:
        id: GetSyncModel
        path: ''
        startLine: 19546
      syntax:
        content:
          CSharp: ISyncModel GetSyncModel(string projectId, string sourceId, string relativePath)
          VB: Function GetSyncModel(projectId As String, sourceId As String, relativePath As String) As ISyncModel
        parameters:
        - id: projectId
          type: System.String
        - id: sourceId
          type: System.String
        - id: relativePath
          type: System.String
        return:
          type: ISyncModel
      overload: Unity.Reflect.IPlayerClient.GetSyncModel*
      modifiers:
        CSharp: []
        VB: []
  - id: Unity.Reflect.ManifestAsset
    commentId: T:Unity.Reflect.ManifestAsset
    language: CSharp
    name:
      CSharp: ManifestAsset
      VB: ManifestAsset
    nameWithType:
      CSharp: ManifestAsset
      VB: ManifestAsset
    qualifiedName:
      CSharp: Unity.Reflect.ManifestAsset
      VB: Unity.Reflect.ManifestAsset
    type: Struct
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect
    source:
      id: ManifestAsset
      path: ''
      startLine: 19549
    syntax:
      content:
        CSharp: public struct ManifestAsset
        VB: Public Structure ManifestAsset
    inheritedMembers:
    - System.ValueType.Equals(System.Object)
    - System.ValueType.GetHashCode
    - System.ValueType.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetType
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: Unity.Reflect.ManifestAsset.ProjectId
      commentId: F:Unity.Reflect.ManifestAsset.ProjectId
      language: CSharp
      name:
        CSharp: ProjectId
        VB: ProjectId
      nameWithType:
        CSharp: ManifestAsset.ProjectId
        VB: ManifestAsset.ProjectId
      qualifiedName:
        CSharp: Unity.Reflect.ManifestAsset.ProjectId
        VB: Unity.Reflect.ManifestAsset.ProjectId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect
      source:
        id: ProjectId
        path: ''
        startLine: 19551
      syntax:
        content:
          CSharp: public readonly string ProjectId
          VB: Public ReadOnly ProjectId As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - readonly
        VB:
        - Public
        - ReadOnly
    - id: Unity.Reflect.ManifestAsset.SourceId
      commentId: F:Unity.Reflect.ManifestAsset.SourceId
      language: CSharp
      name:
        CSharp: SourceId
        VB: SourceId
      nameWithType:
        CSharp: ManifestAsset.SourceId
        VB: ManifestAsset.SourceId
      qualifiedName:
        CSharp: Unity.Reflect.ManifestAsset.SourceId
        VB: Unity.Reflect.ManifestAsset.SourceId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect
      source:
        id: SourceId
        path: ''
        startLine: 19552
      syntax:
        content:
          CSharp: public readonly string SourceId
          VB: Public ReadOnly SourceId As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - readonly
        VB:
        - Public
        - ReadOnly
    - id: Unity.Reflect.ManifestAsset.Manifest
      commentId: F:Unity.Reflect.ManifestAsset.Manifest
      language: CSharp
      name:
        CSharp: Manifest
        VB: Manifest
      nameWithType:
        CSharp: ManifestAsset.Manifest
        VB: ManifestAsset.Manifest
      qualifiedName:
        CSharp: Unity.Reflect.ManifestAsset.Manifest
        VB: Unity.Reflect.ManifestAsset.Manifest
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect
      source:
        id: Manifest
        path: ''
        startLine: 19553
      syntax:
        content:
          CSharp: public readonly SyncManifest Manifest
          VB: Public ReadOnly Manifest As SyncManifest
        return:
          type: SyncManifest
      modifiers:
        CSharp:
        - public
        - readonly
        VB:
        - Public
        - ReadOnly
    - id: Unity.Reflect.ManifestAsset.#ctor(System.String,System.String,SyncManifest)
      commentId: M:Unity.Reflect.ManifestAsset.#ctor(System.String,System.String,SyncManifest)
      language: CSharp
      name:
        CSharp: ManifestAsset(String, String, SyncManifest)
        VB: ManifestAsset(String, String, SyncManifest)
      nameWithType:
        CSharp: ManifestAsset.ManifestAsset(String, String, SyncManifest)
        VB: ManifestAsset.ManifestAsset(String, String, SyncManifest)
      qualifiedName:
        CSharp: Unity.Reflect.ManifestAsset.ManifestAsset(System.String, System.String, SyncManifest)
        VB: Unity.Reflect.ManifestAsset.ManifestAsset(System.String, System.String, SyncManifest)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect
      source:
        id: .ctor
        path: ''
        startLine: 19555
      syntax:
        content:
          CSharp: public ManifestAsset(string projectId, string sourceId, SyncManifest manifest)
          VB: Public Sub New(projectId As String, sourceId As String, manifest As SyncManifest)
        parameters:
        - id: projectId
          type: System.String
        - id: sourceId
          type: System.String
        - id: manifest
          type: SyncManifest
      overload: Unity.Reflect.ManifestAsset.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Unity.Reflect.IPublisherClient
    commentId: T:Unity.Reflect.IPublisherClient
    language: CSharp
    name:
      CSharp: IPublisherClient
      VB: IPublisherClient
    nameWithType:
      CSharp: IPublisherClient
      VB: IPublisherClient
    qualifiedName:
      CSharp: Unity.Reflect.IPublisherClient
      VB: Unity.Reflect.IPublisherClient
    type: Interface
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect
    source:
      id: IPublisherClient
      path: ''
      startLine: 19573
    summary: "\nThis interface provides some Publishing client features to communicate with a SyncServer.\n"
    example: []
    syntax:
      content:
        CSharp: 'public interface IPublisherClient : IClient'
        VB: >-
          Public Interface IPublisherClient

              Inherits IClient
    inheritedMembers:
    - Unity.Reflect.IClient.OnConnectionStatusChanged
    - Unity.Reflect.IClient.OnUnityProjectListUpdate
    - Unity.Reflect.IClient.OnUserUpdate
    - Unity.Reflect.IClient.OnSessionBegin
    - Unity.Reflect.IClient.OnSessionEnd
    - Unity.Reflect.IClient.OnManifestUpdate
    - Unity.Reflect.IClient.ObserveUnityProjectListUpdate
    - Unity.Reflect.IClient.ObserveUserUpdate
    - Unity.Reflect.IClient.ObserveSessionBegin(System.String[])
    - Unity.Reflect.IClient.ObserveSessionEnd(System.String[])
    - Unity.Reflect.IClient.ObserveManifestUpdate(System.String[])
    - Unity.Reflect.IClient.ReleaseUnityProjectListUpdate
    - Unity.Reflect.IClient.ReleaseUserUpdate
    - Unity.Reflect.IClient.ReleaseSessionBegin(System.String[])
    - Unity.Reflect.IClient.ReleaseSessionEnd(System.String[])
    - Unity.Reflect.IClient.ReleaseManifestUpdate(System.String[])
    - Unity.Reflect.IClient.Connected
    - Unity.Reflect.IClient.Connect
    - Unity.Reflect.IClient.Disconnect(System.Boolean)
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: Unity.Reflect.IPublisherClient.StartTransaction
      commentId: M:Unity.Reflect.IPublisherClient.StartTransaction
      language: CSharp
      name:
        CSharp: StartTransaction()
        VB: StartTransaction()
      nameWithType:
        CSharp: IPublisherClient.StartTransaction()
        VB: IPublisherClient.StartTransaction()
      qualifiedName:
        CSharp: Unity.Reflect.IPublisherClient.StartTransaction()
        VB: Unity.Reflect.IPublisherClient.StartTransaction()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect
      source:
        id: StartTransaction
        path: ''
        startLine: 19581
      summary: "\nStarts a new transaction.\nThis call blocks until the SyncServer acknowledges the call.\n"
      example: []
      syntax:
        content:
          CSharp: void StartTransaction()
          VB: Sub StartTransaction
      overload: Unity.Reflect.IPublisherClient.StartTransaction*
      exceptions:
      - type: Unity.Reflect.TransactionAlreadyPendingException
        commentId: T:Unity.Reflect.TransactionAlreadyPendingException
        description: If a transaction is already pending
      - type: Unity.Reflect.SessionClosedException
        commentId: T:Unity.Reflect.SessionClosedException
        description: If the session has already been closed
      modifiers:
        CSharp: []
        VB: []
      references:
        Unity.Reflect.TransactionAlreadyPendingException: 
        Unity.Reflect.SessionClosedException: 
    - id: Unity.Reflect.IPublisherClient.CommitTransaction
      commentId: M:Unity.Reflect.IPublisherClient.CommitTransaction
      language: CSharp
      name:
        CSharp: CommitTransaction()
        VB: CommitTransaction()
      nameWithType:
        CSharp: IPublisherClient.CommitTransaction()
        VB: IPublisherClient.CommitTransaction()
      qualifiedName:
        CSharp: Unity.Reflect.IPublisherClient.CommitTransaction()
        VB: Unity.Reflect.IPublisherClient.CommitTransaction()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect
      source:
        id: CommitTransaction
        path: ''
        startLine: 19589
      summary: "\nCommits the pending transaction.\nThis call blocks until the SyncServer acknowledges the commit (which means that all the transaction operations have to be acknowledged as well).\n"
      example: []
      syntax:
        content:
          CSharp: void CommitTransaction()
          VB: Sub CommitTransaction
      overload: Unity.Reflect.IPublisherClient.CommitTransaction*
      exceptions:
      - type: Unity.Reflect.NoTransactionPendingException
        commentId: T:Unity.Reflect.NoTransactionPendingException
        description: If no transaction is pending
      - type: Unity.Reflect.SessionClosedException
        commentId: T:Unity.Reflect.SessionClosedException
        description: If the session has already been closed
      modifiers:
        CSharp: []
        VB: []
      references:
        Unity.Reflect.NoTransactionPendingException: 
        Unity.Reflect.SessionClosedException: 
    - id: Unity.Reflect.IPublisherClient.Send(ISyncModel)
      commentId: M:Unity.Reflect.IPublisherClient.Send(ISyncModel)
      language: CSharp
      name:
        CSharp: Send(ISyncModel)
        VB: Send(ISyncModel)
      nameWithType:
        CSharp: IPublisherClient.Send(ISyncModel)
        VB: IPublisherClient.Send(ISyncModel)
      qualifiedName:
        CSharp: Unity.Reflect.IPublisherClient.Send(ISyncModel)
        VB: Unity.Reflect.IPublisherClient.Send(ISyncModel)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect
      source:
        id: Send
        path: ''
        startLine: 19612
      summary: "\nSends an <see cref=\"!:ISyncModel\"></see> to the SyncServer.\nThe server will then create or overwrite the model, depending on whether the model was already in the project or not.\n"
      example: []
      syntax:
        content:
          CSharp: Task Send(ISyncModel model)
          VB: Function Send(model As ISyncModel) As Task
        parameters:
        - id: model
          type: ISyncModel
          description: The model to send to the server
        return:
          type: Task
          description: A <see cref="!:Task"></see> that is resolved whenever the SyncServer acknowledges the reception of the model, regardless of whether it has been commited or not.
      overload: Unity.Reflect.IPublisherClient.Send*
      exceptions:
      - type: Unity.Reflect.NoTransactionPendingException
        commentId: T:Unity.Reflect.NoTransactionPendingException
        description: If no transaction is pending
      - type: Unity.Reflect.SessionClosedException
        commentId: T:Unity.Reflect.SessionClosedException
        description: If the session has already been closed
      modifiers:
        CSharp: []
        VB: []
      references:
        Unity.Reflect.NoTransactionPendingException: 
        Unity.Reflect.SessionClosedException: 
    - id: Unity.Reflect.IPublisherClient.RemoveObjectInstance(System.String)
      commentId: M:Unity.Reflect.IPublisherClient.RemoveObjectInstance(System.String)
      language: CSharp
      name:
        CSharp: RemoveObjectInstance(String)
        VB: RemoveObjectInstance(String)
      nameWithType:
        CSharp: IPublisherClient.RemoveObjectInstance(String)
        VB: IPublisherClient.RemoveObjectInstance(String)
      qualifiedName:
        CSharp: Unity.Reflect.IPublisherClient.RemoveObjectInstance(System.String)
        VB: Unity.Reflect.IPublisherClient.RemoveObjectInstance(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect
      source:
        id: RemoveObjectInstance
        path: ''
        startLine: 19621
      summary: "\nRemoves an Object Instance.\n"
      example: []
      syntax:
        content:
          CSharp: Task RemoveObjectInstance(string objectInstanceName)
          VB: Function RemoveObjectInstance(objectInstanceName As String) As Task
        parameters:
        - id: objectInstanceName
          type: System.String
          description: The name of the ObjectInstance to remove
        return:
          type: Task
          description: A <see cref="!:Task"></see> that is resolved whenever the SyncServer acknowledges the deletion, regardless of whether it has been commited or not.
      overload: Unity.Reflect.IPublisherClient.RemoveObjectInstance*
      exceptions:
      - type: Unity.Reflect.NoTransactionPendingException
        commentId: T:Unity.Reflect.NoTransactionPendingException
        description: If no transaction is pending
      - type: Unity.Reflect.SessionClosedException
        commentId: T:Unity.Reflect.SessionClosedException
        description: If the session has already been closed
      modifiers:
        CSharp: []
        VB: []
      references:
        Unity.Reflect.NoTransactionPendingException: 
        Unity.Reflect.SessionClosedException: 
    - id: Unity.Reflect.IPublisherClient.CloseAndWait(System.Boolean)
      commentId: M:Unity.Reflect.IPublisherClient.CloseAndWait(System.Boolean)
      language: CSharp
      name:
        CSharp: CloseAndWait(Boolean)
        VB: CloseAndWait(Boolean)
      nameWithType:
        CSharp: IPublisherClient.CloseAndWait(Boolean)
        VB: IPublisherClient.CloseAndWait(Boolean)
      qualifiedName:
        CSharp: Unity.Reflect.IPublisherClient.CloseAndWait(System.Boolean)
        VB: Unity.Reflect.IPublisherClient.CloseAndWait(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect
      source:
        id: CloseAndWait
        path: ''
        startLine: 19629
      summary: "\nProperly closes the session.\nThis call blocks until the SyncServer acknowledges the call.\n"
      example: []
      syntax:
        content:
          CSharp: void CloseAndWait(bool autoDisconnectClient = true)
          VB: Sub CloseAndWait(autoDisconnectClient As Boolean = True)
        parameters:
        - id: autoDisconnectClient
          type: System.Boolean
          description: If true, automatically disconnects the client when the session is closed.
      overload: Unity.Reflect.IPublisherClient.CloseAndWait*
      exceptions:
      - type: Unity.Reflect.SessionClosedException
        commentId: T:Unity.Reflect.SessionClosedException
        description: If the session has already been closed
      modifiers:
        CSharp: []
        VB: []
      references:
        Unity.Reflect.SessionClosedException: 
    - id: Unity.Reflect.IPublisherClient.Abort(System.Boolean)
      commentId: M:Unity.Reflect.IPublisherClient.Abort(System.Boolean)
      language: CSharp
      name:
        CSharp: Abort(Boolean)
        VB: Abort(Boolean)
      nameWithType:
        CSharp: IPublisherClient.Abort(Boolean)
        VB: IPublisherClient.Abort(Boolean)
      qualifiedName:
        CSharp: Unity.Reflect.IPublisherClient.Abort(System.Boolean)
        VB: Unity.Reflect.IPublisherClient.Abort(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect
      source:
        id: Abort
        path: ''
        startLine: 19636
      summary: "\nCloses the session and immediately returns without waiting for the SyncServer&apos;s acknowledgement.\n"
      example: []
      syntax:
        content:
          CSharp: void Abort(bool autoDisconnectClient = true)
          VB: Sub Abort(autoDisconnectClient As Boolean = True)
        parameters:
        - id: autoDisconnectClient
          type: System.Boolean
          description: If true, automatically disconnects the client.
      overload: Unity.Reflect.IPublisherClient.Abort*
      exceptions:
      - type: Unity.Reflect.SessionClosedException
        commentId: T:Unity.Reflect.SessionClosedException
        description: If the session has already been closed
      modifiers:
        CSharp: []
        VB: []
      references:
        Unity.Reflect.SessionClosedException: 
  - id: Unity.Reflect.PublisherSettings
    commentId: T:Unity.Reflect.PublisherSettings
    language: CSharp
    name:
      CSharp: PublisherSettings
      VB: PublisherSettings
    nameWithType:
      CSharp: PublisherSettings
      VB: PublisherSettings
    qualifiedName:
      CSharp: Unity.Reflect.PublisherSettings
      VB: Unity.Reflect.PublisherSettings
    type: Struct
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect
    source:
      id: PublisherSettings
      path: ''
      startLine: 19643
    summary: "\nThis struct specifies multiple settings to customize the publisher.\n"
    example: []
    syntax:
      content:
        CSharp: public struct PublisherSettings
        VB: Public Structure PublisherSettings
    seealso:
    - linkId: Unity.Reflect.Publisher
      commentId: T:Unity.Reflect.Publisher
    inheritedMembers:
    - System.ValueType.Equals(System.Object)
    - System.ValueType.GetHashCode
    - System.ValueType.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetType
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: Unity.Reflect.PublisherSettings.Default
      commentId: F:Unity.Reflect.PublisherSettings.Default
      language: CSharp
      name:
        CSharp: Default
        VB: Default
      nameWithType:
        CSharp: PublisherSettings.Default
        VB: PublisherSettings.Default
      qualifiedName:
        CSharp: Unity.Reflect.PublisherSettings.Default
        VB: Unity.Reflect.PublisherSettings.Default
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect
      source:
        id: Default
        path: ''
        startLine: 19645
      syntax:
        content:
          CSharp: public static readonly PublisherSettings Default
          VB: Public Shared ReadOnly Default As PublisherSettings
        return:
          type: Unity.Reflect.PublisherSettings
      modifiers:
        CSharp:
        - public
        - static
        - readonly
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Unity.Reflect.PublisherSettings.LengthUnit
      commentId: F:Unity.Reflect.PublisherSettings.LengthUnit
      language: CSharp
      name:
        CSharp: LengthUnit
        VB: LengthUnit
      nameWithType:
        CSharp: PublisherSettings.LengthUnit
        VB: PublisherSettings.LengthUnit
      qualifiedName:
        CSharp: Unity.Reflect.PublisherSettings.LengthUnit
        VB: Unity.Reflect.PublisherSettings.LengthUnit
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect
      source:
        id: LengthUnit
        path: ''
        startLine: 19650
      summary: "\nThe length unit to use when exporting data to the SyncServer.\n"
      example: []
      syntax:
        content:
          CSharp: public readonly LengthUnit LengthUnit
          VB: Public ReadOnly LengthUnit As LengthUnit
        return:
          type: Unity.Reflect.LengthUnit
      modifiers:
        CSharp:
        - public
        - readonly
        VB:
        - Public
        - ReadOnly
    - id: Unity.Reflect.PublisherSettings.AxisInversion
      commentId: F:Unity.Reflect.PublisherSettings.AxisInversion
      language: CSharp
      name:
        CSharp: AxisInversion
        VB: AxisInversion
      nameWithType:
        CSharp: PublisherSettings.AxisInversion
        VB: PublisherSettings.AxisInversion
      qualifiedName:
        CSharp: Unity.Reflect.PublisherSettings.AxisInversion
        VB: Unity.Reflect.PublisherSettings.AxisInversion
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect
      source:
        id: AxisInversion
        path: ''
        startLine: 19655
      summary: "\nThe axis inversion option to use when exporting data to the SyncServer\n"
      example: []
      syntax:
        content:
          CSharp: public readonly AxisInversion AxisInversion
          VB: Public ReadOnly AxisInversion As AxisInversion
        return:
          type: Unity.Reflect.AxisInversion
      modifiers:
        CSharp:
        - public
        - readonly
        VB:
        - Public
        - ReadOnly
    - id: Unity.Reflect.PublisherSettings.Rules
      commentId: F:Unity.Reflect.PublisherSettings.Rules
      language: CSharp
      name:
        CSharp: Rules
        VB: Rules
      nameWithType:
        CSharp: PublisherSettings.Rules
        VB: PublisherSettings.Rules
      qualifiedName:
        CSharp: Unity.Reflect.PublisherSettings.Rules
        VB: Unity.Reflect.PublisherSettings.Rules
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect
      source:
        id: Rules
        path: ''
        startLine: 19660
      summary: "\nThe rules that the Rule Engine will handle\n"
      example: []
      syntax:
        content:
          CSharp: public readonly string Rules
          VB: Public ReadOnly Rules As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - readonly
        VB:
        - Public
        - ReadOnly
    - id: Unity.Reflect.PublisherSettings.#ctor(Unity.Reflect.LengthUnit,Unity.Reflect.AxisInversion,System.String)
      commentId: M:Unity.Reflect.PublisherSettings.#ctor(Unity.Reflect.LengthUnit,Unity.Reflect.AxisInversion,System.String)
      language: CSharp
      name:
        CSharp: PublisherSettings(LengthUnit, AxisInversion, String)
        VB: PublisherSettings(LengthUnit, AxisInversion, String)
      nameWithType:
        CSharp: PublisherSettings.PublisherSettings(LengthUnit, AxisInversion, String)
        VB: PublisherSettings.PublisherSettings(LengthUnit, AxisInversion, String)
      qualifiedName:
        CSharp: Unity.Reflect.PublisherSettings.PublisherSettings(Unity.Reflect.LengthUnit, Unity.Reflect.AxisInversion, System.String)
        VB: Unity.Reflect.PublisherSettings.PublisherSettings(Unity.Reflect.LengthUnit, Unity.Reflect.AxisInversion, System.String)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect
      source:
        id: .ctor
        path: ''
        startLine: 19668
      summary: "\nCreates a PublisherSettings object.\n"
      example: []
      syntax:
        content:
          CSharp: public PublisherSettings(LengthUnit unit, AxisInversion axis, string rules = "")
          VB: Public Sub New(unit As LengthUnit, axis As AxisInversion, rules As String = "")
        parameters:
        - id: unit
          type: Unity.Reflect.LengthUnit
          description: The length unit to use when exporting data to the SyncServer
        - id: axis
          type: Unity.Reflect.AxisInversion
          description: The axis inversion option to use when exporting data to the SyncServer
        - id: rules
          type: System.String
          description: The rules that the Rule Engine will handle
      overload: Unity.Reflect.PublisherSettings.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    references:
      Unity.Reflect.Publisher: 
  - id: Unity.Reflect.LengthUnit
    commentId: T:Unity.Reflect.LengthUnit
    language: CSharp
    name:
      CSharp: LengthUnit
      VB: LengthUnit
    nameWithType:
      CSharp: LengthUnit
      VB: LengthUnit
    qualifiedName:
      CSharp: Unity.Reflect.LengthUnit
      VB: Unity.Reflect.LengthUnit
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect
    source:
      id: LengthUnit
      path: ''
      startLine: 19680
    summary: "\nSets the length unit to use when exporting data to the SyncServer.\n"
    example: []
    syntax:
      content:
        CSharp: public enum LengthUnit
        VB: Public Enum LengthUnit
    seealso:
    - linkId: Unity.Reflect.PublisherSettings
      commentId: T:Unity.Reflect.PublisherSettings
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Unity.Reflect.LengthUnit.Meters
      commentId: F:Unity.Reflect.LengthUnit.Meters
      language: CSharp
      name:
        CSharp: Meters
        VB: Meters
      nameWithType:
        CSharp: LengthUnit.Meters
        VB: LengthUnit.Meters
      qualifiedName:
        CSharp: Unity.Reflect.LengthUnit.Meters
        VB: Unity.Reflect.LengthUnit.Meters
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect
      source:
        id: Meters
        path: ''
        startLine: 19682
      syntax:
        content:
          CSharp: Meters = 0
          VB: Meters = 0
        return:
          type: Unity.Reflect.LengthUnit
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.LengthUnit.Feet
      commentId: F:Unity.Reflect.LengthUnit.Feet
      language: CSharp
      name:
        CSharp: Feet
        VB: Feet
      nameWithType:
        CSharp: LengthUnit.Feet
        VB: LengthUnit.Feet
      qualifiedName:
        CSharp: Unity.Reflect.LengthUnit.Feet
        VB: Unity.Reflect.LengthUnit.Feet
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect
      source:
        id: Feet
        path: ''
        startLine: 19683
      syntax:
        content:
          CSharp: Feet = 1
          VB: Feet = 1
        return:
          type: Unity.Reflect.LengthUnit
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.LengthUnit.Inches
      commentId: F:Unity.Reflect.LengthUnit.Inches
      language: CSharp
      name:
        CSharp: Inches
        VB: Inches
      nameWithType:
        CSharp: LengthUnit.Inches
        VB: LengthUnit.Inches
      qualifiedName:
        CSharp: Unity.Reflect.LengthUnit.Inches
        VB: Unity.Reflect.LengthUnit.Inches
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect
      source:
        id: Inches
        path: ''
        startLine: 19684
      syntax:
        content:
          CSharp: Inches = 2
          VB: Inches = 2
        return:
          type: Unity.Reflect.LengthUnit
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    references:
      Unity.Reflect.PublisherSettings: 
  - id: Unity.Reflect.AxisInversion
    commentId: T:Unity.Reflect.AxisInversion
    language: CSharp
    name:
      CSharp: AxisInversion
      VB: AxisInversion
    nameWithType:
      CSharp: AxisInversion
      VB: AxisInversion
    qualifiedName:
      CSharp: Unity.Reflect.AxisInversion
      VB: Unity.Reflect.AxisInversion
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect
    source:
      id: AxisInversion
      path: ''
      startLine: 19691
    summary: "\nSets options for inverting axes when exporting data to the SyncServer.\n"
    example: []
    syntax:
      content:
        CSharp: public enum AxisInversion
        VB: Public Enum AxisInversion
    seealso:
    - linkId: Unity.Reflect.PublisherSettings
      commentId: T:Unity.Reflect.PublisherSettings
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Unity.Reflect.AxisInversion.None
      commentId: F:Unity.Reflect.AxisInversion.None
      language: CSharp
      name:
        CSharp: None
        VB: None
      nameWithType:
        CSharp: AxisInversion.None
        VB: AxisInversion.None
      qualifiedName:
        CSharp: Unity.Reflect.AxisInversion.None
        VB: Unity.Reflect.AxisInversion.None
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect
      source:
        id: None
        path: ''
        startLine: 19695
      summary: "\nNo axis inversion\n"
      example: []
      syntax:
        content:
          CSharp: None = 0
          VB: None = 0
        return:
          type: Unity.Reflect.AxisInversion
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.AxisInversion.FlipYZ
      commentId: F:Unity.Reflect.AxisInversion.FlipYZ
      language: CSharp
      name:
        CSharp: FlipYZ
        VB: FlipYZ
      nameWithType:
        CSharp: AxisInversion.FlipYZ
        VB: AxisInversion.FlipYZ
      qualifiedName:
        CSharp: Unity.Reflect.AxisInversion.FlipYZ
        VB: Unity.Reflect.AxisInversion.FlipYZ
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect
      source:
        id: FlipYZ
        path: ''
        startLine: 19700
      summary: "\nInvert the Y and Z axis\n"
      example: []
      syntax:
        content:
          CSharp: FlipYZ = 1
          VB: FlipYZ = 1
        return:
          type: Unity.Reflect.AxisInversion
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    references:
      Unity.Reflect.PublisherSettings: 
  - id: Unity.Reflect.TransactionAlreadyPendingException
    commentId: T:Unity.Reflect.TransactionAlreadyPendingException
    language: CSharp
    name:
      CSharp: TransactionAlreadyPendingException
      VB: TransactionAlreadyPendingException
    nameWithType:
      CSharp: TransactionAlreadyPendingException
      VB: TransactionAlreadyPendingException
    qualifiedName:
      CSharp: Unity.Reflect.TransactionAlreadyPendingException
      VB: Unity.Reflect.TransactionAlreadyPendingException
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect
    source:
      id: TransactionAlreadyPendingException
      path: ''
      startLine: 19706
    summary: "\nThis exception is thrown by <xref href=\"Unity.Reflect.IPublisherClient.StartTransaction\" data-throw-if-not-resolved=\"false\"></xref> when a transaction is already pending.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class TransactionAlreadyPendingException : Exception, ISerializable, _Exception'
        VB: >-
          Public Class TransactionAlreadyPendingException

              Inherits Exception

              Implements ISerializable, _Exception
    inheritance:
    - System.Object
    - System.Exception
    implements:
    - System.Runtime.Serialization.ISerializable
    - System.Runtime.InteropServices._Exception
    inheritedMembers:
    - System.Exception.GetBaseException
    - System.Exception.ToString
    - System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    - System.Exception.GetType
    - System.Exception.Message
    - System.Exception.Data
    - System.Exception.InnerException
    - System.Exception.TargetSite
    - System.Exception.StackTrace
    - System.Exception.HelpLink
    - System.Exception.Source
    - System.Exception.HResult
    - System.Exception.SerializeObjectState
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
    references:
      Unity.Reflect.IPublisherClient.StartTransaction: 
  - id: Unity.Reflect.NoTransactionPendingException
    commentId: T:Unity.Reflect.NoTransactionPendingException
    language: CSharp
    name:
      CSharp: NoTransactionPendingException
      VB: NoTransactionPendingException
    nameWithType:
      CSharp: NoTransactionPendingException
      VB: NoTransactionPendingException
    qualifiedName:
      CSharp: Unity.Reflect.NoTransactionPendingException
      VB: Unity.Reflect.NoTransactionPendingException
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect
    source:
      id: NoTransactionPendingException
      path: ''
      startLine: 19712
    summary: "\nThis exception is thrown by <xref href=\"Unity.Reflect.IPublisherClient.StartTransaction\" data-throw-if-not-resolved=\"false\"></xref> when a transaction is already pending.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class NoTransactionPendingException : Exception, ISerializable, _Exception'
        VB: >-
          Public Class NoTransactionPendingException

              Inherits Exception

              Implements ISerializable, _Exception
    inheritance:
    - System.Object
    - System.Exception
    implements:
    - System.Runtime.Serialization.ISerializable
    - System.Runtime.InteropServices._Exception
    inheritedMembers:
    - System.Exception.GetBaseException
    - System.Exception.ToString
    - System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    - System.Exception.GetType
    - System.Exception.Message
    - System.Exception.Data
    - System.Exception.InnerException
    - System.Exception.TargetSite
    - System.Exception.StackTrace
    - System.Exception.HelpLink
    - System.Exception.Source
    - System.Exception.HResult
    - System.Exception.SerializeObjectState
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
    references:
      Unity.Reflect.IPublisherClient.StartTransaction: 
  - id: Unity.Reflect.SessionClosedException
    commentId: T:Unity.Reflect.SessionClosedException
    language: CSharp
    name:
      CSharp: SessionClosedException
      VB: SessionClosedException
    nameWithType:
      CSharp: SessionClosedException
      VB: SessionClosedException
    qualifiedName:
      CSharp: Unity.Reflect.SessionClosedException
      VB: Unity.Reflect.SessionClosedException
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect
    source:
      id: SessionClosedException
      path: ''
      startLine: 19718
    summary: "\nThis exception is thrown by <xref href=\"Unity.Reflect.IPublisherClient.StartTransaction\" data-throw-if-not-resolved=\"false\"></xref> when a transaction is already pending.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class SessionClosedException : Exception, ISerializable, _Exception'
        VB: >-
          Public Class SessionClosedException

              Inherits Exception

              Implements ISerializable, _Exception
    inheritance:
    - System.Object
    - System.Exception
    implements:
    - System.Runtime.Serialization.ISerializable
    - System.Runtime.InteropServices._Exception
    inheritedMembers:
    - System.Exception.GetBaseException
    - System.Exception.ToString
    - System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    - System.Exception.GetType
    - System.Exception.Message
    - System.Exception.Data
    - System.Exception.InnerException
    - System.Exception.TargetSite
    - System.Exception.StackTrace
    - System.Exception.HelpLink
    - System.Exception.Source
    - System.Exception.HResult
    - System.Exception.SerializeObjectState
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
    references:
      Unity.Reflect.IPublisherClient.StartTransaction: 
- id: Unity.Reflect.IO
  commentId: N:Unity.Reflect.IO
  language: CSharp
  name:
    CSharp: Unity.Reflect.IO
    VB: Unity.Reflect.IO
  nameWithType:
    CSharp: Unity.Reflect.IO
    VB: Unity.Reflect.IO
  qualifiedName:
    CSharp: Unity.Reflect.IO
    VB: Unity.Reflect.IO
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Unity.Reflect.IO.File
    commentId: T:Unity.Reflect.IO.File
    language: CSharp
    name:
      CSharp: File
      VB: File
    nameWithType:
      CSharp: File
      VB: File
    qualifiedName:
      CSharp: Unity.Reflect.IO.File
      VB: Unity.Reflect.IO.File
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect.IO
    source:
      id: File
      path: ''
      startLine: 62
    summary: "\nThis class provides some methods to save or load models from files.\n"
    example: []
    syntax:
      content:
        CSharp: public static class File
        VB: Public Module File
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: Unity.Reflect.IO.File.Save(ISyncModel,System.String)
      commentId: M:Unity.Reflect.IO.File.Save(ISyncModel,System.String)
      language: CSharp
      name:
        CSharp: Save(ISyncModel, String)
        VB: Save(ISyncModel, String)
      nameWithType:
        CSharp: File.Save(ISyncModel, String)
        VB: File.Save(ISyncModel, String)
      qualifiedName:
        CSharp: Unity.Reflect.IO.File.Save(ISyncModel, System.String)
        VB: Unity.Reflect.IO.File.Save(ISyncModel, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.IO
      source:
        id: Save
        path: ''
        startLine: 70
      summary: "\nSaves a model in a file.\n"
      example: []
      syntax:
        content:
          CSharp: public static void Save(ISyncModel model, string path)
          VB: Public Shared Sub Save(model As ISyncModel, path As String)
        parameters:
        - id: model
          type: ISyncModel
          description: The model to save
        - id: path
          type: System.String
          description: The path of the file to create or overwrite
      overload: Unity.Reflect.IO.File.Save*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Unity.Reflect.IO.File.SaveAsync(ISyncModel,System.String)
      commentId: M:Unity.Reflect.IO.File.SaveAsync(ISyncModel,System.String)
      language: CSharp
      name:
        CSharp: SaveAsync(ISyncModel, String)
        VB: SaveAsync(ISyncModel, String)
      nameWithType:
        CSharp: File.SaveAsync(ISyncModel, String)
        VB: File.SaveAsync(ISyncModel, String)
      qualifiedName:
        CSharp: Unity.Reflect.IO.File.SaveAsync(ISyncModel, System.String)
        VB: Unity.Reflect.IO.File.SaveAsync(ISyncModel, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.IO
      source:
        id: SaveAsync
        path: ''
        startLine: 84
      summary: "\nAsynchronously saves a model in a file.\n"
      example: []
      syntax:
        content:
          CSharp: public static Task SaveAsync(ISyncModel model, string path)
          VB: Public Shared Function SaveAsync(model As ISyncModel, path As String) As Task
        parameters:
        - id: model
          type: ISyncModel
          description: The model to save
        - id: path
          type: System.String
          description: The path of the file to create or overwrite
        return:
          type: Task
      overload: Unity.Reflect.IO.File.SaveAsync*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Unity.Reflect.IO.File.Load``1(System.String)
      commentId: M:Unity.Reflect.IO.File.Load``1(System.String)
      language: CSharp
      name:
        CSharp: Load<T>(String)
        VB: Load(Of T)(String)
      nameWithType:
        CSharp: File.Load<T>(String)
        VB: File.Load(Of T)(String)
      qualifiedName:
        CSharp: Unity.Reflect.IO.File.Load<T>(System.String)
        VB: Unity.Reflect.IO.File.Load(Of T)(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.IO
      source:
        id: Load
        path: ''
        startLine: 103
      summary: "\nLoads a model from a file.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static T Load<T>(string path)

                where T : IMessage, ISyncModel
          VB: Public Shared Function Load(Of T As {IMessage, ISyncModel})(path As String) As T
        parameters:
        - id: path
          type: System.String
          description: The path of the file to read
        typeParameters:
        - id: T
          description: The type of model that you want to load
        return:
          type: '{T}'
          description: A model of the desired type, created by parsing the provided file
      overload: Unity.Reflect.IO.File.Load*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: Unity.Reflect.IO.SourceProject
    commentId: T:Unity.Reflect.IO.SourceProject
    language: CSharp
    name:
      CSharp: SourceProject
      VB: SourceProject
    nameWithType:
      CSharp: SourceProject
      VB: SourceProject
    qualifiedName:
      CSharp: Unity.Reflect.IO.SourceProject
      VB: Unity.Reflect.IO.SourceProject
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect.IO
    source:
      id: SourceProject
      path: ''
      startLine: 146
    syntax:
      content:
        CSharp: public class SourceProject
        VB: Public Class SourceProject
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Unity.Reflect.IO.SourceProject.sourceId
      commentId: F:Unity.Reflect.IO.SourceProject.sourceId
      language: CSharp
      name:
        CSharp: sourceId
        VB: sourceId
      nameWithType:
        CSharp: SourceProject.sourceId
        VB: SourceProject.sourceId
      qualifiedName:
        CSharp: Unity.Reflect.IO.SourceProject.sourceId
        VB: Unity.Reflect.IO.SourceProject.sourceId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.IO
      source:
        id: sourceId
        path: ''
        startLine: 148
      syntax:
        content:
          CSharp: public string sourceId
          VB: Public sourceId As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.IO.SourceProject.manifest
      commentId: F:Unity.Reflect.IO.SourceProject.manifest
      language: CSharp
      name:
        CSharp: manifest
        VB: manifest
      nameWithType:
        CSharp: SourceProject.manifest
        VB: SourceProject.manifest
      qualifiedName:
        CSharp: Unity.Reflect.IO.SourceProject.manifest
        VB: Unity.Reflect.IO.SourceProject.manifest
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.IO
      source:
        id: manifest
        path: ''
        startLine: 149
      syntax:
        content:
          CSharp: public SyncManifest manifest
          VB: Public manifest As SyncManifest
        return:
          type: SyncManifest
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Unity.Reflect.IO.LocalStorage
    commentId: T:Unity.Reflect.IO.LocalStorage
    language: CSharp
    name:
      CSharp: LocalStorage
      VB: LocalStorage
    nameWithType:
      CSharp: LocalStorage
      VB: LocalStorage
    qualifiedName:
      CSharp: Unity.Reflect.IO.LocalStorage
      VB: Unity.Reflect.IO.LocalStorage
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect.IO
    source:
      id: LocalStorage
      path: ''
      startLine: 155
    summary: "\nThis class helps manage Reflect projects in local storage.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class LocalStorage : IStorage'
        VB: >-
          Public Class LocalStorage

              Implements IStorage
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Unity.Reflect.IO.LocalStorage.#ctor(System.String)
      commentId: M:Unity.Reflect.IO.LocalStorage.#ctor(System.String)
      language: CSharp
      name:
        CSharp: LocalStorage(String)
        VB: LocalStorage(String)
      nameWithType:
        CSharp: LocalStorage.LocalStorage(String)
        VB: LocalStorage.LocalStorage(String)
      qualifiedName:
        CSharp: Unity.Reflect.IO.LocalStorage.LocalStorage(System.String)
        VB: Unity.Reflect.IO.LocalStorage.LocalStorage(System.String)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.IO
      source:
        id: .ctor
        path: ''
        startLine: 163
      summary: "\nCreates the local storage\n"
      example: []
      syntax:
        content:
          CSharp: public LocalStorage(string root)
          VB: Public Sub New(root As String)
        parameters:
        - id: root
          type: System.String
          description: The path of the root folder (which will hold all the Reflect projects)
      overload: Unity.Reflect.IO.LocalStorage.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.IO.LocalStorage.OpenOrCreateManifest
      commentId: M:Unity.Reflect.IO.LocalStorage.OpenOrCreateManifest
      language: CSharp
      name:
        CSharp: OpenOrCreateManifest()
        VB: OpenOrCreateManifest()
      nameWithType:
        CSharp: LocalStorage.OpenOrCreateManifest()
        VB: LocalStorage.OpenOrCreateManifest()
      qualifiedName:
        CSharp: Unity.Reflect.IO.LocalStorage.OpenOrCreateManifest()
        VB: Unity.Reflect.IO.LocalStorage.OpenOrCreateManifest()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.IO
      source:
        id: OpenOrCreateManifest
        path: ''
        startLine: 172
      summary: "\nOpens or creates a manifest for the root folder.\n"
      example: []
      syntax:
        content:
          CSharp: public SyncManifest OpenOrCreateManifest()
          VB: Public Function OpenOrCreateManifest As SyncManifest
        return:
          type: SyncManifest
          description: A manifest that manages the root folder
      overload: Unity.Reflect.IO.LocalStorage.OpenOrCreateManifest*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.IO.LocalStorage.SaveManifest(System.String,System.String,SyncManifest)
      commentId: M:Unity.Reflect.IO.LocalStorage.SaveManifest(System.String,System.String,SyncManifest)
      language: CSharp
      name:
        CSharp: SaveManifest(String, String, SyncManifest)
        VB: SaveManifest(String, String, SyncManifest)
      nameWithType:
        CSharp: LocalStorage.SaveManifest(String, String, SyncManifest)
        VB: LocalStorage.SaveManifest(String, String, SyncManifest)
      qualifiedName:
        CSharp: Unity.Reflect.IO.LocalStorage.SaveManifest(System.String, System.String, SyncManifest)
        VB: Unity.Reflect.IO.LocalStorage.SaveManifest(System.String, System.String, SyncManifest)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.IO
      source:
        id: SaveManifest
        path: ''
        startLine: 206
      summary: "\nSave a manifest in a specific source project.\n"
      example: []
      syntax:
        content:
          CSharp: public void SaveManifest(string projectId, string sourceId, SyncManifest syncManifest)
          VB: Public Sub SaveManifest(projectId As String, sourceId As String, syncManifest As SyncManifest)
        parameters:
        - id: projectId
          type: System.String
          description: The Unity Project ID
        - id: sourceId
          type: System.String
        - id: syncManifest
          type: SyncManifest
          description: The manifest to save
      overload: Unity.Reflect.IO.LocalStorage.SaveManifest*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.IO.LocalStorage.LoadProjectManifests(System.String)
      commentId: M:Unity.Reflect.IO.LocalStorage.LoadProjectManifests(System.String)
      language: CSharp
      name:
        CSharp: LoadProjectManifests(String)
        VB: LoadProjectManifests(String)
      nameWithType:
        CSharp: LocalStorage.LoadProjectManifests(String)
        VB: LocalStorage.LoadProjectManifests(String)
      qualifiedName:
        CSharp: Unity.Reflect.IO.LocalStorage.LoadProjectManifests(System.String)
        VB: Unity.Reflect.IO.LocalStorage.LoadProjectManifests(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.IO
      source:
        id: LoadProjectManifests
        path: ''
        startLine: 218
      summary: "\nLoads all the local source projects in a specific Unity Project.\n"
      example: []
      syntax:
        content:
          CSharp: public IEnumerable<SourceProject> LoadProjectManifests(string projectId)
          VB: Public Function LoadProjectManifests(projectId As String) As IEnumerable(Of SourceProject)
        parameters:
        - id: projectId
          type: System.String
          description: The Unity Project ID
        return:
          type: IEnumerable{Unity.Reflect.IO.SourceProject}
          description: All the source projects that are locally stored in the provided Unity Project.
      overload: Unity.Reflect.IO.LocalStorage.LoadProjectManifests*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.IO.LocalStorage.GetLocalSourceProjectIds(System.String)
      commentId: M:Unity.Reflect.IO.LocalStorage.GetLocalSourceProjectIds(System.String)
      language: CSharp
      name:
        CSharp: GetLocalSourceProjectIds(String)
        VB: GetLocalSourceProjectIds(String)
      nameWithType:
        CSharp: LocalStorage.GetLocalSourceProjectIds(String)
        VB: LocalStorage.GetLocalSourceProjectIds(String)
      qualifiedName:
        CSharp: Unity.Reflect.IO.LocalStorage.GetLocalSourceProjectIds(System.String)
        VB: Unity.Reflect.IO.LocalStorage.GetLocalSourceProjectIds(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.IO
      source:
        id: GetLocalSourceProjectIds
        path: ''
        startLine: 239
      summary: "\nGets all the IDs of all the source projects that are locally stored in an Unity Project.\n"
      example: []
      syntax:
        content:
          CSharp: public string[] GetLocalSourceProjectIds(string projectId)
          VB: Public Function GetLocalSourceProjectIds(projectId As String) As String()
        parameters:
        - id: projectId
          type: System.String
          description: The Unity project ID
        return:
          type: System.String[]
          description: An array of source project IDs
      overload: Unity.Reflect.IO.LocalStorage.GetLocalSourceProjectIds*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.IO.LocalStorage.LoadManifest(System.String,System.String)
      commentId: M:Unity.Reflect.IO.LocalStorage.LoadManifest(System.String,System.String)
      language: CSharp
      name:
        CSharp: LoadManifest(String, String)
        VB: LoadManifest(String, String)
      nameWithType:
        CSharp: LocalStorage.LoadManifest(String, String)
        VB: LocalStorage.LoadManifest(String, String)
      qualifiedName:
        CSharp: Unity.Reflect.IO.LocalStorage.LoadManifest(System.String, System.String)
        VB: Unity.Reflect.IO.LocalStorage.LoadManifest(System.String, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.IO
      source:
        id: LoadManifest
        path: ''
        startLine: 252
      summary: "\nLoads the manifest for a locally stored source project in an Unity Project.\n"
      example: []
      syntax:
        content:
          CSharp: public SyncManifest LoadManifest(string projectId, string sourceId)
          VB: Public Function LoadManifest(projectId As String, sourceId As String) As SyncManifest
        parameters:
        - id: projectId
          type: System.String
          description: The Unity Project ID
        - id: sourceId
          type: System.String
        return:
          type: SyncManifest
          description: The source project&apos;s manifest
      overload: Unity.Reflect.IO.LocalStorage.LoadManifest*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.IO.LocalStorage.Sanitize(System.String)
      commentId: M:Unity.Reflect.IO.LocalStorage.Sanitize(System.String)
      language: CSharp
      name:
        CSharp: Sanitize(String)
        VB: Sanitize(String)
      nameWithType:
        CSharp: LocalStorage.Sanitize(String)
        VB: LocalStorage.Sanitize(String)
      qualifiedName:
        CSharp: Unity.Reflect.IO.LocalStorage.Sanitize(System.String)
        VB: Unity.Reflect.IO.LocalStorage.Sanitize(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.IO
      source:
        id: Sanitize
        path: ''
        startLine: 263
      summary: "\nSanitizes the file name.\n"
      example: []
      syntax:
        content:
          CSharp: public string Sanitize(string name)
          VB: Public Function Sanitize(name As String) As String
        parameters:
        - id: name
          type: System.String
          description: A file name to sanitize (without extension)
        return:
          type: System.String
          description: A sanitized file name
      overload: Unity.Reflect.IO.LocalStorage.Sanitize*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.IO.LocalStorage.Store(ISyncModel,System.String,System.String,System.String)
      commentId: M:Unity.Reflect.IO.LocalStorage.Store(ISyncModel,System.String,System.String,System.String)
      language: CSharp
      name:
        CSharp: Store(ISyncModel, String, String, String)
        VB: Store(ISyncModel, String, String, String)
      nameWithType:
        CSharp: LocalStorage.Store(ISyncModel, String, String, String)
        VB: LocalStorage.Store(ISyncModel, String, String, String)
      qualifiedName:
        CSharp: Unity.Reflect.IO.LocalStorage.Store(ISyncModel, System.String, System.String, System.String)
        VB: Unity.Reflect.IO.LocalStorage.Store(ISyncModel, System.String, System.String, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.IO
      source:
        id: Store
        path: ''
        startLine: 277
      summary: "\nStores a model in a locally stored Source project.\n"
      example: []
      syntax:
        content:
          CSharp: public string Store(ISyncModel syncModel, string projectId, string sourceId, string relativePath)
          VB: Public Function Store(syncModel As ISyncModel, projectId As String, sourceId As String, relativePath As String) As String
        parameters:
        - id: syncModel
          type: ISyncModel
          description: The model to store
        - id: projectId
          type: System.String
          description: The Unity project ID
        - id: sourceId
          type: System.String
        - id: relativePath
          type: System.String
          description: The relative path of the model
        return:
          type: System.String
          description: A hash of the created (or overwritten) file&apos;s absolute path
      overload: Unity.Reflect.IO.LocalStorage.Store*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.IO.LocalStorage.Load``1(System.String,System.String,System.String)
      commentId: M:Unity.Reflect.IO.LocalStorage.Load``1(System.String,System.String,System.String)
      language: CSharp
      name:
        CSharp: Load<T>(String, String, String)
        VB: Load(Of T)(String, String, String)
      nameWithType:
        CSharp: LocalStorage.Load<T>(String, String, String)
        VB: LocalStorage.Load(Of T)(String, String, String)
      qualifiedName:
        CSharp: Unity.Reflect.IO.LocalStorage.Load<T>(System.String, System.String, System.String)
        VB: Unity.Reflect.IO.LocalStorage.Load(Of T)(System.String, System.String, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.IO
      source:
        id: Load
        path: ''
        startLine: 300
      summary: "\nLoads a model from a locally stored source project.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public T Load<T>(string projectId, string sourceId, string relativePath)

                where T : class, ISyncModel, IMessage
          VB: Public Function Load(Of T As {Class, ISyncModel, IMessage})(projectId As String, sourceId As String, relativePath As String) As T
        parameters:
        - id: projectId
          type: System.String
          description: The Unity Project ID
        - id: sourceId
          type: System.String
        - id: relativePath
          type: System.String
          description: The relative path of the model
        typeParameters:
        - id: T
          description: The type of the model you want to load
        return:
          type: '{T}'
          description: A model of the desired type, created by parsing the locally stored model
      overload: Unity.Reflect.IO.LocalStorage.Load*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.IO.LocalStorage.GetProjectFolder(System.String)
      commentId: M:Unity.Reflect.IO.LocalStorage.GetProjectFolder(System.String)
      language: CSharp
      name:
        CSharp: GetProjectFolder(String)
        VB: GetProjectFolder(String)
      nameWithType:
        CSharp: LocalStorage.GetProjectFolder(String)
        VB: LocalStorage.GetProjectFolder(String)
      qualifiedName:
        CSharp: Unity.Reflect.IO.LocalStorage.GetProjectFolder(System.String)
        VB: Unity.Reflect.IO.LocalStorage.GetProjectFolder(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.IO
      source:
        id: GetProjectFolder
        path: ''
        startLine: 312
      summary: "\nGets the folder path of a specific Unity Project.\n"
      example: []
      syntax:
        content:
          CSharp: public string GetProjectFolder(string projectId)
          VB: Public Function GetProjectFolder(projectId As String) As String
        parameters:
        - id: projectId
          type: System.String
          description: The ID of the Unity Project
        return:
          type: System.String
          description: The folder path of the provided project
      overload: Unity.Reflect.IO.LocalStorage.GetProjectFolder*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.IO.LocalStorage.GetSourceProjectFolder(System.String,System.String)
      commentId: M:Unity.Reflect.IO.LocalStorage.GetSourceProjectFolder(System.String,System.String)
      language: CSharp
      name:
        CSharp: GetSourceProjectFolder(String, String)
        VB: GetSourceProjectFolder(String, String)
      nameWithType:
        CSharp: LocalStorage.GetSourceProjectFolder(String, String)
        VB: LocalStorage.GetSourceProjectFolder(String, String)
      qualifiedName:
        CSharp: Unity.Reflect.IO.LocalStorage.GetSourceProjectFolder(System.String, System.String)
        VB: Unity.Reflect.IO.LocalStorage.GetSourceProjectFolder(System.String, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.IO
      source:
        id: GetSourceProjectFolder
        path: ''
        startLine: 323
      summary: "\nGets the folder path of a specific source project in an Unity Project.\n"
      example: []
      syntax:
        content:
          CSharp: public string GetSourceProjectFolder(string projectId, string sourcedId)
          VB: Public Function GetSourceProjectFolder(projectId As String, sourcedId As String) As String
        parameters:
        - id: projectId
          type: System.String
          description: The ID of the Unity Project
        - id: sourcedId
          type: System.String
        return:
          type: System.String
          description: The folder path of the provided project
      overload: Unity.Reflect.IO.LocalStorage.GetSourceProjectFolder*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.IO.LocalStorage.HasLocalData(System.String)
      commentId: M:Unity.Reflect.IO.LocalStorage.HasLocalData(System.String)
      language: CSharp
      name:
        CSharp: HasLocalData(String)
        VB: HasLocalData(String)
      nameWithType:
        CSharp: LocalStorage.HasLocalData(String)
        VB: LocalStorage.HasLocalData(String)
      qualifiedName:
        CSharp: Unity.Reflect.IO.LocalStorage.HasLocalData(System.String)
        VB: Unity.Reflect.IO.LocalStorage.HasLocalData(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.IO
      source:
        id: HasLocalData
        path: ''
        startLine: 332
      summary: "\nIndicates whether there is local data for a specific Unity Project.\n"
      example: []
      syntax:
        content:
          CSharp: public bool HasLocalData(string projectId)
          VB: Public Function HasLocalData(projectId As String) As Boolean
        parameters:
        - id: projectId
          type: System.String
          description: The ID of the Unity Project
        return:
          type: System.Boolean
      overload: Unity.Reflect.IO.LocalStorage.HasLocalData*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: Unity.Reflect.Model
  commentId: N:Unity.Reflect.Model
  language: CSharp
  name:
    CSharp: Unity.Reflect.Model
    VB: Unity.Reflect.Model
  nameWithType:
    CSharp: Unity.Reflect.Model
    VB: Unity.Reflect.Model
  qualifiedName:
    CSharp: Unity.Reflect.Model
    VB: Unity.Reflect.Model
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Unity.Reflect.Model.SyncCamera
    commentId: T:Unity.Reflect.Model.SyncCamera
    language: CSharp
    name:
      CSharp: SyncCamera
      VB: SyncCamera
    nameWithType:
      CSharp: SyncCamera
      VB: SyncCamera
    qualifiedName:
      CSharp: Unity.Reflect.Model.SyncCamera
      VB: Unity.Reflect.Model.SyncCamera
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect.Model
    source:
      id: SyncCamera
      path: ''
      startLine: 1736
    syntax:
      content:
        CSharp: 'public sealed class SyncCamera : pb.IMessage<SyncCamera>'
        VB: >-
          Public NotInheritable Class SyncCamera

              Inherits pb.IMessage(Of SyncCamera)
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - sealed
      - class
      VB:
      - Public
      - NotInheritable
      - Class
    items:
    - id: Unity.Reflect.Model.SyncCamera.FromOrthographic(System.String,Unity.Reflect.Model.SyncTransform,System.Single,System.Single,System.Single,System.Single)
      commentId: M:Unity.Reflect.Model.SyncCamera.FromOrthographic(System.String,Unity.Reflect.Model.SyncTransform,System.Single,System.Single,System.Single,System.Single)
      language: CSharp
      name:
        CSharp: FromOrthographic(String, SyncTransform, Single, Single, Single, Single)
        VB: FromOrthographic(String, SyncTransform, Single, Single, Single, Single)
      nameWithType:
        CSharp: SyncCamera.FromOrthographic(String, SyncTransform, Single, Single, Single, Single)
        VB: SyncCamera.FromOrthographic(String, SyncTransform, Single, Single, Single, Single)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncCamera.FromOrthographic(System.String, Unity.Reflect.Model.SyncTransform, System.Single, System.Single, System.Single, System.Single)
        VB: Unity.Reflect.Model.SyncCamera.FromOrthographic(System.String, Unity.Reflect.Model.SyncTransform, System.Single, System.Single, System.Single, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: FromOrthographic
        path: ''
        startLine: 363
      syntax:
        content:
          CSharp: public static SyncCamera FromOrthographic(string name, SyncTransform transform, float aspect, float size, float near, float far)
          VB: Public Shared Function FromOrthographic(name As String, transform As SyncTransform, aspect As Single, size As Single, near As Single, far As Single) As SyncCamera
        parameters:
        - id: name
          type: System.String
        - id: transform
          type: Unity.Reflect.Model.SyncTransform
        - id: aspect
          type: System.Single
        - id: size
          type: System.Single
        - id: near
          type: System.Single
        - id: far
          type: System.Single
        return:
          type: Unity.Reflect.Model.SyncCamera
      overload: Unity.Reflect.Model.SyncCamera.FromOrthographic*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Unity.Reflect.Model.SyncCamera.FromPerspective(System.String,Unity.Reflect.Model.SyncTransform,System.Single,System.Single,System.Single,System.Single)
      commentId: M:Unity.Reflect.Model.SyncCamera.FromPerspective(System.String,Unity.Reflect.Model.SyncTransform,System.Single,System.Single,System.Single,System.Single)
      language: CSharp
      name:
        CSharp: FromPerspective(String, SyncTransform, Single, Single, Single, Single)
        VB: FromPerspective(String, SyncTransform, Single, Single, Single, Single)
      nameWithType:
        CSharp: SyncCamera.FromPerspective(String, SyncTransform, Single, Single, Single, Single)
        VB: SyncCamera.FromPerspective(String, SyncTransform, Single, Single, Single, Single)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncCamera.FromPerspective(System.String, Unity.Reflect.Model.SyncTransform, System.Single, System.Single, System.Single, System.Single)
        VB: Unity.Reflect.Model.SyncCamera.FromPerspective(System.String, Unity.Reflect.Model.SyncTransform, System.Single, System.Single, System.Single, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: FromPerspective
        path: ''
        startLine: 377
      syntax:
        content:
          CSharp: public static SyncCamera FromPerspective(string name, SyncTransform transform, float aspect, float fov, float near, float far)
          VB: Public Shared Function FromPerspective(name As String, transform As SyncTransform, aspect As Single, fov As Single, near As Single, far As Single) As SyncCamera
        parameters:
        - id: name
          type: System.String
        - id: transform
          type: Unity.Reflect.Model.SyncTransform
        - id: aspect
          type: System.Single
        - id: fov
          type: System.Single
        - id: near
          type: System.Single
        - id: far
          type: System.Single
        return:
          type: Unity.Reflect.Model.SyncCamera
      overload: Unity.Reflect.Model.SyncCamera.FromPerspective*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Unity.Reflect.Model.SyncCamera.FromOrthographicFrustum(System.String,Unity.Reflect.Model.SyncTransform,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
      commentId: M:Unity.Reflect.Model.SyncCamera.FromOrthographicFrustum(System.String,Unity.Reflect.Model.SyncTransform,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
      language: CSharp
      name:
        CSharp: FromOrthographicFrustum(String, SyncTransform, Single, Single, Single, Single, Single, Single)
        VB: FromOrthographicFrustum(String, SyncTransform, Single, Single, Single, Single, Single, Single)
      nameWithType:
        CSharp: SyncCamera.FromOrthographicFrustum(String, SyncTransform, Single, Single, Single, Single, Single, Single)
        VB: SyncCamera.FromOrthographicFrustum(String, SyncTransform, Single, Single, Single, Single, Single, Single)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncCamera.FromOrthographicFrustum(System.String, Unity.Reflect.Model.SyncTransform, System.Single, System.Single, System.Single, System.Single, System.Single, System.Single)
        VB: Unity.Reflect.Model.SyncCamera.FromOrthographicFrustum(System.String, Unity.Reflect.Model.SyncTransform, System.Single, System.Single, System.Single, System.Single, System.Single, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: FromOrthographicFrustum
        path: ''
        startLine: 391
      syntax:
        content:
          CSharp: public static SyncCamera FromOrthographicFrustum(string name, SyncTransform transform, float left, float right, float bottom, float top, float near, float far)
          VB: Public Shared Function FromOrthographicFrustum(name As String, transform As SyncTransform, left As Single, right As Single, bottom As Single, top As Single, near As Single, far As Single) As SyncCamera
        parameters:
        - id: name
          type: System.String
        - id: transform
          type: Unity.Reflect.Model.SyncTransform
        - id: left
          type: System.Single
        - id: right
          type: System.Single
        - id: bottom
          type: System.Single
        - id: top
          type: System.Single
        - id: near
          type: System.Single
        - id: far
          type: System.Single
        return:
          type: Unity.Reflect.Model.SyncCamera
      overload: Unity.Reflect.Model.SyncCamera.FromOrthographicFrustum*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Unity.Reflect.Model.SyncCamera.FromPerspectiveFrustum(System.String,Unity.Reflect.Model.SyncTransform,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
      commentId: M:Unity.Reflect.Model.SyncCamera.FromPerspectiveFrustum(System.String,Unity.Reflect.Model.SyncTransform,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
      language: CSharp
      name:
        CSharp: FromPerspectiveFrustum(String, SyncTransform, Single, Single, Single, Single, Single, Single)
        VB: FromPerspectiveFrustum(String, SyncTransform, Single, Single, Single, Single, Single, Single)
      nameWithType:
        CSharp: SyncCamera.FromPerspectiveFrustum(String, SyncTransform, Single, Single, Single, Single, Single, Single)
        VB: SyncCamera.FromPerspectiveFrustum(String, SyncTransform, Single, Single, Single, Single, Single, Single)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncCamera.FromPerspectiveFrustum(System.String, Unity.Reflect.Model.SyncTransform, System.Single, System.Single, System.Single, System.Single, System.Single, System.Single)
        VB: Unity.Reflect.Model.SyncCamera.FromPerspectiveFrustum(System.String, Unity.Reflect.Model.SyncTransform, System.Single, System.Single, System.Single, System.Single, System.Single, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: FromPerspectiveFrustum
        path: ''
        startLine: 409
      syntax:
        content:
          CSharp: public static SyncCamera FromPerspectiveFrustum(string name, SyncTransform transform, float left, float right, float bottom, float top, float near, float far)
          VB: Public Shared Function FromPerspectiveFrustum(name As String, transform As SyncTransform, left As Single, right As Single, bottom As Single, top As Single, near As Single, far As Single) As SyncCamera
        parameters:
        - id: name
          type: System.String
        - id: transform
          type: Unity.Reflect.Model.SyncTransform
        - id: left
          type: System.Single
        - id: right
          type: System.Single
        - id: bottom
          type: System.Single
        - id: top
          type: System.Single
        - id: near
          type: System.Single
        - id: far
          type: System.Single
        return:
          type: Unity.Reflect.Model.SyncCamera
      overload: Unity.Reflect.Model.SyncCamera.FromPerspectiveFrustum*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Unity.Reflect.Model.SyncCamera.Parser
      commentId: P:Unity.Reflect.Model.SyncCamera.Parser
      language: CSharp
      name:
        CSharp: Parser
        VB: Parser
      nameWithType:
        CSharp: SyncCamera.Parser
        VB: SyncCamera.Parser
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncCamera.Parser
        VB: Unity.Reflect.Model.SyncCamera.Parser
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Parser
        path: ''
        startLine: 1739
      syntax:
        content:
          CSharp: public static pb.MessageParser<SyncCamera> Parser { get; }
          VB: Public Shared ReadOnly Property Parser As pb.MessageParser(Of SyncCamera)
        parameters: []
        return:
          type: pb.MessageParser{Unity.Reflect.Model.SyncCamera}
      overload: Unity.Reflect.Model.SyncCamera.Parser*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Unity.Reflect.Model.SyncCamera.Descriptor
      commentId: P:Unity.Reflect.Model.SyncCamera.Descriptor
      language: CSharp
      name:
        CSharp: Descriptor
        VB: Descriptor
      nameWithType:
        CSharp: SyncCamera.Descriptor
        VB: SyncCamera.Descriptor
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncCamera.Descriptor
        VB: Unity.Reflect.Model.SyncCamera.Descriptor
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Descriptor
        path: ''
        startLine: 1742
      syntax:
        content:
          CSharp: public static pbr.MessageDescriptor Descriptor { get; }
          VB: Public Shared ReadOnly Property Descriptor As pbr.MessageDescriptor
        parameters: []
        return:
          type: pbr.MessageDescriptor
      overload: Unity.Reflect.Model.SyncCamera.Descriptor*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Unity.Reflect.Model.SyncCamera.#ctor
      commentId: M:Unity.Reflect.Model.SyncCamera.#ctor
      language: CSharp
      name:
        CSharp: SyncCamera()
        VB: SyncCamera()
      nameWithType:
        CSharp: SyncCamera.SyncCamera()
        VB: SyncCamera.SyncCamera()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncCamera.SyncCamera()
        VB: Unity.Reflect.Model.SyncCamera.SyncCamera()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: .ctor
        path: ''
        startLine: 1752
      syntax:
        content:
          CSharp: public SyncCamera()
          VB: Public Sub New
      overload: Unity.Reflect.Model.SyncCamera.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncCamera.#ctor(Unity.Reflect.Model.SyncCamera)
      commentId: M:Unity.Reflect.Model.SyncCamera.#ctor(Unity.Reflect.Model.SyncCamera)
      language: CSharp
      name:
        CSharp: SyncCamera(SyncCamera)
        VB: SyncCamera(SyncCamera)
      nameWithType:
        CSharp: SyncCamera.SyncCamera(SyncCamera)
        VB: SyncCamera.SyncCamera(SyncCamera)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncCamera.SyncCamera(Unity.Reflect.Model.SyncCamera)
        VB: Unity.Reflect.Model.SyncCamera.SyncCamera(Unity.Reflect.Model.SyncCamera)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: .ctor
        path: ''
        startLine: 1759
      syntax:
        content:
          CSharp: public SyncCamera(SyncCamera other)
          VB: Public Sub New(other As SyncCamera)
        parameters:
        - id: other
          type: Unity.Reflect.Model.SyncCamera
      overload: Unity.Reflect.Model.SyncCamera.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncCamera.Clone
      commentId: M:Unity.Reflect.Model.SyncCamera.Clone
      language: CSharp
      name:
        CSharp: Clone()
        VB: Clone()
      nameWithType:
        CSharp: SyncCamera.Clone()
        VB: SyncCamera.Clone()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncCamera.Clone()
        VB: Unity.Reflect.Model.SyncCamera.Clone()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Clone
        path: ''
        startLine: 1776
      syntax:
        content:
          CSharp: public SyncCamera Clone()
          VB: Public Function Clone As SyncCamera
        return:
          type: Unity.Reflect.Model.SyncCamera
      overload: Unity.Reflect.Model.SyncCamera.Clone*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncCamera.NameFieldNumber
      commentId: F:Unity.Reflect.Model.SyncCamera.NameFieldNumber
      language: CSharp
      name:
        CSharp: NameFieldNumber
        VB: NameFieldNumber
      nameWithType:
        CSharp: SyncCamera.NameFieldNumber
        VB: SyncCamera.NameFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncCamera.NameFieldNumber
        VB: Unity.Reflect.Model.SyncCamera.NameFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: NameFieldNumber
        path: ''
        startLine: 1782
      summary: Field number for the &quot;name&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int NameFieldNumber = 1
          VB: Public Const NameFieldNumber As Integer = 1
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncCamera.Name
      commentId: P:Unity.Reflect.Model.SyncCamera.Name
      language: CSharp
      name:
        CSharp: Name
        VB: Name
      nameWithType:
        CSharp: SyncCamera.Name
        VB: SyncCamera.Name
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncCamera.Name
        VB: Unity.Reflect.Model.SyncCamera.Name
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Name
        path: ''
        startLine: 1784
      syntax:
        content:
          CSharp: public string Name { get; set; }
          VB: Public Property Name As String
        parameters: []
        return:
          type: System.String
      overload: Unity.Reflect.Model.SyncCamera.Name*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncCamera.TransformFieldNumber
      commentId: F:Unity.Reflect.Model.SyncCamera.TransformFieldNumber
      language: CSharp
      name:
        CSharp: TransformFieldNumber
        VB: TransformFieldNumber
      nameWithType:
        CSharp: SyncCamera.TransformFieldNumber
        VB: SyncCamera.TransformFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncCamera.TransformFieldNumber
        VB: Unity.Reflect.Model.SyncCamera.TransformFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: TransformFieldNumber
        path: ''
        startLine: 1793
      summary: Field number for the &quot;transform&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int TransformFieldNumber = 2
          VB: Public Const TransformFieldNumber As Integer = 2
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncCamera.Transform
      commentId: P:Unity.Reflect.Model.SyncCamera.Transform
      language: CSharp
      name:
        CSharp: Transform
        VB: Transform
      nameWithType:
        CSharp: SyncCamera.Transform
        VB: SyncCamera.Transform
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncCamera.Transform
        VB: Unity.Reflect.Model.SyncCamera.Transform
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Transform
        path: ''
        startLine: 1795
      syntax:
        content:
          CSharp: public SyncTransform Transform { get; set; }
          VB: Public Property Transform As SyncTransform
        parameters: []
        return:
          type: Unity.Reflect.Model.SyncTransform
      overload: Unity.Reflect.Model.SyncCamera.Transform*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncCamera.OrthographicFieldNumber
      commentId: F:Unity.Reflect.Model.SyncCamera.OrthographicFieldNumber
      language: CSharp
      name:
        CSharp: OrthographicFieldNumber
        VB: OrthographicFieldNumber
      nameWithType:
        CSharp: SyncCamera.OrthographicFieldNumber
        VB: SyncCamera.OrthographicFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncCamera.OrthographicFieldNumber
        VB: Unity.Reflect.Model.SyncCamera.OrthographicFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: OrthographicFieldNumber
        path: ''
        startLine: 1804
      summary: Field number for the &quot;orthographic&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int OrthographicFieldNumber = 3
          VB: Public Const OrthographicFieldNumber As Integer = 3
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncCamera.Orthographic
      commentId: P:Unity.Reflect.Model.SyncCamera.Orthographic
      language: CSharp
      name:
        CSharp: Orthographic
        VB: Orthographic
      nameWithType:
        CSharp: SyncCamera.Orthographic
        VB: SyncCamera.Orthographic
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncCamera.Orthographic
        VB: Unity.Reflect.Model.SyncCamera.Orthographic
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Orthographic
        path: ''
        startLine: 1806
      syntax:
        content:
          CSharp: public bool Orthographic { get; set; }
          VB: Public Property Orthographic As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: Unity.Reflect.Model.SyncCamera.Orthographic*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncCamera.NearFieldNumber
      commentId: F:Unity.Reflect.Model.SyncCamera.NearFieldNumber
      language: CSharp
      name:
        CSharp: NearFieldNumber
        VB: NearFieldNumber
      nameWithType:
        CSharp: SyncCamera.NearFieldNumber
        VB: SyncCamera.NearFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncCamera.NearFieldNumber
        VB: Unity.Reflect.Model.SyncCamera.NearFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: NearFieldNumber
        path: ''
        startLine: 1815
      summary: Field number for the &quot;near&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int NearFieldNumber = 4
          VB: Public Const NearFieldNumber As Integer = 4
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncCamera.Near
      commentId: P:Unity.Reflect.Model.SyncCamera.Near
      language: CSharp
      name:
        CSharp: Near
        VB: Near
      nameWithType:
        CSharp: SyncCamera.Near
        VB: SyncCamera.Near
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncCamera.Near
        VB: Unity.Reflect.Model.SyncCamera.Near
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Near
        path: ''
        startLine: 1817
      syntax:
        content:
          CSharp: public float Near { get; set; }
          VB: Public Property Near As Single
        parameters: []
        return:
          type: System.Single
      overload: Unity.Reflect.Model.SyncCamera.Near*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncCamera.FarFieldNumber
      commentId: F:Unity.Reflect.Model.SyncCamera.FarFieldNumber
      language: CSharp
      name:
        CSharp: FarFieldNumber
        VB: FarFieldNumber
      nameWithType:
        CSharp: SyncCamera.FarFieldNumber
        VB: SyncCamera.FarFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncCamera.FarFieldNumber
        VB: Unity.Reflect.Model.SyncCamera.FarFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: FarFieldNumber
        path: ''
        startLine: 1826
      summary: Field number for the &quot;far&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int FarFieldNumber = 5
          VB: Public Const FarFieldNumber As Integer = 5
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncCamera.Far
      commentId: P:Unity.Reflect.Model.SyncCamera.Far
      language: CSharp
      name:
        CSharp: Far
        VB: Far
      nameWithType:
        CSharp: SyncCamera.Far
        VB: SyncCamera.Far
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncCamera.Far
        VB: Unity.Reflect.Model.SyncCamera.Far
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Far
        path: ''
        startLine: 1828
      syntax:
        content:
          CSharp: public float Far { get; set; }
          VB: Public Property Far As Single
        parameters: []
        return:
          type: System.Single
      overload: Unity.Reflect.Model.SyncCamera.Far*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncCamera.LeftFieldNumber
      commentId: F:Unity.Reflect.Model.SyncCamera.LeftFieldNumber
      language: CSharp
      name:
        CSharp: LeftFieldNumber
        VB: LeftFieldNumber
      nameWithType:
        CSharp: SyncCamera.LeftFieldNumber
        VB: SyncCamera.LeftFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncCamera.LeftFieldNumber
        VB: Unity.Reflect.Model.SyncCamera.LeftFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: LeftFieldNumber
        path: ''
        startLine: 1837
      summary: Field number for the &quot;left&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int LeftFieldNumber = 6
          VB: Public Const LeftFieldNumber As Integer = 6
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncCamera.Left
      commentId: P:Unity.Reflect.Model.SyncCamera.Left
      language: CSharp
      name:
        CSharp: Left
        VB: Left
      nameWithType:
        CSharp: SyncCamera.Left
        VB: SyncCamera.Left
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncCamera.Left
        VB: Unity.Reflect.Model.SyncCamera.Left
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Left
        path: ''
        startLine: 1839
      syntax:
        content:
          CSharp: public float Left { get; set; }
          VB: Public Property Left As Single
        parameters: []
        return:
          type: System.Single
      overload: Unity.Reflect.Model.SyncCamera.Left*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncCamera.RightFieldNumber
      commentId: F:Unity.Reflect.Model.SyncCamera.RightFieldNumber
      language: CSharp
      name:
        CSharp: RightFieldNumber
        VB: RightFieldNumber
      nameWithType:
        CSharp: SyncCamera.RightFieldNumber
        VB: SyncCamera.RightFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncCamera.RightFieldNumber
        VB: Unity.Reflect.Model.SyncCamera.RightFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: RightFieldNumber
        path: ''
        startLine: 1848
      summary: Field number for the &quot;right&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int RightFieldNumber = 7
          VB: Public Const RightFieldNumber As Integer = 7
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncCamera.Right
      commentId: P:Unity.Reflect.Model.SyncCamera.Right
      language: CSharp
      name:
        CSharp: Right
        VB: Right
      nameWithType:
        CSharp: SyncCamera.Right
        VB: SyncCamera.Right
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncCamera.Right
        VB: Unity.Reflect.Model.SyncCamera.Right
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Right
        path: ''
        startLine: 1850
      syntax:
        content:
          CSharp: public float Right { get; set; }
          VB: Public Property Right As Single
        parameters: []
        return:
          type: System.Single
      overload: Unity.Reflect.Model.SyncCamera.Right*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncCamera.BottomFieldNumber
      commentId: F:Unity.Reflect.Model.SyncCamera.BottomFieldNumber
      language: CSharp
      name:
        CSharp: BottomFieldNumber
        VB: BottomFieldNumber
      nameWithType:
        CSharp: SyncCamera.BottomFieldNumber
        VB: SyncCamera.BottomFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncCamera.BottomFieldNumber
        VB: Unity.Reflect.Model.SyncCamera.BottomFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: BottomFieldNumber
        path: ''
        startLine: 1859
      summary: Field number for the &quot;bottom&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int BottomFieldNumber = 8
          VB: Public Const BottomFieldNumber As Integer = 8
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncCamera.Bottom
      commentId: P:Unity.Reflect.Model.SyncCamera.Bottom
      language: CSharp
      name:
        CSharp: Bottom
        VB: Bottom
      nameWithType:
        CSharp: SyncCamera.Bottom
        VB: SyncCamera.Bottom
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncCamera.Bottom
        VB: Unity.Reflect.Model.SyncCamera.Bottom
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Bottom
        path: ''
        startLine: 1861
      syntax:
        content:
          CSharp: public float Bottom { get; set; }
          VB: Public Property Bottom As Single
        parameters: []
        return:
          type: System.Single
      overload: Unity.Reflect.Model.SyncCamera.Bottom*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncCamera.TopFieldNumber
      commentId: F:Unity.Reflect.Model.SyncCamera.TopFieldNumber
      language: CSharp
      name:
        CSharp: TopFieldNumber
        VB: TopFieldNumber
      nameWithType:
        CSharp: SyncCamera.TopFieldNumber
        VB: SyncCamera.TopFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncCamera.TopFieldNumber
        VB: Unity.Reflect.Model.SyncCamera.TopFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: TopFieldNumber
        path: ''
        startLine: 1870
      summary: Field number for the &quot;top&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int TopFieldNumber = 9
          VB: Public Const TopFieldNumber As Integer = 9
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncCamera.Top
      commentId: P:Unity.Reflect.Model.SyncCamera.Top
      language: CSharp
      name:
        CSharp: Top
        VB: Top
      nameWithType:
        CSharp: SyncCamera.Top
        VB: SyncCamera.Top
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncCamera.Top
        VB: Unity.Reflect.Model.SyncCamera.Top
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Top
        path: ''
        startLine: 1872
      syntax:
        content:
          CSharp: public float Top { get; set; }
          VB: Public Property Top As Single
        parameters: []
        return:
          type: System.Single
      overload: Unity.Reflect.Model.SyncCamera.Top*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncCamera.AspectFieldNumber
      commentId: F:Unity.Reflect.Model.SyncCamera.AspectFieldNumber
      language: CSharp
      name:
        CSharp: AspectFieldNumber
        VB: AspectFieldNumber
      nameWithType:
        CSharp: SyncCamera.AspectFieldNumber
        VB: SyncCamera.AspectFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncCamera.AspectFieldNumber
        VB: Unity.Reflect.Model.SyncCamera.AspectFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: AspectFieldNumber
        path: ''
        startLine: 1881
      summary: Field number for the &quot;aspect&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int AspectFieldNumber = 10
          VB: Public Const AspectFieldNumber As Integer = 10
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncCamera.Aspect
      commentId: P:Unity.Reflect.Model.SyncCamera.Aspect
      language: CSharp
      name:
        CSharp: Aspect
        VB: Aspect
      nameWithType:
        CSharp: SyncCamera.Aspect
        VB: SyncCamera.Aspect
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncCamera.Aspect
        VB: Unity.Reflect.Model.SyncCamera.Aspect
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Aspect
        path: ''
        startLine: 1883
      syntax:
        content:
          CSharp: public float Aspect { get; set; }
          VB: Public Property Aspect As Single
        parameters: []
        return:
          type: System.Single
      overload: Unity.Reflect.Model.SyncCamera.Aspect*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncCamera.SizeFieldNumber
      commentId: F:Unity.Reflect.Model.SyncCamera.SizeFieldNumber
      language: CSharp
      name:
        CSharp: SizeFieldNumber
        VB: SizeFieldNumber
      nameWithType:
        CSharp: SyncCamera.SizeFieldNumber
        VB: SyncCamera.SizeFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncCamera.SizeFieldNumber
        VB: Unity.Reflect.Model.SyncCamera.SizeFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: SizeFieldNumber
        path: ''
        startLine: 1892
      summary: Field number for the &quot;size&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int SizeFieldNumber = 11
          VB: Public Const SizeFieldNumber As Integer = 11
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncCamera.Size
      commentId: P:Unity.Reflect.Model.SyncCamera.Size
      language: CSharp
      name:
        CSharp: Size
        VB: Size
      nameWithType:
        CSharp: SyncCamera.Size
        VB: SyncCamera.Size
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncCamera.Size
        VB: Unity.Reflect.Model.SyncCamera.Size
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Size
        path: ''
        startLine: 1894
      syntax:
        content:
          CSharp: public float Size { get; set; }
          VB: Public Property Size As Single
        parameters: []
        return:
          type: System.Single
      overload: Unity.Reflect.Model.SyncCamera.Size*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncCamera.FovFieldNumber
      commentId: F:Unity.Reflect.Model.SyncCamera.FovFieldNumber
      language: CSharp
      name:
        CSharp: FovFieldNumber
        VB: FovFieldNumber
      nameWithType:
        CSharp: SyncCamera.FovFieldNumber
        VB: SyncCamera.FovFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncCamera.FovFieldNumber
        VB: Unity.Reflect.Model.SyncCamera.FovFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: FovFieldNumber
        path: ''
        startLine: 1903
      summary: Field number for the &quot;fov&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int FovFieldNumber = 12
          VB: Public Const FovFieldNumber As Integer = 12
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncCamera.Fov
      commentId: P:Unity.Reflect.Model.SyncCamera.Fov
      language: CSharp
      name:
        CSharp: Fov
        VB: Fov
      nameWithType:
        CSharp: SyncCamera.Fov
        VB: SyncCamera.Fov
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncCamera.Fov
        VB: Unity.Reflect.Model.SyncCamera.Fov
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Fov
        path: ''
        startLine: 1905
      syntax:
        content:
          CSharp: public float Fov { get; set; }
          VB: Public Property Fov As Single
        parameters: []
        return:
          type: System.Single
      overload: Unity.Reflect.Model.SyncCamera.Fov*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncCamera.Equals(System.Object)
      commentId: M:Unity.Reflect.Model.SyncCamera.Equals(System.Object)
      language: CSharp
      name:
        CSharp: Equals(Object)
        VB: Equals(Object)
      nameWithType:
        CSharp: SyncCamera.Equals(Object)
        VB: SyncCamera.Equals(Object)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncCamera.Equals(System.Object)
        VB: Unity.Reflect.Model.SyncCamera.Equals(System.Object)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Equals
        path: ''
        startLine: 1913
      syntax:
        content:
          CSharp: public override bool Equals(object other)
          VB: Public Overrides Function Equals(other As Object) As Boolean
        parameters:
        - id: other
          type: System.Object
        return:
          type: System.Boolean
      overload: Unity.Reflect.Model.SyncCamera.Equals*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.Model.SyncCamera.Equals(Unity.Reflect.Model.SyncCamera)
      commentId: M:Unity.Reflect.Model.SyncCamera.Equals(Unity.Reflect.Model.SyncCamera)
      language: CSharp
      name:
        CSharp: Equals(SyncCamera)
        VB: Equals(SyncCamera)
      nameWithType:
        CSharp: SyncCamera.Equals(SyncCamera)
        VB: SyncCamera.Equals(SyncCamera)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncCamera.Equals(Unity.Reflect.Model.SyncCamera)
        VB: Unity.Reflect.Model.SyncCamera.Equals(Unity.Reflect.Model.SyncCamera)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Equals
        path: ''
        startLine: 1918
      syntax:
        content:
          CSharp: public bool Equals(SyncCamera other)
          VB: Public Function Equals(other As SyncCamera) As Boolean
        parameters:
        - id: other
          type: Unity.Reflect.Model.SyncCamera
        return:
          type: System.Boolean
      overload: Unity.Reflect.Model.SyncCamera.Equals*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncCamera.GetHashCode
      commentId: M:Unity.Reflect.Model.SyncCamera.GetHashCode
      language: CSharp
      name:
        CSharp: GetHashCode()
        VB: GetHashCode()
      nameWithType:
        CSharp: SyncCamera.GetHashCode()
        VB: SyncCamera.GetHashCode()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncCamera.GetHashCode()
        VB: Unity.Reflect.Model.SyncCamera.GetHashCode()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: GetHashCode
        path: ''
        startLine: 1941
      syntax:
        content:
          CSharp: public override int GetHashCode()
          VB: Public Overrides Function GetHashCode As Integer
        return:
          type: System.Int32
      overload: Unity.Reflect.Model.SyncCamera.GetHashCode*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.Model.SyncCamera.ToString
      commentId: M:Unity.Reflect.Model.SyncCamera.ToString
      language: CSharp
      name:
        CSharp: ToString()
        VB: ToString()
      nameWithType:
        CSharp: SyncCamera.ToString()
        VB: SyncCamera.ToString()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncCamera.ToString()
        VB: Unity.Reflect.Model.SyncCamera.ToString()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: ToString
        path: ''
        startLine: 1962
      syntax:
        content:
          CSharp: public override string ToString()
          VB: Public Overrides Function ToString As String
        return:
          type: System.String
      overload: Unity.Reflect.Model.SyncCamera.ToString*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.Model.SyncCamera.WriteTo(pb.CodedOutputStream)
      commentId: M:Unity.Reflect.Model.SyncCamera.WriteTo(pb.CodedOutputStream)
      language: CSharp
      name:
        CSharp: WriteTo(pb.CodedOutputStream)
        VB: WriteTo(pb.CodedOutputStream)
      nameWithType:
        CSharp: SyncCamera.WriteTo(pb.CodedOutputStream)
        VB: SyncCamera.WriteTo(pb.CodedOutputStream)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncCamera.WriteTo(pb.CodedOutputStream)
        VB: Unity.Reflect.Model.SyncCamera.WriteTo(pb.CodedOutputStream)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: WriteTo
        path: ''
        startLine: 1967
      syntax:
        content:
          CSharp: public void WriteTo(pb.CodedOutputStream output)
          VB: Public Sub WriteTo(output As pb.CodedOutputStream)
        parameters:
        - id: output
          type: pb.CodedOutputStream
      overload: Unity.Reflect.Model.SyncCamera.WriteTo*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncCamera.CalculateSize
      commentId: M:Unity.Reflect.Model.SyncCamera.CalculateSize
      language: CSharp
      name:
        CSharp: CalculateSize()
        VB: CalculateSize()
      nameWithType:
        CSharp: SyncCamera.CalculateSize()
        VB: SyncCamera.CalculateSize()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncCamera.CalculateSize()
        VB: Unity.Reflect.Model.SyncCamera.CalculateSize()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: CalculateSize
        path: ''
        startLine: 2022
      syntax:
        content:
          CSharp: public int CalculateSize()
          VB: Public Function CalculateSize As Integer
        return:
          type: System.Int32
      overload: Unity.Reflect.Model.SyncCamera.CalculateSize*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncCamera.MergeFrom(Unity.Reflect.Model.SyncCamera)
      commentId: M:Unity.Reflect.Model.SyncCamera.MergeFrom(Unity.Reflect.Model.SyncCamera)
      language: CSharp
      name:
        CSharp: MergeFrom(SyncCamera)
        VB: MergeFrom(SyncCamera)
      nameWithType:
        CSharp: SyncCamera.MergeFrom(SyncCamera)
        VB: SyncCamera.MergeFrom(SyncCamera)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncCamera.MergeFrom(Unity.Reflect.Model.SyncCamera)
        VB: Unity.Reflect.Model.SyncCamera.MergeFrom(Unity.Reflect.Model.SyncCamera)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: MergeFrom
        path: ''
        startLine: 2067
      syntax:
        content:
          CSharp: public void MergeFrom(SyncCamera other)
          VB: Public Sub MergeFrom(other As SyncCamera)
        parameters:
        - id: other
          type: Unity.Reflect.Model.SyncCamera
      overload: Unity.Reflect.Model.SyncCamera.MergeFrom*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncCamera.MergeFrom(pb.CodedInputStream)
      commentId: M:Unity.Reflect.Model.SyncCamera.MergeFrom(pb.CodedInputStream)
      language: CSharp
      name:
        CSharp: MergeFrom(pb.CodedInputStream)
        VB: MergeFrom(pb.CodedInputStream)
      nameWithType:
        CSharp: SyncCamera.MergeFrom(pb.CodedInputStream)
        VB: SyncCamera.MergeFrom(pb.CodedInputStream)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncCamera.MergeFrom(pb.CodedInputStream)
        VB: Unity.Reflect.Model.SyncCamera.MergeFrom(pb.CodedInputStream)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: MergeFrom
        path: ''
        startLine: 2114
      syntax:
        content:
          CSharp: public void MergeFrom(pb.CodedInputStream input)
          VB: Public Sub MergeFrom(input As pb.CodedInputStream)
        parameters:
        - id: input
          type: pb.CodedInputStream
      overload: Unity.Reflect.Model.SyncCamera.MergeFrom*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Unity.Reflect.Model.SyncColor
    commentId: T:Unity.Reflect.Model.SyncColor
    language: CSharp
    name:
      CSharp: SyncColor
      VB: SyncColor
    nameWithType:
      CSharp: SyncColor
      VB: SyncColor
    qualifiedName:
      CSharp: Unity.Reflect.Model.SyncColor
      VB: Unity.Reflect.Model.SyncColor
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect.Model
    source:
      id: SyncColor
      path: ''
      startLine: 2224
    syntax:
      content:
        CSharp: 'public sealed class SyncColor : pb.IMessage<SyncColor>'
        VB: >-
          Public NotInheritable Class SyncColor

              Inherits pb.IMessage(Of SyncColor)
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - sealed
      - class
      VB:
      - Public
      - NotInheritable
      - Class
    items:
    - id: Unity.Reflect.Model.SyncColor.Black
      commentId: M:Unity.Reflect.Model.SyncColor.Black
      language: CSharp
      name:
        CSharp: Black()
        VB: Black()
      nameWithType:
        CSharp: SyncColor.Black()
        VB: SyncColor.Black()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncColor.Black()
        VB: Unity.Reflect.Model.SyncColor.Black()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Black
        path: ''
        startLine: 435
      syntax:
        content:
          CSharp: public static SyncColor Black()
          VB: Public Shared Function Black As SyncColor
        return:
          type: Unity.Reflect.Model.SyncColor
      overload: Unity.Reflect.Model.SyncColor.Black*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Unity.Reflect.Model.SyncColor.White
      commentId: M:Unity.Reflect.Model.SyncColor.White
      language: CSharp
      name:
        CSharp: White()
        VB: White()
      nameWithType:
        CSharp: SyncColor.White()
        VB: SyncColor.White()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncColor.White()
        VB: Unity.Reflect.Model.SyncColor.White()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: White
        path: ''
        startLine: 437
      syntax:
        content:
          CSharp: public static SyncColor White()
          VB: Public Shared Function White As SyncColor
        return:
          type: Unity.Reflect.Model.SyncColor
      overload: Unity.Reflect.Model.SyncColor.White*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Unity.Reflect.Model.SyncColor.#ctor(System.Single,System.Single,System.Single,System.Single)
      commentId: M:Unity.Reflect.Model.SyncColor.#ctor(System.Single,System.Single,System.Single,System.Single)
      language: CSharp
      name:
        CSharp: SyncColor(Single, Single, Single, Single)
        VB: SyncColor(Single, Single, Single, Single)
      nameWithType:
        CSharp: SyncColor.SyncColor(Single, Single, Single, Single)
        VB: SyncColor.SyncColor(Single, Single, Single, Single)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncColor.SyncColor(System.Single, System.Single, System.Single, System.Single)
        VB: Unity.Reflect.Model.SyncColor.SyncColor(System.Single, System.Single, System.Single, System.Single)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: .ctor
        path: ''
        startLine: 439
      syntax:
        content:
          CSharp: public SyncColor(float r, float g, float b, float a = 1F)
          VB: Public Sub New(r As Single, g As Single, b As Single, a As Single = 1F)
        parameters:
        - id: r
          type: System.Single
        - id: g
          type: System.Single
        - id: b
          type: System.Single
        - id: a
          type: System.Single
      overload: Unity.Reflect.Model.SyncColor.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncColor.From256(System.Int32,System.Int32,System.Int32,System.Int32)
      commentId: M:Unity.Reflect.Model.SyncColor.From256(System.Int32,System.Int32,System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: From256(Int32, Int32, Int32, Int32)
        VB: From256(Int32, Int32, Int32, Int32)
      nameWithType:
        CSharp: SyncColor.From256(Int32, Int32, Int32, Int32)
        VB: SyncColor.From256(Int32, Int32, Int32, Int32)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncColor.From256(System.Int32, System.Int32, System.Int32, System.Int32)
        VB: Unity.Reflect.Model.SyncColor.From256(System.Int32, System.Int32, System.Int32, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: From256
        path: ''
        startLine: 447
      syntax:
        content:
          CSharp: public static SyncColor From256(int r, int g, int b, int a = 255)
          VB: Public Shared Function From256(r As Integer, g As Integer, b As Integer, a As Integer = 255) As SyncColor
        parameters:
        - id: r
          type: System.Int32
        - id: g
          type: System.Int32
        - id: b
          type: System.Int32
        - id: a
          type: System.Int32
        return:
          type: Unity.Reflect.Model.SyncColor
      overload: Unity.Reflect.Model.SyncColor.From256*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Unity.Reflect.Model.SyncColor.op_Multiply(Unity.Reflect.Model.SyncColor,Unity.Reflect.Model.SyncColor)
      commentId: M:Unity.Reflect.Model.SyncColor.op_Multiply(Unity.Reflect.Model.SyncColor,Unity.Reflect.Model.SyncColor)
      language: CSharp
      name:
        CSharp: Multiply(SyncColor, SyncColor)
        VB: Multiply(SyncColor, SyncColor)
      nameWithType:
        CSharp: SyncColor.Multiply(SyncColor, SyncColor)
        VB: SyncColor.Multiply(SyncColor, SyncColor)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncColor.Multiply(Unity.Reflect.Model.SyncColor, Unity.Reflect.Model.SyncColor)
        VB: Unity.Reflect.Model.SyncColor.Multiply(Unity.Reflect.Model.SyncColor, Unity.Reflect.Model.SyncColor)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: op_Multiply
        path: ''
        startLine: 452
      syntax:
        content:
          CSharp: public static SyncColor operator *(SyncColor c1, SyncColor c)
          VB: Public Shared Operator *(c1 As SyncColor, c As SyncColor) As SyncColor
        parameters:
        - id: c1
          type: Unity.Reflect.Model.SyncColor
        - id: c
          type: Unity.Reflect.Model.SyncColor
        return:
          type: Unity.Reflect.Model.SyncColor
      overload: Unity.Reflect.Model.SyncColor.op_Multiply*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Unity.Reflect.Model.SyncColor.op_Multiply(System.Single,Unity.Reflect.Model.SyncColor)
      commentId: M:Unity.Reflect.Model.SyncColor.op_Multiply(System.Single,Unity.Reflect.Model.SyncColor)
      language: CSharp
      name:
        CSharp: Multiply(Single, SyncColor)
        VB: Multiply(Single, SyncColor)
      nameWithType:
        CSharp: SyncColor.Multiply(Single, SyncColor)
        VB: SyncColor.Multiply(Single, SyncColor)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncColor.Multiply(System.Single, Unity.Reflect.Model.SyncColor)
        VB: Unity.Reflect.Model.SyncColor.Multiply(System.Single, Unity.Reflect.Model.SyncColor)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: op_Multiply
        path: ''
        startLine: 457
      syntax:
        content:
          CSharp: public static SyncColor operator *(float f, SyncColor c)
          VB: Public Shared Operator *(f As Single, c As SyncColor) As SyncColor
        parameters:
        - id: f
          type: System.Single
        - id: c
          type: Unity.Reflect.Model.SyncColor
        return:
          type: Unity.Reflect.Model.SyncColor
      overload: Unity.Reflect.Model.SyncColor.op_Multiply*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Unity.Reflect.Model.SyncColor.op_Addition(Unity.Reflect.Model.SyncColor,Unity.Reflect.Model.SyncColor)
      commentId: M:Unity.Reflect.Model.SyncColor.op_Addition(Unity.Reflect.Model.SyncColor,Unity.Reflect.Model.SyncColor)
      language: CSharp
      name:
        CSharp: Addition(SyncColor, SyncColor)
        VB: Addition(SyncColor, SyncColor)
      nameWithType:
        CSharp: SyncColor.Addition(SyncColor, SyncColor)
        VB: SyncColor.Addition(SyncColor, SyncColor)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncColor.Addition(Unity.Reflect.Model.SyncColor, Unity.Reflect.Model.SyncColor)
        VB: Unity.Reflect.Model.SyncColor.Addition(Unity.Reflect.Model.SyncColor, Unity.Reflect.Model.SyncColor)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: op_Addition
        path: ''
        startLine: 462
      syntax:
        content:
          CSharp: public static SyncColor operator +(SyncColor c1, SyncColor c)
          VB: Public Shared Operator +(c1 As SyncColor, c As SyncColor) As SyncColor
        parameters:
        - id: c1
          type: Unity.Reflect.Model.SyncColor
        - id: c
          type: Unity.Reflect.Model.SyncColor
        return:
          type: Unity.Reflect.Model.SyncColor
      overload: Unity.Reflect.Model.SyncColor.op_Addition*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Unity.Reflect.Model.SyncColor.Lerp(Unity.Reflect.Model.SyncColor,Unity.Reflect.Model.SyncColor,System.Single)
      commentId: M:Unity.Reflect.Model.SyncColor.Lerp(Unity.Reflect.Model.SyncColor,Unity.Reflect.Model.SyncColor,System.Single)
      language: CSharp
      name:
        CSharp: Lerp(SyncColor, SyncColor, Single)
        VB: Lerp(SyncColor, SyncColor, Single)
      nameWithType:
        CSharp: SyncColor.Lerp(SyncColor, SyncColor, Single)
        VB: SyncColor.Lerp(SyncColor, SyncColor, Single)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncColor.Lerp(Unity.Reflect.Model.SyncColor, Unity.Reflect.Model.SyncColor, System.Single)
        VB: Unity.Reflect.Model.SyncColor.Lerp(Unity.Reflect.Model.SyncColor, Unity.Reflect.Model.SyncColor, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Lerp
        path: ''
        startLine: 467
      syntax:
        content:
          CSharp: public static SyncColor Lerp(SyncColor c1, SyncColor c2, float u)
          VB: Public Shared Function Lerp(c1 As SyncColor, c2 As SyncColor, u As Single) As SyncColor
        parameters:
        - id: c1
          type: Unity.Reflect.Model.SyncColor
        - id: c2
          type: Unity.Reflect.Model.SyncColor
        - id: u
          type: System.Single
        return:
          type: Unity.Reflect.Model.SyncColor
      overload: Unity.Reflect.Model.SyncColor.Lerp*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Unity.Reflect.Model.SyncColor.op_Equality(Unity.Reflect.Model.SyncColor,Unity.Reflect.Model.SyncColor)
      commentId: M:Unity.Reflect.Model.SyncColor.op_Equality(Unity.Reflect.Model.SyncColor,Unity.Reflect.Model.SyncColor)
      language: CSharp
      name:
        CSharp: Equality(SyncColor, SyncColor)
        VB: Equality(SyncColor, SyncColor)
      nameWithType:
        CSharp: SyncColor.Equality(SyncColor, SyncColor)
        VB: SyncColor.Equality(SyncColor, SyncColor)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncColor.Equality(Unity.Reflect.Model.SyncColor, Unity.Reflect.Model.SyncColor)
        VB: Unity.Reflect.Model.SyncColor.Equality(Unity.Reflect.Model.SyncColor, Unity.Reflect.Model.SyncColor)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: op_Equality
        path: ''
        startLine: 472
      syntax:
        content:
          CSharp: public static bool operator ==(SyncColor c1, SyncColor c2)
          VB: Public Shared Operator =(c1 As SyncColor, c2 As SyncColor) As Boolean
        parameters:
        - id: c1
          type: Unity.Reflect.Model.SyncColor
        - id: c2
          type: Unity.Reflect.Model.SyncColor
        return:
          type: System.Boolean
      overload: Unity.Reflect.Model.SyncColor.op_Equality*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Unity.Reflect.Model.SyncColor.op_Inequality(Unity.Reflect.Model.SyncColor,Unity.Reflect.Model.SyncColor)
      commentId: M:Unity.Reflect.Model.SyncColor.op_Inequality(Unity.Reflect.Model.SyncColor,Unity.Reflect.Model.SyncColor)
      language: CSharp
      name:
        CSharp: Inequality(SyncColor, SyncColor)
        VB: Inequality(SyncColor, SyncColor)
      nameWithType:
        CSharp: SyncColor.Inequality(SyncColor, SyncColor)
        VB: SyncColor.Inequality(SyncColor, SyncColor)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncColor.Inequality(Unity.Reflect.Model.SyncColor, Unity.Reflect.Model.SyncColor)
        VB: Unity.Reflect.Model.SyncColor.Inequality(Unity.Reflect.Model.SyncColor, Unity.Reflect.Model.SyncColor)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: op_Inequality
        path: ''
        startLine: 483
      syntax:
        content:
          CSharp: public static bool operator !=(SyncColor c1, SyncColor c2)
          VB: Public Shared Operator <>(c1 As SyncColor, c2 As SyncColor) As Boolean
        parameters:
        - id: c1
          type: Unity.Reflect.Model.SyncColor
        - id: c2
          type: Unity.Reflect.Model.SyncColor
        return:
          type: System.Boolean
      overload: Unity.Reflect.Model.SyncColor.op_Inequality*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Unity.Reflect.Model.SyncColor.Parser
      commentId: P:Unity.Reflect.Model.SyncColor.Parser
      language: CSharp
      name:
        CSharp: Parser
        VB: Parser
      nameWithType:
        CSharp: SyncColor.Parser
        VB: SyncColor.Parser
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncColor.Parser
        VB: Unity.Reflect.Model.SyncColor.Parser
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Parser
        path: ''
        startLine: 2227
      syntax:
        content:
          CSharp: public static pb.MessageParser<SyncColor> Parser { get; }
          VB: Public Shared ReadOnly Property Parser As pb.MessageParser(Of SyncColor)
        parameters: []
        return:
          type: pb.MessageParser{Unity.Reflect.Model.SyncColor}
      overload: Unity.Reflect.Model.SyncColor.Parser*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Unity.Reflect.Model.SyncColor.Descriptor
      commentId: P:Unity.Reflect.Model.SyncColor.Descriptor
      language: CSharp
      name:
        CSharp: Descriptor
        VB: Descriptor
      nameWithType:
        CSharp: SyncColor.Descriptor
        VB: SyncColor.Descriptor
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncColor.Descriptor
        VB: Unity.Reflect.Model.SyncColor.Descriptor
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Descriptor
        path: ''
        startLine: 2230
      syntax:
        content:
          CSharp: public static pbr.MessageDescriptor Descriptor { get; }
          VB: Public Shared ReadOnly Property Descriptor As pbr.MessageDescriptor
        parameters: []
        return:
          type: pbr.MessageDescriptor
      overload: Unity.Reflect.Model.SyncColor.Descriptor*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Unity.Reflect.Model.SyncColor.#ctor
      commentId: M:Unity.Reflect.Model.SyncColor.#ctor
      language: CSharp
      name:
        CSharp: SyncColor()
        VB: SyncColor()
      nameWithType:
        CSharp: SyncColor.SyncColor()
        VB: SyncColor.SyncColor()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncColor.SyncColor()
        VB: Unity.Reflect.Model.SyncColor.SyncColor()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: .ctor
        path: ''
        startLine: 2240
      syntax:
        content:
          CSharp: public SyncColor()
          VB: Public Sub New
      overload: Unity.Reflect.Model.SyncColor.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncColor.#ctor(Unity.Reflect.Model.SyncColor)
      commentId: M:Unity.Reflect.Model.SyncColor.#ctor(Unity.Reflect.Model.SyncColor)
      language: CSharp
      name:
        CSharp: SyncColor(SyncColor)
        VB: SyncColor(SyncColor)
      nameWithType:
        CSharp: SyncColor.SyncColor(SyncColor)
        VB: SyncColor.SyncColor(SyncColor)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncColor.SyncColor(Unity.Reflect.Model.SyncColor)
        VB: Unity.Reflect.Model.SyncColor.SyncColor(Unity.Reflect.Model.SyncColor)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: .ctor
        path: ''
        startLine: 2247
      syntax:
        content:
          CSharp: public SyncColor(SyncColor other)
          VB: Public Sub New(other As SyncColor)
        parameters:
        - id: other
          type: Unity.Reflect.Model.SyncColor
      overload: Unity.Reflect.Model.SyncColor.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncColor.Clone
      commentId: M:Unity.Reflect.Model.SyncColor.Clone
      language: CSharp
      name:
        CSharp: Clone()
        VB: Clone()
      nameWithType:
        CSharp: SyncColor.Clone()
        VB: SyncColor.Clone()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncColor.Clone()
        VB: Unity.Reflect.Model.SyncColor.Clone()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Clone
        path: ''
        startLine: 2256
      syntax:
        content:
          CSharp: public SyncColor Clone()
          VB: Public Function Clone As SyncColor
        return:
          type: Unity.Reflect.Model.SyncColor
      overload: Unity.Reflect.Model.SyncColor.Clone*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncColor.RFieldNumber
      commentId: F:Unity.Reflect.Model.SyncColor.RFieldNumber
      language: CSharp
      name:
        CSharp: RFieldNumber
        VB: RFieldNumber
      nameWithType:
        CSharp: SyncColor.RFieldNumber
        VB: SyncColor.RFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncColor.RFieldNumber
        VB: Unity.Reflect.Model.SyncColor.RFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: RFieldNumber
        path: ''
        startLine: 2262
      summary: Field number for the &quot;r&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int RFieldNumber = 1
          VB: Public Const RFieldNumber As Integer = 1
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncColor.R
      commentId: P:Unity.Reflect.Model.SyncColor.R
      language: CSharp
      name:
        CSharp: R
        VB: R
      nameWithType:
        CSharp: SyncColor.R
        VB: SyncColor.R
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncColor.R
        VB: Unity.Reflect.Model.SyncColor.R
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: R
        path: ''
        startLine: 2264
      syntax:
        content:
          CSharp: public float R { get; set; }
          VB: Public Property R As Single
        parameters: []
        return:
          type: System.Single
      overload: Unity.Reflect.Model.SyncColor.R*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncColor.GFieldNumber
      commentId: F:Unity.Reflect.Model.SyncColor.GFieldNumber
      language: CSharp
      name:
        CSharp: GFieldNumber
        VB: GFieldNumber
      nameWithType:
        CSharp: SyncColor.GFieldNumber
        VB: SyncColor.GFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncColor.GFieldNumber
        VB: Unity.Reflect.Model.SyncColor.GFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: GFieldNumber
        path: ''
        startLine: 2273
      summary: Field number for the &quot;g&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int GFieldNumber = 2
          VB: Public Const GFieldNumber As Integer = 2
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncColor.G
      commentId: P:Unity.Reflect.Model.SyncColor.G
      language: CSharp
      name:
        CSharp: G
        VB: G
      nameWithType:
        CSharp: SyncColor.G
        VB: SyncColor.G
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncColor.G
        VB: Unity.Reflect.Model.SyncColor.G
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: G
        path: ''
        startLine: 2275
      syntax:
        content:
          CSharp: public float G { get; set; }
          VB: Public Property G As Single
        parameters: []
        return:
          type: System.Single
      overload: Unity.Reflect.Model.SyncColor.G*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncColor.BFieldNumber
      commentId: F:Unity.Reflect.Model.SyncColor.BFieldNumber
      language: CSharp
      name:
        CSharp: BFieldNumber
        VB: BFieldNumber
      nameWithType:
        CSharp: SyncColor.BFieldNumber
        VB: SyncColor.BFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncColor.BFieldNumber
        VB: Unity.Reflect.Model.SyncColor.BFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: BFieldNumber
        path: ''
        startLine: 2284
      summary: Field number for the &quot;b&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int BFieldNumber = 3
          VB: Public Const BFieldNumber As Integer = 3
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncColor.B
      commentId: P:Unity.Reflect.Model.SyncColor.B
      language: CSharp
      name:
        CSharp: B
        VB: B
      nameWithType:
        CSharp: SyncColor.B
        VB: SyncColor.B
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncColor.B
        VB: Unity.Reflect.Model.SyncColor.B
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: B
        path: ''
        startLine: 2286
      syntax:
        content:
          CSharp: public float B { get; set; }
          VB: Public Property B As Single
        parameters: []
        return:
          type: System.Single
      overload: Unity.Reflect.Model.SyncColor.B*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncColor.AFieldNumber
      commentId: F:Unity.Reflect.Model.SyncColor.AFieldNumber
      language: CSharp
      name:
        CSharp: AFieldNumber
        VB: AFieldNumber
      nameWithType:
        CSharp: SyncColor.AFieldNumber
        VB: SyncColor.AFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncColor.AFieldNumber
        VB: Unity.Reflect.Model.SyncColor.AFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: AFieldNumber
        path: ''
        startLine: 2295
      summary: Field number for the &quot;a&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int AFieldNumber = 4
          VB: Public Const AFieldNumber As Integer = 4
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncColor.A
      commentId: P:Unity.Reflect.Model.SyncColor.A
      language: CSharp
      name:
        CSharp: A
        VB: A
      nameWithType:
        CSharp: SyncColor.A
        VB: SyncColor.A
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncColor.A
        VB: Unity.Reflect.Model.SyncColor.A
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: A
        path: ''
        startLine: 2297
      syntax:
        content:
          CSharp: public float A { get; set; }
          VB: Public Property A As Single
        parameters: []
        return:
          type: System.Single
      overload: Unity.Reflect.Model.SyncColor.A*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncColor.Equals(System.Object)
      commentId: M:Unity.Reflect.Model.SyncColor.Equals(System.Object)
      language: CSharp
      name:
        CSharp: Equals(Object)
        VB: Equals(Object)
      nameWithType:
        CSharp: SyncColor.Equals(Object)
        VB: SyncColor.Equals(Object)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncColor.Equals(System.Object)
        VB: Unity.Reflect.Model.SyncColor.Equals(System.Object)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Equals
        path: ''
        startLine: 2305
      syntax:
        content:
          CSharp: public override bool Equals(object other)
          VB: Public Overrides Function Equals(other As Object) As Boolean
        parameters:
        - id: other
          type: System.Object
        return:
          type: System.Boolean
      overload: Unity.Reflect.Model.SyncColor.Equals*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.Model.SyncColor.Equals(Unity.Reflect.Model.SyncColor)
      commentId: M:Unity.Reflect.Model.SyncColor.Equals(Unity.Reflect.Model.SyncColor)
      language: CSharp
      name:
        CSharp: Equals(SyncColor)
        VB: Equals(SyncColor)
      nameWithType:
        CSharp: SyncColor.Equals(SyncColor)
        VB: SyncColor.Equals(SyncColor)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncColor.Equals(Unity.Reflect.Model.SyncColor)
        VB: Unity.Reflect.Model.SyncColor.Equals(Unity.Reflect.Model.SyncColor)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Equals
        path: ''
        startLine: 2310
      syntax:
        content:
          CSharp: public bool Equals(SyncColor other)
          VB: Public Function Equals(other As SyncColor) As Boolean
        parameters:
        - id: other
          type: Unity.Reflect.Model.SyncColor
        return:
          type: System.Boolean
      overload: Unity.Reflect.Model.SyncColor.Equals*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncColor.GetHashCode
      commentId: M:Unity.Reflect.Model.SyncColor.GetHashCode
      language: CSharp
      name:
        CSharp: GetHashCode()
        VB: GetHashCode()
      nameWithType:
        CSharp: SyncColor.GetHashCode()
        VB: SyncColor.GetHashCode()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncColor.GetHashCode()
        VB: Unity.Reflect.Model.SyncColor.GetHashCode()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: GetHashCode
        path: ''
        startLine: 2325
      syntax:
        content:
          CSharp: public override int GetHashCode()
          VB: Public Overrides Function GetHashCode As Integer
        return:
          type: System.Int32
      overload: Unity.Reflect.Model.SyncColor.GetHashCode*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.Model.SyncColor.ToString
      commentId: M:Unity.Reflect.Model.SyncColor.ToString
      language: CSharp
      name:
        CSharp: ToString()
        VB: ToString()
      nameWithType:
        CSharp: SyncColor.ToString()
        VB: SyncColor.ToString()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncColor.ToString()
        VB: Unity.Reflect.Model.SyncColor.ToString()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: ToString
        path: ''
        startLine: 2338
      syntax:
        content:
          CSharp: public override string ToString()
          VB: Public Overrides Function ToString As String
        return:
          type: System.String
      overload: Unity.Reflect.Model.SyncColor.ToString*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.Model.SyncColor.WriteTo(pb.CodedOutputStream)
      commentId: M:Unity.Reflect.Model.SyncColor.WriteTo(pb.CodedOutputStream)
      language: CSharp
      name:
        CSharp: WriteTo(pb.CodedOutputStream)
        VB: WriteTo(pb.CodedOutputStream)
      nameWithType:
        CSharp: SyncColor.WriteTo(pb.CodedOutputStream)
        VB: SyncColor.WriteTo(pb.CodedOutputStream)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncColor.WriteTo(pb.CodedOutputStream)
        VB: Unity.Reflect.Model.SyncColor.WriteTo(pb.CodedOutputStream)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: WriteTo
        path: ''
        startLine: 2343
      syntax:
        content:
          CSharp: public void WriteTo(pb.CodedOutputStream output)
          VB: Public Sub WriteTo(output As pb.CodedOutputStream)
        parameters:
        - id: output
          type: pb.CodedOutputStream
      overload: Unity.Reflect.Model.SyncColor.WriteTo*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncColor.CalculateSize
      commentId: M:Unity.Reflect.Model.SyncColor.CalculateSize
      language: CSharp
      name:
        CSharp: CalculateSize()
        VB: CalculateSize()
      nameWithType:
        CSharp: SyncColor.CalculateSize()
        VB: SyncColor.CalculateSize()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncColor.CalculateSize()
        VB: Unity.Reflect.Model.SyncColor.CalculateSize()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: CalculateSize
        path: ''
        startLine: 2366
      syntax:
        content:
          CSharp: public int CalculateSize()
          VB: Public Function CalculateSize As Integer
        return:
          type: System.Int32
      overload: Unity.Reflect.Model.SyncColor.CalculateSize*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncColor.MergeFrom(Unity.Reflect.Model.SyncColor)
      commentId: M:Unity.Reflect.Model.SyncColor.MergeFrom(Unity.Reflect.Model.SyncColor)
      language: CSharp
      name:
        CSharp: MergeFrom(SyncColor)
        VB: MergeFrom(SyncColor)
      nameWithType:
        CSharp: SyncColor.MergeFrom(SyncColor)
        VB: SyncColor.MergeFrom(SyncColor)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncColor.MergeFrom(Unity.Reflect.Model.SyncColor)
        VB: Unity.Reflect.Model.SyncColor.MergeFrom(Unity.Reflect.Model.SyncColor)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: MergeFrom
        path: ''
        startLine: 2387
      syntax:
        content:
          CSharp: public void MergeFrom(SyncColor other)
          VB: Public Sub MergeFrom(other As SyncColor)
        parameters:
        - id: other
          type: Unity.Reflect.Model.SyncColor
      overload: Unity.Reflect.Model.SyncColor.MergeFrom*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncColor.MergeFrom(pb.CodedInputStream)
      commentId: M:Unity.Reflect.Model.SyncColor.MergeFrom(pb.CodedInputStream)
      language: CSharp
      name:
        CSharp: MergeFrom(pb.CodedInputStream)
        VB: MergeFrom(pb.CodedInputStream)
      nameWithType:
        CSharp: SyncColor.MergeFrom(pb.CodedInputStream)
        VB: SyncColor.MergeFrom(pb.CodedInputStream)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncColor.MergeFrom(pb.CodedInputStream)
        VB: Unity.Reflect.Model.SyncColor.MergeFrom(pb.CodedInputStream)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: MergeFrom
        path: ''
        startLine: 2407
      syntax:
        content:
          CSharp: public void MergeFrom(pb.CodedInputStream input)
          VB: Public Sub MergeFrom(input As pb.CodedInputStream)
        parameters:
        - id: input
          type: pb.CodedInputStream
      overload: Unity.Reflect.Model.SyncColor.MergeFrom*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Unity.Reflect.Model.SyncLight
    commentId: T:Unity.Reflect.Model.SyncLight
    language: CSharp
    name:
      CSharp: SyncLight
      VB: SyncLight
    nameWithType:
      CSharp: SyncLight
      VB: SyncLight
    qualifiedName:
      CSharp: Unity.Reflect.Model.SyncLight
      VB: Unity.Reflect.Model.SyncLight
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect.Model
    source:
      id: SyncLight
      path: ''
      startLine: 2496
    syntax:
      content:
        CSharp: 'public sealed class SyncLight : pb.IMessage<SyncLight>'
        VB: >-
          Public NotInheritable Class SyncLight

              Inherits pb.IMessage(Of SyncLight)
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - sealed
      - class
      VB:
      - Public
      - NotInheritable
      - Class
    items:
    - id: Unity.Reflect.Model.SyncLight.#ctor(System.String,Unity.Reflect.Model.SyncTransform,Unity.Reflect.Model.SyncLight.Types.Type,Unity.Reflect.Model.SyncColor,System.Single,System.Single,Unity.Reflect.Model.SyncLight.Types.IntensityUnit,System.Single,System.Single,System.Single,Unity.Reflect.Model.SyncLight.Types.Shape,System.Single,System.Single,System.Single,System.Boolean,System.String)
      commentId: M:Unity.Reflect.Model.SyncLight.#ctor(System.String,Unity.Reflect.Model.SyncTransform,Unity.Reflect.Model.SyncLight.Types.Type,Unity.Reflect.Model.SyncColor,System.Single,System.Single,Unity.Reflect.Model.SyncLight.Types.IntensityUnit,System.Single,System.Single,System.Single,Unity.Reflect.Model.SyncLight.Types.Shape,System.Single,System.Single,System.Single,System.Boolean,System.String)
      language: CSharp
      name:
        CSharp: SyncLight(String, SyncTransform, SyncLight.Types.Type, SyncColor, Single, Single, SyncLight.Types.IntensityUnit, Single, Single, Single, SyncLight.Types.Shape, Single, Single, Single, Boolean, String)
        VB: SyncLight(String, SyncTransform, SyncLight.Types.Type, SyncColor, Single, Single, SyncLight.Types.IntensityUnit, Single, Single, Single, SyncLight.Types.Shape, Single, Single, Single, Boolean, String)
      nameWithType:
        CSharp: SyncLight.SyncLight(String, SyncTransform, SyncLight.Types.Type, SyncColor, Single, Single, SyncLight.Types.IntensityUnit, Single, Single, Single, SyncLight.Types.Shape, Single, Single, Single, Boolean, String)
        VB: SyncLight.SyncLight(String, SyncTransform, SyncLight.Types.Type, SyncColor, Single, Single, SyncLight.Types.IntensityUnit, Single, Single, Single, SyncLight.Types.Shape, Single, Single, Single, Boolean, String)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncLight.SyncLight(System.String, Unity.Reflect.Model.SyncTransform, Unity.Reflect.Model.SyncLight.Types.Type, Unity.Reflect.Model.SyncColor, System.Single, System.Single, Unity.Reflect.Model.SyncLight.Types.IntensityUnit, System.Single, System.Single, System.Single, Unity.Reflect.Model.SyncLight.Types.Shape, System.Single, System.Single, System.Single, System.Boolean, System.String)
        VB: Unity.Reflect.Model.SyncLight.SyncLight(System.String, Unity.Reflect.Model.SyncTransform, Unity.Reflect.Model.SyncLight.Types.Type, Unity.Reflect.Model.SyncColor, System.Single, System.Single, Unity.Reflect.Model.SyncLight.Types.IntensityUnit, System.Single, System.Single, System.Single, Unity.Reflect.Model.SyncLight.Types.Shape, System.Single, System.Single, System.Single, System.Boolean, System.String)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: .ctor
        path: ''
        startLine: 496
      syntax:
        content:
          CSharp: public SyncLight(string name, SyncTransform transform, SyncLight.Types.Type type, SyncColor color, float temperature, float intensity, SyncLight.Types.IntensityUnit intensityUnit, float range, float spotAngle, float beamAngle, SyncLight.Types.Shape shape, float shapeDiameter, float shapeWidth, float shapeLength, bool shapeVisible, string iesProfile)
          VB: Public Sub New(name As String, transform As SyncTransform, type As SyncLight.Types.Type, color As SyncColor, temperature As Single, intensity As Single, intensityUnit As SyncLight.Types.IntensityUnit, range As Single, spotAngle As Single, beamAngle As Single, shape As SyncLight.Types.Shape, shapeDiameter As Single, shapeWidth As Single, shapeLength As Single, shapeVisible As Boolean, iesProfile As String)
        parameters:
        - id: name
          type: System.String
        - id: transform
          type: Unity.Reflect.Model.SyncTransform
        - id: type
          type: Unity.Reflect.Model.SyncLight.Types.Type
        - id: color
          type: Unity.Reflect.Model.SyncColor
        - id: temperature
          type: System.Single
        - id: intensity
          type: System.Single
        - id: intensityUnit
          type: Unity.Reflect.Model.SyncLight.Types.IntensityUnit
        - id: range
          type: System.Single
        - id: spotAngle
          type: System.Single
        - id: beamAngle
          type: System.Single
        - id: shape
          type: Unity.Reflect.Model.SyncLight.Types.Shape
        - id: shapeDiameter
          type: System.Single
        - id: shapeWidth
          type: System.Single
        - id: shapeLength
          type: System.Single
        - id: shapeVisible
          type: System.Boolean
        - id: iesProfile
          type: System.String
      overload: Unity.Reflect.Model.SyncLight.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncLight.Parser
      commentId: P:Unity.Reflect.Model.SyncLight.Parser
      language: CSharp
      name:
        CSharp: Parser
        VB: Parser
      nameWithType:
        CSharp: SyncLight.Parser
        VB: SyncLight.Parser
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncLight.Parser
        VB: Unity.Reflect.Model.SyncLight.Parser
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Parser
        path: ''
        startLine: 2499
      syntax:
        content:
          CSharp: public static pb.MessageParser<SyncLight> Parser { get; }
          VB: Public Shared ReadOnly Property Parser As pb.MessageParser(Of SyncLight)
        parameters: []
        return:
          type: pb.MessageParser{Unity.Reflect.Model.SyncLight}
      overload: Unity.Reflect.Model.SyncLight.Parser*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Unity.Reflect.Model.SyncLight.Descriptor
      commentId: P:Unity.Reflect.Model.SyncLight.Descriptor
      language: CSharp
      name:
        CSharp: Descriptor
        VB: Descriptor
      nameWithType:
        CSharp: SyncLight.Descriptor
        VB: SyncLight.Descriptor
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncLight.Descriptor
        VB: Unity.Reflect.Model.SyncLight.Descriptor
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Descriptor
        path: ''
        startLine: 2502
      syntax:
        content:
          CSharp: public static pbr.MessageDescriptor Descriptor { get; }
          VB: Public Shared ReadOnly Property Descriptor As pbr.MessageDescriptor
        parameters: []
        return:
          type: pbr.MessageDescriptor
      overload: Unity.Reflect.Model.SyncLight.Descriptor*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Unity.Reflect.Model.SyncLight.#ctor
      commentId: M:Unity.Reflect.Model.SyncLight.#ctor
      language: CSharp
      name:
        CSharp: SyncLight()
        VB: SyncLight()
      nameWithType:
        CSharp: SyncLight.SyncLight()
        VB: SyncLight.SyncLight()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncLight.SyncLight()
        VB: Unity.Reflect.Model.SyncLight.SyncLight()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: .ctor
        path: ''
        startLine: 2512
      syntax:
        content:
          CSharp: public SyncLight()
          VB: Public Sub New
      overload: Unity.Reflect.Model.SyncLight.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncLight.#ctor(Unity.Reflect.Model.SyncLight)
      commentId: M:Unity.Reflect.Model.SyncLight.#ctor(Unity.Reflect.Model.SyncLight)
      language: CSharp
      name:
        CSharp: SyncLight(SyncLight)
        VB: SyncLight(SyncLight)
      nameWithType:
        CSharp: SyncLight.SyncLight(SyncLight)
        VB: SyncLight.SyncLight(SyncLight)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncLight.SyncLight(Unity.Reflect.Model.SyncLight)
        VB: Unity.Reflect.Model.SyncLight.SyncLight(Unity.Reflect.Model.SyncLight)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: .ctor
        path: ''
        startLine: 2519
      syntax:
        content:
          CSharp: public SyncLight(SyncLight other)
          VB: Public Sub New(other As SyncLight)
        parameters:
        - id: other
          type: Unity.Reflect.Model.SyncLight
      overload: Unity.Reflect.Model.SyncLight.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncLight.Clone
      commentId: M:Unity.Reflect.Model.SyncLight.Clone
      language: CSharp
      name:
        CSharp: Clone()
        VB: Clone()
      nameWithType:
        CSharp: SyncLight.Clone()
        VB: SyncLight.Clone()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncLight.Clone()
        VB: Unity.Reflect.Model.SyncLight.Clone()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Clone
        path: ''
        startLine: 2540
      syntax:
        content:
          CSharp: public SyncLight Clone()
          VB: Public Function Clone As SyncLight
        return:
          type: Unity.Reflect.Model.SyncLight
      overload: Unity.Reflect.Model.SyncLight.Clone*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncLight.NameFieldNumber
      commentId: F:Unity.Reflect.Model.SyncLight.NameFieldNumber
      language: CSharp
      name:
        CSharp: NameFieldNumber
        VB: NameFieldNumber
      nameWithType:
        CSharp: SyncLight.NameFieldNumber
        VB: SyncLight.NameFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncLight.NameFieldNumber
        VB: Unity.Reflect.Model.SyncLight.NameFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: NameFieldNumber
        path: ''
        startLine: 2546
      summary: Field number for the &quot;name&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int NameFieldNumber = 1
          VB: Public Const NameFieldNumber As Integer = 1
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncLight.Name
      commentId: P:Unity.Reflect.Model.SyncLight.Name
      language: CSharp
      name:
        CSharp: Name
        VB: Name
      nameWithType:
        CSharp: SyncLight.Name
        VB: SyncLight.Name
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncLight.Name
        VB: Unity.Reflect.Model.SyncLight.Name
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Name
        path: ''
        startLine: 2548
      syntax:
        content:
          CSharp: public string Name { get; set; }
          VB: Public Property Name As String
        parameters: []
        return:
          type: System.String
      overload: Unity.Reflect.Model.SyncLight.Name*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncLight.TransformFieldNumber
      commentId: F:Unity.Reflect.Model.SyncLight.TransformFieldNumber
      language: CSharp
      name:
        CSharp: TransformFieldNumber
        VB: TransformFieldNumber
      nameWithType:
        CSharp: SyncLight.TransformFieldNumber
        VB: SyncLight.TransformFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncLight.TransformFieldNumber
        VB: Unity.Reflect.Model.SyncLight.TransformFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: TransformFieldNumber
        path: ''
        startLine: 2557
      summary: Field number for the &quot;transform&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int TransformFieldNumber = 2
          VB: Public Const TransformFieldNumber As Integer = 2
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncLight.Transform
      commentId: P:Unity.Reflect.Model.SyncLight.Transform
      language: CSharp
      name:
        CSharp: Transform
        VB: Transform
      nameWithType:
        CSharp: SyncLight.Transform
        VB: SyncLight.Transform
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncLight.Transform
        VB: Unity.Reflect.Model.SyncLight.Transform
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Transform
        path: ''
        startLine: 2559
      syntax:
        content:
          CSharp: public SyncTransform Transform { get; set; }
          VB: Public Property Transform As SyncTransform
        parameters: []
        return:
          type: Unity.Reflect.Model.SyncTransform
      overload: Unity.Reflect.Model.SyncLight.Transform*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncLight.TypeFieldNumber
      commentId: F:Unity.Reflect.Model.SyncLight.TypeFieldNumber
      language: CSharp
      name:
        CSharp: TypeFieldNumber
        VB: TypeFieldNumber
      nameWithType:
        CSharp: SyncLight.TypeFieldNumber
        VB: SyncLight.TypeFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncLight.TypeFieldNumber
        VB: Unity.Reflect.Model.SyncLight.TypeFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: TypeFieldNumber
        path: ''
        startLine: 2568
      summary: Field number for the &quot;type&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int TypeFieldNumber = 3
          VB: Public Const TypeFieldNumber As Integer = 3
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncLight.Type
      commentId: P:Unity.Reflect.Model.SyncLight.Type
      language: CSharp
      name:
        CSharp: Type
        VB: Type
      nameWithType:
        CSharp: SyncLight.Type
        VB: SyncLight.Type
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncLight.Type
        VB: Unity.Reflect.Model.SyncLight.Type
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Type
        path: ''
        startLine: 2570
      syntax:
        content:
          CSharp: public SyncLight.Types.Type Type { get; set; }
          VB: Public Property Type As SyncLight.Types.Type
        parameters: []
        return:
          type: Unity.Reflect.Model.SyncLight.Types.Type
      overload: Unity.Reflect.Model.SyncLight.Type*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncLight.ColorFieldNumber
      commentId: F:Unity.Reflect.Model.SyncLight.ColorFieldNumber
      language: CSharp
      name:
        CSharp: ColorFieldNumber
        VB: ColorFieldNumber
      nameWithType:
        CSharp: SyncLight.ColorFieldNumber
        VB: SyncLight.ColorFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncLight.ColorFieldNumber
        VB: Unity.Reflect.Model.SyncLight.ColorFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: ColorFieldNumber
        path: ''
        startLine: 2579
      summary: Field number for the &quot;color&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int ColorFieldNumber = 4
          VB: Public Const ColorFieldNumber As Integer = 4
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncLight.Color
      commentId: P:Unity.Reflect.Model.SyncLight.Color
      language: CSharp
      name:
        CSharp: Color
        VB: Color
      nameWithType:
        CSharp: SyncLight.Color
        VB: SyncLight.Color
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncLight.Color
        VB: Unity.Reflect.Model.SyncLight.Color
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Color
        path: ''
        startLine: 2581
      syntax:
        content:
          CSharp: public SyncColor Color { get; set; }
          VB: Public Property Color As SyncColor
        parameters: []
        return:
          type: Unity.Reflect.Model.SyncColor
      overload: Unity.Reflect.Model.SyncLight.Color*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncLight.TemperatureFieldNumber
      commentId: F:Unity.Reflect.Model.SyncLight.TemperatureFieldNumber
      language: CSharp
      name:
        CSharp: TemperatureFieldNumber
        VB: TemperatureFieldNumber
      nameWithType:
        CSharp: SyncLight.TemperatureFieldNumber
        VB: SyncLight.TemperatureFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncLight.TemperatureFieldNumber
        VB: Unity.Reflect.Model.SyncLight.TemperatureFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: TemperatureFieldNumber
        path: ''
        startLine: 2590
      summary: Field number for the &quot;temperature&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int TemperatureFieldNumber = 5
          VB: Public Const TemperatureFieldNumber As Integer = 5
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncLight.Temperature
      commentId: P:Unity.Reflect.Model.SyncLight.Temperature
      language: CSharp
      name:
        CSharp: Temperature
        VB: Temperature
      nameWithType:
        CSharp: SyncLight.Temperature
        VB: SyncLight.Temperature
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncLight.Temperature
        VB: Unity.Reflect.Model.SyncLight.Temperature
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Temperature
        path: ''
        startLine: 2592
      syntax:
        content:
          CSharp: public float Temperature { get; set; }
          VB: Public Property Temperature As Single
        parameters: []
        return:
          type: System.Single
      overload: Unity.Reflect.Model.SyncLight.Temperature*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncLight.IntensityFieldNumber
      commentId: F:Unity.Reflect.Model.SyncLight.IntensityFieldNumber
      language: CSharp
      name:
        CSharp: IntensityFieldNumber
        VB: IntensityFieldNumber
      nameWithType:
        CSharp: SyncLight.IntensityFieldNumber
        VB: SyncLight.IntensityFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncLight.IntensityFieldNumber
        VB: Unity.Reflect.Model.SyncLight.IntensityFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: IntensityFieldNumber
        path: ''
        startLine: 2601
      summary: Field number for the &quot;intensity&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int IntensityFieldNumber = 6
          VB: Public Const IntensityFieldNumber As Integer = 6
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncLight.Intensity
      commentId: P:Unity.Reflect.Model.SyncLight.Intensity
      language: CSharp
      name:
        CSharp: Intensity
        VB: Intensity
      nameWithType:
        CSharp: SyncLight.Intensity
        VB: SyncLight.Intensity
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncLight.Intensity
        VB: Unity.Reflect.Model.SyncLight.Intensity
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Intensity
        path: ''
        startLine: 2603
      syntax:
        content:
          CSharp: public float Intensity { get; set; }
          VB: Public Property Intensity As Single
        parameters: []
        return:
          type: System.Single
      overload: Unity.Reflect.Model.SyncLight.Intensity*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncLight.IntensityUnitFieldNumber
      commentId: F:Unity.Reflect.Model.SyncLight.IntensityUnitFieldNumber
      language: CSharp
      name:
        CSharp: IntensityUnitFieldNumber
        VB: IntensityUnitFieldNumber
      nameWithType:
        CSharp: SyncLight.IntensityUnitFieldNumber
        VB: SyncLight.IntensityUnitFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncLight.IntensityUnitFieldNumber
        VB: Unity.Reflect.Model.SyncLight.IntensityUnitFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: IntensityUnitFieldNumber
        path: ''
        startLine: 2612
      summary: Field number for the &quot;intensityUnit&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int IntensityUnitFieldNumber = 7
          VB: Public Const IntensityUnitFieldNumber As Integer = 7
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncLight.IntensityUnit
      commentId: P:Unity.Reflect.Model.SyncLight.IntensityUnit
      language: CSharp
      name:
        CSharp: IntensityUnit
        VB: IntensityUnit
      nameWithType:
        CSharp: SyncLight.IntensityUnit
        VB: SyncLight.IntensityUnit
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncLight.IntensityUnit
        VB: Unity.Reflect.Model.SyncLight.IntensityUnit
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: IntensityUnit
        path: ''
        startLine: 2614
      syntax:
        content:
          CSharp: public SyncLight.Types.IntensityUnit IntensityUnit { get; set; }
          VB: Public Property IntensityUnit As SyncLight.Types.IntensityUnit
        parameters: []
        return:
          type: Unity.Reflect.Model.SyncLight.Types.IntensityUnit
      overload: Unity.Reflect.Model.SyncLight.IntensityUnit*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncLight.RangeFieldNumber
      commentId: F:Unity.Reflect.Model.SyncLight.RangeFieldNumber
      language: CSharp
      name:
        CSharp: RangeFieldNumber
        VB: RangeFieldNumber
      nameWithType:
        CSharp: SyncLight.RangeFieldNumber
        VB: SyncLight.RangeFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncLight.RangeFieldNumber
        VB: Unity.Reflect.Model.SyncLight.RangeFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: RangeFieldNumber
        path: ''
        startLine: 2623
      summary: Field number for the &quot;range&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int RangeFieldNumber = 8
          VB: Public Const RangeFieldNumber As Integer = 8
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncLight.Range
      commentId: P:Unity.Reflect.Model.SyncLight.Range
      language: CSharp
      name:
        CSharp: Range
        VB: Range
      nameWithType:
        CSharp: SyncLight.Range
        VB: SyncLight.Range
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncLight.Range
        VB: Unity.Reflect.Model.SyncLight.Range
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Range
        path: ''
        startLine: 2625
      syntax:
        content:
          CSharp: public float Range { get; set; }
          VB: Public Property Range As Single
        parameters: []
        return:
          type: System.Single
      overload: Unity.Reflect.Model.SyncLight.Range*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncLight.ShapeFieldNumber
      commentId: F:Unity.Reflect.Model.SyncLight.ShapeFieldNumber
      language: CSharp
      name:
        CSharp: ShapeFieldNumber
        VB: ShapeFieldNumber
      nameWithType:
        CSharp: SyncLight.ShapeFieldNumber
        VB: SyncLight.ShapeFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncLight.ShapeFieldNumber
        VB: Unity.Reflect.Model.SyncLight.ShapeFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: ShapeFieldNumber
        path: ''
        startLine: 2634
      summary: Field number for the &quot;shape&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int ShapeFieldNumber = 9
          VB: Public Const ShapeFieldNumber As Integer = 9
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncLight.Shape
      commentId: P:Unity.Reflect.Model.SyncLight.Shape
      language: CSharp
      name:
        CSharp: Shape
        VB: Shape
      nameWithType:
        CSharp: SyncLight.Shape
        VB: SyncLight.Shape
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncLight.Shape
        VB: Unity.Reflect.Model.SyncLight.Shape
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Shape
        path: ''
        startLine: 2636
      syntax:
        content:
          CSharp: public SyncLight.Types.Shape Shape { get; set; }
          VB: Public Property Shape As SyncLight.Types.Shape
        parameters: []
        return:
          type: Unity.Reflect.Model.SyncLight.Types.Shape
      overload: Unity.Reflect.Model.SyncLight.Shape*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncLight.ShapeDiameterFieldNumber
      commentId: F:Unity.Reflect.Model.SyncLight.ShapeDiameterFieldNumber
      language: CSharp
      name:
        CSharp: ShapeDiameterFieldNumber
        VB: ShapeDiameterFieldNumber
      nameWithType:
        CSharp: SyncLight.ShapeDiameterFieldNumber
        VB: SyncLight.ShapeDiameterFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncLight.ShapeDiameterFieldNumber
        VB: Unity.Reflect.Model.SyncLight.ShapeDiameterFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: ShapeDiameterFieldNumber
        path: ''
        startLine: 2645
      summary: Field number for the &quot;shapeDiameter&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int ShapeDiameterFieldNumber = 10
          VB: Public Const ShapeDiameterFieldNumber As Integer = 10
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncLight.ShapeDiameter
      commentId: P:Unity.Reflect.Model.SyncLight.ShapeDiameter
      language: CSharp
      name:
        CSharp: ShapeDiameter
        VB: ShapeDiameter
      nameWithType:
        CSharp: SyncLight.ShapeDiameter
        VB: SyncLight.ShapeDiameter
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncLight.ShapeDiameter
        VB: Unity.Reflect.Model.SyncLight.ShapeDiameter
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: ShapeDiameter
        path: ''
        startLine: 2647
      syntax:
        content:
          CSharp: public float ShapeDiameter { get; set; }
          VB: Public Property ShapeDiameter As Single
        parameters: []
        return:
          type: System.Single
      overload: Unity.Reflect.Model.SyncLight.ShapeDiameter*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncLight.ShapeWidthFieldNumber
      commentId: F:Unity.Reflect.Model.SyncLight.ShapeWidthFieldNumber
      language: CSharp
      name:
        CSharp: ShapeWidthFieldNumber
        VB: ShapeWidthFieldNumber
      nameWithType:
        CSharp: SyncLight.ShapeWidthFieldNumber
        VB: SyncLight.ShapeWidthFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncLight.ShapeWidthFieldNumber
        VB: Unity.Reflect.Model.SyncLight.ShapeWidthFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: ShapeWidthFieldNumber
        path: ''
        startLine: 2656
      summary: Field number for the &quot;shapeWidth&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int ShapeWidthFieldNumber = 11
          VB: Public Const ShapeWidthFieldNumber As Integer = 11
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncLight.ShapeWidth
      commentId: P:Unity.Reflect.Model.SyncLight.ShapeWidth
      language: CSharp
      name:
        CSharp: ShapeWidth
        VB: ShapeWidth
      nameWithType:
        CSharp: SyncLight.ShapeWidth
        VB: SyncLight.ShapeWidth
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncLight.ShapeWidth
        VB: Unity.Reflect.Model.SyncLight.ShapeWidth
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: ShapeWidth
        path: ''
        startLine: 2658
      syntax:
        content:
          CSharp: public float ShapeWidth { get; set; }
          VB: Public Property ShapeWidth As Single
        parameters: []
        return:
          type: System.Single
      overload: Unity.Reflect.Model.SyncLight.ShapeWidth*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncLight.ShapeLengthFieldNumber
      commentId: F:Unity.Reflect.Model.SyncLight.ShapeLengthFieldNumber
      language: CSharp
      name:
        CSharp: ShapeLengthFieldNumber
        VB: ShapeLengthFieldNumber
      nameWithType:
        CSharp: SyncLight.ShapeLengthFieldNumber
        VB: SyncLight.ShapeLengthFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncLight.ShapeLengthFieldNumber
        VB: Unity.Reflect.Model.SyncLight.ShapeLengthFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: ShapeLengthFieldNumber
        path: ''
        startLine: 2667
      summary: Field number for the &quot;shapeLength&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int ShapeLengthFieldNumber = 12
          VB: Public Const ShapeLengthFieldNumber As Integer = 12
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncLight.ShapeLength
      commentId: P:Unity.Reflect.Model.SyncLight.ShapeLength
      language: CSharp
      name:
        CSharp: ShapeLength
        VB: ShapeLength
      nameWithType:
        CSharp: SyncLight.ShapeLength
        VB: SyncLight.ShapeLength
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncLight.ShapeLength
        VB: Unity.Reflect.Model.SyncLight.ShapeLength
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: ShapeLength
        path: ''
        startLine: 2669
      syntax:
        content:
          CSharp: public float ShapeLength { get; set; }
          VB: Public Property ShapeLength As Single
        parameters: []
        return:
          type: System.Single
      overload: Unity.Reflect.Model.SyncLight.ShapeLength*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncLight.ShapeVisibleFieldNumber
      commentId: F:Unity.Reflect.Model.SyncLight.ShapeVisibleFieldNumber
      language: CSharp
      name:
        CSharp: ShapeVisibleFieldNumber
        VB: ShapeVisibleFieldNumber
      nameWithType:
        CSharp: SyncLight.ShapeVisibleFieldNumber
        VB: SyncLight.ShapeVisibleFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncLight.ShapeVisibleFieldNumber
        VB: Unity.Reflect.Model.SyncLight.ShapeVisibleFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: ShapeVisibleFieldNumber
        path: ''
        startLine: 2678
      summary: Field number for the &quot;shapeVisible&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int ShapeVisibleFieldNumber = 13
          VB: Public Const ShapeVisibleFieldNumber As Integer = 13
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncLight.ShapeVisible
      commentId: P:Unity.Reflect.Model.SyncLight.ShapeVisible
      language: CSharp
      name:
        CSharp: ShapeVisible
        VB: ShapeVisible
      nameWithType:
        CSharp: SyncLight.ShapeVisible
        VB: SyncLight.ShapeVisible
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncLight.ShapeVisible
        VB: Unity.Reflect.Model.SyncLight.ShapeVisible
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: ShapeVisible
        path: ''
        startLine: 2680
      syntax:
        content:
          CSharp: public bool ShapeVisible { get; set; }
          VB: Public Property ShapeVisible As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: Unity.Reflect.Model.SyncLight.ShapeVisible*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncLight.SpotAngleFieldNumber
      commentId: F:Unity.Reflect.Model.SyncLight.SpotAngleFieldNumber
      language: CSharp
      name:
        CSharp: SpotAngleFieldNumber
        VB: SpotAngleFieldNumber
      nameWithType:
        CSharp: SyncLight.SpotAngleFieldNumber
        VB: SyncLight.SpotAngleFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncLight.SpotAngleFieldNumber
        VB: Unity.Reflect.Model.SyncLight.SpotAngleFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: SpotAngleFieldNumber
        path: ''
        startLine: 2689
      summary: Field number for the &quot;spotAngle&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int SpotAngleFieldNumber = 14
          VB: Public Const SpotAngleFieldNumber As Integer = 14
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncLight.SpotAngle
      commentId: P:Unity.Reflect.Model.SyncLight.SpotAngle
      language: CSharp
      name:
        CSharp: SpotAngle
        VB: SpotAngle
      nameWithType:
        CSharp: SyncLight.SpotAngle
        VB: SyncLight.SpotAngle
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncLight.SpotAngle
        VB: Unity.Reflect.Model.SyncLight.SpotAngle
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: SpotAngle
        path: ''
        startLine: 2691
      syntax:
        content:
          CSharp: public float SpotAngle { get; set; }
          VB: Public Property SpotAngle As Single
        parameters: []
        return:
          type: System.Single
      overload: Unity.Reflect.Model.SyncLight.SpotAngle*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncLight.BeamAngleFieldNumber
      commentId: F:Unity.Reflect.Model.SyncLight.BeamAngleFieldNumber
      language: CSharp
      name:
        CSharp: BeamAngleFieldNumber
        VB: BeamAngleFieldNumber
      nameWithType:
        CSharp: SyncLight.BeamAngleFieldNumber
        VB: SyncLight.BeamAngleFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncLight.BeamAngleFieldNumber
        VB: Unity.Reflect.Model.SyncLight.BeamAngleFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: BeamAngleFieldNumber
        path: ''
        startLine: 2700
      summary: Field number for the &quot;beamAngle&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int BeamAngleFieldNumber = 15
          VB: Public Const BeamAngleFieldNumber As Integer = 15
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncLight.BeamAngle
      commentId: P:Unity.Reflect.Model.SyncLight.BeamAngle
      language: CSharp
      name:
        CSharp: BeamAngle
        VB: BeamAngle
      nameWithType:
        CSharp: SyncLight.BeamAngle
        VB: SyncLight.BeamAngle
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncLight.BeamAngle
        VB: Unity.Reflect.Model.SyncLight.BeamAngle
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: BeamAngle
        path: ''
        startLine: 2702
      syntax:
        content:
          CSharp: public float BeamAngle { get; set; }
          VB: Public Property BeamAngle As Single
        parameters: []
        return:
          type: System.Single
      overload: Unity.Reflect.Model.SyncLight.BeamAngle*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncLight.IesProfileFieldNumber
      commentId: F:Unity.Reflect.Model.SyncLight.IesProfileFieldNumber
      language: CSharp
      name:
        CSharp: IesProfileFieldNumber
        VB: IesProfileFieldNumber
      nameWithType:
        CSharp: SyncLight.IesProfileFieldNumber
        VB: SyncLight.IesProfileFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncLight.IesProfileFieldNumber
        VB: Unity.Reflect.Model.SyncLight.IesProfileFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: IesProfileFieldNumber
        path: ''
        startLine: 2711
      summary: Field number for the &quot;iesProfile&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int IesProfileFieldNumber = 16
          VB: Public Const IesProfileFieldNumber As Integer = 16
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncLight.IesProfile
      commentId: P:Unity.Reflect.Model.SyncLight.IesProfile
      language: CSharp
      name:
        CSharp: IesProfile
        VB: IesProfile
      nameWithType:
        CSharp: SyncLight.IesProfile
        VB: SyncLight.IesProfile
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncLight.IesProfile
        VB: Unity.Reflect.Model.SyncLight.IesProfile
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: IesProfile
        path: ''
        startLine: 2713
      syntax:
        content:
          CSharp: public string IesProfile { get; set; }
          VB: Public Property IesProfile As String
        parameters: []
        return:
          type: System.String
      overload: Unity.Reflect.Model.SyncLight.IesProfile*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncLight.Equals(System.Object)
      commentId: M:Unity.Reflect.Model.SyncLight.Equals(System.Object)
      language: CSharp
      name:
        CSharp: Equals(Object)
        VB: Equals(Object)
      nameWithType:
        CSharp: SyncLight.Equals(Object)
        VB: SyncLight.Equals(Object)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncLight.Equals(System.Object)
        VB: Unity.Reflect.Model.SyncLight.Equals(System.Object)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Equals
        path: ''
        startLine: 2721
      syntax:
        content:
          CSharp: public override bool Equals(object other)
          VB: Public Overrides Function Equals(other As Object) As Boolean
        parameters:
        - id: other
          type: System.Object
        return:
          type: System.Boolean
      overload: Unity.Reflect.Model.SyncLight.Equals*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.Model.SyncLight.Equals(Unity.Reflect.Model.SyncLight)
      commentId: M:Unity.Reflect.Model.SyncLight.Equals(Unity.Reflect.Model.SyncLight)
      language: CSharp
      name:
        CSharp: Equals(SyncLight)
        VB: Equals(SyncLight)
      nameWithType:
        CSharp: SyncLight.Equals(SyncLight)
        VB: SyncLight.Equals(SyncLight)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncLight.Equals(Unity.Reflect.Model.SyncLight)
        VB: Unity.Reflect.Model.SyncLight.Equals(Unity.Reflect.Model.SyncLight)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Equals
        path: ''
        startLine: 2726
      syntax:
        content:
          CSharp: public bool Equals(SyncLight other)
          VB: Public Function Equals(other As SyncLight) As Boolean
        parameters:
        - id: other
          type: Unity.Reflect.Model.SyncLight
        return:
          type: System.Boolean
      overload: Unity.Reflect.Model.SyncLight.Equals*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncLight.GetHashCode
      commentId: M:Unity.Reflect.Model.SyncLight.GetHashCode
      language: CSharp
      name:
        CSharp: GetHashCode()
        VB: GetHashCode()
      nameWithType:
        CSharp: SyncLight.GetHashCode()
        VB: SyncLight.GetHashCode()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncLight.GetHashCode()
        VB: Unity.Reflect.Model.SyncLight.GetHashCode()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: GetHashCode
        path: ''
        startLine: 2753
      syntax:
        content:
          CSharp: public override int GetHashCode()
          VB: Public Overrides Function GetHashCode As Integer
        return:
          type: System.Int32
      overload: Unity.Reflect.Model.SyncLight.GetHashCode*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.Model.SyncLight.ToString
      commentId: M:Unity.Reflect.Model.SyncLight.ToString
      language: CSharp
      name:
        CSharp: ToString()
        VB: ToString()
      nameWithType:
        CSharp: SyncLight.ToString()
        VB: SyncLight.ToString()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncLight.ToString()
        VB: Unity.Reflect.Model.SyncLight.ToString()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: ToString
        path: ''
        startLine: 2778
      syntax:
        content:
          CSharp: public override string ToString()
          VB: Public Overrides Function ToString As String
        return:
          type: System.String
      overload: Unity.Reflect.Model.SyncLight.ToString*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.Model.SyncLight.WriteTo(pb.CodedOutputStream)
      commentId: M:Unity.Reflect.Model.SyncLight.WriteTo(pb.CodedOutputStream)
      language: CSharp
      name:
        CSharp: WriteTo(pb.CodedOutputStream)
        VB: WriteTo(pb.CodedOutputStream)
      nameWithType:
        CSharp: SyncLight.WriteTo(pb.CodedOutputStream)
        VB: SyncLight.WriteTo(pb.CodedOutputStream)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncLight.WriteTo(pb.CodedOutputStream)
        VB: Unity.Reflect.Model.SyncLight.WriteTo(pb.CodedOutputStream)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: WriteTo
        path: ''
        startLine: 2783
      syntax:
        content:
          CSharp: public void WriteTo(pb.CodedOutputStream output)
          VB: Public Sub WriteTo(output As pb.CodedOutputStream)
        parameters:
        - id: output
          type: pb.CodedOutputStream
      overload: Unity.Reflect.Model.SyncLight.WriteTo*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncLight.CalculateSize
      commentId: M:Unity.Reflect.Model.SyncLight.CalculateSize
      language: CSharp
      name:
        CSharp: CalculateSize()
        VB: CalculateSize()
      nameWithType:
        CSharp: SyncLight.CalculateSize()
        VB: SyncLight.CalculateSize()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncLight.CalculateSize()
        VB: Unity.Reflect.Model.SyncLight.CalculateSize()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: CalculateSize
        path: ''
        startLine: 2854
      syntax:
        content:
          CSharp: public int CalculateSize()
          VB: Public Function CalculateSize As Integer
        return:
          type: System.Int32
      overload: Unity.Reflect.Model.SyncLight.CalculateSize*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncLight.MergeFrom(Unity.Reflect.Model.SyncLight)
      commentId: M:Unity.Reflect.Model.SyncLight.MergeFrom(Unity.Reflect.Model.SyncLight)
      language: CSharp
      name:
        CSharp: MergeFrom(SyncLight)
        VB: MergeFrom(SyncLight)
      nameWithType:
        CSharp: SyncLight.MergeFrom(SyncLight)
        VB: SyncLight.MergeFrom(SyncLight)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncLight.MergeFrom(Unity.Reflect.Model.SyncLight)
        VB: Unity.Reflect.Model.SyncLight.MergeFrom(Unity.Reflect.Model.SyncLight)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: MergeFrom
        path: ''
        startLine: 2911
      syntax:
        content:
          CSharp: public void MergeFrom(SyncLight other)
          VB: Public Sub MergeFrom(other As SyncLight)
        parameters:
        - id: other
          type: Unity.Reflect.Model.SyncLight
      overload: Unity.Reflect.Model.SyncLight.MergeFrom*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncLight.MergeFrom(pb.CodedInputStream)
      commentId: M:Unity.Reflect.Model.SyncLight.MergeFrom(pb.CodedInputStream)
      language: CSharp
      name:
        CSharp: MergeFrom(pb.CodedInputStream)
        VB: MergeFrom(pb.CodedInputStream)
      nameWithType:
        CSharp: SyncLight.MergeFrom(pb.CodedInputStream)
        VB: SyncLight.MergeFrom(pb.CodedInputStream)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncLight.MergeFrom(pb.CodedInputStream)
        VB: Unity.Reflect.Model.SyncLight.MergeFrom(pb.CodedInputStream)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: MergeFrom
        path: ''
        startLine: 2973
      syntax:
        content:
          CSharp: public void MergeFrom(pb.CodedInputStream input)
          VB: Public Sub MergeFrom(input As pb.CodedInputStream)
        parameters:
        - id: input
          type: pb.CodedInputStream
      overload: Unity.Reflect.Model.SyncLight.MergeFrom*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Unity.Reflect.Model.SyncLight.Types
    commentId: T:Unity.Reflect.Model.SyncLight.Types
    language: CSharp
    name:
      CSharp: SyncLight.Types
      VB: SyncLight.Types
    nameWithType:
      CSharp: SyncLight.Types
      VB: SyncLight.Types
    qualifiedName:
      CSharp: Unity.Reflect.Model.SyncLight.Types
      VB: Unity.Reflect.Model.SyncLight.Types
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect.Model
    source:
      id: Types
      path: ''
      startLine: 3057
    summary: Container for nested types declared in the SyncLight message type.
    example: []
    syntax:
      content:
        CSharp: public static class Types
        VB: Public Module Types
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items: []
  - id: Unity.Reflect.Model.SyncLight.Types.Type
    commentId: T:Unity.Reflect.Model.SyncLight.Types.Type
    language: CSharp
    name:
      CSharp: SyncLight.Types.Type
      VB: SyncLight.Types.Type
    nameWithType:
      CSharp: SyncLight.Types.Type
      VB: SyncLight.Types.Type
    qualifiedName:
      CSharp: Unity.Reflect.Model.SyncLight.Types.Type
      VB: Unity.Reflect.Model.SyncLight.Types.Type
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect.Model
    source:
      id: Type
      path: ''
      startLine: 3059
    syntax:
      content:
        CSharp: public enum Type
        VB: Public Enum Type
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Unity.Reflect.Model.SyncLight.Types.Type.Spot
      commentId: F:Unity.Reflect.Model.SyncLight.Types.Type.Spot
      language: CSharp
      name:
        CSharp: Spot
        VB: Spot
      nameWithType:
        CSharp: SyncLight.Types.Type.Spot
        VB: SyncLight.Types.Type.Spot
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncLight.Types.Type.Spot
        VB: Unity.Reflect.Model.SyncLight.Types.Type.Spot
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Spot
        path: ''
        startLine: 3060
      syntax:
        content:
          CSharp: Spot = 0
          VB: Spot = 0
        return:
          type: Unity.Reflect.Model.SyncLight.Types.Type
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncLight.Types.Type.Directional
      commentId: F:Unity.Reflect.Model.SyncLight.Types.Type.Directional
      language: CSharp
      name:
        CSharp: Directional
        VB: Directional
      nameWithType:
        CSharp: SyncLight.Types.Type.Directional
        VB: SyncLight.Types.Type.Directional
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncLight.Types.Type.Directional
        VB: Unity.Reflect.Model.SyncLight.Types.Type.Directional
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Directional
        path: ''
        startLine: 3061
      syntax:
        content:
          CSharp: Directional = 1
          VB: Directional = 1
        return:
          type: Unity.Reflect.Model.SyncLight.Types.Type
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncLight.Types.Type.PointType
      commentId: F:Unity.Reflect.Model.SyncLight.Types.Type.PointType
      language: CSharp
      name:
        CSharp: PointType
        VB: PointType
      nameWithType:
        CSharp: SyncLight.Types.Type.PointType
        VB: SyncLight.Types.Type.PointType
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncLight.Types.Type.PointType
        VB: Unity.Reflect.Model.SyncLight.Types.Type.PointType
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: PointType
        path: ''
        startLine: 3062
      syntax:
        content:
          CSharp: PointType = 2
          VB: PointType = 2
        return:
          type: Unity.Reflect.Model.SyncLight.Types.Type
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Unity.Reflect.Model.SyncLight.Types.IntensityUnit
    commentId: T:Unity.Reflect.Model.SyncLight.Types.IntensityUnit
    language: CSharp
    name:
      CSharp: SyncLight.Types.IntensityUnit
      VB: SyncLight.Types.IntensityUnit
    nameWithType:
      CSharp: SyncLight.Types.IntensityUnit
      VB: SyncLight.Types.IntensityUnit
    qualifiedName:
      CSharp: Unity.Reflect.Model.SyncLight.Types.IntensityUnit
      VB: Unity.Reflect.Model.SyncLight.Types.IntensityUnit
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect.Model
    source:
      id: IntensityUnit
      path: ''
      startLine: 3065
    syntax:
      content:
        CSharp: public enum IntensityUnit
        VB: Public Enum IntensityUnit
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Unity.Reflect.Model.SyncLight.Types.IntensityUnit.Candela
      commentId: F:Unity.Reflect.Model.SyncLight.Types.IntensityUnit.Candela
      language: CSharp
      name:
        CSharp: Candela
        VB: Candela
      nameWithType:
        CSharp: SyncLight.Types.IntensityUnit.Candela
        VB: SyncLight.Types.IntensityUnit.Candela
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncLight.Types.IntensityUnit.Candela
        VB: Unity.Reflect.Model.SyncLight.Types.IntensityUnit.Candela
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Candela
        path: ''
        startLine: 3066
      syntax:
        content:
          CSharp: Candela = 0
          VB: Candela = 0
        return:
          type: Unity.Reflect.Model.SyncLight.Types.IntensityUnit
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncLight.Types.IntensityUnit.Lumen
      commentId: F:Unity.Reflect.Model.SyncLight.Types.IntensityUnit.Lumen
      language: CSharp
      name:
        CSharp: Lumen
        VB: Lumen
      nameWithType:
        CSharp: SyncLight.Types.IntensityUnit.Lumen
        VB: SyncLight.Types.IntensityUnit.Lumen
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncLight.Types.IntensityUnit.Lumen
        VB: Unity.Reflect.Model.SyncLight.Types.IntensityUnit.Lumen
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Lumen
        path: ''
        startLine: 3067
      syntax:
        content:
          CSharp: Lumen = 1
          VB: Lumen = 1
        return:
          type: Unity.Reflect.Model.SyncLight.Types.IntensityUnit
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncLight.Types.IntensityUnit.Lux
      commentId: F:Unity.Reflect.Model.SyncLight.Types.IntensityUnit.Lux
      language: CSharp
      name:
        CSharp: Lux
        VB: Lux
      nameWithType:
        CSharp: SyncLight.Types.IntensityUnit.Lux
        VB: SyncLight.Types.IntensityUnit.Lux
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncLight.Types.IntensityUnit.Lux
        VB: Unity.Reflect.Model.SyncLight.Types.IntensityUnit.Lux
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Lux
        path: ''
        startLine: 3068
      syntax:
        content:
          CSharp: Lux = 2
          VB: Lux = 2
        return:
          type: Unity.Reflect.Model.SyncLight.Types.IntensityUnit
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncLight.Types.IntensityUnit.Watt
      commentId: F:Unity.Reflect.Model.SyncLight.Types.IntensityUnit.Watt
      language: CSharp
      name:
        CSharp: Watt
        VB: Watt
      nameWithType:
        CSharp: SyncLight.Types.IntensityUnit.Watt
        VB: SyncLight.Types.IntensityUnit.Watt
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncLight.Types.IntensityUnit.Watt
        VB: Unity.Reflect.Model.SyncLight.Types.IntensityUnit.Watt
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Watt
        path: ''
        startLine: 3069
      syntax:
        content:
          CSharp: Watt = 3
          VB: Watt = 3
        return:
          type: Unity.Reflect.Model.SyncLight.Types.IntensityUnit
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncLight.Types.IntensityUnit.CandelaPerSquareMeter
      commentId: F:Unity.Reflect.Model.SyncLight.Types.IntensityUnit.CandelaPerSquareMeter
      language: CSharp
      name:
        CSharp: CandelaPerSquareMeter
        VB: CandelaPerSquareMeter
      nameWithType:
        CSharp: SyncLight.Types.IntensityUnit.CandelaPerSquareMeter
        VB: SyncLight.Types.IntensityUnit.CandelaPerSquareMeter
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncLight.Types.IntensityUnit.CandelaPerSquareMeter
        VB: Unity.Reflect.Model.SyncLight.Types.IntensityUnit.CandelaPerSquareMeter
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: CandelaPerSquareMeter
        path: ''
        startLine: 3070
      syntax:
        content:
          CSharp: CandelaPerSquareMeter = 4
          VB: CandelaPerSquareMeter = 4
        return:
          type: Unity.Reflect.Model.SyncLight.Types.IntensityUnit
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncLight.Types.IntensityUnit.Unknown
      commentId: F:Unity.Reflect.Model.SyncLight.Types.IntensityUnit.Unknown
      language: CSharp
      name:
        CSharp: Unknown
        VB: Unknown
      nameWithType:
        CSharp: SyncLight.Types.IntensityUnit.Unknown
        VB: SyncLight.Types.IntensityUnit.Unknown
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncLight.Types.IntensityUnit.Unknown
        VB: Unity.Reflect.Model.SyncLight.Types.IntensityUnit.Unknown
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Unknown
        path: ''
        startLine: 3071
      syntax:
        content:
          CSharp: Unknown = 5
          VB: Unknown = 5
        return:
          type: Unity.Reflect.Model.SyncLight.Types.IntensityUnit
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Unity.Reflect.Model.SyncLight.Types.Shape
    commentId: T:Unity.Reflect.Model.SyncLight.Types.Shape
    language: CSharp
    name:
      CSharp: SyncLight.Types.Shape
      VB: SyncLight.Types.Shape
    nameWithType:
      CSharp: SyncLight.Types.Shape
      VB: SyncLight.Types.Shape
    qualifiedName:
      CSharp: Unity.Reflect.Model.SyncLight.Types.Shape
      VB: Unity.Reflect.Model.SyncLight.Types.Shape
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect.Model
    source:
      id: Shape
      path: ''
      startLine: 3074
    syntax:
      content:
        CSharp: public enum Shape
        VB: Public Enum Shape
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Unity.Reflect.Model.SyncLight.Types.Shape.Point
      commentId: F:Unity.Reflect.Model.SyncLight.Types.Shape.Point
      language: CSharp
      name:
        CSharp: Point
        VB: Point
      nameWithType:
        CSharp: SyncLight.Types.Shape.Point
        VB: SyncLight.Types.Shape.Point
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncLight.Types.Shape.Point
        VB: Unity.Reflect.Model.SyncLight.Types.Shape.Point
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Point
        path: ''
        startLine: 3075
      syntax:
        content:
          CSharp: Point = 0
          VB: Point = 0
        return:
          type: Unity.Reflect.Model.SyncLight.Types.Shape
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncLight.Types.Shape.Line
      commentId: F:Unity.Reflect.Model.SyncLight.Types.Shape.Line
      language: CSharp
      name:
        CSharp: Line
        VB: Line
      nameWithType:
        CSharp: SyncLight.Types.Shape.Line
        VB: SyncLight.Types.Shape.Line
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncLight.Types.Shape.Line
        VB: Unity.Reflect.Model.SyncLight.Types.Shape.Line
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Line
        path: ''
        startLine: 3076
      syntax:
        content:
          CSharp: Line = 1
          VB: Line = 1
        return:
          type: Unity.Reflect.Model.SyncLight.Types.Shape
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncLight.Types.Shape.Rectangle
      commentId: F:Unity.Reflect.Model.SyncLight.Types.Shape.Rectangle
      language: CSharp
      name:
        CSharp: Rectangle
        VB: Rectangle
      nameWithType:
        CSharp: SyncLight.Types.Shape.Rectangle
        VB: SyncLight.Types.Shape.Rectangle
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncLight.Types.Shape.Rectangle
        VB: Unity.Reflect.Model.SyncLight.Types.Shape.Rectangle
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Rectangle
        path: ''
        startLine: 3077
      syntax:
        content:
          CSharp: Rectangle = 2
          VB: Rectangle = 2
        return:
          type: Unity.Reflect.Model.SyncLight.Types.Shape
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncLight.Types.Shape.Circle
      commentId: F:Unity.Reflect.Model.SyncLight.Types.Shape.Circle
      language: CSharp
      name:
        CSharp: Circle
        VB: Circle
      nameWithType:
        CSharp: SyncLight.Types.Shape.Circle
        VB: SyncLight.Types.Shape.Circle
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncLight.Types.Shape.Circle
        VB: Unity.Reflect.Model.SyncLight.Types.Shape.Circle
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Circle
        path: ''
        startLine: 3078
      syntax:
        content:
          CSharp: Circle = 3
          VB: Circle = 3
        return:
          type: Unity.Reflect.Model.SyncLight.Types.Shape
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Unity.Reflect.Model.SyncMaterial
    commentId: T:Unity.Reflect.Model.SyncMaterial
    language: CSharp
    name:
      CSharp: SyncMaterial
      VB: SyncMaterial
    nameWithType:
      CSharp: SyncMaterial
      VB: SyncMaterial
    qualifiedName:
      CSharp: Unity.Reflect.Model.SyncMaterial
      VB: Unity.Reflect.Model.SyncMaterial
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect.Model
    source:
      id: SyncMaterial
      path: ''
      startLine: 3540
    syntax:
      content:
        CSharp: 'public sealed class SyncMaterial : pb.IMessage<SyncMaterial>, ISyncModel, ISyncSendable'
        VB: >-
          Public NotInheritable Class SyncMaterial

              Inherits pb.IMessage(Of SyncMaterial)

              Implements ISyncModel, ISyncSendable
    inheritance:
    - System.Object
    implements:
    - Unity.Reflect.Model.ISyncModel
    modifiers:
      CSharp:
      - public
      - sealed
      - class
      VB:
      - Public
      - NotInheritable
      - Class
    items:
    - id: Unity.Reflect.Model.SyncMaterial.Extension
      commentId: F:Unity.Reflect.Model.SyncMaterial.Extension
      language: CSharp
      name:
        CSharp: Extension
        VB: Extension
      nameWithType:
        CSharp: SyncMaterial.Extension
        VB: SyncMaterial.Extension
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMaterial.Extension
        VB: Unity.Reflect.Model.SyncMaterial.Extension
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Extension
        path: ''
        startLine: 691
      syntax:
        content:
          CSharp: public static string Extension
          VB: Public Shared Extension As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Unity.Reflect.Model.SyncMaterial.Default
      commentId: M:Unity.Reflect.Model.SyncMaterial.Default
      language: CSharp
      name:
        CSharp: Default()
        VB: Default()
      nameWithType:
        CSharp: SyncMaterial.Default()
        VB: SyncMaterial.Default()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMaterial.Default()
        VB: Unity.Reflect.Model.SyncMaterial.Default()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Default
        path: ''
        startLine: 693
      syntax:
        content:
          CSharp: public static SyncMaterial Default()
          VB: Public Shared Function Default As SyncMaterial
        return:
          type: Unity.Reflect.Model.SyncMaterial
      overload: Unity.Reflect.Model.SyncMaterial.Default*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Unity.Reflect.Model.SyncMaterial.#ctor(System.String,Unity.Reflect.Model.SyncColor,Unity.Reflect.Model.SyncMap,Unity.Reflect.Model.SyncColor,System.Single,System.Single,Unity.Reflect.Model.SyncMap,Unity.Reflect.Model.SyncMap,System.Single,Unity.Reflect.Model.SyncMap,System.Single,System.Single,Unity.Reflect.Model.SyncMap,System.Single,Unity.Reflect.Model.SyncMap,Unity.Reflect.Model.SyncColor,System.Single,Unity.Reflect.Model.SyncMap)
      commentId: M:Unity.Reflect.Model.SyncMaterial.#ctor(System.String,Unity.Reflect.Model.SyncColor,Unity.Reflect.Model.SyncMap,Unity.Reflect.Model.SyncColor,System.Single,System.Single,Unity.Reflect.Model.SyncMap,Unity.Reflect.Model.SyncMap,System.Single,Unity.Reflect.Model.SyncMap,System.Single,System.Single,Unity.Reflect.Model.SyncMap,System.Single,Unity.Reflect.Model.SyncMap,Unity.Reflect.Model.SyncColor,System.Single,Unity.Reflect.Model.SyncMap)
      language: CSharp
      name:
        CSharp: SyncMaterial(String, SyncColor, SyncMap, SyncColor, Single, Single, SyncMap, SyncMap, Single, SyncMap, Single, Single, SyncMap, Single, SyncMap, SyncColor, Single, SyncMap)
        VB: SyncMaterial(String, SyncColor, SyncMap, SyncColor, Single, Single, SyncMap, SyncMap, Single, SyncMap, Single, Single, SyncMap, Single, SyncMap, SyncColor, Single, SyncMap)
      nameWithType:
        CSharp: SyncMaterial.SyncMaterial(String, SyncColor, SyncMap, SyncColor, Single, Single, SyncMap, SyncMap, Single, SyncMap, Single, Single, SyncMap, Single, SyncMap, SyncColor, Single, SyncMap)
        VB: SyncMaterial.SyncMaterial(String, SyncColor, SyncMap, SyncColor, Single, Single, SyncMap, SyncMap, Single, SyncMap, Single, Single, SyncMap, Single, SyncMap, SyncColor, Single, SyncMap)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMaterial.SyncMaterial(System.String, Unity.Reflect.Model.SyncColor, Unity.Reflect.Model.SyncMap, Unity.Reflect.Model.SyncColor, System.Single, System.Single, Unity.Reflect.Model.SyncMap, Unity.Reflect.Model.SyncMap, System.Single, Unity.Reflect.Model.SyncMap, System.Single, System.Single, Unity.Reflect.Model.SyncMap, System.Single, Unity.Reflect.Model.SyncMap, Unity.Reflect.Model.SyncColor, System.Single, Unity.Reflect.Model.SyncMap)
        VB: Unity.Reflect.Model.SyncMaterial.SyncMaterial(System.String, Unity.Reflect.Model.SyncColor, Unity.Reflect.Model.SyncMap, Unity.Reflect.Model.SyncColor, System.Single, System.Single, Unity.Reflect.Model.SyncMap, Unity.Reflect.Model.SyncMap, System.Single, Unity.Reflect.Model.SyncMap, System.Single, System.Single, Unity.Reflect.Model.SyncMap, System.Single, Unity.Reflect.Model.SyncMap, Unity.Reflect.Model.SyncColor, System.Single, Unity.Reflect.Model.SyncMap)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: .ctor
        path: ''
        startLine: 725
      syntax:
        content:
          CSharp: public SyncMaterial(string name, SyncColor albedo, SyncMap albedoMap, SyncColor albedoOverlay, float albedoFade, float alpha, SyncMap alphaMap, SyncMap normalMap, float normalScale, SyncMap cutoutMap, float cutoutThreshold, float glossiness, SyncMap glossinessMap, float metallic, SyncMap metallicMap, SyncColor emission, float emissionTemperature, SyncMap emissionMap)
          VB: Public Sub New(name As String, albedo As SyncColor, albedoMap As SyncMap, albedoOverlay As SyncColor, albedoFade As Single, alpha As Single, alphaMap As SyncMap, normalMap As SyncMap, normalScale As Single, cutoutMap As SyncMap, cutoutThreshold As Single, glossiness As Single, glossinessMap As SyncMap, metallic As Single, metallicMap As SyncMap, emission As SyncColor, emissionTemperature As Single, emissionMap As SyncMap)
        parameters:
        - id: name
          type: System.String
        - id: albedo
          type: Unity.Reflect.Model.SyncColor
        - id: albedoMap
          type: Unity.Reflect.Model.SyncMap
        - id: albedoOverlay
          type: Unity.Reflect.Model.SyncColor
        - id: albedoFade
          type: System.Single
        - id: alpha
          type: System.Single
        - id: alphaMap
          type: Unity.Reflect.Model.SyncMap
        - id: normalMap
          type: Unity.Reflect.Model.SyncMap
        - id: normalScale
          type: System.Single
        - id: cutoutMap
          type: Unity.Reflect.Model.SyncMap
        - id: cutoutThreshold
          type: System.Single
        - id: glossiness
          type: System.Single
        - id: glossinessMap
          type: Unity.Reflect.Model.SyncMap
        - id: metallic
          type: System.Single
        - id: metallicMap
          type: Unity.Reflect.Model.SyncMap
        - id: emission
          type: Unity.Reflect.Model.SyncColor
        - id: emissionTemperature
          type: System.Single
        - id: emissionMap
          type: Unity.Reflect.Model.SyncMap
      overload: Unity.Reflect.Model.SyncMaterial.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncMaterial.Parser
      commentId: P:Unity.Reflect.Model.SyncMaterial.Parser
      language: CSharp
      name:
        CSharp: Parser
        VB: Parser
      nameWithType:
        CSharp: SyncMaterial.Parser
        VB: SyncMaterial.Parser
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMaterial.Parser
        VB: Unity.Reflect.Model.SyncMaterial.Parser
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Parser
        path: ''
        startLine: 3543
      syntax:
        content:
          CSharp: public static pb.MessageParser<SyncMaterial> Parser { get; }
          VB: Public Shared ReadOnly Property Parser As pb.MessageParser(Of SyncMaterial)
        parameters: []
        return:
          type: pb.MessageParser{Unity.Reflect.Model.SyncMaterial}
      overload: Unity.Reflect.Model.SyncMaterial.Parser*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Unity.Reflect.Model.SyncMaterial.Descriptor
      commentId: P:Unity.Reflect.Model.SyncMaterial.Descriptor
      language: CSharp
      name:
        CSharp: Descriptor
        VB: Descriptor
      nameWithType:
        CSharp: SyncMaterial.Descriptor
        VB: SyncMaterial.Descriptor
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMaterial.Descriptor
        VB: Unity.Reflect.Model.SyncMaterial.Descriptor
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Descriptor
        path: ''
        startLine: 3546
      syntax:
        content:
          CSharp: public static pbr.MessageDescriptor Descriptor { get; }
          VB: Public Shared ReadOnly Property Descriptor As pbr.MessageDescriptor
        parameters: []
        return:
          type: pbr.MessageDescriptor
      overload: Unity.Reflect.Model.SyncMaterial.Descriptor*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Unity.Reflect.Model.SyncMaterial.#ctor
      commentId: M:Unity.Reflect.Model.SyncMaterial.#ctor
      language: CSharp
      name:
        CSharp: SyncMaterial()
        VB: SyncMaterial()
      nameWithType:
        CSharp: SyncMaterial.SyncMaterial()
        VB: SyncMaterial.SyncMaterial()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMaterial.SyncMaterial()
        VB: Unity.Reflect.Model.SyncMaterial.SyncMaterial()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: .ctor
        path: ''
        startLine: 3556
      syntax:
        content:
          CSharp: public SyncMaterial()
          VB: Public Sub New
      overload: Unity.Reflect.Model.SyncMaterial.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncMaterial.#ctor(Unity.Reflect.Model.SyncMaterial)
      commentId: M:Unity.Reflect.Model.SyncMaterial.#ctor(Unity.Reflect.Model.SyncMaterial)
      language: CSharp
      name:
        CSharp: SyncMaterial(SyncMaterial)
        VB: SyncMaterial(SyncMaterial)
      nameWithType:
        CSharp: SyncMaterial.SyncMaterial(SyncMaterial)
        VB: SyncMaterial.SyncMaterial(SyncMaterial)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMaterial.SyncMaterial(Unity.Reflect.Model.SyncMaterial)
        VB: Unity.Reflect.Model.SyncMaterial.SyncMaterial(Unity.Reflect.Model.SyncMaterial)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: .ctor
        path: ''
        startLine: 3563
      syntax:
        content:
          CSharp: public SyncMaterial(SyncMaterial other)
          VB: Public Sub New(other As SyncMaterial)
        parameters:
        - id: other
          type: Unity.Reflect.Model.SyncMaterial
      overload: Unity.Reflect.Model.SyncMaterial.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncMaterial.Clone
      commentId: M:Unity.Reflect.Model.SyncMaterial.Clone
      language: CSharp
      name:
        CSharp: Clone()
        VB: Clone()
      nameWithType:
        CSharp: SyncMaterial.Clone()
        VB: SyncMaterial.Clone()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMaterial.Clone()
        VB: Unity.Reflect.Model.SyncMaterial.Clone()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Clone
        path: ''
        startLine: 3586
      syntax:
        content:
          CSharp: public SyncMaterial Clone()
          VB: Public Function Clone As SyncMaterial
        return:
          type: Unity.Reflect.Model.SyncMaterial
      overload: Unity.Reflect.Model.SyncMaterial.Clone*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncMaterial.NameFieldNumber
      commentId: F:Unity.Reflect.Model.SyncMaterial.NameFieldNumber
      language: CSharp
      name:
        CSharp: NameFieldNumber
        VB: NameFieldNumber
      nameWithType:
        CSharp: SyncMaterial.NameFieldNumber
        VB: SyncMaterial.NameFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMaterial.NameFieldNumber
        VB: Unity.Reflect.Model.SyncMaterial.NameFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: NameFieldNumber
        path: ''
        startLine: 3592
      summary: Field number for the &quot;name&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int NameFieldNumber = 1
          VB: Public Const NameFieldNumber As Integer = 1
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncMaterial.Name
      commentId: P:Unity.Reflect.Model.SyncMaterial.Name
      language: CSharp
      name:
        CSharp: Name
        VB: Name
      nameWithType:
        CSharp: SyncMaterial.Name
        VB: SyncMaterial.Name
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMaterial.Name
        VB: Unity.Reflect.Model.SyncMaterial.Name
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Name
        path: ''
        startLine: 3594
      syntax:
        content:
          CSharp: public string Name { get; set; }
          VB: Public Property Name As String
        parameters: []
        return:
          type: System.String
      overload: Unity.Reflect.Model.SyncMaterial.Name*
      implements:
      - Unity.Reflect.Model.ISyncModel.Name
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncMaterial.TintFieldNumber
      commentId: F:Unity.Reflect.Model.SyncMaterial.TintFieldNumber
      language: CSharp
      name:
        CSharp: TintFieldNumber
        VB: TintFieldNumber
      nameWithType:
        CSharp: SyncMaterial.TintFieldNumber
        VB: SyncMaterial.TintFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMaterial.TintFieldNumber
        VB: Unity.Reflect.Model.SyncMaterial.TintFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: TintFieldNumber
        path: ''
        startLine: 3603
      summary: Field number for the &quot;tint&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int TintFieldNumber = 2
          VB: Public Const TintFieldNumber As Integer = 2
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncMaterial.Tint
      commentId: P:Unity.Reflect.Model.SyncMaterial.Tint
      language: CSharp
      name:
        CSharp: Tint
        VB: Tint
      nameWithType:
        CSharp: SyncMaterial.Tint
        VB: SyncMaterial.Tint
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMaterial.Tint
        VB: Unity.Reflect.Model.SyncMaterial.Tint
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Tint
        path: ''
        startLine: 3605
      syntax:
        content:
          CSharp: public SyncColor Tint { get; set; }
          VB: Public Property Tint As SyncColor
        parameters: []
        return:
          type: Unity.Reflect.Model.SyncColor
      overload: Unity.Reflect.Model.SyncMaterial.Tint*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncMaterial.AlbedoColorFieldNumber
      commentId: F:Unity.Reflect.Model.SyncMaterial.AlbedoColorFieldNumber
      language: CSharp
      name:
        CSharp: AlbedoColorFieldNumber
        VB: AlbedoColorFieldNumber
      nameWithType:
        CSharp: SyncMaterial.AlbedoColorFieldNumber
        VB: SyncMaterial.AlbedoColorFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMaterial.AlbedoColorFieldNumber
        VB: Unity.Reflect.Model.SyncMaterial.AlbedoColorFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: AlbedoColorFieldNumber
        path: ''
        startLine: 3614
      summary: Field number for the &quot;albedoColor&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int AlbedoColorFieldNumber = 3
          VB: Public Const AlbedoColorFieldNumber As Integer = 3
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncMaterial.AlbedoColor
      commentId: P:Unity.Reflect.Model.SyncMaterial.AlbedoColor
      language: CSharp
      name:
        CSharp: AlbedoColor
        VB: AlbedoColor
      nameWithType:
        CSharp: SyncMaterial.AlbedoColor
        VB: SyncMaterial.AlbedoColor
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMaterial.AlbedoColor
        VB: Unity.Reflect.Model.SyncMaterial.AlbedoColor
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: AlbedoColor
        path: ''
        startLine: 3616
      syntax:
        content:
          CSharp: public SyncColor AlbedoColor { get; set; }
          VB: Public Property AlbedoColor As SyncColor
        parameters: []
        return:
          type: Unity.Reflect.Model.SyncColor
      overload: Unity.Reflect.Model.SyncMaterial.AlbedoColor*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncMaterial.AlbedoMapFieldNumber
      commentId: F:Unity.Reflect.Model.SyncMaterial.AlbedoMapFieldNumber
      language: CSharp
      name:
        CSharp: AlbedoMapFieldNumber
        VB: AlbedoMapFieldNumber
      nameWithType:
        CSharp: SyncMaterial.AlbedoMapFieldNumber
        VB: SyncMaterial.AlbedoMapFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMaterial.AlbedoMapFieldNumber
        VB: Unity.Reflect.Model.SyncMaterial.AlbedoMapFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: AlbedoMapFieldNumber
        path: ''
        startLine: 3625
      summary: Field number for the &quot;albedoMap&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int AlbedoMapFieldNumber = 4
          VB: Public Const AlbedoMapFieldNumber As Integer = 4
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncMaterial.AlbedoMap
      commentId: P:Unity.Reflect.Model.SyncMaterial.AlbedoMap
      language: CSharp
      name:
        CSharp: AlbedoMap
        VB: AlbedoMap
      nameWithType:
        CSharp: SyncMaterial.AlbedoMap
        VB: SyncMaterial.AlbedoMap
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMaterial.AlbedoMap
        VB: Unity.Reflect.Model.SyncMaterial.AlbedoMap
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: AlbedoMap
        path: ''
        startLine: 3627
      syntax:
        content:
          CSharp: public SyncMap AlbedoMap { get; set; }
          VB: Public Property AlbedoMap As SyncMap
        parameters: []
        return:
          type: Unity.Reflect.Model.SyncMap
      overload: Unity.Reflect.Model.SyncMaterial.AlbedoMap*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncMaterial.AlbedoFadeFieldNumber
      commentId: F:Unity.Reflect.Model.SyncMaterial.AlbedoFadeFieldNumber
      language: CSharp
      name:
        CSharp: AlbedoFadeFieldNumber
        VB: AlbedoFadeFieldNumber
      nameWithType:
        CSharp: SyncMaterial.AlbedoFadeFieldNumber
        VB: SyncMaterial.AlbedoFadeFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMaterial.AlbedoFadeFieldNumber
        VB: Unity.Reflect.Model.SyncMaterial.AlbedoFadeFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: AlbedoFadeFieldNumber
        path: ''
        startLine: 3636
      summary: Field number for the &quot;albedoFade&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int AlbedoFadeFieldNumber = 5
          VB: Public Const AlbedoFadeFieldNumber As Integer = 5
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncMaterial.AlbedoFade
      commentId: P:Unity.Reflect.Model.SyncMaterial.AlbedoFade
      language: CSharp
      name:
        CSharp: AlbedoFade
        VB: AlbedoFade
      nameWithType:
        CSharp: SyncMaterial.AlbedoFade
        VB: SyncMaterial.AlbedoFade
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMaterial.AlbedoFade
        VB: Unity.Reflect.Model.SyncMaterial.AlbedoFade
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: AlbedoFade
        path: ''
        startLine: 3638
      syntax:
        content:
          CSharp: public float AlbedoFade { get; set; }
          VB: Public Property AlbedoFade As Single
        parameters: []
        return:
          type: System.Single
      overload: Unity.Reflect.Model.SyncMaterial.AlbedoFade*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncMaterial.AlphaFieldNumber
      commentId: F:Unity.Reflect.Model.SyncMaterial.AlphaFieldNumber
      language: CSharp
      name:
        CSharp: AlphaFieldNumber
        VB: AlphaFieldNumber
      nameWithType:
        CSharp: SyncMaterial.AlphaFieldNumber
        VB: SyncMaterial.AlphaFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMaterial.AlphaFieldNumber
        VB: Unity.Reflect.Model.SyncMaterial.AlphaFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: AlphaFieldNumber
        path: ''
        startLine: 3647
      summary: Field number for the &quot;alpha&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int AlphaFieldNumber = 6
          VB: Public Const AlphaFieldNumber As Integer = 6
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncMaterial.Alpha
      commentId: P:Unity.Reflect.Model.SyncMaterial.Alpha
      language: CSharp
      name:
        CSharp: Alpha
        VB: Alpha
      nameWithType:
        CSharp: SyncMaterial.Alpha
        VB: SyncMaterial.Alpha
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMaterial.Alpha
        VB: Unity.Reflect.Model.SyncMaterial.Alpha
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Alpha
        path: ''
        startLine: 3649
      syntax:
        content:
          CSharp: public float Alpha { get; set; }
          VB: Public Property Alpha As Single
        parameters: []
        return:
          type: System.Single
      overload: Unity.Reflect.Model.SyncMaterial.Alpha*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncMaterial.AlphaMapFieldNumber
      commentId: F:Unity.Reflect.Model.SyncMaterial.AlphaMapFieldNumber
      language: CSharp
      name:
        CSharp: AlphaMapFieldNumber
        VB: AlphaMapFieldNumber
      nameWithType:
        CSharp: SyncMaterial.AlphaMapFieldNumber
        VB: SyncMaterial.AlphaMapFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMaterial.AlphaMapFieldNumber
        VB: Unity.Reflect.Model.SyncMaterial.AlphaMapFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: AlphaMapFieldNumber
        path: ''
        startLine: 3658
      summary: Field number for the &quot;alphaMap&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int AlphaMapFieldNumber = 7
          VB: Public Const AlphaMapFieldNumber As Integer = 7
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncMaterial.AlphaMap
      commentId: P:Unity.Reflect.Model.SyncMaterial.AlphaMap
      language: CSharp
      name:
        CSharp: AlphaMap
        VB: AlphaMap
      nameWithType:
        CSharp: SyncMaterial.AlphaMap
        VB: SyncMaterial.AlphaMap
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMaterial.AlphaMap
        VB: Unity.Reflect.Model.SyncMaterial.AlphaMap
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: AlphaMap
        path: ''
        startLine: 3660
      syntax:
        content:
          CSharp: public SyncMap AlphaMap { get; set; }
          VB: Public Property AlphaMap As SyncMap
        parameters: []
        return:
          type: Unity.Reflect.Model.SyncMap
      overload: Unity.Reflect.Model.SyncMaterial.AlphaMap*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncMaterial.NormalMapFieldNumber
      commentId: F:Unity.Reflect.Model.SyncMaterial.NormalMapFieldNumber
      language: CSharp
      name:
        CSharp: NormalMapFieldNumber
        VB: NormalMapFieldNumber
      nameWithType:
        CSharp: SyncMaterial.NormalMapFieldNumber
        VB: SyncMaterial.NormalMapFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMaterial.NormalMapFieldNumber
        VB: Unity.Reflect.Model.SyncMaterial.NormalMapFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: NormalMapFieldNumber
        path: ''
        startLine: 3669
      summary: Field number for the &quot;normalMap&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int NormalMapFieldNumber = 8
          VB: Public Const NormalMapFieldNumber As Integer = 8
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncMaterial.NormalMap
      commentId: P:Unity.Reflect.Model.SyncMaterial.NormalMap
      language: CSharp
      name:
        CSharp: NormalMap
        VB: NormalMap
      nameWithType:
        CSharp: SyncMaterial.NormalMap
        VB: SyncMaterial.NormalMap
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMaterial.NormalMap
        VB: Unity.Reflect.Model.SyncMaterial.NormalMap
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: NormalMap
        path: ''
        startLine: 3671
      syntax:
        content:
          CSharp: public SyncMap NormalMap { get; set; }
          VB: Public Property NormalMap As SyncMap
        parameters: []
        return:
          type: Unity.Reflect.Model.SyncMap
      overload: Unity.Reflect.Model.SyncMaterial.NormalMap*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncMaterial.NormalScaleFieldNumber
      commentId: F:Unity.Reflect.Model.SyncMaterial.NormalScaleFieldNumber
      language: CSharp
      name:
        CSharp: NormalScaleFieldNumber
        VB: NormalScaleFieldNumber
      nameWithType:
        CSharp: SyncMaterial.NormalScaleFieldNumber
        VB: SyncMaterial.NormalScaleFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMaterial.NormalScaleFieldNumber
        VB: Unity.Reflect.Model.SyncMaterial.NormalScaleFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: NormalScaleFieldNumber
        path: ''
        startLine: 3680
      summary: Field number for the &quot;normalScale&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int NormalScaleFieldNumber = 9
          VB: Public Const NormalScaleFieldNumber As Integer = 9
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncMaterial.NormalScale
      commentId: P:Unity.Reflect.Model.SyncMaterial.NormalScale
      language: CSharp
      name:
        CSharp: NormalScale
        VB: NormalScale
      nameWithType:
        CSharp: SyncMaterial.NormalScale
        VB: SyncMaterial.NormalScale
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMaterial.NormalScale
        VB: Unity.Reflect.Model.SyncMaterial.NormalScale
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: NormalScale
        path: ''
        startLine: 3682
      syntax:
        content:
          CSharp: public float NormalScale { get; set; }
          VB: Public Property NormalScale As Single
        parameters: []
        return:
          type: System.Single
      overload: Unity.Reflect.Model.SyncMaterial.NormalScale*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncMaterial.CutoutMapFieldNumber
      commentId: F:Unity.Reflect.Model.SyncMaterial.CutoutMapFieldNumber
      language: CSharp
      name:
        CSharp: CutoutMapFieldNumber
        VB: CutoutMapFieldNumber
      nameWithType:
        CSharp: SyncMaterial.CutoutMapFieldNumber
        VB: SyncMaterial.CutoutMapFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMaterial.CutoutMapFieldNumber
        VB: Unity.Reflect.Model.SyncMaterial.CutoutMapFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: CutoutMapFieldNumber
        path: ''
        startLine: 3691
      summary: Field number for the &quot;cutoutMap&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int CutoutMapFieldNumber = 10
          VB: Public Const CutoutMapFieldNumber As Integer = 10
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncMaterial.CutoutMap
      commentId: P:Unity.Reflect.Model.SyncMaterial.CutoutMap
      language: CSharp
      name:
        CSharp: CutoutMap
        VB: CutoutMap
      nameWithType:
        CSharp: SyncMaterial.CutoutMap
        VB: SyncMaterial.CutoutMap
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMaterial.CutoutMap
        VB: Unity.Reflect.Model.SyncMaterial.CutoutMap
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: CutoutMap
        path: ''
        startLine: 3693
      syntax:
        content:
          CSharp: public SyncMap CutoutMap { get; set; }
          VB: Public Property CutoutMap As SyncMap
        parameters: []
        return:
          type: Unity.Reflect.Model.SyncMap
      overload: Unity.Reflect.Model.SyncMaterial.CutoutMap*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncMaterial.CutoutThresholdFieldNumber
      commentId: F:Unity.Reflect.Model.SyncMaterial.CutoutThresholdFieldNumber
      language: CSharp
      name:
        CSharp: CutoutThresholdFieldNumber
        VB: CutoutThresholdFieldNumber
      nameWithType:
        CSharp: SyncMaterial.CutoutThresholdFieldNumber
        VB: SyncMaterial.CutoutThresholdFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMaterial.CutoutThresholdFieldNumber
        VB: Unity.Reflect.Model.SyncMaterial.CutoutThresholdFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: CutoutThresholdFieldNumber
        path: ''
        startLine: 3702
      summary: Field number for the &quot;cutoutThreshold&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int CutoutThresholdFieldNumber = 11
          VB: Public Const CutoutThresholdFieldNumber As Integer = 11
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncMaterial.CutoutThreshold
      commentId: P:Unity.Reflect.Model.SyncMaterial.CutoutThreshold
      language: CSharp
      name:
        CSharp: CutoutThreshold
        VB: CutoutThreshold
      nameWithType:
        CSharp: SyncMaterial.CutoutThreshold
        VB: SyncMaterial.CutoutThreshold
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMaterial.CutoutThreshold
        VB: Unity.Reflect.Model.SyncMaterial.CutoutThreshold
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: CutoutThreshold
        path: ''
        startLine: 3704
      syntax:
        content:
          CSharp: public float CutoutThreshold { get; set; }
          VB: Public Property CutoutThreshold As Single
        parameters: []
        return:
          type: System.Single
      overload: Unity.Reflect.Model.SyncMaterial.CutoutThreshold*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncMaterial.GlossinessFieldNumber
      commentId: F:Unity.Reflect.Model.SyncMaterial.GlossinessFieldNumber
      language: CSharp
      name:
        CSharp: GlossinessFieldNumber
        VB: GlossinessFieldNumber
      nameWithType:
        CSharp: SyncMaterial.GlossinessFieldNumber
        VB: SyncMaterial.GlossinessFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMaterial.GlossinessFieldNumber
        VB: Unity.Reflect.Model.SyncMaterial.GlossinessFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: GlossinessFieldNumber
        path: ''
        startLine: 3713
      summary: Field number for the &quot;glossiness&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int GlossinessFieldNumber = 12
          VB: Public Const GlossinessFieldNumber As Integer = 12
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncMaterial.Glossiness
      commentId: P:Unity.Reflect.Model.SyncMaterial.Glossiness
      language: CSharp
      name:
        CSharp: Glossiness
        VB: Glossiness
      nameWithType:
        CSharp: SyncMaterial.Glossiness
        VB: SyncMaterial.Glossiness
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMaterial.Glossiness
        VB: Unity.Reflect.Model.SyncMaterial.Glossiness
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Glossiness
        path: ''
        startLine: 3715
      syntax:
        content:
          CSharp: public float Glossiness { get; set; }
          VB: Public Property Glossiness As Single
        parameters: []
        return:
          type: System.Single
      overload: Unity.Reflect.Model.SyncMaterial.Glossiness*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncMaterial.GlossinessMapFieldNumber
      commentId: F:Unity.Reflect.Model.SyncMaterial.GlossinessMapFieldNumber
      language: CSharp
      name:
        CSharp: GlossinessMapFieldNumber
        VB: GlossinessMapFieldNumber
      nameWithType:
        CSharp: SyncMaterial.GlossinessMapFieldNumber
        VB: SyncMaterial.GlossinessMapFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMaterial.GlossinessMapFieldNumber
        VB: Unity.Reflect.Model.SyncMaterial.GlossinessMapFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: GlossinessMapFieldNumber
        path: ''
        startLine: 3724
      summary: Field number for the &quot;glossinessMap&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int GlossinessMapFieldNumber = 13
          VB: Public Const GlossinessMapFieldNumber As Integer = 13
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncMaterial.GlossinessMap
      commentId: P:Unity.Reflect.Model.SyncMaterial.GlossinessMap
      language: CSharp
      name:
        CSharp: GlossinessMap
        VB: GlossinessMap
      nameWithType:
        CSharp: SyncMaterial.GlossinessMap
        VB: SyncMaterial.GlossinessMap
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMaterial.GlossinessMap
        VB: Unity.Reflect.Model.SyncMaterial.GlossinessMap
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: GlossinessMap
        path: ''
        startLine: 3726
      syntax:
        content:
          CSharp: public SyncMap GlossinessMap { get; set; }
          VB: Public Property GlossinessMap As SyncMap
        parameters: []
        return:
          type: Unity.Reflect.Model.SyncMap
      overload: Unity.Reflect.Model.SyncMaterial.GlossinessMap*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncMaterial.MetallicFieldNumber
      commentId: F:Unity.Reflect.Model.SyncMaterial.MetallicFieldNumber
      language: CSharp
      name:
        CSharp: MetallicFieldNumber
        VB: MetallicFieldNumber
      nameWithType:
        CSharp: SyncMaterial.MetallicFieldNumber
        VB: SyncMaterial.MetallicFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMaterial.MetallicFieldNumber
        VB: Unity.Reflect.Model.SyncMaterial.MetallicFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: MetallicFieldNumber
        path: ''
        startLine: 3735
      summary: Field number for the &quot;metallic&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int MetallicFieldNumber = 14
          VB: Public Const MetallicFieldNumber As Integer = 14
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncMaterial.Metallic
      commentId: P:Unity.Reflect.Model.SyncMaterial.Metallic
      language: CSharp
      name:
        CSharp: Metallic
        VB: Metallic
      nameWithType:
        CSharp: SyncMaterial.Metallic
        VB: SyncMaterial.Metallic
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMaterial.Metallic
        VB: Unity.Reflect.Model.SyncMaterial.Metallic
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Metallic
        path: ''
        startLine: 3737
      syntax:
        content:
          CSharp: public float Metallic { get; set; }
          VB: Public Property Metallic As Single
        parameters: []
        return:
          type: System.Single
      overload: Unity.Reflect.Model.SyncMaterial.Metallic*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncMaterial.MetallicMapFieldNumber
      commentId: F:Unity.Reflect.Model.SyncMaterial.MetallicMapFieldNumber
      language: CSharp
      name:
        CSharp: MetallicMapFieldNumber
        VB: MetallicMapFieldNumber
      nameWithType:
        CSharp: SyncMaterial.MetallicMapFieldNumber
        VB: SyncMaterial.MetallicMapFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMaterial.MetallicMapFieldNumber
        VB: Unity.Reflect.Model.SyncMaterial.MetallicMapFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: MetallicMapFieldNumber
        path: ''
        startLine: 3746
      summary: Field number for the &quot;metallicMap&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int MetallicMapFieldNumber = 15
          VB: Public Const MetallicMapFieldNumber As Integer = 15
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncMaterial.MetallicMap
      commentId: P:Unity.Reflect.Model.SyncMaterial.MetallicMap
      language: CSharp
      name:
        CSharp: MetallicMap
        VB: MetallicMap
      nameWithType:
        CSharp: SyncMaterial.MetallicMap
        VB: SyncMaterial.MetallicMap
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMaterial.MetallicMap
        VB: Unity.Reflect.Model.SyncMaterial.MetallicMap
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: MetallicMap
        path: ''
        startLine: 3748
      syntax:
        content:
          CSharp: public SyncMap MetallicMap { get; set; }
          VB: Public Property MetallicMap As SyncMap
        parameters: []
        return:
          type: Unity.Reflect.Model.SyncMap
      overload: Unity.Reflect.Model.SyncMaterial.MetallicMap*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncMaterial.EmissionFieldNumber
      commentId: F:Unity.Reflect.Model.SyncMaterial.EmissionFieldNumber
      language: CSharp
      name:
        CSharp: EmissionFieldNumber
        VB: EmissionFieldNumber
      nameWithType:
        CSharp: SyncMaterial.EmissionFieldNumber
        VB: SyncMaterial.EmissionFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMaterial.EmissionFieldNumber
        VB: Unity.Reflect.Model.SyncMaterial.EmissionFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: EmissionFieldNumber
        path: ''
        startLine: 3757
      summary: Field number for the &quot;emission&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int EmissionFieldNumber = 16
          VB: Public Const EmissionFieldNumber As Integer = 16
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncMaterial.Emission
      commentId: P:Unity.Reflect.Model.SyncMaterial.Emission
      language: CSharp
      name:
        CSharp: Emission
        VB: Emission
      nameWithType:
        CSharp: SyncMaterial.Emission
        VB: SyncMaterial.Emission
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMaterial.Emission
        VB: Unity.Reflect.Model.SyncMaterial.Emission
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Emission
        path: ''
        startLine: 3759
      syntax:
        content:
          CSharp: public SyncColor Emission { get; set; }
          VB: Public Property Emission As SyncColor
        parameters: []
        return:
          type: Unity.Reflect.Model.SyncColor
      overload: Unity.Reflect.Model.SyncMaterial.Emission*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncMaterial.EmissionTemperatureFieldNumber
      commentId: F:Unity.Reflect.Model.SyncMaterial.EmissionTemperatureFieldNumber
      language: CSharp
      name:
        CSharp: EmissionTemperatureFieldNumber
        VB: EmissionTemperatureFieldNumber
      nameWithType:
        CSharp: SyncMaterial.EmissionTemperatureFieldNumber
        VB: SyncMaterial.EmissionTemperatureFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMaterial.EmissionTemperatureFieldNumber
        VB: Unity.Reflect.Model.SyncMaterial.EmissionTemperatureFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: EmissionTemperatureFieldNumber
        path: ''
        startLine: 3768
      summary: Field number for the &quot;emissionTemperature&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int EmissionTemperatureFieldNumber = 17
          VB: Public Const EmissionTemperatureFieldNumber As Integer = 17
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncMaterial.EmissionTemperature
      commentId: P:Unity.Reflect.Model.SyncMaterial.EmissionTemperature
      language: CSharp
      name:
        CSharp: EmissionTemperature
        VB: EmissionTemperature
      nameWithType:
        CSharp: SyncMaterial.EmissionTemperature
        VB: SyncMaterial.EmissionTemperature
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMaterial.EmissionTemperature
        VB: Unity.Reflect.Model.SyncMaterial.EmissionTemperature
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: EmissionTemperature
        path: ''
        startLine: 3770
      syntax:
        content:
          CSharp: public float EmissionTemperature { get; set; }
          VB: Public Property EmissionTemperature As Single
        parameters: []
        return:
          type: System.Single
      overload: Unity.Reflect.Model.SyncMaterial.EmissionTemperature*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncMaterial.EmissionMapFieldNumber
      commentId: F:Unity.Reflect.Model.SyncMaterial.EmissionMapFieldNumber
      language: CSharp
      name:
        CSharp: EmissionMapFieldNumber
        VB: EmissionMapFieldNumber
      nameWithType:
        CSharp: SyncMaterial.EmissionMapFieldNumber
        VB: SyncMaterial.EmissionMapFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMaterial.EmissionMapFieldNumber
        VB: Unity.Reflect.Model.SyncMaterial.EmissionMapFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: EmissionMapFieldNumber
        path: ''
        startLine: 3779
      summary: Field number for the &quot;emissionMap&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int EmissionMapFieldNumber = 18
          VB: Public Const EmissionMapFieldNumber As Integer = 18
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncMaterial.EmissionMap
      commentId: P:Unity.Reflect.Model.SyncMaterial.EmissionMap
      language: CSharp
      name:
        CSharp: EmissionMap
        VB: EmissionMap
      nameWithType:
        CSharp: SyncMaterial.EmissionMap
        VB: SyncMaterial.EmissionMap
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMaterial.EmissionMap
        VB: Unity.Reflect.Model.SyncMaterial.EmissionMap
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: EmissionMap
        path: ''
        startLine: 3781
      syntax:
        content:
          CSharp: public SyncMap EmissionMap { get; set; }
          VB: Public Property EmissionMap As SyncMap
        parameters: []
        return:
          type: Unity.Reflect.Model.SyncMap
      overload: Unity.Reflect.Model.SyncMaterial.EmissionMap*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncMaterial.Equals(System.Object)
      commentId: M:Unity.Reflect.Model.SyncMaterial.Equals(System.Object)
      language: CSharp
      name:
        CSharp: Equals(Object)
        VB: Equals(Object)
      nameWithType:
        CSharp: SyncMaterial.Equals(Object)
        VB: SyncMaterial.Equals(Object)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMaterial.Equals(System.Object)
        VB: Unity.Reflect.Model.SyncMaterial.Equals(System.Object)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Equals
        path: ''
        startLine: 3789
      syntax:
        content:
          CSharp: public override bool Equals(object other)
          VB: Public Overrides Function Equals(other As Object) As Boolean
        parameters:
        - id: other
          type: System.Object
        return:
          type: System.Boolean
      overload: Unity.Reflect.Model.SyncMaterial.Equals*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.Model.SyncMaterial.Equals(Unity.Reflect.Model.SyncMaterial)
      commentId: M:Unity.Reflect.Model.SyncMaterial.Equals(Unity.Reflect.Model.SyncMaterial)
      language: CSharp
      name:
        CSharp: Equals(SyncMaterial)
        VB: Equals(SyncMaterial)
      nameWithType:
        CSharp: SyncMaterial.Equals(SyncMaterial)
        VB: SyncMaterial.Equals(SyncMaterial)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMaterial.Equals(Unity.Reflect.Model.SyncMaterial)
        VB: Unity.Reflect.Model.SyncMaterial.Equals(Unity.Reflect.Model.SyncMaterial)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Equals
        path: ''
        startLine: 3794
      syntax:
        content:
          CSharp: public bool Equals(SyncMaterial other)
          VB: Public Function Equals(other As SyncMaterial) As Boolean
        parameters:
        - id: other
          type: Unity.Reflect.Model.SyncMaterial
        return:
          type: System.Boolean
      overload: Unity.Reflect.Model.SyncMaterial.Equals*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncMaterial.GetHashCode
      commentId: M:Unity.Reflect.Model.SyncMaterial.GetHashCode
      language: CSharp
      name:
        CSharp: GetHashCode()
        VB: GetHashCode()
      nameWithType:
        CSharp: SyncMaterial.GetHashCode()
        VB: SyncMaterial.GetHashCode()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMaterial.GetHashCode()
        VB: Unity.Reflect.Model.SyncMaterial.GetHashCode()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: GetHashCode
        path: ''
        startLine: 3823
      syntax:
        content:
          CSharp: public override int GetHashCode()
          VB: Public Overrides Function GetHashCode As Integer
        return:
          type: System.Int32
      overload: Unity.Reflect.Model.SyncMaterial.GetHashCode*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.Model.SyncMaterial.ToString
      commentId: M:Unity.Reflect.Model.SyncMaterial.ToString
      language: CSharp
      name:
        CSharp: ToString()
        VB: ToString()
      nameWithType:
        CSharp: SyncMaterial.ToString()
        VB: SyncMaterial.ToString()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMaterial.ToString()
        VB: Unity.Reflect.Model.SyncMaterial.ToString()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: ToString
        path: ''
        startLine: 3850
      syntax:
        content:
          CSharp: public override string ToString()
          VB: Public Overrides Function ToString As String
        return:
          type: System.String
      overload: Unity.Reflect.Model.SyncMaterial.ToString*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.Model.SyncMaterial.WriteTo(pb.CodedOutputStream)
      commentId: M:Unity.Reflect.Model.SyncMaterial.WriteTo(pb.CodedOutputStream)
      language: CSharp
      name:
        CSharp: WriteTo(pb.CodedOutputStream)
        VB: WriteTo(pb.CodedOutputStream)
      nameWithType:
        CSharp: SyncMaterial.WriteTo(pb.CodedOutputStream)
        VB: SyncMaterial.WriteTo(pb.CodedOutputStream)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMaterial.WriteTo(pb.CodedOutputStream)
        VB: Unity.Reflect.Model.SyncMaterial.WriteTo(pb.CodedOutputStream)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: WriteTo
        path: ''
        startLine: 3855
      syntax:
        content:
          CSharp: public void WriteTo(pb.CodedOutputStream output)
          VB: Public Sub WriteTo(output As pb.CodedOutputStream)
        parameters:
        - id: output
          type: pb.CodedOutputStream
      overload: Unity.Reflect.Model.SyncMaterial.WriteTo*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncMaterial.CalculateSize
      commentId: M:Unity.Reflect.Model.SyncMaterial.CalculateSize
      language: CSharp
      name:
        CSharp: CalculateSize()
        VB: CalculateSize()
      nameWithType:
        CSharp: SyncMaterial.CalculateSize()
        VB: SyncMaterial.CalculateSize()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMaterial.CalculateSize()
        VB: Unity.Reflect.Model.SyncMaterial.CalculateSize()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: CalculateSize
        path: ''
        startLine: 3934
      syntax:
        content:
          CSharp: public int CalculateSize()
          VB: Public Function CalculateSize As Integer
        return:
          type: System.Int32
      overload: Unity.Reflect.Model.SyncMaterial.CalculateSize*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncMaterial.MergeFrom(Unity.Reflect.Model.SyncMaterial)
      commentId: M:Unity.Reflect.Model.SyncMaterial.MergeFrom(Unity.Reflect.Model.SyncMaterial)
      language: CSharp
      name:
        CSharp: MergeFrom(SyncMaterial)
        VB: MergeFrom(SyncMaterial)
      nameWithType:
        CSharp: SyncMaterial.MergeFrom(SyncMaterial)
        VB: SyncMaterial.MergeFrom(SyncMaterial)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMaterial.MergeFrom(Unity.Reflect.Model.SyncMaterial)
        VB: Unity.Reflect.Model.SyncMaterial.MergeFrom(Unity.Reflect.Model.SyncMaterial)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: MergeFrom
        path: ''
        startLine: 3997
      syntax:
        content:
          CSharp: public void MergeFrom(SyncMaterial other)
          VB: Public Sub MergeFrom(other As SyncMaterial)
        parameters:
        - id: other
          type: Unity.Reflect.Model.SyncMaterial
      overload: Unity.Reflect.Model.SyncMaterial.MergeFrom*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncMaterial.MergeFrom(pb.CodedInputStream)
      commentId: M:Unity.Reflect.Model.SyncMaterial.MergeFrom(pb.CodedInputStream)
      language: CSharp
      name:
        CSharp: MergeFrom(pb.CodedInputStream)
        VB: MergeFrom(pb.CodedInputStream)
      nameWithType:
        CSharp: SyncMaterial.MergeFrom(pb.CodedInputStream)
        VB: SyncMaterial.MergeFrom(pb.CodedInputStream)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMaterial.MergeFrom(pb.CodedInputStream)
        VB: Unity.Reflect.Model.SyncMaterial.MergeFrom(pb.CodedInputStream)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: MergeFrom
        path: ''
        startLine: 4089
      syntax:
        content:
          CSharp: public void MergeFrom(pb.CodedInputStream input)
          VB: Public Sub MergeFrom(input As pb.CodedInputStream)
        parameters:
        - id: input
          type: pb.CodedInputStream
      overload: Unity.Reflect.Model.SyncMaterial.MergeFrom*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Unity.Reflect.Model.SyncMap
    commentId: T:Unity.Reflect.Model.SyncMap
    language: CSharp
    name:
      CSharp: SyncMap
      VB: SyncMap
    nameWithType:
      CSharp: SyncMap
      VB: SyncMap
    qualifiedName:
      CSharp: Unity.Reflect.Model.SyncMap
      VB: Unity.Reflect.Model.SyncMap
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect.Model
    source:
      id: SyncMap
      path: ''
      startLine: 4205
    syntax:
      content:
        CSharp: 'public sealed class SyncMap : pb.IMessage<SyncMap>'
        VB: >-
          Public NotInheritable Class SyncMap

              Inherits pb.IMessage(Of SyncMap)
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - sealed
      - class
      VB:
      - Public
      - NotInheritable
      - Class
    items:
    - id: Unity.Reflect.Model.SyncMap.Empty
      commentId: M:Unity.Reflect.Model.SyncMap.Empty
      language: CSharp
      name:
        CSharp: Empty()
        VB: Empty()
      nameWithType:
        CSharp: SyncMap.Empty()
        VB: SyncMap.Empty()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMap.Empty()
        VB: Unity.Reflect.Model.SyncMap.Empty()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Empty
        path: ''
        startLine: 762
      syntax:
        content:
          CSharp: public static SyncMap Empty()
          VB: Public Shared Function Empty As SyncMap
        return:
          type: Unity.Reflect.Model.SyncMap
      overload: Unity.Reflect.Model.SyncMap.Empty*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Unity.Reflect.Model.SyncMap.#ctor(System.String,Unity.Reflect.Model.SyncFloat2,Unity.Reflect.Model.SyncFloat2,System.Single,System.Boolean,System.Single)
      commentId: M:Unity.Reflect.Model.SyncMap.#ctor(System.String,Unity.Reflect.Model.SyncFloat2,Unity.Reflect.Model.SyncFloat2,System.Single,System.Boolean,System.Single)
      language: CSharp
      name:
        CSharp: SyncMap(String, SyncFloat2, SyncFloat2, Single, Boolean, Single)
        VB: SyncMap(String, SyncFloat2, SyncFloat2, Single, Boolean, Single)
      nameWithType:
        CSharp: SyncMap.SyncMap(String, SyncFloat2, SyncFloat2, Single, Boolean, Single)
        VB: SyncMap.SyncMap(String, SyncFloat2, SyncFloat2, Single, Boolean, Single)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMap.SyncMap(System.String, Unity.Reflect.Model.SyncFloat2, Unity.Reflect.Model.SyncFloat2, System.Single, System.Boolean, System.Single)
        VB: Unity.Reflect.Model.SyncMap.SyncMap(System.String, Unity.Reflect.Model.SyncFloat2, Unity.Reflect.Model.SyncFloat2, System.Single, System.Boolean, System.Single)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: .ctor
        path: ''
        startLine: 764
      syntax:
        content:
          CSharp: public SyncMap(string texture, SyncFloat2 offset, SyncFloat2 tiling, float brightness = 1F, bool invert = false, float rotation = 0F)
          VB: Public Sub New(texture As String, offset As SyncFloat2, tiling As SyncFloat2, brightness As Single = 1F, invert As Boolean = False, rotation As Single = 0F)
        parameters:
        - id: texture
          type: System.String
        - id: offset
          type: Unity.Reflect.Model.SyncFloat2
        - id: tiling
          type: Unity.Reflect.Model.SyncFloat2
        - id: brightness
          type: System.Single
        - id: invert
          type: System.Boolean
        - id: rotation
          type: System.Single
      overload: Unity.Reflect.Model.SyncMap.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncMap.Parser
      commentId: P:Unity.Reflect.Model.SyncMap.Parser
      language: CSharp
      name:
        CSharp: Parser
        VB: Parser
      nameWithType:
        CSharp: SyncMap.Parser
        VB: SyncMap.Parser
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMap.Parser
        VB: Unity.Reflect.Model.SyncMap.Parser
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Parser
        path: ''
        startLine: 4208
      syntax:
        content:
          CSharp: public static pb.MessageParser<SyncMap> Parser { get; }
          VB: Public Shared ReadOnly Property Parser As pb.MessageParser(Of SyncMap)
        parameters: []
        return:
          type: pb.MessageParser{Unity.Reflect.Model.SyncMap}
      overload: Unity.Reflect.Model.SyncMap.Parser*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Unity.Reflect.Model.SyncMap.Descriptor
      commentId: P:Unity.Reflect.Model.SyncMap.Descriptor
      language: CSharp
      name:
        CSharp: Descriptor
        VB: Descriptor
      nameWithType:
        CSharp: SyncMap.Descriptor
        VB: SyncMap.Descriptor
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMap.Descriptor
        VB: Unity.Reflect.Model.SyncMap.Descriptor
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Descriptor
        path: ''
        startLine: 4211
      syntax:
        content:
          CSharp: public static pbr.MessageDescriptor Descriptor { get; }
          VB: Public Shared ReadOnly Property Descriptor As pbr.MessageDescriptor
        parameters: []
        return:
          type: pbr.MessageDescriptor
      overload: Unity.Reflect.Model.SyncMap.Descriptor*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Unity.Reflect.Model.SyncMap.#ctor
      commentId: M:Unity.Reflect.Model.SyncMap.#ctor
      language: CSharp
      name:
        CSharp: SyncMap()
        VB: SyncMap()
      nameWithType:
        CSharp: SyncMap.SyncMap()
        VB: SyncMap.SyncMap()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMap.SyncMap()
        VB: Unity.Reflect.Model.SyncMap.SyncMap()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: .ctor
        path: ''
        startLine: 4221
      syntax:
        content:
          CSharp: public SyncMap()
          VB: Public Sub New
      overload: Unity.Reflect.Model.SyncMap.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncMap.#ctor(Unity.Reflect.Model.SyncMap)
      commentId: M:Unity.Reflect.Model.SyncMap.#ctor(Unity.Reflect.Model.SyncMap)
      language: CSharp
      name:
        CSharp: SyncMap(SyncMap)
        VB: SyncMap(SyncMap)
      nameWithType:
        CSharp: SyncMap.SyncMap(SyncMap)
        VB: SyncMap.SyncMap(SyncMap)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMap.SyncMap(Unity.Reflect.Model.SyncMap)
        VB: Unity.Reflect.Model.SyncMap.SyncMap(Unity.Reflect.Model.SyncMap)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: .ctor
        path: ''
        startLine: 4228
      syntax:
        content:
          CSharp: public SyncMap(SyncMap other)
          VB: Public Sub New(other As SyncMap)
        parameters:
        - id: other
          type: Unity.Reflect.Model.SyncMap
      overload: Unity.Reflect.Model.SyncMap.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncMap.Clone
      commentId: M:Unity.Reflect.Model.SyncMap.Clone
      language: CSharp
      name:
        CSharp: Clone()
        VB: Clone()
      nameWithType:
        CSharp: SyncMap.Clone()
        VB: SyncMap.Clone()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMap.Clone()
        VB: Unity.Reflect.Model.SyncMap.Clone()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Clone
        path: ''
        startLine: 4239
      syntax:
        content:
          CSharp: public SyncMap Clone()
          VB: Public Function Clone As SyncMap
        return:
          type: Unity.Reflect.Model.SyncMap
      overload: Unity.Reflect.Model.SyncMap.Clone*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncMap.TextureFieldNumber
      commentId: F:Unity.Reflect.Model.SyncMap.TextureFieldNumber
      language: CSharp
      name:
        CSharp: TextureFieldNumber
        VB: TextureFieldNumber
      nameWithType:
        CSharp: SyncMap.TextureFieldNumber
        VB: SyncMap.TextureFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMap.TextureFieldNumber
        VB: Unity.Reflect.Model.SyncMap.TextureFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: TextureFieldNumber
        path: ''
        startLine: 4245
      summary: Field number for the &quot;texture&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int TextureFieldNumber = 1
          VB: Public Const TextureFieldNumber As Integer = 1
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncMap.Texture
      commentId: P:Unity.Reflect.Model.SyncMap.Texture
      language: CSharp
      name:
        CSharp: Texture
        VB: Texture
      nameWithType:
        CSharp: SyncMap.Texture
        VB: SyncMap.Texture
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMap.Texture
        VB: Unity.Reflect.Model.SyncMap.Texture
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Texture
        path: ''
        startLine: 4247
      syntax:
        content:
          CSharp: public string Texture { get; set; }
          VB: Public Property Texture As String
        parameters: []
        return:
          type: System.String
      overload: Unity.Reflect.Model.SyncMap.Texture*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncMap.OffsetFieldNumber
      commentId: F:Unity.Reflect.Model.SyncMap.OffsetFieldNumber
      language: CSharp
      name:
        CSharp: OffsetFieldNumber
        VB: OffsetFieldNumber
      nameWithType:
        CSharp: SyncMap.OffsetFieldNumber
        VB: SyncMap.OffsetFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMap.OffsetFieldNumber
        VB: Unity.Reflect.Model.SyncMap.OffsetFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: OffsetFieldNumber
        path: ''
        startLine: 4256
      summary: Field number for the &quot;offset&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int OffsetFieldNumber = 2
          VB: Public Const OffsetFieldNumber As Integer = 2
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncMap.Offset
      commentId: P:Unity.Reflect.Model.SyncMap.Offset
      language: CSharp
      name:
        CSharp: Offset
        VB: Offset
      nameWithType:
        CSharp: SyncMap.Offset
        VB: SyncMap.Offset
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMap.Offset
        VB: Unity.Reflect.Model.SyncMap.Offset
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Offset
        path: ''
        startLine: 4258
      syntax:
        content:
          CSharp: public SyncFloat2 Offset { get; set; }
          VB: Public Property Offset As SyncFloat2
        parameters: []
        return:
          type: Unity.Reflect.Model.SyncFloat2
      overload: Unity.Reflect.Model.SyncMap.Offset*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncMap.TilingFieldNumber
      commentId: F:Unity.Reflect.Model.SyncMap.TilingFieldNumber
      language: CSharp
      name:
        CSharp: TilingFieldNumber
        VB: TilingFieldNumber
      nameWithType:
        CSharp: SyncMap.TilingFieldNumber
        VB: SyncMap.TilingFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMap.TilingFieldNumber
        VB: Unity.Reflect.Model.SyncMap.TilingFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: TilingFieldNumber
        path: ''
        startLine: 4267
      summary: Field number for the &quot;tiling&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int TilingFieldNumber = 3
          VB: Public Const TilingFieldNumber As Integer = 3
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncMap.Tiling
      commentId: P:Unity.Reflect.Model.SyncMap.Tiling
      language: CSharp
      name:
        CSharp: Tiling
        VB: Tiling
      nameWithType:
        CSharp: SyncMap.Tiling
        VB: SyncMap.Tiling
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMap.Tiling
        VB: Unity.Reflect.Model.SyncMap.Tiling
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Tiling
        path: ''
        startLine: 4269
      syntax:
        content:
          CSharp: public SyncFloat2 Tiling { get; set; }
          VB: Public Property Tiling As SyncFloat2
        parameters: []
        return:
          type: Unity.Reflect.Model.SyncFloat2
      overload: Unity.Reflect.Model.SyncMap.Tiling*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncMap.BrightnessFieldNumber
      commentId: F:Unity.Reflect.Model.SyncMap.BrightnessFieldNumber
      language: CSharp
      name:
        CSharp: BrightnessFieldNumber
        VB: BrightnessFieldNumber
      nameWithType:
        CSharp: SyncMap.BrightnessFieldNumber
        VB: SyncMap.BrightnessFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMap.BrightnessFieldNumber
        VB: Unity.Reflect.Model.SyncMap.BrightnessFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: BrightnessFieldNumber
        path: ''
        startLine: 4278
      summary: Field number for the &quot;brightness&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int BrightnessFieldNumber = 4
          VB: Public Const BrightnessFieldNumber As Integer = 4
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncMap.Brightness
      commentId: P:Unity.Reflect.Model.SyncMap.Brightness
      language: CSharp
      name:
        CSharp: Brightness
        VB: Brightness
      nameWithType:
        CSharp: SyncMap.Brightness
        VB: SyncMap.Brightness
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMap.Brightness
        VB: Unity.Reflect.Model.SyncMap.Brightness
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Brightness
        path: ''
        startLine: 4280
      syntax:
        content:
          CSharp: public float Brightness { get; set; }
          VB: Public Property Brightness As Single
        parameters: []
        return:
          type: System.Single
      overload: Unity.Reflect.Model.SyncMap.Brightness*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncMap.InvertFieldNumber
      commentId: F:Unity.Reflect.Model.SyncMap.InvertFieldNumber
      language: CSharp
      name:
        CSharp: InvertFieldNumber
        VB: InvertFieldNumber
      nameWithType:
        CSharp: SyncMap.InvertFieldNumber
        VB: SyncMap.InvertFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMap.InvertFieldNumber
        VB: Unity.Reflect.Model.SyncMap.InvertFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: InvertFieldNumber
        path: ''
        startLine: 4289
      summary: Field number for the &quot;invert&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int InvertFieldNumber = 5
          VB: Public Const InvertFieldNumber As Integer = 5
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncMap.Invert
      commentId: P:Unity.Reflect.Model.SyncMap.Invert
      language: CSharp
      name:
        CSharp: Invert
        VB: Invert
      nameWithType:
        CSharp: SyncMap.Invert
        VB: SyncMap.Invert
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMap.Invert
        VB: Unity.Reflect.Model.SyncMap.Invert
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Invert
        path: ''
        startLine: 4291
      syntax:
        content:
          CSharp: public bool Invert { get; set; }
          VB: Public Property Invert As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: Unity.Reflect.Model.SyncMap.Invert*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncMap.RotationDegreesFieldNumber
      commentId: F:Unity.Reflect.Model.SyncMap.RotationDegreesFieldNumber
      language: CSharp
      name:
        CSharp: RotationDegreesFieldNumber
        VB: RotationDegreesFieldNumber
      nameWithType:
        CSharp: SyncMap.RotationDegreesFieldNumber
        VB: SyncMap.RotationDegreesFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMap.RotationDegreesFieldNumber
        VB: Unity.Reflect.Model.SyncMap.RotationDegreesFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: RotationDegreesFieldNumber
        path: ''
        startLine: 4300
      summary: Field number for the &quot;rotationDegrees&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int RotationDegreesFieldNumber = 6
          VB: Public Const RotationDegreesFieldNumber As Integer = 6
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncMap.RotationDegrees
      commentId: P:Unity.Reflect.Model.SyncMap.RotationDegrees
      language: CSharp
      name:
        CSharp: RotationDegrees
        VB: RotationDegrees
      nameWithType:
        CSharp: SyncMap.RotationDegrees
        VB: SyncMap.RotationDegrees
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMap.RotationDegrees
        VB: Unity.Reflect.Model.SyncMap.RotationDegrees
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: RotationDegrees
        path: ''
        startLine: 4302
      syntax:
        content:
          CSharp: public float RotationDegrees { get; set; }
          VB: Public Property RotationDegrees As Single
        parameters: []
        return:
          type: System.Single
      overload: Unity.Reflect.Model.SyncMap.RotationDegrees*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncMap.Equals(System.Object)
      commentId: M:Unity.Reflect.Model.SyncMap.Equals(System.Object)
      language: CSharp
      name:
        CSharp: Equals(Object)
        VB: Equals(Object)
      nameWithType:
        CSharp: SyncMap.Equals(Object)
        VB: SyncMap.Equals(Object)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMap.Equals(System.Object)
        VB: Unity.Reflect.Model.SyncMap.Equals(System.Object)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Equals
        path: ''
        startLine: 4310
      syntax:
        content:
          CSharp: public override bool Equals(object other)
          VB: Public Overrides Function Equals(other As Object) As Boolean
        parameters:
        - id: other
          type: System.Object
        return:
          type: System.Boolean
      overload: Unity.Reflect.Model.SyncMap.Equals*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.Model.SyncMap.Equals(Unity.Reflect.Model.SyncMap)
      commentId: M:Unity.Reflect.Model.SyncMap.Equals(Unity.Reflect.Model.SyncMap)
      language: CSharp
      name:
        CSharp: Equals(SyncMap)
        VB: Equals(SyncMap)
      nameWithType:
        CSharp: SyncMap.Equals(SyncMap)
        VB: SyncMap.Equals(SyncMap)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMap.Equals(Unity.Reflect.Model.SyncMap)
        VB: Unity.Reflect.Model.SyncMap.Equals(Unity.Reflect.Model.SyncMap)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Equals
        path: ''
        startLine: 4315
      syntax:
        content:
          CSharp: public bool Equals(SyncMap other)
          VB: Public Function Equals(other As SyncMap) As Boolean
        parameters:
        - id: other
          type: Unity.Reflect.Model.SyncMap
        return:
          type: System.Boolean
      overload: Unity.Reflect.Model.SyncMap.Equals*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncMap.GetHashCode
      commentId: M:Unity.Reflect.Model.SyncMap.GetHashCode
      language: CSharp
      name:
        CSharp: GetHashCode()
        VB: GetHashCode()
      nameWithType:
        CSharp: SyncMap.GetHashCode()
        VB: SyncMap.GetHashCode()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMap.GetHashCode()
        VB: Unity.Reflect.Model.SyncMap.GetHashCode()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: GetHashCode
        path: ''
        startLine: 4332
      syntax:
        content:
          CSharp: public override int GetHashCode()
          VB: Public Overrides Function GetHashCode As Integer
        return:
          type: System.Int32
      overload: Unity.Reflect.Model.SyncMap.GetHashCode*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.Model.SyncMap.ToString
      commentId: M:Unity.Reflect.Model.SyncMap.ToString
      language: CSharp
      name:
        CSharp: ToString()
        VB: ToString()
      nameWithType:
        CSharp: SyncMap.ToString()
        VB: SyncMap.ToString()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMap.ToString()
        VB: Unity.Reflect.Model.SyncMap.ToString()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: ToString
        path: ''
        startLine: 4347
      syntax:
        content:
          CSharp: public override string ToString()
          VB: Public Overrides Function ToString As String
        return:
          type: System.String
      overload: Unity.Reflect.Model.SyncMap.ToString*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.Model.SyncMap.WriteTo(pb.CodedOutputStream)
      commentId: M:Unity.Reflect.Model.SyncMap.WriteTo(pb.CodedOutputStream)
      language: CSharp
      name:
        CSharp: WriteTo(pb.CodedOutputStream)
        VB: WriteTo(pb.CodedOutputStream)
      nameWithType:
        CSharp: SyncMap.WriteTo(pb.CodedOutputStream)
        VB: SyncMap.WriteTo(pb.CodedOutputStream)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMap.WriteTo(pb.CodedOutputStream)
        VB: Unity.Reflect.Model.SyncMap.WriteTo(pb.CodedOutputStream)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: WriteTo
        path: ''
        startLine: 4352
      syntax:
        content:
          CSharp: public void WriteTo(pb.CodedOutputStream output)
          VB: Public Sub WriteTo(output As pb.CodedOutputStream)
        parameters:
        - id: output
          type: pb.CodedOutputStream
      overload: Unity.Reflect.Model.SyncMap.WriteTo*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncMap.CalculateSize
      commentId: M:Unity.Reflect.Model.SyncMap.CalculateSize
      language: CSharp
      name:
        CSharp: CalculateSize()
        VB: CalculateSize()
      nameWithType:
        CSharp: SyncMap.CalculateSize()
        VB: SyncMap.CalculateSize()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMap.CalculateSize()
        VB: Unity.Reflect.Model.SyncMap.CalculateSize()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: CalculateSize
        path: ''
        startLine: 4383
      syntax:
        content:
          CSharp: public int CalculateSize()
          VB: Public Function CalculateSize As Integer
        return:
          type: System.Int32
      overload: Unity.Reflect.Model.SyncMap.CalculateSize*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncMap.MergeFrom(Unity.Reflect.Model.SyncMap)
      commentId: M:Unity.Reflect.Model.SyncMap.MergeFrom(Unity.Reflect.Model.SyncMap)
      language: CSharp
      name:
        CSharp: MergeFrom(SyncMap)
        VB: MergeFrom(SyncMap)
      nameWithType:
        CSharp: SyncMap.MergeFrom(SyncMap)
        VB: SyncMap.MergeFrom(SyncMap)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMap.MergeFrom(Unity.Reflect.Model.SyncMap)
        VB: Unity.Reflect.Model.SyncMap.MergeFrom(Unity.Reflect.Model.SyncMap)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: MergeFrom
        path: ''
        startLine: 4410
      syntax:
        content:
          CSharp: public void MergeFrom(SyncMap other)
          VB: Public Sub MergeFrom(other As SyncMap)
        parameters:
        - id: other
          type: Unity.Reflect.Model.SyncMap
      overload: Unity.Reflect.Model.SyncMap.MergeFrom*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncMap.MergeFrom(pb.CodedInputStream)
      commentId: M:Unity.Reflect.Model.SyncMap.MergeFrom(pb.CodedInputStream)
      language: CSharp
      name:
        CSharp: MergeFrom(pb.CodedInputStream)
        VB: MergeFrom(pb.CodedInputStream)
      nameWithType:
        CSharp: SyncMap.MergeFrom(pb.CodedInputStream)
        VB: SyncMap.MergeFrom(pb.CodedInputStream)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMap.MergeFrom(pb.CodedInputStream)
        VB: Unity.Reflect.Model.SyncMap.MergeFrom(pb.CodedInputStream)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: MergeFrom
        path: ''
        startLine: 4442
      syntax:
        content:
          CSharp: public void MergeFrom(pb.CodedInputStream input)
          VB: Public Sub MergeFrom(input As pb.CodedInputStream)
        parameters:
        - id: input
          type: pb.CodedInputStream
      overload: Unity.Reflect.Model.SyncMap.MergeFrom*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Unity.Reflect.Model.SyncFloat4
    commentId: T:Unity.Reflect.Model.SyncFloat4
    language: CSharp
    name:
      CSharp: SyncFloat4
      VB: SyncFloat4
    nameWithType:
      CSharp: SyncFloat4
      VB: SyncFloat4
    qualifiedName:
      CSharp: Unity.Reflect.Model.SyncFloat4
      VB: Unity.Reflect.Model.SyncFloat4
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect.Model
    source:
      id: SyncFloat4
      path: ''
      startLine: 4894
    syntax:
      content:
        CSharp: 'public sealed class SyncFloat4 : pb.IMessage<SyncFloat4>'
        VB: >-
          Public NotInheritable Class SyncFloat4

              Inherits pb.IMessage(Of SyncFloat4)
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - sealed
      - class
      VB:
      - Public
      - NotInheritable
      - Class
    items:
    - id: Unity.Reflect.Model.SyncFloat4.Zero
      commentId: M:Unity.Reflect.Model.SyncFloat4.Zero
      language: CSharp
      name:
        CSharp: Zero()
        VB: Zero()
      nameWithType:
        CSharp: SyncFloat4.Zero()
        VB: SyncFloat4.Zero()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncFloat4.Zero()
        VB: Unity.Reflect.Model.SyncFloat4.Zero()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Zero
        path: ''
        startLine: 782
      syntax:
        content:
          CSharp: public static SyncFloat4 Zero()
          VB: Public Shared Function Zero As SyncFloat4
        return:
          type: Unity.Reflect.Model.SyncFloat4
      overload: Unity.Reflect.Model.SyncFloat4.Zero*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Unity.Reflect.Model.SyncFloat4.One
      commentId: M:Unity.Reflect.Model.SyncFloat4.One
      language: CSharp
      name:
        CSharp: One()
        VB: One()
      nameWithType:
        CSharp: SyncFloat4.One()
        VB: SyncFloat4.One()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncFloat4.One()
        VB: Unity.Reflect.Model.SyncFloat4.One()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: One
        path: ''
        startLine: 783
      syntax:
        content:
          CSharp: public static SyncFloat4 One()
          VB: Public Shared Function One As SyncFloat4
        return:
          type: Unity.Reflect.Model.SyncFloat4
      overload: Unity.Reflect.Model.SyncFloat4.One*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Unity.Reflect.Model.SyncFloat4.#ctor(System.Single,System.Single,System.Single,System.Single)
      commentId: M:Unity.Reflect.Model.SyncFloat4.#ctor(System.Single,System.Single,System.Single,System.Single)
      language: CSharp
      name:
        CSharp: SyncFloat4(Single, Single, Single, Single)
        VB: SyncFloat4(Single, Single, Single, Single)
      nameWithType:
        CSharp: SyncFloat4.SyncFloat4(Single, Single, Single, Single)
        VB: SyncFloat4.SyncFloat4(Single, Single, Single, Single)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncFloat4.SyncFloat4(System.Single, System.Single, System.Single, System.Single)
        VB: Unity.Reflect.Model.SyncFloat4.SyncFloat4(System.Single, System.Single, System.Single, System.Single)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: .ctor
        path: ''
        startLine: 785
      syntax:
        content:
          CSharp: public SyncFloat4(float x, float y, float z, float w)
          VB: Public Sub New(x As Single, y As Single, z As Single, w As Single)
        parameters:
        - id: x
          type: System.Single
        - id: y
          type: System.Single
        - id: z
          type: System.Single
        - id: w
          type: System.Single
      overload: Unity.Reflect.Model.SyncFloat4.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncFloat4.Dot(Unity.Reflect.Model.SyncFloat4,Unity.Reflect.Model.SyncFloat4)
      commentId: M:Unity.Reflect.Model.SyncFloat4.Dot(Unity.Reflect.Model.SyncFloat4,Unity.Reflect.Model.SyncFloat4)
      language: CSharp
      name:
        CSharp: Dot(SyncFloat4, SyncFloat4)
        VB: Dot(SyncFloat4, SyncFloat4)
      nameWithType:
        CSharp: SyncFloat4.Dot(SyncFloat4, SyncFloat4)
        VB: SyncFloat4.Dot(SyncFloat4, SyncFloat4)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncFloat4.Dot(Unity.Reflect.Model.SyncFloat4, Unity.Reflect.Model.SyncFloat4)
        VB: Unity.Reflect.Model.SyncFloat4.Dot(Unity.Reflect.Model.SyncFloat4, Unity.Reflect.Model.SyncFloat4)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Dot
        path: ''
        startLine: 793
      syntax:
        content:
          CSharp: public static float Dot(SyncFloat4 lhs, SyncFloat4 rhs)
          VB: Public Shared Function Dot(lhs As SyncFloat4, rhs As SyncFloat4) As Single
        parameters:
        - id: lhs
          type: Unity.Reflect.Model.SyncFloat4
        - id: rhs
          type: Unity.Reflect.Model.SyncFloat4
        return:
          type: System.Single
      overload: Unity.Reflect.Model.SyncFloat4.Dot*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Unity.Reflect.Model.SyncFloat4.op_Equality(Unity.Reflect.Model.SyncFloat4,Unity.Reflect.Model.SyncFloat4)
      commentId: M:Unity.Reflect.Model.SyncFloat4.op_Equality(Unity.Reflect.Model.SyncFloat4,Unity.Reflect.Model.SyncFloat4)
      language: CSharp
      name:
        CSharp: Equality(SyncFloat4, SyncFloat4)
        VB: Equality(SyncFloat4, SyncFloat4)
      nameWithType:
        CSharp: SyncFloat4.Equality(SyncFloat4, SyncFloat4)
        VB: SyncFloat4.Equality(SyncFloat4, SyncFloat4)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncFloat4.Equality(Unity.Reflect.Model.SyncFloat4, Unity.Reflect.Model.SyncFloat4)
        VB: Unity.Reflect.Model.SyncFloat4.Equality(Unity.Reflect.Model.SyncFloat4, Unity.Reflect.Model.SyncFloat4)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: op_Equality
        path: ''
        startLine: 798
      syntax:
        content:
          CSharp: public static bool operator ==(SyncFloat4 f1, SyncFloat4 f2)
          VB: Public Shared Operator =(f1 As SyncFloat4, f2 As SyncFloat4) As Boolean
        parameters:
        - id: f1
          type: Unity.Reflect.Model.SyncFloat4
        - id: f2
          type: Unity.Reflect.Model.SyncFloat4
        return:
          type: System.Boolean
      overload: Unity.Reflect.Model.SyncFloat4.op_Equality*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Unity.Reflect.Model.SyncFloat4.op_Inequality(Unity.Reflect.Model.SyncFloat4,Unity.Reflect.Model.SyncFloat4)
      commentId: M:Unity.Reflect.Model.SyncFloat4.op_Inequality(Unity.Reflect.Model.SyncFloat4,Unity.Reflect.Model.SyncFloat4)
      language: CSharp
      name:
        CSharp: Inequality(SyncFloat4, SyncFloat4)
        VB: Inequality(SyncFloat4, SyncFloat4)
      nameWithType:
        CSharp: SyncFloat4.Inequality(SyncFloat4, SyncFloat4)
        VB: SyncFloat4.Inequality(SyncFloat4, SyncFloat4)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncFloat4.Inequality(Unity.Reflect.Model.SyncFloat4, Unity.Reflect.Model.SyncFloat4)
        VB: Unity.Reflect.Model.SyncFloat4.Inequality(Unity.Reflect.Model.SyncFloat4, Unity.Reflect.Model.SyncFloat4)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: op_Inequality
        path: ''
        startLine: 809
      syntax:
        content:
          CSharp: public static bool operator !=(SyncFloat4 f1, SyncFloat4 f2)
          VB: Public Shared Operator <>(f1 As SyncFloat4, f2 As SyncFloat4) As Boolean
        parameters:
        - id: f1
          type: Unity.Reflect.Model.SyncFloat4
        - id: f2
          type: Unity.Reflect.Model.SyncFloat4
        return:
          type: System.Boolean
      overload: Unity.Reflect.Model.SyncFloat4.op_Inequality*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Unity.Reflect.Model.SyncFloat4.op_Explicit(Unity.Reflect.Model.SyncFloat4)~Unity.Reflect.Model.SyncFloat3
      commentId: M:Unity.Reflect.Model.SyncFloat4.op_Explicit(Unity.Reflect.Model.SyncFloat4)~Unity.Reflect.Model.SyncFloat3
      language: CSharp
      name:
        CSharp: Explicit(SyncFloat4 to SyncFloat3)
        VB: Narrowing(SyncFloat4 to SyncFloat3)
      nameWithType:
        CSharp: SyncFloat4.Explicit(SyncFloat4 to SyncFloat3)
        VB: SyncFloat4.Narrowing(SyncFloat4 to SyncFloat3)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncFloat4.Explicit(Unity.Reflect.Model.SyncFloat4 to Unity.Reflect.Model.SyncFloat3)
        VB: Unity.Reflect.Model.SyncFloat4.Narrowing(Unity.Reflect.Model.SyncFloat4 to Unity.Reflect.Model.SyncFloat3)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: op_Explicit
        path: ''
        startLine: 814
      syntax:
        content:
          CSharp: public static explicit operator SyncFloat3(SyncFloat4 f)
          VB: Public Shared Narrowing Operator CType(f As SyncFloat4) As SyncFloat3
        parameters:
        - id: f
          type: Unity.Reflect.Model.SyncFloat4
        return:
          type: Unity.Reflect.Model.SyncFloat3
      overload: Unity.Reflect.Model.SyncFloat4.op_Explicit*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Unity.Reflect.Model.SyncFloat4.Length
      commentId: M:Unity.Reflect.Model.SyncFloat4.Length
      language: CSharp
      name:
        CSharp: Length()
        VB: Length()
      nameWithType:
        CSharp: SyncFloat4.Length()
        VB: SyncFloat4.Length()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncFloat4.Length()
        VB: Unity.Reflect.Model.SyncFloat4.Length()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Length
        path: ''
        startLine: 819
      syntax:
        content:
          CSharp: public float Length()
          VB: Public Function Length As Single
        return:
          type: System.Single
      overload: Unity.Reflect.Model.SyncFloat4.Length*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncFloat4.op_Addition(Unity.Reflect.Model.SyncFloat4,Unity.Reflect.Model.SyncFloat4)
      commentId: M:Unity.Reflect.Model.SyncFloat4.op_Addition(Unity.Reflect.Model.SyncFloat4,Unity.Reflect.Model.SyncFloat4)
      language: CSharp
      name:
        CSharp: Addition(SyncFloat4, SyncFloat4)
        VB: Addition(SyncFloat4, SyncFloat4)
      nameWithType:
        CSharp: SyncFloat4.Addition(SyncFloat4, SyncFloat4)
        VB: SyncFloat4.Addition(SyncFloat4, SyncFloat4)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncFloat4.Addition(Unity.Reflect.Model.SyncFloat4, Unity.Reflect.Model.SyncFloat4)
        VB: Unity.Reflect.Model.SyncFloat4.Addition(Unity.Reflect.Model.SyncFloat4, Unity.Reflect.Model.SyncFloat4)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: op_Addition
        path: ''
        startLine: 824
      syntax:
        content:
          CSharp: public static SyncFloat4 operator +(SyncFloat4 left, SyncFloat4 right)
          VB: Public Shared Operator +(left As SyncFloat4, right As SyncFloat4) As SyncFloat4
        parameters:
        - id: left
          type: Unity.Reflect.Model.SyncFloat4
        - id: right
          type: Unity.Reflect.Model.SyncFloat4
        return:
          type: Unity.Reflect.Model.SyncFloat4
      overload: Unity.Reflect.Model.SyncFloat4.op_Addition*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Unity.Reflect.Model.SyncFloat4.op_Subtraction(Unity.Reflect.Model.SyncFloat4,Unity.Reflect.Model.SyncFloat4)
      commentId: M:Unity.Reflect.Model.SyncFloat4.op_Subtraction(Unity.Reflect.Model.SyncFloat4,Unity.Reflect.Model.SyncFloat4)
      language: CSharp
      name:
        CSharp: Subtraction(SyncFloat4, SyncFloat4)
        VB: Subtraction(SyncFloat4, SyncFloat4)
      nameWithType:
        CSharp: SyncFloat4.Subtraction(SyncFloat4, SyncFloat4)
        VB: SyncFloat4.Subtraction(SyncFloat4, SyncFloat4)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncFloat4.Subtraction(Unity.Reflect.Model.SyncFloat4, Unity.Reflect.Model.SyncFloat4)
        VB: Unity.Reflect.Model.SyncFloat4.Subtraction(Unity.Reflect.Model.SyncFloat4, Unity.Reflect.Model.SyncFloat4)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: op_Subtraction
        path: ''
        startLine: 835
      syntax:
        content:
          CSharp: public static SyncFloat4 operator -(SyncFloat4 left, SyncFloat4 right)
          VB: Public Shared Operator -(left As SyncFloat4, right As SyncFloat4) As SyncFloat4
        parameters:
        - id: left
          type: Unity.Reflect.Model.SyncFloat4
        - id: right
          type: Unity.Reflect.Model.SyncFloat4
        return:
          type: Unity.Reflect.Model.SyncFloat4
      overload: Unity.Reflect.Model.SyncFloat4.op_Subtraction*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Unity.Reflect.Model.SyncFloat4.op_Multiply(Unity.Reflect.Model.SyncFloat4,System.Single)
      commentId: M:Unity.Reflect.Model.SyncFloat4.op_Multiply(Unity.Reflect.Model.SyncFloat4,System.Single)
      language: CSharp
      name:
        CSharp: Multiply(SyncFloat4, Single)
        VB: Multiply(SyncFloat4, Single)
      nameWithType:
        CSharp: SyncFloat4.Multiply(SyncFloat4, Single)
        VB: SyncFloat4.Multiply(SyncFloat4, Single)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncFloat4.Multiply(Unity.Reflect.Model.SyncFloat4, System.Single)
        VB: Unity.Reflect.Model.SyncFloat4.Multiply(Unity.Reflect.Model.SyncFloat4, System.Single)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: op_Multiply
        path: ''
        startLine: 840
      syntax:
        content:
          CSharp: public static SyncFloat4 operator *(SyncFloat4 left, float f)
          VB: Public Shared Operator *(left As SyncFloat4, f As Single) As SyncFloat4
        parameters:
        - id: left
          type: Unity.Reflect.Model.SyncFloat4
        - id: f
          type: System.Single
        return:
          type: Unity.Reflect.Model.SyncFloat4
      overload: Unity.Reflect.Model.SyncFloat4.op_Multiply*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Unity.Reflect.Model.SyncFloat4.op_Multiply(System.Single,Unity.Reflect.Model.SyncFloat4)
      commentId: M:Unity.Reflect.Model.SyncFloat4.op_Multiply(System.Single,Unity.Reflect.Model.SyncFloat4)
      language: CSharp
      name:
        CSharp: Multiply(Single, SyncFloat4)
        VB: Multiply(Single, SyncFloat4)
      nameWithType:
        CSharp: SyncFloat4.Multiply(Single, SyncFloat4)
        VB: SyncFloat4.Multiply(Single, SyncFloat4)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncFloat4.Multiply(System.Single, Unity.Reflect.Model.SyncFloat4)
        VB: Unity.Reflect.Model.SyncFloat4.Multiply(System.Single, Unity.Reflect.Model.SyncFloat4)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: op_Multiply
        path: ''
        startLine: 851
      syntax:
        content:
          CSharp: public static SyncFloat4 operator *(float left, SyncFloat4 right)
          VB: Public Shared Operator *(left As Single, right As SyncFloat4) As SyncFloat4
        parameters:
        - id: left
          type: System.Single
        - id: right
          type: Unity.Reflect.Model.SyncFloat4
        return:
          type: Unity.Reflect.Model.SyncFloat4
      overload: Unity.Reflect.Model.SyncFloat4.op_Multiply*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Unity.Reflect.Model.SyncFloat4.op_Division(Unity.Reflect.Model.SyncFloat4,System.Single)
      commentId: M:Unity.Reflect.Model.SyncFloat4.op_Division(Unity.Reflect.Model.SyncFloat4,System.Single)
      language: CSharp
      name:
        CSharp: Division(SyncFloat4, Single)
        VB: Division(SyncFloat4, Single)
      nameWithType:
        CSharp: SyncFloat4.Division(SyncFloat4, Single)
        VB: SyncFloat4.Division(SyncFloat4, Single)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncFloat4.Division(Unity.Reflect.Model.SyncFloat4, System.Single)
        VB: Unity.Reflect.Model.SyncFloat4.Division(Unity.Reflect.Model.SyncFloat4, System.Single)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: op_Division
        path: ''
        startLine: 856
      syntax:
        content:
          CSharp: public static SyncFloat4 operator /(SyncFloat4 left, float right)
          VB: Public Shared Operator /(left As SyncFloat4, right As Single) As SyncFloat4
        parameters:
        - id: left
          type: Unity.Reflect.Model.SyncFloat4
        - id: right
          type: System.Single
        return:
          type: Unity.Reflect.Model.SyncFloat4
      overload: Unity.Reflect.Model.SyncFloat4.op_Division*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Unity.Reflect.Model.SyncFloat4.Parser
      commentId: P:Unity.Reflect.Model.SyncFloat4.Parser
      language: CSharp
      name:
        CSharp: Parser
        VB: Parser
      nameWithType:
        CSharp: SyncFloat4.Parser
        VB: SyncFloat4.Parser
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncFloat4.Parser
        VB: Unity.Reflect.Model.SyncFloat4.Parser
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Parser
        path: ''
        startLine: 4897
      syntax:
        content:
          CSharp: public static pb.MessageParser<SyncFloat4> Parser { get; }
          VB: Public Shared ReadOnly Property Parser As pb.MessageParser(Of SyncFloat4)
        parameters: []
        return:
          type: pb.MessageParser{Unity.Reflect.Model.SyncFloat4}
      overload: Unity.Reflect.Model.SyncFloat4.Parser*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Unity.Reflect.Model.SyncFloat4.Descriptor
      commentId: P:Unity.Reflect.Model.SyncFloat4.Descriptor
      language: CSharp
      name:
        CSharp: Descriptor
        VB: Descriptor
      nameWithType:
        CSharp: SyncFloat4.Descriptor
        VB: SyncFloat4.Descriptor
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncFloat4.Descriptor
        VB: Unity.Reflect.Model.SyncFloat4.Descriptor
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Descriptor
        path: ''
        startLine: 4900
      syntax:
        content:
          CSharp: public static pbr.MessageDescriptor Descriptor { get; }
          VB: Public Shared ReadOnly Property Descriptor As pbr.MessageDescriptor
        parameters: []
        return:
          type: pbr.MessageDescriptor
      overload: Unity.Reflect.Model.SyncFloat4.Descriptor*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Unity.Reflect.Model.SyncFloat4.#ctor
      commentId: M:Unity.Reflect.Model.SyncFloat4.#ctor
      language: CSharp
      name:
        CSharp: SyncFloat4()
        VB: SyncFloat4()
      nameWithType:
        CSharp: SyncFloat4.SyncFloat4()
        VB: SyncFloat4.SyncFloat4()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncFloat4.SyncFloat4()
        VB: Unity.Reflect.Model.SyncFloat4.SyncFloat4()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: .ctor
        path: ''
        startLine: 4910
      syntax:
        content:
          CSharp: public SyncFloat4()
          VB: Public Sub New
      overload: Unity.Reflect.Model.SyncFloat4.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncFloat4.#ctor(Unity.Reflect.Model.SyncFloat4)
      commentId: M:Unity.Reflect.Model.SyncFloat4.#ctor(Unity.Reflect.Model.SyncFloat4)
      language: CSharp
      name:
        CSharp: SyncFloat4(SyncFloat4)
        VB: SyncFloat4(SyncFloat4)
      nameWithType:
        CSharp: SyncFloat4.SyncFloat4(SyncFloat4)
        VB: SyncFloat4.SyncFloat4(SyncFloat4)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncFloat4.SyncFloat4(Unity.Reflect.Model.SyncFloat4)
        VB: Unity.Reflect.Model.SyncFloat4.SyncFloat4(Unity.Reflect.Model.SyncFloat4)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: .ctor
        path: ''
        startLine: 4917
      syntax:
        content:
          CSharp: public SyncFloat4(SyncFloat4 other)
          VB: Public Sub New(other As SyncFloat4)
        parameters:
        - id: other
          type: Unity.Reflect.Model.SyncFloat4
      overload: Unity.Reflect.Model.SyncFloat4.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncFloat4.Clone
      commentId: M:Unity.Reflect.Model.SyncFloat4.Clone
      language: CSharp
      name:
        CSharp: Clone()
        VB: Clone()
      nameWithType:
        CSharp: SyncFloat4.Clone()
        VB: SyncFloat4.Clone()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncFloat4.Clone()
        VB: Unity.Reflect.Model.SyncFloat4.Clone()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Clone
        path: ''
        startLine: 4926
      syntax:
        content:
          CSharp: public SyncFloat4 Clone()
          VB: Public Function Clone As SyncFloat4
        return:
          type: Unity.Reflect.Model.SyncFloat4
      overload: Unity.Reflect.Model.SyncFloat4.Clone*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncFloat4.XFieldNumber
      commentId: F:Unity.Reflect.Model.SyncFloat4.XFieldNumber
      language: CSharp
      name:
        CSharp: XFieldNumber
        VB: XFieldNumber
      nameWithType:
        CSharp: SyncFloat4.XFieldNumber
        VB: SyncFloat4.XFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncFloat4.XFieldNumber
        VB: Unity.Reflect.Model.SyncFloat4.XFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: XFieldNumber
        path: ''
        startLine: 4932
      summary: Field number for the &quot;x&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int XFieldNumber = 1
          VB: Public Const XFieldNumber As Integer = 1
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncFloat4.X
      commentId: P:Unity.Reflect.Model.SyncFloat4.X
      language: CSharp
      name:
        CSharp: X
        VB: X
      nameWithType:
        CSharp: SyncFloat4.X
        VB: SyncFloat4.X
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncFloat4.X
        VB: Unity.Reflect.Model.SyncFloat4.X
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: X
        path: ''
        startLine: 4934
      syntax:
        content:
          CSharp: public float X { get; set; }
          VB: Public Property X As Single
        parameters: []
        return:
          type: System.Single
      overload: Unity.Reflect.Model.SyncFloat4.X*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncFloat4.YFieldNumber
      commentId: F:Unity.Reflect.Model.SyncFloat4.YFieldNumber
      language: CSharp
      name:
        CSharp: YFieldNumber
        VB: YFieldNumber
      nameWithType:
        CSharp: SyncFloat4.YFieldNumber
        VB: SyncFloat4.YFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncFloat4.YFieldNumber
        VB: Unity.Reflect.Model.SyncFloat4.YFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: YFieldNumber
        path: ''
        startLine: 4943
      summary: Field number for the &quot;y&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int YFieldNumber = 2
          VB: Public Const YFieldNumber As Integer = 2
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncFloat4.Y
      commentId: P:Unity.Reflect.Model.SyncFloat4.Y
      language: CSharp
      name:
        CSharp: Y
        VB: Y
      nameWithType:
        CSharp: SyncFloat4.Y
        VB: SyncFloat4.Y
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncFloat4.Y
        VB: Unity.Reflect.Model.SyncFloat4.Y
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Y
        path: ''
        startLine: 4945
      syntax:
        content:
          CSharp: public float Y { get; set; }
          VB: Public Property Y As Single
        parameters: []
        return:
          type: System.Single
      overload: Unity.Reflect.Model.SyncFloat4.Y*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncFloat4.ZFieldNumber
      commentId: F:Unity.Reflect.Model.SyncFloat4.ZFieldNumber
      language: CSharp
      name:
        CSharp: ZFieldNumber
        VB: ZFieldNumber
      nameWithType:
        CSharp: SyncFloat4.ZFieldNumber
        VB: SyncFloat4.ZFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncFloat4.ZFieldNumber
        VB: Unity.Reflect.Model.SyncFloat4.ZFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: ZFieldNumber
        path: ''
        startLine: 4954
      summary: Field number for the &quot;z&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int ZFieldNumber = 3
          VB: Public Const ZFieldNumber As Integer = 3
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncFloat4.Z
      commentId: P:Unity.Reflect.Model.SyncFloat4.Z
      language: CSharp
      name:
        CSharp: Z
        VB: Z
      nameWithType:
        CSharp: SyncFloat4.Z
        VB: SyncFloat4.Z
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncFloat4.Z
        VB: Unity.Reflect.Model.SyncFloat4.Z
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Z
        path: ''
        startLine: 4956
      syntax:
        content:
          CSharp: public float Z { get; set; }
          VB: Public Property Z As Single
        parameters: []
        return:
          type: System.Single
      overload: Unity.Reflect.Model.SyncFloat4.Z*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncFloat4.WFieldNumber
      commentId: F:Unity.Reflect.Model.SyncFloat4.WFieldNumber
      language: CSharp
      name:
        CSharp: WFieldNumber
        VB: WFieldNumber
      nameWithType:
        CSharp: SyncFloat4.WFieldNumber
        VB: SyncFloat4.WFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncFloat4.WFieldNumber
        VB: Unity.Reflect.Model.SyncFloat4.WFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: WFieldNumber
        path: ''
        startLine: 4965
      summary: Field number for the &quot;w&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int WFieldNumber = 4
          VB: Public Const WFieldNumber As Integer = 4
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncFloat4.W
      commentId: P:Unity.Reflect.Model.SyncFloat4.W
      language: CSharp
      name:
        CSharp: W
        VB: W
      nameWithType:
        CSharp: SyncFloat4.W
        VB: SyncFloat4.W
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncFloat4.W
        VB: Unity.Reflect.Model.SyncFloat4.W
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: W
        path: ''
        startLine: 4967
      syntax:
        content:
          CSharp: public float W { get; set; }
          VB: Public Property W As Single
        parameters: []
        return:
          type: System.Single
      overload: Unity.Reflect.Model.SyncFloat4.W*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncFloat4.Equals(System.Object)
      commentId: M:Unity.Reflect.Model.SyncFloat4.Equals(System.Object)
      language: CSharp
      name:
        CSharp: Equals(Object)
        VB: Equals(Object)
      nameWithType:
        CSharp: SyncFloat4.Equals(Object)
        VB: SyncFloat4.Equals(Object)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncFloat4.Equals(System.Object)
        VB: Unity.Reflect.Model.SyncFloat4.Equals(System.Object)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Equals
        path: ''
        startLine: 4975
      syntax:
        content:
          CSharp: public override bool Equals(object other)
          VB: Public Overrides Function Equals(other As Object) As Boolean
        parameters:
        - id: other
          type: System.Object
        return:
          type: System.Boolean
      overload: Unity.Reflect.Model.SyncFloat4.Equals*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.Model.SyncFloat4.Equals(Unity.Reflect.Model.SyncFloat4)
      commentId: M:Unity.Reflect.Model.SyncFloat4.Equals(Unity.Reflect.Model.SyncFloat4)
      language: CSharp
      name:
        CSharp: Equals(SyncFloat4)
        VB: Equals(SyncFloat4)
      nameWithType:
        CSharp: SyncFloat4.Equals(SyncFloat4)
        VB: SyncFloat4.Equals(SyncFloat4)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncFloat4.Equals(Unity.Reflect.Model.SyncFloat4)
        VB: Unity.Reflect.Model.SyncFloat4.Equals(Unity.Reflect.Model.SyncFloat4)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Equals
        path: ''
        startLine: 4980
      syntax:
        content:
          CSharp: public bool Equals(SyncFloat4 other)
          VB: Public Function Equals(other As SyncFloat4) As Boolean
        parameters:
        - id: other
          type: Unity.Reflect.Model.SyncFloat4
        return:
          type: System.Boolean
      overload: Unity.Reflect.Model.SyncFloat4.Equals*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncFloat4.GetHashCode
      commentId: M:Unity.Reflect.Model.SyncFloat4.GetHashCode
      language: CSharp
      name:
        CSharp: GetHashCode()
        VB: GetHashCode()
      nameWithType:
        CSharp: SyncFloat4.GetHashCode()
        VB: SyncFloat4.GetHashCode()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncFloat4.GetHashCode()
        VB: Unity.Reflect.Model.SyncFloat4.GetHashCode()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: GetHashCode
        path: ''
        startLine: 4995
      syntax:
        content:
          CSharp: public override int GetHashCode()
          VB: Public Overrides Function GetHashCode As Integer
        return:
          type: System.Int32
      overload: Unity.Reflect.Model.SyncFloat4.GetHashCode*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.Model.SyncFloat4.ToString
      commentId: M:Unity.Reflect.Model.SyncFloat4.ToString
      language: CSharp
      name:
        CSharp: ToString()
        VB: ToString()
      nameWithType:
        CSharp: SyncFloat4.ToString()
        VB: SyncFloat4.ToString()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncFloat4.ToString()
        VB: Unity.Reflect.Model.SyncFloat4.ToString()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: ToString
        path: ''
        startLine: 5008
      syntax:
        content:
          CSharp: public override string ToString()
          VB: Public Overrides Function ToString As String
        return:
          type: System.String
      overload: Unity.Reflect.Model.SyncFloat4.ToString*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.Model.SyncFloat4.WriteTo(pb.CodedOutputStream)
      commentId: M:Unity.Reflect.Model.SyncFloat4.WriteTo(pb.CodedOutputStream)
      language: CSharp
      name:
        CSharp: WriteTo(pb.CodedOutputStream)
        VB: WriteTo(pb.CodedOutputStream)
      nameWithType:
        CSharp: SyncFloat4.WriteTo(pb.CodedOutputStream)
        VB: SyncFloat4.WriteTo(pb.CodedOutputStream)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncFloat4.WriteTo(pb.CodedOutputStream)
        VB: Unity.Reflect.Model.SyncFloat4.WriteTo(pb.CodedOutputStream)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: WriteTo
        path: ''
        startLine: 5013
      syntax:
        content:
          CSharp: public void WriteTo(pb.CodedOutputStream output)
          VB: Public Sub WriteTo(output As pb.CodedOutputStream)
        parameters:
        - id: output
          type: pb.CodedOutputStream
      overload: Unity.Reflect.Model.SyncFloat4.WriteTo*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncFloat4.CalculateSize
      commentId: M:Unity.Reflect.Model.SyncFloat4.CalculateSize
      language: CSharp
      name:
        CSharp: CalculateSize()
        VB: CalculateSize()
      nameWithType:
        CSharp: SyncFloat4.CalculateSize()
        VB: SyncFloat4.CalculateSize()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncFloat4.CalculateSize()
        VB: Unity.Reflect.Model.SyncFloat4.CalculateSize()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: CalculateSize
        path: ''
        startLine: 5036
      syntax:
        content:
          CSharp: public int CalculateSize()
          VB: Public Function CalculateSize As Integer
        return:
          type: System.Int32
      overload: Unity.Reflect.Model.SyncFloat4.CalculateSize*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncFloat4.MergeFrom(Unity.Reflect.Model.SyncFloat4)
      commentId: M:Unity.Reflect.Model.SyncFloat4.MergeFrom(Unity.Reflect.Model.SyncFloat4)
      language: CSharp
      name:
        CSharp: MergeFrom(SyncFloat4)
        VB: MergeFrom(SyncFloat4)
      nameWithType:
        CSharp: SyncFloat4.MergeFrom(SyncFloat4)
        VB: SyncFloat4.MergeFrom(SyncFloat4)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncFloat4.MergeFrom(Unity.Reflect.Model.SyncFloat4)
        VB: Unity.Reflect.Model.SyncFloat4.MergeFrom(Unity.Reflect.Model.SyncFloat4)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: MergeFrom
        path: ''
        startLine: 5057
      syntax:
        content:
          CSharp: public void MergeFrom(SyncFloat4 other)
          VB: Public Sub MergeFrom(other As SyncFloat4)
        parameters:
        - id: other
          type: Unity.Reflect.Model.SyncFloat4
      overload: Unity.Reflect.Model.SyncFloat4.MergeFrom*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncFloat4.MergeFrom(pb.CodedInputStream)
      commentId: M:Unity.Reflect.Model.SyncFloat4.MergeFrom(pb.CodedInputStream)
      language: CSharp
      name:
        CSharp: MergeFrom(pb.CodedInputStream)
        VB: MergeFrom(pb.CodedInputStream)
      nameWithType:
        CSharp: SyncFloat4.MergeFrom(pb.CodedInputStream)
        VB: SyncFloat4.MergeFrom(pb.CodedInputStream)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncFloat4.MergeFrom(pb.CodedInputStream)
        VB: Unity.Reflect.Model.SyncFloat4.MergeFrom(pb.CodedInputStream)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: MergeFrom
        path: ''
        startLine: 5077
      syntax:
        content:
          CSharp: public void MergeFrom(pb.CodedInputStream input)
          VB: Public Sub MergeFrom(input As pb.CodedInputStream)
        parameters:
        - id: input
          type: pb.CodedInputStream
      overload: Unity.Reflect.Model.SyncFloat4.MergeFrom*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Unity.Reflect.Model.SyncFloat3
    commentId: T:Unity.Reflect.Model.SyncFloat3
    language: CSharp
    name:
      CSharp: SyncFloat3
      VB: SyncFloat3
    nameWithType:
      CSharp: SyncFloat3
      VB: SyncFloat3
    qualifiedName:
      CSharp: Unity.Reflect.Model.SyncFloat3
      VB: Unity.Reflect.Model.SyncFloat3
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect.Model
    source:
      id: SyncFloat3
      path: ''
      startLine: 4709
    syntax:
      content:
        CSharp: 'public sealed class SyncFloat3 : pb.IMessage<SyncFloat3>'
        VB: >-
          Public NotInheritable Class SyncFloat3

              Inherits pb.IMessage(Of SyncFloat3)
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - sealed
      - class
      VB:
      - Public
      - NotInheritable
      - Class
    items:
    - id: Unity.Reflect.Model.SyncFloat3.Zero
      commentId: M:Unity.Reflect.Model.SyncFloat3.Zero
      language: CSharp
      name:
        CSharp: Zero()
        VB: Zero()
      nameWithType:
        CSharp: SyncFloat3.Zero()
        VB: SyncFloat3.Zero()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncFloat3.Zero()
        VB: Unity.Reflect.Model.SyncFloat3.Zero()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Zero
        path: ''
        startLine: 864
      syntax:
        content:
          CSharp: public static SyncFloat3 Zero()
          VB: Public Shared Function Zero As SyncFloat3
        return:
          type: Unity.Reflect.Model.SyncFloat3
      overload: Unity.Reflect.Model.SyncFloat3.Zero*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Unity.Reflect.Model.SyncFloat3.One
      commentId: M:Unity.Reflect.Model.SyncFloat3.One
      language: CSharp
      name:
        CSharp: One()
        VB: One()
      nameWithType:
        CSharp: SyncFloat3.One()
        VB: SyncFloat3.One()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncFloat3.One()
        VB: Unity.Reflect.Model.SyncFloat3.One()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: One
        path: ''
        startLine: 865
      syntax:
        content:
          CSharp: public static SyncFloat3 One()
          VB: Public Shared Function One As SyncFloat3
        return:
          type: Unity.Reflect.Model.SyncFloat3
      overload: Unity.Reflect.Model.SyncFloat3.One*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Unity.Reflect.Model.SyncFloat3.#ctor(System.Single,System.Single,System.Single)
      commentId: M:Unity.Reflect.Model.SyncFloat3.#ctor(System.Single,System.Single,System.Single)
      language: CSharp
      name:
        CSharp: SyncFloat3(Single, Single, Single)
        VB: SyncFloat3(Single, Single, Single)
      nameWithType:
        CSharp: SyncFloat3.SyncFloat3(Single, Single, Single)
        VB: SyncFloat3.SyncFloat3(Single, Single, Single)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncFloat3.SyncFloat3(System.Single, System.Single, System.Single)
        VB: Unity.Reflect.Model.SyncFloat3.SyncFloat3(System.Single, System.Single, System.Single)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: .ctor
        path: ''
        startLine: 867
      syntax:
        content:
          CSharp: public SyncFloat3(float x, float y, float z)
          VB: Public Sub New(x As Single, y As Single, z As Single)
        parameters:
        - id: x
          type: System.Single
        - id: y
          type: System.Single
        - id: z
          type: System.Single
      overload: Unity.Reflect.Model.SyncFloat3.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncFloat3.op_Addition(Unity.Reflect.Model.SyncFloat3,Unity.Reflect.Model.SyncFloat3)
      commentId: M:Unity.Reflect.Model.SyncFloat3.op_Addition(Unity.Reflect.Model.SyncFloat3,Unity.Reflect.Model.SyncFloat3)
      language: CSharp
      name:
        CSharp: Addition(SyncFloat3, SyncFloat3)
        VB: Addition(SyncFloat3, SyncFloat3)
      nameWithType:
        CSharp: SyncFloat3.Addition(SyncFloat3, SyncFloat3)
        VB: SyncFloat3.Addition(SyncFloat3, SyncFloat3)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncFloat3.Addition(Unity.Reflect.Model.SyncFloat3, Unity.Reflect.Model.SyncFloat3)
        VB: Unity.Reflect.Model.SyncFloat3.Addition(Unity.Reflect.Model.SyncFloat3, Unity.Reflect.Model.SyncFloat3)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: op_Addition
        path: ''
        startLine: 874
      syntax:
        content:
          CSharp: public static SyncFloat3 operator +(SyncFloat3 left, SyncFloat3 right)
          VB: Public Shared Operator +(left As SyncFloat3, right As SyncFloat3) As SyncFloat3
        parameters:
        - id: left
          type: Unity.Reflect.Model.SyncFloat3
        - id: right
          type: Unity.Reflect.Model.SyncFloat3
        return:
          type: Unity.Reflect.Model.SyncFloat3
      overload: Unity.Reflect.Model.SyncFloat3.op_Addition*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Unity.Reflect.Model.SyncFloat3.op_Subtraction(Unity.Reflect.Model.SyncFloat3,Unity.Reflect.Model.SyncFloat3)
      commentId: M:Unity.Reflect.Model.SyncFloat3.op_Subtraction(Unity.Reflect.Model.SyncFloat3,Unity.Reflect.Model.SyncFloat3)
      language: CSharp
      name:
        CSharp: Subtraction(SyncFloat3, SyncFloat3)
        VB: Subtraction(SyncFloat3, SyncFloat3)
      nameWithType:
        CSharp: SyncFloat3.Subtraction(SyncFloat3, SyncFloat3)
        VB: SyncFloat3.Subtraction(SyncFloat3, SyncFloat3)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncFloat3.Subtraction(Unity.Reflect.Model.SyncFloat3, Unity.Reflect.Model.SyncFloat3)
        VB: Unity.Reflect.Model.SyncFloat3.Subtraction(Unity.Reflect.Model.SyncFloat3, Unity.Reflect.Model.SyncFloat3)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: op_Subtraction
        path: ''
        startLine: 884
      syntax:
        content:
          CSharp: public static SyncFloat3 operator -(SyncFloat3 left, SyncFloat3 right)
          VB: Public Shared Operator -(left As SyncFloat3, right As SyncFloat3) As SyncFloat3
        parameters:
        - id: left
          type: Unity.Reflect.Model.SyncFloat3
        - id: right
          type: Unity.Reflect.Model.SyncFloat3
        return:
          type: Unity.Reflect.Model.SyncFloat3
      overload: Unity.Reflect.Model.SyncFloat3.op_Subtraction*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Unity.Reflect.Model.SyncFloat3.op_Multiply(Unity.Reflect.Model.SyncFloat3,System.Single)
      commentId: M:Unity.Reflect.Model.SyncFloat3.op_Multiply(Unity.Reflect.Model.SyncFloat3,System.Single)
      language: CSharp
      name:
        CSharp: Multiply(SyncFloat3, Single)
        VB: Multiply(SyncFloat3, Single)
      nameWithType:
        CSharp: SyncFloat3.Multiply(SyncFloat3, Single)
        VB: SyncFloat3.Multiply(SyncFloat3, Single)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncFloat3.Multiply(Unity.Reflect.Model.SyncFloat3, System.Single)
        VB: Unity.Reflect.Model.SyncFloat3.Multiply(Unity.Reflect.Model.SyncFloat3, System.Single)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: op_Multiply
        path: ''
        startLine: 889
      syntax:
        content:
          CSharp: public static SyncFloat3 operator *(SyncFloat3 left, float right)
          VB: Public Shared Operator *(left As SyncFloat3, right As Single) As SyncFloat3
        parameters:
        - id: left
          type: Unity.Reflect.Model.SyncFloat3
        - id: right
          type: System.Single
        return:
          type: Unity.Reflect.Model.SyncFloat3
      overload: Unity.Reflect.Model.SyncFloat3.op_Multiply*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Unity.Reflect.Model.SyncFloat3.op_Multiply(System.Single,Unity.Reflect.Model.SyncFloat3)
      commentId: M:Unity.Reflect.Model.SyncFloat3.op_Multiply(System.Single,Unity.Reflect.Model.SyncFloat3)
      language: CSharp
      name:
        CSharp: Multiply(Single, SyncFloat3)
        VB: Multiply(Single, SyncFloat3)
      nameWithType:
        CSharp: SyncFloat3.Multiply(Single, SyncFloat3)
        VB: SyncFloat3.Multiply(Single, SyncFloat3)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncFloat3.Multiply(System.Single, Unity.Reflect.Model.SyncFloat3)
        VB: Unity.Reflect.Model.SyncFloat3.Multiply(System.Single, Unity.Reflect.Model.SyncFloat3)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: op_Multiply
        path: ''
        startLine: 899
      syntax:
        content:
          CSharp: public static SyncFloat3 operator *(float left, SyncFloat3 right)
          VB: Public Shared Operator *(left As Single, right As SyncFloat3) As SyncFloat3
        parameters:
        - id: left
          type: System.Single
        - id: right
          type: Unity.Reflect.Model.SyncFloat3
        return:
          type: Unity.Reflect.Model.SyncFloat3
      overload: Unity.Reflect.Model.SyncFloat3.op_Multiply*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Unity.Reflect.Model.SyncFloat3.op_Multiply(Unity.Reflect.Model.SyncFloat3,Unity.Reflect.Model.SyncFloat3)
      commentId: M:Unity.Reflect.Model.SyncFloat3.op_Multiply(Unity.Reflect.Model.SyncFloat3,Unity.Reflect.Model.SyncFloat3)
      language: CSharp
      name:
        CSharp: Multiply(SyncFloat3, SyncFloat3)
        VB: Multiply(SyncFloat3, SyncFloat3)
      nameWithType:
        CSharp: SyncFloat3.Multiply(SyncFloat3, SyncFloat3)
        VB: SyncFloat3.Multiply(SyncFloat3, SyncFloat3)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncFloat3.Multiply(Unity.Reflect.Model.SyncFloat3, Unity.Reflect.Model.SyncFloat3)
        VB: Unity.Reflect.Model.SyncFloat3.Multiply(Unity.Reflect.Model.SyncFloat3, Unity.Reflect.Model.SyncFloat3)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: op_Multiply
        path: ''
        startLine: 904
      syntax:
        content:
          CSharp: public static SyncFloat3 operator *(SyncFloat3 left, SyncFloat3 right)
          VB: Public Shared Operator *(left As SyncFloat3, right As SyncFloat3) As SyncFloat3
        parameters:
        - id: left
          type: Unity.Reflect.Model.SyncFloat3
        - id: right
          type: Unity.Reflect.Model.SyncFloat3
        return:
          type: Unity.Reflect.Model.SyncFloat3
      overload: Unity.Reflect.Model.SyncFloat3.op_Multiply*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Unity.Reflect.Model.SyncFloat3.op_Division(Unity.Reflect.Model.SyncFloat3,System.Single)
      commentId: M:Unity.Reflect.Model.SyncFloat3.op_Division(Unity.Reflect.Model.SyncFloat3,System.Single)
      language: CSharp
      name:
        CSharp: Division(SyncFloat3, Single)
        VB: Division(SyncFloat3, Single)
      nameWithType:
        CSharp: SyncFloat3.Division(SyncFloat3, Single)
        VB: SyncFloat3.Division(SyncFloat3, Single)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncFloat3.Division(Unity.Reflect.Model.SyncFloat3, System.Single)
        VB: Unity.Reflect.Model.SyncFloat3.Division(Unity.Reflect.Model.SyncFloat3, System.Single)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: op_Division
        path: ''
        startLine: 914
      syntax:
        content:
          CSharp: public static SyncFloat3 operator /(SyncFloat3 left, float right)
          VB: Public Shared Operator /(left As SyncFloat3, right As Single) As SyncFloat3
        parameters:
        - id: left
          type: Unity.Reflect.Model.SyncFloat3
        - id: right
          type: System.Single
        return:
          type: Unity.Reflect.Model.SyncFloat3
      overload: Unity.Reflect.Model.SyncFloat3.op_Division*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Unity.Reflect.Model.SyncFloat3.Dot(Unity.Reflect.Model.SyncFloat3,Unity.Reflect.Model.SyncFloat3)
      commentId: M:Unity.Reflect.Model.SyncFloat3.Dot(Unity.Reflect.Model.SyncFloat3,Unity.Reflect.Model.SyncFloat3)
      language: CSharp
      name:
        CSharp: Dot(SyncFloat3, SyncFloat3)
        VB: Dot(SyncFloat3, SyncFloat3)
      nameWithType:
        CSharp: SyncFloat3.Dot(SyncFloat3, SyncFloat3)
        VB: SyncFloat3.Dot(SyncFloat3, SyncFloat3)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncFloat3.Dot(Unity.Reflect.Model.SyncFloat3, Unity.Reflect.Model.SyncFloat3)
        VB: Unity.Reflect.Model.SyncFloat3.Dot(Unity.Reflect.Model.SyncFloat3, Unity.Reflect.Model.SyncFloat3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Dot
        path: ''
        startLine: 919
      syntax:
        content:
          CSharp: public static float Dot(SyncFloat3 lhs, SyncFloat3 rhs)
          VB: Public Shared Function Dot(lhs As SyncFloat3, rhs As SyncFloat3) As Single
        parameters:
        - id: lhs
          type: Unity.Reflect.Model.SyncFloat3
        - id: rhs
          type: Unity.Reflect.Model.SyncFloat3
        return:
          type: System.Single
      overload: Unity.Reflect.Model.SyncFloat3.Dot*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Unity.Reflect.Model.SyncFloat3.Cross(Unity.Reflect.Model.SyncFloat3,Unity.Reflect.Model.SyncFloat3)
      commentId: M:Unity.Reflect.Model.SyncFloat3.Cross(Unity.Reflect.Model.SyncFloat3,Unity.Reflect.Model.SyncFloat3)
      language: CSharp
      name:
        CSharp: Cross(SyncFloat3, SyncFloat3)
        VB: Cross(SyncFloat3, SyncFloat3)
      nameWithType:
        CSharp: SyncFloat3.Cross(SyncFloat3, SyncFloat3)
        VB: SyncFloat3.Cross(SyncFloat3, SyncFloat3)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncFloat3.Cross(Unity.Reflect.Model.SyncFloat3, Unity.Reflect.Model.SyncFloat3)
        VB: Unity.Reflect.Model.SyncFloat3.Cross(Unity.Reflect.Model.SyncFloat3, Unity.Reflect.Model.SyncFloat3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Cross
        path: ''
        startLine: 924
      syntax:
        content:
          CSharp: public static SyncFloat3 Cross(SyncFloat3 lhs, SyncFloat3 rhs)
          VB: Public Shared Function Cross(lhs As SyncFloat3, rhs As SyncFloat3) As SyncFloat3
        parameters:
        - id: lhs
          type: Unity.Reflect.Model.SyncFloat3
        - id: rhs
          type: Unity.Reflect.Model.SyncFloat3
        return:
          type: Unity.Reflect.Model.SyncFloat3
      overload: Unity.Reflect.Model.SyncFloat3.Cross*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Unity.Reflect.Model.SyncFloat3.FlipYZ
      commentId: M:Unity.Reflect.Model.SyncFloat3.FlipYZ
      language: CSharp
      name:
        CSharp: FlipYZ()
        VB: FlipYZ()
      nameWithType:
        CSharp: SyncFloat3.FlipYZ()
        VB: SyncFloat3.FlipYZ()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncFloat3.FlipYZ()
        VB: Unity.Reflect.Model.SyncFloat3.FlipYZ()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: FlipYZ
        path: ''
        startLine: 932
      syntax:
        content:
          CSharp: public SyncFloat3 FlipYZ()
          VB: Public Function FlipYZ As SyncFloat3
        return:
          type: Unity.Reflect.Model.SyncFloat3
      overload: Unity.Reflect.Model.SyncFloat3.FlipYZ*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncFloat3.op_Equality(Unity.Reflect.Model.SyncFloat3,Unity.Reflect.Model.SyncFloat3)
      commentId: M:Unity.Reflect.Model.SyncFloat3.op_Equality(Unity.Reflect.Model.SyncFloat3,Unity.Reflect.Model.SyncFloat3)
      language: CSharp
      name:
        CSharp: Equality(SyncFloat3, SyncFloat3)
        VB: Equality(SyncFloat3, SyncFloat3)
      nameWithType:
        CSharp: SyncFloat3.Equality(SyncFloat3, SyncFloat3)
        VB: SyncFloat3.Equality(SyncFloat3, SyncFloat3)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncFloat3.Equality(Unity.Reflect.Model.SyncFloat3, Unity.Reflect.Model.SyncFloat3)
        VB: Unity.Reflect.Model.SyncFloat3.Equality(Unity.Reflect.Model.SyncFloat3, Unity.Reflect.Model.SyncFloat3)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: op_Equality
        path: ''
        startLine: 937
      syntax:
        content:
          CSharp: public static bool operator ==(SyncFloat3 f1, SyncFloat3 f2)
          VB: Public Shared Operator =(f1 As SyncFloat3, f2 As SyncFloat3) As Boolean
        parameters:
        - id: f1
          type: Unity.Reflect.Model.SyncFloat3
        - id: f2
          type: Unity.Reflect.Model.SyncFloat3
        return:
          type: System.Boolean
      overload: Unity.Reflect.Model.SyncFloat3.op_Equality*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Unity.Reflect.Model.SyncFloat3.op_Inequality(Unity.Reflect.Model.SyncFloat3,Unity.Reflect.Model.SyncFloat3)
      commentId: M:Unity.Reflect.Model.SyncFloat3.op_Inequality(Unity.Reflect.Model.SyncFloat3,Unity.Reflect.Model.SyncFloat3)
      language: CSharp
      name:
        CSharp: Inequality(SyncFloat3, SyncFloat3)
        VB: Inequality(SyncFloat3, SyncFloat3)
      nameWithType:
        CSharp: SyncFloat3.Inequality(SyncFloat3, SyncFloat3)
        VB: SyncFloat3.Inequality(SyncFloat3, SyncFloat3)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncFloat3.Inequality(Unity.Reflect.Model.SyncFloat3, Unity.Reflect.Model.SyncFloat3)
        VB: Unity.Reflect.Model.SyncFloat3.Inequality(Unity.Reflect.Model.SyncFloat3, Unity.Reflect.Model.SyncFloat3)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: op_Inequality
        path: ''
        startLine: 948
      syntax:
        content:
          CSharp: public static bool operator !=(SyncFloat3 f1, SyncFloat3 f2)
          VB: Public Shared Operator <>(f1 As SyncFloat3, f2 As SyncFloat3) As Boolean
        parameters:
        - id: f1
          type: Unity.Reflect.Model.SyncFloat3
        - id: f2
          type: Unity.Reflect.Model.SyncFloat3
        return:
          type: System.Boolean
      overload: Unity.Reflect.Model.SyncFloat3.op_Inequality*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Unity.Reflect.Model.SyncFloat3.Parser
      commentId: P:Unity.Reflect.Model.SyncFloat3.Parser
      language: CSharp
      name:
        CSharp: Parser
        VB: Parser
      nameWithType:
        CSharp: SyncFloat3.Parser
        VB: SyncFloat3.Parser
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncFloat3.Parser
        VB: Unity.Reflect.Model.SyncFloat3.Parser
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Parser
        path: ''
        startLine: 4712
      syntax:
        content:
          CSharp: public static pb.MessageParser<SyncFloat3> Parser { get; }
          VB: Public Shared ReadOnly Property Parser As pb.MessageParser(Of SyncFloat3)
        parameters: []
        return:
          type: pb.MessageParser{Unity.Reflect.Model.SyncFloat3}
      overload: Unity.Reflect.Model.SyncFloat3.Parser*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Unity.Reflect.Model.SyncFloat3.Descriptor
      commentId: P:Unity.Reflect.Model.SyncFloat3.Descriptor
      language: CSharp
      name:
        CSharp: Descriptor
        VB: Descriptor
      nameWithType:
        CSharp: SyncFloat3.Descriptor
        VB: SyncFloat3.Descriptor
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncFloat3.Descriptor
        VB: Unity.Reflect.Model.SyncFloat3.Descriptor
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Descriptor
        path: ''
        startLine: 4715
      syntax:
        content:
          CSharp: public static pbr.MessageDescriptor Descriptor { get; }
          VB: Public Shared ReadOnly Property Descriptor As pbr.MessageDescriptor
        parameters: []
        return:
          type: pbr.MessageDescriptor
      overload: Unity.Reflect.Model.SyncFloat3.Descriptor*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Unity.Reflect.Model.SyncFloat3.#ctor
      commentId: M:Unity.Reflect.Model.SyncFloat3.#ctor
      language: CSharp
      name:
        CSharp: SyncFloat3()
        VB: SyncFloat3()
      nameWithType:
        CSharp: SyncFloat3.SyncFloat3()
        VB: SyncFloat3.SyncFloat3()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncFloat3.SyncFloat3()
        VB: Unity.Reflect.Model.SyncFloat3.SyncFloat3()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: .ctor
        path: ''
        startLine: 4725
      syntax:
        content:
          CSharp: public SyncFloat3()
          VB: Public Sub New
      overload: Unity.Reflect.Model.SyncFloat3.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncFloat3.#ctor(Unity.Reflect.Model.SyncFloat3)
      commentId: M:Unity.Reflect.Model.SyncFloat3.#ctor(Unity.Reflect.Model.SyncFloat3)
      language: CSharp
      name:
        CSharp: SyncFloat3(SyncFloat3)
        VB: SyncFloat3(SyncFloat3)
      nameWithType:
        CSharp: SyncFloat3.SyncFloat3(SyncFloat3)
        VB: SyncFloat3.SyncFloat3(SyncFloat3)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncFloat3.SyncFloat3(Unity.Reflect.Model.SyncFloat3)
        VB: Unity.Reflect.Model.SyncFloat3.SyncFloat3(Unity.Reflect.Model.SyncFloat3)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: .ctor
        path: ''
        startLine: 4732
      syntax:
        content:
          CSharp: public SyncFloat3(SyncFloat3 other)
          VB: Public Sub New(other As SyncFloat3)
        parameters:
        - id: other
          type: Unity.Reflect.Model.SyncFloat3
      overload: Unity.Reflect.Model.SyncFloat3.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncFloat3.Clone
      commentId: M:Unity.Reflect.Model.SyncFloat3.Clone
      language: CSharp
      name:
        CSharp: Clone()
        VB: Clone()
      nameWithType:
        CSharp: SyncFloat3.Clone()
        VB: SyncFloat3.Clone()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncFloat3.Clone()
        VB: Unity.Reflect.Model.SyncFloat3.Clone()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Clone
        path: ''
        startLine: 4740
      syntax:
        content:
          CSharp: public SyncFloat3 Clone()
          VB: Public Function Clone As SyncFloat3
        return:
          type: Unity.Reflect.Model.SyncFloat3
      overload: Unity.Reflect.Model.SyncFloat3.Clone*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncFloat3.XFieldNumber
      commentId: F:Unity.Reflect.Model.SyncFloat3.XFieldNumber
      language: CSharp
      name:
        CSharp: XFieldNumber
        VB: XFieldNumber
      nameWithType:
        CSharp: SyncFloat3.XFieldNumber
        VB: SyncFloat3.XFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncFloat3.XFieldNumber
        VB: Unity.Reflect.Model.SyncFloat3.XFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: XFieldNumber
        path: ''
        startLine: 4746
      summary: Field number for the &quot;x&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int XFieldNumber = 1
          VB: Public Const XFieldNumber As Integer = 1
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncFloat3.X
      commentId: P:Unity.Reflect.Model.SyncFloat3.X
      language: CSharp
      name:
        CSharp: X
        VB: X
      nameWithType:
        CSharp: SyncFloat3.X
        VB: SyncFloat3.X
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncFloat3.X
        VB: Unity.Reflect.Model.SyncFloat3.X
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: X
        path: ''
        startLine: 4748
      syntax:
        content:
          CSharp: public float X { get; set; }
          VB: Public Property X As Single
        parameters: []
        return:
          type: System.Single
      overload: Unity.Reflect.Model.SyncFloat3.X*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncFloat3.YFieldNumber
      commentId: F:Unity.Reflect.Model.SyncFloat3.YFieldNumber
      language: CSharp
      name:
        CSharp: YFieldNumber
        VB: YFieldNumber
      nameWithType:
        CSharp: SyncFloat3.YFieldNumber
        VB: SyncFloat3.YFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncFloat3.YFieldNumber
        VB: Unity.Reflect.Model.SyncFloat3.YFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: YFieldNumber
        path: ''
        startLine: 4757
      summary: Field number for the &quot;y&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int YFieldNumber = 2
          VB: Public Const YFieldNumber As Integer = 2
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncFloat3.Y
      commentId: P:Unity.Reflect.Model.SyncFloat3.Y
      language: CSharp
      name:
        CSharp: Y
        VB: Y
      nameWithType:
        CSharp: SyncFloat3.Y
        VB: SyncFloat3.Y
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncFloat3.Y
        VB: Unity.Reflect.Model.SyncFloat3.Y
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Y
        path: ''
        startLine: 4759
      syntax:
        content:
          CSharp: public float Y { get; set; }
          VB: Public Property Y As Single
        parameters: []
        return:
          type: System.Single
      overload: Unity.Reflect.Model.SyncFloat3.Y*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncFloat3.ZFieldNumber
      commentId: F:Unity.Reflect.Model.SyncFloat3.ZFieldNumber
      language: CSharp
      name:
        CSharp: ZFieldNumber
        VB: ZFieldNumber
      nameWithType:
        CSharp: SyncFloat3.ZFieldNumber
        VB: SyncFloat3.ZFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncFloat3.ZFieldNumber
        VB: Unity.Reflect.Model.SyncFloat3.ZFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: ZFieldNumber
        path: ''
        startLine: 4768
      summary: Field number for the &quot;z&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int ZFieldNumber = 3
          VB: Public Const ZFieldNumber As Integer = 3
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncFloat3.Z
      commentId: P:Unity.Reflect.Model.SyncFloat3.Z
      language: CSharp
      name:
        CSharp: Z
        VB: Z
      nameWithType:
        CSharp: SyncFloat3.Z
        VB: SyncFloat3.Z
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncFloat3.Z
        VB: Unity.Reflect.Model.SyncFloat3.Z
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Z
        path: ''
        startLine: 4770
      syntax:
        content:
          CSharp: public float Z { get; set; }
          VB: Public Property Z As Single
        parameters: []
        return:
          type: System.Single
      overload: Unity.Reflect.Model.SyncFloat3.Z*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncFloat3.Equals(System.Object)
      commentId: M:Unity.Reflect.Model.SyncFloat3.Equals(System.Object)
      language: CSharp
      name:
        CSharp: Equals(Object)
        VB: Equals(Object)
      nameWithType:
        CSharp: SyncFloat3.Equals(Object)
        VB: SyncFloat3.Equals(Object)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncFloat3.Equals(System.Object)
        VB: Unity.Reflect.Model.SyncFloat3.Equals(System.Object)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Equals
        path: ''
        startLine: 4778
      syntax:
        content:
          CSharp: public override bool Equals(object other)
          VB: Public Overrides Function Equals(other As Object) As Boolean
        parameters:
        - id: other
          type: System.Object
        return:
          type: System.Boolean
      overload: Unity.Reflect.Model.SyncFloat3.Equals*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.Model.SyncFloat3.Equals(Unity.Reflect.Model.SyncFloat3)
      commentId: M:Unity.Reflect.Model.SyncFloat3.Equals(Unity.Reflect.Model.SyncFloat3)
      language: CSharp
      name:
        CSharp: Equals(SyncFloat3)
        VB: Equals(SyncFloat3)
      nameWithType:
        CSharp: SyncFloat3.Equals(SyncFloat3)
        VB: SyncFloat3.Equals(SyncFloat3)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncFloat3.Equals(Unity.Reflect.Model.SyncFloat3)
        VB: Unity.Reflect.Model.SyncFloat3.Equals(Unity.Reflect.Model.SyncFloat3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Equals
        path: ''
        startLine: 4783
      syntax:
        content:
          CSharp: public bool Equals(SyncFloat3 other)
          VB: Public Function Equals(other As SyncFloat3) As Boolean
        parameters:
        - id: other
          type: Unity.Reflect.Model.SyncFloat3
        return:
          type: System.Boolean
      overload: Unity.Reflect.Model.SyncFloat3.Equals*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncFloat3.GetHashCode
      commentId: M:Unity.Reflect.Model.SyncFloat3.GetHashCode
      language: CSharp
      name:
        CSharp: GetHashCode()
        VB: GetHashCode()
      nameWithType:
        CSharp: SyncFloat3.GetHashCode()
        VB: SyncFloat3.GetHashCode()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncFloat3.GetHashCode()
        VB: Unity.Reflect.Model.SyncFloat3.GetHashCode()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: GetHashCode
        path: ''
        startLine: 4797
      syntax:
        content:
          CSharp: public override int GetHashCode()
          VB: Public Overrides Function GetHashCode As Integer
        return:
          type: System.Int32
      overload: Unity.Reflect.Model.SyncFloat3.GetHashCode*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.Model.SyncFloat3.ToString
      commentId: M:Unity.Reflect.Model.SyncFloat3.ToString
      language: CSharp
      name:
        CSharp: ToString()
        VB: ToString()
      nameWithType:
        CSharp: SyncFloat3.ToString()
        VB: SyncFloat3.ToString()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncFloat3.ToString()
        VB: Unity.Reflect.Model.SyncFloat3.ToString()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: ToString
        path: ''
        startLine: 4809
      syntax:
        content:
          CSharp: public override string ToString()
          VB: Public Overrides Function ToString As String
        return:
          type: System.String
      overload: Unity.Reflect.Model.SyncFloat3.ToString*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.Model.SyncFloat3.WriteTo(pb.CodedOutputStream)
      commentId: M:Unity.Reflect.Model.SyncFloat3.WriteTo(pb.CodedOutputStream)
      language: CSharp
      name:
        CSharp: WriteTo(pb.CodedOutputStream)
        VB: WriteTo(pb.CodedOutputStream)
      nameWithType:
        CSharp: SyncFloat3.WriteTo(pb.CodedOutputStream)
        VB: SyncFloat3.WriteTo(pb.CodedOutputStream)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncFloat3.WriteTo(pb.CodedOutputStream)
        VB: Unity.Reflect.Model.SyncFloat3.WriteTo(pb.CodedOutputStream)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: WriteTo
        path: ''
        startLine: 4814
      syntax:
        content:
          CSharp: public void WriteTo(pb.CodedOutputStream output)
          VB: Public Sub WriteTo(output As pb.CodedOutputStream)
        parameters:
        - id: output
          type: pb.CodedOutputStream
      overload: Unity.Reflect.Model.SyncFloat3.WriteTo*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncFloat3.CalculateSize
      commentId: M:Unity.Reflect.Model.SyncFloat3.CalculateSize
      language: CSharp
      name:
        CSharp: CalculateSize()
        VB: CalculateSize()
      nameWithType:
        CSharp: SyncFloat3.CalculateSize()
        VB: SyncFloat3.CalculateSize()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncFloat3.CalculateSize()
        VB: Unity.Reflect.Model.SyncFloat3.CalculateSize()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: CalculateSize
        path: ''
        startLine: 4833
      syntax:
        content:
          CSharp: public int CalculateSize()
          VB: Public Function CalculateSize As Integer
        return:
          type: System.Int32
      overload: Unity.Reflect.Model.SyncFloat3.CalculateSize*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncFloat3.MergeFrom(Unity.Reflect.Model.SyncFloat3)
      commentId: M:Unity.Reflect.Model.SyncFloat3.MergeFrom(Unity.Reflect.Model.SyncFloat3)
      language: CSharp
      name:
        CSharp: MergeFrom(SyncFloat3)
        VB: MergeFrom(SyncFloat3)
      nameWithType:
        CSharp: SyncFloat3.MergeFrom(SyncFloat3)
        VB: SyncFloat3.MergeFrom(SyncFloat3)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncFloat3.MergeFrom(Unity.Reflect.Model.SyncFloat3)
        VB: Unity.Reflect.Model.SyncFloat3.MergeFrom(Unity.Reflect.Model.SyncFloat3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: MergeFrom
        path: ''
        startLine: 4851
      syntax:
        content:
          CSharp: public void MergeFrom(SyncFloat3 other)
          VB: Public Sub MergeFrom(other As SyncFloat3)
        parameters:
        - id: other
          type: Unity.Reflect.Model.SyncFloat3
      overload: Unity.Reflect.Model.SyncFloat3.MergeFrom*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncFloat3.MergeFrom(pb.CodedInputStream)
      commentId: M:Unity.Reflect.Model.SyncFloat3.MergeFrom(pb.CodedInputStream)
      language: CSharp
      name:
        CSharp: MergeFrom(pb.CodedInputStream)
        VB: MergeFrom(pb.CodedInputStream)
      nameWithType:
        CSharp: SyncFloat3.MergeFrom(pb.CodedInputStream)
        VB: SyncFloat3.MergeFrom(pb.CodedInputStream)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncFloat3.MergeFrom(pb.CodedInputStream)
        VB: Unity.Reflect.Model.SyncFloat3.MergeFrom(pb.CodedInputStream)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: MergeFrom
        path: ''
        startLine: 4868
      syntax:
        content:
          CSharp: public void MergeFrom(pb.CodedInputStream input)
          VB: Public Sub MergeFrom(input As pb.CodedInputStream)
        parameters:
        - id: input
          type: pb.CodedInputStream
      overload: Unity.Reflect.Model.SyncFloat3.MergeFrom*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Unity.Reflect.Model.SyncFloat2
    commentId: T:Unity.Reflect.Model.SyncFloat2
    language: CSharp
    name:
      CSharp: SyncFloat2
      VB: SyncFloat2
    nameWithType:
      CSharp: SyncFloat2
      VB: SyncFloat2
    qualifiedName:
      CSharp: Unity.Reflect.Model.SyncFloat2
      VB: Unity.Reflect.Model.SyncFloat2
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect.Model
    source:
      id: SyncFloat2
      path: ''
      startLine: 4552
    syntax:
      content:
        CSharp: 'public sealed class SyncFloat2 : pb.IMessage<SyncFloat2>'
        VB: >-
          Public NotInheritable Class SyncFloat2

              Inherits pb.IMessage(Of SyncFloat2)
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - sealed
      - class
      VB:
      - Public
      - NotInheritable
      - Class
    items:
    - id: Unity.Reflect.Model.SyncFloat2.Zero
      commentId: M:Unity.Reflect.Model.SyncFloat2.Zero
      language: CSharp
      name:
        CSharp: Zero()
        VB: Zero()
      nameWithType:
        CSharp: SyncFloat2.Zero()
        VB: SyncFloat2.Zero()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncFloat2.Zero()
        VB: Unity.Reflect.Model.SyncFloat2.Zero()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Zero
        path: ''
        startLine: 956
      syntax:
        content:
          CSharp: public static SyncFloat2 Zero()
          VB: Public Shared Function Zero As SyncFloat2
        return:
          type: Unity.Reflect.Model.SyncFloat2
      overload: Unity.Reflect.Model.SyncFloat2.Zero*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Unity.Reflect.Model.SyncFloat2.One
      commentId: M:Unity.Reflect.Model.SyncFloat2.One
      language: CSharp
      name:
        CSharp: One()
        VB: One()
      nameWithType:
        CSharp: SyncFloat2.One()
        VB: SyncFloat2.One()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncFloat2.One()
        VB: Unity.Reflect.Model.SyncFloat2.One()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: One
        path: ''
        startLine: 957
      syntax:
        content:
          CSharp: public static SyncFloat2 One()
          VB: Public Shared Function One As SyncFloat2
        return:
          type: Unity.Reflect.Model.SyncFloat2
      overload: Unity.Reflect.Model.SyncFloat2.One*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Unity.Reflect.Model.SyncFloat2.op_Addition(Unity.Reflect.Model.SyncFloat2,Unity.Reflect.Model.SyncFloat2)
      commentId: M:Unity.Reflect.Model.SyncFloat2.op_Addition(Unity.Reflect.Model.SyncFloat2,Unity.Reflect.Model.SyncFloat2)
      language: CSharp
      name:
        CSharp: Addition(SyncFloat2, SyncFloat2)
        VB: Addition(SyncFloat2, SyncFloat2)
      nameWithType:
        CSharp: SyncFloat2.Addition(SyncFloat2, SyncFloat2)
        VB: SyncFloat2.Addition(SyncFloat2, SyncFloat2)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncFloat2.Addition(Unity.Reflect.Model.SyncFloat2, Unity.Reflect.Model.SyncFloat2)
        VB: Unity.Reflect.Model.SyncFloat2.Addition(Unity.Reflect.Model.SyncFloat2, Unity.Reflect.Model.SyncFloat2)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: op_Addition
        path: ''
        startLine: 959
      syntax:
        content:
          CSharp: public static SyncFloat2 operator +(SyncFloat2 left, SyncFloat2 right)
          VB: Public Shared Operator +(left As SyncFloat2, right As SyncFloat2) As SyncFloat2
        parameters:
        - id: left
          type: Unity.Reflect.Model.SyncFloat2
        - id: right
          type: Unity.Reflect.Model.SyncFloat2
        return:
          type: Unity.Reflect.Model.SyncFloat2
      overload: Unity.Reflect.Model.SyncFloat2.op_Addition*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Unity.Reflect.Model.SyncFloat2.op_Subtraction(Unity.Reflect.Model.SyncFloat2,Unity.Reflect.Model.SyncFloat2)
      commentId: M:Unity.Reflect.Model.SyncFloat2.op_Subtraction(Unity.Reflect.Model.SyncFloat2,Unity.Reflect.Model.SyncFloat2)
      language: CSharp
      name:
        CSharp: Subtraction(SyncFloat2, SyncFloat2)
        VB: Subtraction(SyncFloat2, SyncFloat2)
      nameWithType:
        CSharp: SyncFloat2.Subtraction(SyncFloat2, SyncFloat2)
        VB: SyncFloat2.Subtraction(SyncFloat2, SyncFloat2)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncFloat2.Subtraction(Unity.Reflect.Model.SyncFloat2, Unity.Reflect.Model.SyncFloat2)
        VB: Unity.Reflect.Model.SyncFloat2.Subtraction(Unity.Reflect.Model.SyncFloat2, Unity.Reflect.Model.SyncFloat2)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: op_Subtraction
        path: ''
        startLine: 968
      syntax:
        content:
          CSharp: public static SyncFloat2 operator -(SyncFloat2 left, SyncFloat2 right)
          VB: Public Shared Operator -(left As SyncFloat2, right As SyncFloat2) As SyncFloat2
        parameters:
        - id: left
          type: Unity.Reflect.Model.SyncFloat2
        - id: right
          type: Unity.Reflect.Model.SyncFloat2
        return:
          type: Unity.Reflect.Model.SyncFloat2
      overload: Unity.Reflect.Model.SyncFloat2.op_Subtraction*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Unity.Reflect.Model.SyncFloat2.op_Multiply(Unity.Reflect.Model.SyncFloat2,System.Single)
      commentId: M:Unity.Reflect.Model.SyncFloat2.op_Multiply(Unity.Reflect.Model.SyncFloat2,System.Single)
      language: CSharp
      name:
        CSharp: Multiply(SyncFloat2, Single)
        VB: Multiply(SyncFloat2, Single)
      nameWithType:
        CSharp: SyncFloat2.Multiply(SyncFloat2, Single)
        VB: SyncFloat2.Multiply(SyncFloat2, Single)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncFloat2.Multiply(Unity.Reflect.Model.SyncFloat2, System.Single)
        VB: Unity.Reflect.Model.SyncFloat2.Multiply(Unity.Reflect.Model.SyncFloat2, System.Single)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: op_Multiply
        path: ''
        startLine: 973
      syntax:
        content:
          CSharp: public static SyncFloat2 operator *(SyncFloat2 left, float right)
          VB: Public Shared Operator *(left As SyncFloat2, right As Single) As SyncFloat2
        parameters:
        - id: left
          type: Unity.Reflect.Model.SyncFloat2
        - id: right
          type: System.Single
        return:
          type: Unity.Reflect.Model.SyncFloat2
      overload: Unity.Reflect.Model.SyncFloat2.op_Multiply*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Unity.Reflect.Model.SyncFloat2.op_Multiply(System.Single,Unity.Reflect.Model.SyncFloat2)
      commentId: M:Unity.Reflect.Model.SyncFloat2.op_Multiply(System.Single,Unity.Reflect.Model.SyncFloat2)
      language: CSharp
      name:
        CSharp: Multiply(Single, SyncFloat2)
        VB: Multiply(Single, SyncFloat2)
      nameWithType:
        CSharp: SyncFloat2.Multiply(Single, SyncFloat2)
        VB: SyncFloat2.Multiply(Single, SyncFloat2)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncFloat2.Multiply(System.Single, Unity.Reflect.Model.SyncFloat2)
        VB: Unity.Reflect.Model.SyncFloat2.Multiply(System.Single, Unity.Reflect.Model.SyncFloat2)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: op_Multiply
        path: ''
        startLine: 982
      syntax:
        content:
          CSharp: public static SyncFloat2 operator *(float left, SyncFloat2 right)
          VB: Public Shared Operator *(left As Single, right As SyncFloat2) As SyncFloat2
        parameters:
        - id: left
          type: System.Single
        - id: right
          type: Unity.Reflect.Model.SyncFloat2
        return:
          type: Unity.Reflect.Model.SyncFloat2
      overload: Unity.Reflect.Model.SyncFloat2.op_Multiply*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Unity.Reflect.Model.SyncFloat2.op_Multiply(Unity.Reflect.Model.SyncFloat2,Unity.Reflect.Model.SyncFloat2)
      commentId: M:Unity.Reflect.Model.SyncFloat2.op_Multiply(Unity.Reflect.Model.SyncFloat2,Unity.Reflect.Model.SyncFloat2)
      language: CSharp
      name:
        CSharp: Multiply(SyncFloat2, SyncFloat2)
        VB: Multiply(SyncFloat2, SyncFloat2)
      nameWithType:
        CSharp: SyncFloat2.Multiply(SyncFloat2, SyncFloat2)
        VB: SyncFloat2.Multiply(SyncFloat2, SyncFloat2)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncFloat2.Multiply(Unity.Reflect.Model.SyncFloat2, Unity.Reflect.Model.SyncFloat2)
        VB: Unity.Reflect.Model.SyncFloat2.Multiply(Unity.Reflect.Model.SyncFloat2, Unity.Reflect.Model.SyncFloat2)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: op_Multiply
        path: ''
        startLine: 987
      syntax:
        content:
          CSharp: public static SyncFloat2 operator *(SyncFloat2 left, SyncFloat2 right)
          VB: Public Shared Operator *(left As SyncFloat2, right As SyncFloat2) As SyncFloat2
        parameters:
        - id: left
          type: Unity.Reflect.Model.SyncFloat2
        - id: right
          type: Unity.Reflect.Model.SyncFloat2
        return:
          type: Unity.Reflect.Model.SyncFloat2
      overload: Unity.Reflect.Model.SyncFloat2.op_Multiply*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Unity.Reflect.Model.SyncFloat2.op_Division(Unity.Reflect.Model.SyncFloat2,System.Single)
      commentId: M:Unity.Reflect.Model.SyncFloat2.op_Division(Unity.Reflect.Model.SyncFloat2,System.Single)
      language: CSharp
      name:
        CSharp: Division(SyncFloat2, Single)
        VB: Division(SyncFloat2, Single)
      nameWithType:
        CSharp: SyncFloat2.Division(SyncFloat2, Single)
        VB: SyncFloat2.Division(SyncFloat2, Single)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncFloat2.Division(Unity.Reflect.Model.SyncFloat2, System.Single)
        VB: Unity.Reflect.Model.SyncFloat2.Division(Unity.Reflect.Model.SyncFloat2, System.Single)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: op_Division
        path: ''
        startLine: 996
      syntax:
        content:
          CSharp: public static SyncFloat2 operator /(SyncFloat2 left, float right)
          VB: Public Shared Operator /(left As SyncFloat2, right As Single) As SyncFloat2
        parameters:
        - id: left
          type: Unity.Reflect.Model.SyncFloat2
        - id: right
          type: System.Single
        return:
          type: Unity.Reflect.Model.SyncFloat2
      overload: Unity.Reflect.Model.SyncFloat2.op_Division*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Unity.Reflect.Model.SyncFloat2.Dot(Unity.Reflect.Model.SyncFloat2)
      commentId: M:Unity.Reflect.Model.SyncFloat2.Dot(Unity.Reflect.Model.SyncFloat2)
      language: CSharp
      name:
        CSharp: Dot(SyncFloat2)
        VB: Dot(SyncFloat2)
      nameWithType:
        CSharp: SyncFloat2.Dot(SyncFloat2)
        VB: SyncFloat2.Dot(SyncFloat2)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncFloat2.Dot(Unity.Reflect.Model.SyncFloat2)
        VB: Unity.Reflect.Model.SyncFloat2.Dot(Unity.Reflect.Model.SyncFloat2)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Dot
        path: ''
        startLine: 1001
      syntax:
        content:
          CSharp: public float Dot(SyncFloat2 other)
          VB: Public Function Dot(other As SyncFloat2) As Single
        parameters:
        - id: other
          type: Unity.Reflect.Model.SyncFloat2
        return:
          type: System.Single
      overload: Unity.Reflect.Model.SyncFloat2.Dot*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncFloat2.#ctor(System.Single,System.Single)
      commentId: M:Unity.Reflect.Model.SyncFloat2.#ctor(System.Single,System.Single)
      language: CSharp
      name:
        CSharp: SyncFloat2(Single, Single)
        VB: SyncFloat2(Single, Single)
      nameWithType:
        CSharp: SyncFloat2.SyncFloat2(Single, Single)
        VB: SyncFloat2.SyncFloat2(Single, Single)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncFloat2.SyncFloat2(System.Single, System.Single)
        VB: Unity.Reflect.Model.SyncFloat2.SyncFloat2(System.Single, System.Single)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: .ctor
        path: ''
        startLine: 1006
      syntax:
        content:
          CSharp: public SyncFloat2(float x, float y)
          VB: Public Sub New(x As Single, y As Single)
        parameters:
        - id: x
          type: System.Single
        - id: y
          type: System.Single
      overload: Unity.Reflect.Model.SyncFloat2.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncFloat2.op_Equality(Unity.Reflect.Model.SyncFloat2,Unity.Reflect.Model.SyncFloat2)
      commentId: M:Unity.Reflect.Model.SyncFloat2.op_Equality(Unity.Reflect.Model.SyncFloat2,Unity.Reflect.Model.SyncFloat2)
      language: CSharp
      name:
        CSharp: Equality(SyncFloat2, SyncFloat2)
        VB: Equality(SyncFloat2, SyncFloat2)
      nameWithType:
        CSharp: SyncFloat2.Equality(SyncFloat2, SyncFloat2)
        VB: SyncFloat2.Equality(SyncFloat2, SyncFloat2)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncFloat2.Equality(Unity.Reflect.Model.SyncFloat2, Unity.Reflect.Model.SyncFloat2)
        VB: Unity.Reflect.Model.SyncFloat2.Equality(Unity.Reflect.Model.SyncFloat2, Unity.Reflect.Model.SyncFloat2)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: op_Equality
        path: ''
        startLine: 1012
      syntax:
        content:
          CSharp: public static bool operator ==(SyncFloat2 f1, SyncFloat2 f2)
          VB: Public Shared Operator =(f1 As SyncFloat2, f2 As SyncFloat2) As Boolean
        parameters:
        - id: f1
          type: Unity.Reflect.Model.SyncFloat2
        - id: f2
          type: Unity.Reflect.Model.SyncFloat2
        return:
          type: System.Boolean
      overload: Unity.Reflect.Model.SyncFloat2.op_Equality*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Unity.Reflect.Model.SyncFloat2.op_Inequality(Unity.Reflect.Model.SyncFloat2,Unity.Reflect.Model.SyncFloat2)
      commentId: M:Unity.Reflect.Model.SyncFloat2.op_Inequality(Unity.Reflect.Model.SyncFloat2,Unity.Reflect.Model.SyncFloat2)
      language: CSharp
      name:
        CSharp: Inequality(SyncFloat2, SyncFloat2)
        VB: Inequality(SyncFloat2, SyncFloat2)
      nameWithType:
        CSharp: SyncFloat2.Inequality(SyncFloat2, SyncFloat2)
        VB: SyncFloat2.Inequality(SyncFloat2, SyncFloat2)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncFloat2.Inequality(Unity.Reflect.Model.SyncFloat2, Unity.Reflect.Model.SyncFloat2)
        VB: Unity.Reflect.Model.SyncFloat2.Inequality(Unity.Reflect.Model.SyncFloat2, Unity.Reflect.Model.SyncFloat2)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: op_Inequality
        path: ''
        startLine: 1023
      syntax:
        content:
          CSharp: public static bool operator !=(SyncFloat2 f1, SyncFloat2 f2)
          VB: Public Shared Operator <>(f1 As SyncFloat2, f2 As SyncFloat2) As Boolean
        parameters:
        - id: f1
          type: Unity.Reflect.Model.SyncFloat2
        - id: f2
          type: Unity.Reflect.Model.SyncFloat2
        return:
          type: System.Boolean
      overload: Unity.Reflect.Model.SyncFloat2.op_Inequality*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Unity.Reflect.Model.SyncFloat2.Parser
      commentId: P:Unity.Reflect.Model.SyncFloat2.Parser
      language: CSharp
      name:
        CSharp: Parser
        VB: Parser
      nameWithType:
        CSharp: SyncFloat2.Parser
        VB: SyncFloat2.Parser
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncFloat2.Parser
        VB: Unity.Reflect.Model.SyncFloat2.Parser
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Parser
        path: ''
        startLine: 4555
      syntax:
        content:
          CSharp: public static pb.MessageParser<SyncFloat2> Parser { get; }
          VB: Public Shared ReadOnly Property Parser As pb.MessageParser(Of SyncFloat2)
        parameters: []
        return:
          type: pb.MessageParser{Unity.Reflect.Model.SyncFloat2}
      overload: Unity.Reflect.Model.SyncFloat2.Parser*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Unity.Reflect.Model.SyncFloat2.Descriptor
      commentId: P:Unity.Reflect.Model.SyncFloat2.Descriptor
      language: CSharp
      name:
        CSharp: Descriptor
        VB: Descriptor
      nameWithType:
        CSharp: SyncFloat2.Descriptor
        VB: SyncFloat2.Descriptor
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncFloat2.Descriptor
        VB: Unity.Reflect.Model.SyncFloat2.Descriptor
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Descriptor
        path: ''
        startLine: 4558
      syntax:
        content:
          CSharp: public static pbr.MessageDescriptor Descriptor { get; }
          VB: Public Shared ReadOnly Property Descriptor As pbr.MessageDescriptor
        parameters: []
        return:
          type: pbr.MessageDescriptor
      overload: Unity.Reflect.Model.SyncFloat2.Descriptor*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Unity.Reflect.Model.SyncFloat2.#ctor
      commentId: M:Unity.Reflect.Model.SyncFloat2.#ctor
      language: CSharp
      name:
        CSharp: SyncFloat2()
        VB: SyncFloat2()
      nameWithType:
        CSharp: SyncFloat2.SyncFloat2()
        VB: SyncFloat2.SyncFloat2()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncFloat2.SyncFloat2()
        VB: Unity.Reflect.Model.SyncFloat2.SyncFloat2()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: .ctor
        path: ''
        startLine: 4568
      syntax:
        content:
          CSharp: public SyncFloat2()
          VB: Public Sub New
      overload: Unity.Reflect.Model.SyncFloat2.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncFloat2.#ctor(Unity.Reflect.Model.SyncFloat2)
      commentId: M:Unity.Reflect.Model.SyncFloat2.#ctor(Unity.Reflect.Model.SyncFloat2)
      language: CSharp
      name:
        CSharp: SyncFloat2(SyncFloat2)
        VB: SyncFloat2(SyncFloat2)
      nameWithType:
        CSharp: SyncFloat2.SyncFloat2(SyncFloat2)
        VB: SyncFloat2.SyncFloat2(SyncFloat2)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncFloat2.SyncFloat2(Unity.Reflect.Model.SyncFloat2)
        VB: Unity.Reflect.Model.SyncFloat2.SyncFloat2(Unity.Reflect.Model.SyncFloat2)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: .ctor
        path: ''
        startLine: 4575
      syntax:
        content:
          CSharp: public SyncFloat2(SyncFloat2 other)
          VB: Public Sub New(other As SyncFloat2)
        parameters:
        - id: other
          type: Unity.Reflect.Model.SyncFloat2
      overload: Unity.Reflect.Model.SyncFloat2.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncFloat2.Clone
      commentId: M:Unity.Reflect.Model.SyncFloat2.Clone
      language: CSharp
      name:
        CSharp: Clone()
        VB: Clone()
      nameWithType:
        CSharp: SyncFloat2.Clone()
        VB: SyncFloat2.Clone()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncFloat2.Clone()
        VB: Unity.Reflect.Model.SyncFloat2.Clone()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Clone
        path: ''
        startLine: 4582
      syntax:
        content:
          CSharp: public SyncFloat2 Clone()
          VB: Public Function Clone As SyncFloat2
        return:
          type: Unity.Reflect.Model.SyncFloat2
      overload: Unity.Reflect.Model.SyncFloat2.Clone*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncFloat2.XFieldNumber
      commentId: F:Unity.Reflect.Model.SyncFloat2.XFieldNumber
      language: CSharp
      name:
        CSharp: XFieldNumber
        VB: XFieldNumber
      nameWithType:
        CSharp: SyncFloat2.XFieldNumber
        VB: SyncFloat2.XFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncFloat2.XFieldNumber
        VB: Unity.Reflect.Model.SyncFloat2.XFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: XFieldNumber
        path: ''
        startLine: 4588
      summary: Field number for the &quot;x&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int XFieldNumber = 1
          VB: Public Const XFieldNumber As Integer = 1
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncFloat2.X
      commentId: P:Unity.Reflect.Model.SyncFloat2.X
      language: CSharp
      name:
        CSharp: X
        VB: X
      nameWithType:
        CSharp: SyncFloat2.X
        VB: SyncFloat2.X
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncFloat2.X
        VB: Unity.Reflect.Model.SyncFloat2.X
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: X
        path: ''
        startLine: 4590
      syntax:
        content:
          CSharp: public float X { get; set; }
          VB: Public Property X As Single
        parameters: []
        return:
          type: System.Single
      overload: Unity.Reflect.Model.SyncFloat2.X*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncFloat2.YFieldNumber
      commentId: F:Unity.Reflect.Model.SyncFloat2.YFieldNumber
      language: CSharp
      name:
        CSharp: YFieldNumber
        VB: YFieldNumber
      nameWithType:
        CSharp: SyncFloat2.YFieldNumber
        VB: SyncFloat2.YFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncFloat2.YFieldNumber
        VB: Unity.Reflect.Model.SyncFloat2.YFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: YFieldNumber
        path: ''
        startLine: 4599
      summary: Field number for the &quot;y&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int YFieldNumber = 2
          VB: Public Const YFieldNumber As Integer = 2
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncFloat2.Y
      commentId: P:Unity.Reflect.Model.SyncFloat2.Y
      language: CSharp
      name:
        CSharp: Y
        VB: Y
      nameWithType:
        CSharp: SyncFloat2.Y
        VB: SyncFloat2.Y
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncFloat2.Y
        VB: Unity.Reflect.Model.SyncFloat2.Y
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Y
        path: ''
        startLine: 4601
      syntax:
        content:
          CSharp: public float Y { get; set; }
          VB: Public Property Y As Single
        parameters: []
        return:
          type: System.Single
      overload: Unity.Reflect.Model.SyncFloat2.Y*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncFloat2.Equals(System.Object)
      commentId: M:Unity.Reflect.Model.SyncFloat2.Equals(System.Object)
      language: CSharp
      name:
        CSharp: Equals(Object)
        VB: Equals(Object)
      nameWithType:
        CSharp: SyncFloat2.Equals(Object)
        VB: SyncFloat2.Equals(Object)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncFloat2.Equals(System.Object)
        VB: Unity.Reflect.Model.SyncFloat2.Equals(System.Object)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Equals
        path: ''
        startLine: 4609
      syntax:
        content:
          CSharp: public override bool Equals(object other)
          VB: Public Overrides Function Equals(other As Object) As Boolean
        parameters:
        - id: other
          type: System.Object
        return:
          type: System.Boolean
      overload: Unity.Reflect.Model.SyncFloat2.Equals*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.Model.SyncFloat2.Equals(Unity.Reflect.Model.SyncFloat2)
      commentId: M:Unity.Reflect.Model.SyncFloat2.Equals(Unity.Reflect.Model.SyncFloat2)
      language: CSharp
      name:
        CSharp: Equals(SyncFloat2)
        VB: Equals(SyncFloat2)
      nameWithType:
        CSharp: SyncFloat2.Equals(SyncFloat2)
        VB: SyncFloat2.Equals(SyncFloat2)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncFloat2.Equals(Unity.Reflect.Model.SyncFloat2)
        VB: Unity.Reflect.Model.SyncFloat2.Equals(Unity.Reflect.Model.SyncFloat2)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Equals
        path: ''
        startLine: 4614
      syntax:
        content:
          CSharp: public bool Equals(SyncFloat2 other)
          VB: Public Function Equals(other As SyncFloat2) As Boolean
        parameters:
        - id: other
          type: Unity.Reflect.Model.SyncFloat2
        return:
          type: System.Boolean
      overload: Unity.Reflect.Model.SyncFloat2.Equals*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncFloat2.GetHashCode
      commentId: M:Unity.Reflect.Model.SyncFloat2.GetHashCode
      language: CSharp
      name:
        CSharp: GetHashCode()
        VB: GetHashCode()
      nameWithType:
        CSharp: SyncFloat2.GetHashCode()
        VB: SyncFloat2.GetHashCode()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncFloat2.GetHashCode()
        VB: Unity.Reflect.Model.SyncFloat2.GetHashCode()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: GetHashCode
        path: ''
        startLine: 4627
      syntax:
        content:
          CSharp: public override int GetHashCode()
          VB: Public Overrides Function GetHashCode As Integer
        return:
          type: System.Int32
      overload: Unity.Reflect.Model.SyncFloat2.GetHashCode*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.Model.SyncFloat2.ToString
      commentId: M:Unity.Reflect.Model.SyncFloat2.ToString
      language: CSharp
      name:
        CSharp: ToString()
        VB: ToString()
      nameWithType:
        CSharp: SyncFloat2.ToString()
        VB: SyncFloat2.ToString()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncFloat2.ToString()
        VB: Unity.Reflect.Model.SyncFloat2.ToString()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: ToString
        path: ''
        startLine: 4638
      syntax:
        content:
          CSharp: public override string ToString()
          VB: Public Overrides Function ToString As String
        return:
          type: System.String
      overload: Unity.Reflect.Model.SyncFloat2.ToString*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.Model.SyncFloat2.WriteTo(pb.CodedOutputStream)
      commentId: M:Unity.Reflect.Model.SyncFloat2.WriteTo(pb.CodedOutputStream)
      language: CSharp
      name:
        CSharp: WriteTo(pb.CodedOutputStream)
        VB: WriteTo(pb.CodedOutputStream)
      nameWithType:
        CSharp: SyncFloat2.WriteTo(pb.CodedOutputStream)
        VB: SyncFloat2.WriteTo(pb.CodedOutputStream)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncFloat2.WriteTo(pb.CodedOutputStream)
        VB: Unity.Reflect.Model.SyncFloat2.WriteTo(pb.CodedOutputStream)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: WriteTo
        path: ''
        startLine: 4643
      syntax:
        content:
          CSharp: public void WriteTo(pb.CodedOutputStream output)
          VB: Public Sub WriteTo(output As pb.CodedOutputStream)
        parameters:
        - id: output
          type: pb.CodedOutputStream
      overload: Unity.Reflect.Model.SyncFloat2.WriteTo*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncFloat2.CalculateSize
      commentId: M:Unity.Reflect.Model.SyncFloat2.CalculateSize
      language: CSharp
      name:
        CSharp: CalculateSize()
        VB: CalculateSize()
      nameWithType:
        CSharp: SyncFloat2.CalculateSize()
        VB: SyncFloat2.CalculateSize()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncFloat2.CalculateSize()
        VB: Unity.Reflect.Model.SyncFloat2.CalculateSize()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: CalculateSize
        path: ''
        startLine: 4658
      syntax:
        content:
          CSharp: public int CalculateSize()
          VB: Public Function CalculateSize As Integer
        return:
          type: System.Int32
      overload: Unity.Reflect.Model.SyncFloat2.CalculateSize*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncFloat2.MergeFrom(Unity.Reflect.Model.SyncFloat2)
      commentId: M:Unity.Reflect.Model.SyncFloat2.MergeFrom(Unity.Reflect.Model.SyncFloat2)
      language: CSharp
      name:
        CSharp: MergeFrom(SyncFloat2)
        VB: MergeFrom(SyncFloat2)
      nameWithType:
        CSharp: SyncFloat2.MergeFrom(SyncFloat2)
        VB: SyncFloat2.MergeFrom(SyncFloat2)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncFloat2.MergeFrom(Unity.Reflect.Model.SyncFloat2)
        VB: Unity.Reflect.Model.SyncFloat2.MergeFrom(Unity.Reflect.Model.SyncFloat2)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: MergeFrom
        path: ''
        startLine: 4673
      syntax:
        content:
          CSharp: public void MergeFrom(SyncFloat2 other)
          VB: Public Sub MergeFrom(other As SyncFloat2)
        parameters:
        - id: other
          type: Unity.Reflect.Model.SyncFloat2
      overload: Unity.Reflect.Model.SyncFloat2.MergeFrom*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncFloat2.MergeFrom(pb.CodedInputStream)
      commentId: M:Unity.Reflect.Model.SyncFloat2.MergeFrom(pb.CodedInputStream)
      language: CSharp
      name:
        CSharp: MergeFrom(pb.CodedInputStream)
        VB: MergeFrom(pb.CodedInputStream)
      nameWithType:
        CSharp: SyncFloat2.MergeFrom(pb.CodedInputStream)
        VB: SyncFloat2.MergeFrom(pb.CodedInputStream)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncFloat2.MergeFrom(pb.CodedInputStream)
        VB: Unity.Reflect.Model.SyncFloat2.MergeFrom(pb.CodedInputStream)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: MergeFrom
        path: ''
        startLine: 4687
      syntax:
        content:
          CSharp: public void MergeFrom(pb.CodedInputStream input)
          VB: Public Sub MergeFrom(input As pb.CodedInputStream)
        parameters:
        - id: input
          type: pb.CodedInputStream
      overload: Unity.Reflect.Model.SyncFloat2.MergeFrom*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Unity.Reflect.Model.SyncQuaternion
    commentId: T:Unity.Reflect.Model.SyncQuaternion
    language: CSharp
    name:
      CSharp: SyncQuaternion
      VB: SyncQuaternion
    nameWithType:
      CSharp: SyncQuaternion
      VB: SyncQuaternion
    qualifiedName:
      CSharp: Unity.Reflect.Model.SyncQuaternion
      VB: Unity.Reflect.Model.SyncQuaternion
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect.Model
    source:
      id: SyncQuaternion
      path: ''
      startLine: 5107
    syntax:
      content:
        CSharp: 'public sealed class SyncQuaternion : pb.IMessage<SyncQuaternion>'
        VB: >-
          Public NotInheritable Class SyncQuaternion

              Inherits pb.IMessage(Of SyncQuaternion)
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - sealed
      - class
      VB:
      - Public
      - NotInheritable
      - Class
    items:
    - id: Unity.Reflect.Model.SyncQuaternion.Identity
      commentId: M:Unity.Reflect.Model.SyncQuaternion.Identity
      language: CSharp
      name:
        CSharp: Identity()
        VB: Identity()
      nameWithType:
        CSharp: SyncQuaternion.Identity()
        VB: SyncQuaternion.Identity()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncQuaternion.Identity()
        VB: Unity.Reflect.Model.SyncQuaternion.Identity()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Identity
        path: ''
        startLine: 1031
      syntax:
        content:
          CSharp: public static SyncQuaternion Identity()
          VB: Public Shared Function Identity As SyncQuaternion
        return:
          type: Unity.Reflect.Model.SyncQuaternion
      overload: Unity.Reflect.Model.SyncQuaternion.Identity*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Unity.Reflect.Model.SyncQuaternion.RotateX(System.Single)
      commentId: M:Unity.Reflect.Model.SyncQuaternion.RotateX(System.Single)
      language: CSharp
      name:
        CSharp: RotateX(Single)
        VB: RotateX(Single)
      nameWithType:
        CSharp: SyncQuaternion.RotateX(Single)
        VB: SyncQuaternion.RotateX(Single)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncQuaternion.RotateX(System.Single)
        VB: Unity.Reflect.Model.SyncQuaternion.RotateX(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: RotateX
        path: ''
        startLine: 1033
      syntax:
        content:
          CSharp: public static SyncQuaternion RotateX(float angleRadian)
          VB: Public Shared Function RotateX(angleRadian As Single) As SyncQuaternion
        parameters:
        - id: angleRadian
          type: System.Single
        return:
          type: Unity.Reflect.Model.SyncQuaternion
      overload: Unity.Reflect.Model.SyncQuaternion.RotateX*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Unity.Reflect.Model.SyncQuaternion.#ctor(System.Single,System.Single,System.Single,System.Single)
      commentId: M:Unity.Reflect.Model.SyncQuaternion.#ctor(System.Single,System.Single,System.Single,System.Single)
      language: CSharp
      name:
        CSharp: SyncQuaternion(Single, Single, Single, Single)
        VB: SyncQuaternion(Single, Single, Single, Single)
      nameWithType:
        CSharp: SyncQuaternion.SyncQuaternion(Single, Single, Single, Single)
        VB: SyncQuaternion.SyncQuaternion(Single, Single, Single, Single)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncQuaternion.SyncQuaternion(System.Single, System.Single, System.Single, System.Single)
        VB: Unity.Reflect.Model.SyncQuaternion.SyncQuaternion(System.Single, System.Single, System.Single, System.Single)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: .ctor
        path: ''
        startLine: 1040
      syntax:
        content:
          CSharp: public SyncQuaternion(float x, float y, float z, float w)
          VB: Public Sub New(x As Single, y As Single, z As Single, w As Single)
        parameters:
        - id: x
          type: System.Single
        - id: y
          type: System.Single
        - id: z
          type: System.Single
        - id: w
          type: System.Single
      overload: Unity.Reflect.Model.SyncQuaternion.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncQuaternion.op_Multiply(Unity.Reflect.Model.SyncQuaternion,Unity.Reflect.Model.SyncQuaternion)
      commentId: M:Unity.Reflect.Model.SyncQuaternion.op_Multiply(Unity.Reflect.Model.SyncQuaternion,Unity.Reflect.Model.SyncQuaternion)
      language: CSharp
      name:
        CSharp: Multiply(SyncQuaternion, SyncQuaternion)
        VB: Multiply(SyncQuaternion, SyncQuaternion)
      nameWithType:
        CSharp: SyncQuaternion.Multiply(SyncQuaternion, SyncQuaternion)
        VB: SyncQuaternion.Multiply(SyncQuaternion, SyncQuaternion)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncQuaternion.Multiply(Unity.Reflect.Model.SyncQuaternion, Unity.Reflect.Model.SyncQuaternion)
        VB: Unity.Reflect.Model.SyncQuaternion.Multiply(Unity.Reflect.Model.SyncQuaternion, Unity.Reflect.Model.SyncQuaternion)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: op_Multiply
        path: ''
        startLine: 1048
      syntax:
        content:
          CSharp: public static SyncQuaternion operator *(SyncQuaternion left, SyncQuaternion right)
          VB: Public Shared Operator *(left As SyncQuaternion, right As SyncQuaternion) As SyncQuaternion
        parameters:
        - id: left
          type: Unity.Reflect.Model.SyncQuaternion
        - id: right
          type: Unity.Reflect.Model.SyncQuaternion
        return:
          type: Unity.Reflect.Model.SyncQuaternion
      overload: Unity.Reflect.Model.SyncQuaternion.op_Multiply*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Unity.Reflect.Model.SyncQuaternion.Inverse(Unity.Reflect.Model.SyncQuaternion)
      commentId: M:Unity.Reflect.Model.SyncQuaternion.Inverse(Unity.Reflect.Model.SyncQuaternion)
      language: CSharp
      name:
        CSharp: Inverse(SyncQuaternion)
        VB: Inverse(SyncQuaternion)
      nameWithType:
        CSharp: SyncQuaternion.Inverse(SyncQuaternion)
        VB: SyncQuaternion.Inverse(SyncQuaternion)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncQuaternion.Inverse(Unity.Reflect.Model.SyncQuaternion)
        VB: Unity.Reflect.Model.SyncQuaternion.Inverse(Unity.Reflect.Model.SyncQuaternion)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Inverse
        path: ''
        startLine: 1058
      syntax:
        content:
          CSharp: public static SyncQuaternion Inverse(SyncQuaternion q)
          VB: Public Shared Function Inverse(q As SyncQuaternion) As SyncQuaternion
        parameters:
        - id: q
          type: Unity.Reflect.Model.SyncQuaternion
        return:
          type: Unity.Reflect.Model.SyncQuaternion
      overload: Unity.Reflect.Model.SyncQuaternion.Inverse*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Unity.Reflect.Model.SyncQuaternion.op_Multiply(Unity.Reflect.Model.SyncQuaternion,Unity.Reflect.Model.SyncFloat3)
      commentId: M:Unity.Reflect.Model.SyncQuaternion.op_Multiply(Unity.Reflect.Model.SyncQuaternion,Unity.Reflect.Model.SyncFloat3)
      language: CSharp
      name:
        CSharp: Multiply(SyncQuaternion, SyncFloat3)
        VB: Multiply(SyncQuaternion, SyncFloat3)
      nameWithType:
        CSharp: SyncQuaternion.Multiply(SyncQuaternion, SyncFloat3)
        VB: SyncQuaternion.Multiply(SyncQuaternion, SyncFloat3)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncQuaternion.Multiply(Unity.Reflect.Model.SyncQuaternion, Unity.Reflect.Model.SyncFloat3)
        VB: Unity.Reflect.Model.SyncQuaternion.Multiply(Unity.Reflect.Model.SyncQuaternion, Unity.Reflect.Model.SyncFloat3)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: op_Multiply
        path: ''
        startLine: 1063
      syntax:
        content:
          CSharp: public static SyncFloat3 operator *(SyncQuaternion q, SyncFloat3 v)
          VB: Public Shared Operator *(q As SyncQuaternion, v As SyncFloat3) As SyncFloat3
        parameters:
        - id: q
          type: Unity.Reflect.Model.SyncQuaternion
        - id: v
          type: Unity.Reflect.Model.SyncFloat3
        return:
          type: Unity.Reflect.Model.SyncFloat3
      overload: Unity.Reflect.Model.SyncQuaternion.op_Multiply*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Unity.Reflect.Model.SyncQuaternion.Normalize(Unity.Reflect.Model.SyncQuaternion)
      commentId: M:Unity.Reflect.Model.SyncQuaternion.Normalize(Unity.Reflect.Model.SyncQuaternion)
      language: CSharp
      name:
        CSharp: Normalize(SyncQuaternion)
        VB: Normalize(SyncQuaternion)
      nameWithType:
        CSharp: SyncQuaternion.Normalize(SyncQuaternion)
        VB: SyncQuaternion.Normalize(SyncQuaternion)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncQuaternion.Normalize(Unity.Reflect.Model.SyncQuaternion)
        VB: Unity.Reflect.Model.SyncQuaternion.Normalize(Unity.Reflect.Model.SyncQuaternion)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Normalize
        path: ''
        startLine: 1070
      syntax:
        content:
          CSharp: public static SyncQuaternion Normalize(SyncQuaternion q)
          VB: Public Shared Function Normalize(q As SyncQuaternion) As SyncQuaternion
        parameters:
        - id: q
          type: Unity.Reflect.Model.SyncQuaternion
        return:
          type: Unity.Reflect.Model.SyncQuaternion
      overload: Unity.Reflect.Model.SyncQuaternion.Normalize*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Unity.Reflect.Model.SyncQuaternion.Dot(Unity.Reflect.Model.SyncQuaternion,Unity.Reflect.Model.SyncQuaternion)
      commentId: M:Unity.Reflect.Model.SyncQuaternion.Dot(Unity.Reflect.Model.SyncQuaternion,Unity.Reflect.Model.SyncQuaternion)
      language: CSharp
      name:
        CSharp: Dot(SyncQuaternion, SyncQuaternion)
        VB: Dot(SyncQuaternion, SyncQuaternion)
      nameWithType:
        CSharp: SyncQuaternion.Dot(SyncQuaternion, SyncQuaternion)
        VB: SyncQuaternion.Dot(SyncQuaternion, SyncQuaternion)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncQuaternion.Dot(Unity.Reflect.Model.SyncQuaternion, Unity.Reflect.Model.SyncQuaternion)
        VB: Unity.Reflect.Model.SyncQuaternion.Dot(Unity.Reflect.Model.SyncQuaternion, Unity.Reflect.Model.SyncQuaternion)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Dot
        path: ''
        startLine: 1076
      syntax:
        content:
          CSharp: public static float Dot(SyncQuaternion a, SyncQuaternion b)
          VB: Public Shared Function Dot(a As SyncQuaternion, b As SyncQuaternion) As Single
        parameters:
        - id: a
          type: Unity.Reflect.Model.SyncQuaternion
        - id: b
          type: Unity.Reflect.Model.SyncQuaternion
        return:
          type: System.Single
      overload: Unity.Reflect.Model.SyncQuaternion.Dot*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Unity.Reflect.Model.SyncQuaternion.op_Equality(Unity.Reflect.Model.SyncQuaternion,Unity.Reflect.Model.SyncQuaternion)
      commentId: M:Unity.Reflect.Model.SyncQuaternion.op_Equality(Unity.Reflect.Model.SyncQuaternion,Unity.Reflect.Model.SyncQuaternion)
      language: CSharp
      name:
        CSharp: Equality(SyncQuaternion, SyncQuaternion)
        VB: Equality(SyncQuaternion, SyncQuaternion)
      nameWithType:
        CSharp: SyncQuaternion.Equality(SyncQuaternion, SyncQuaternion)
        VB: SyncQuaternion.Equality(SyncQuaternion, SyncQuaternion)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncQuaternion.Equality(Unity.Reflect.Model.SyncQuaternion, Unity.Reflect.Model.SyncQuaternion)
        VB: Unity.Reflect.Model.SyncQuaternion.Equality(Unity.Reflect.Model.SyncQuaternion, Unity.Reflect.Model.SyncQuaternion)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: op_Equality
        path: ''
        startLine: 1081
      syntax:
        content:
          CSharp: public static bool operator ==(SyncQuaternion q1, SyncQuaternion q2)
          VB: Public Shared Operator =(q1 As SyncQuaternion, q2 As SyncQuaternion) As Boolean
        parameters:
        - id: q1
          type: Unity.Reflect.Model.SyncQuaternion
        - id: q2
          type: Unity.Reflect.Model.SyncQuaternion
        return:
          type: System.Boolean
      overload: Unity.Reflect.Model.SyncQuaternion.op_Equality*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Unity.Reflect.Model.SyncQuaternion.op_Inequality(Unity.Reflect.Model.SyncQuaternion,Unity.Reflect.Model.SyncQuaternion)
      commentId: M:Unity.Reflect.Model.SyncQuaternion.op_Inequality(Unity.Reflect.Model.SyncQuaternion,Unity.Reflect.Model.SyncQuaternion)
      language: CSharp
      name:
        CSharp: Inequality(SyncQuaternion, SyncQuaternion)
        VB: Inequality(SyncQuaternion, SyncQuaternion)
      nameWithType:
        CSharp: SyncQuaternion.Inequality(SyncQuaternion, SyncQuaternion)
        VB: SyncQuaternion.Inequality(SyncQuaternion, SyncQuaternion)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncQuaternion.Inequality(Unity.Reflect.Model.SyncQuaternion, Unity.Reflect.Model.SyncQuaternion)
        VB: Unity.Reflect.Model.SyncQuaternion.Inequality(Unity.Reflect.Model.SyncQuaternion, Unity.Reflect.Model.SyncQuaternion)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: op_Inequality
        path: ''
        startLine: 1092
      syntax:
        content:
          CSharp: public static bool operator !=(SyncQuaternion q1, SyncQuaternion q2)
          VB: Public Shared Operator <>(q1 As SyncQuaternion, q2 As SyncQuaternion) As Boolean
        parameters:
        - id: q1
          type: Unity.Reflect.Model.SyncQuaternion
        - id: q2
          type: Unity.Reflect.Model.SyncQuaternion
        return:
          type: System.Boolean
      overload: Unity.Reflect.Model.SyncQuaternion.op_Inequality*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Unity.Reflect.Model.SyncQuaternion.Parser
      commentId: P:Unity.Reflect.Model.SyncQuaternion.Parser
      language: CSharp
      name:
        CSharp: Parser
        VB: Parser
      nameWithType:
        CSharp: SyncQuaternion.Parser
        VB: SyncQuaternion.Parser
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncQuaternion.Parser
        VB: Unity.Reflect.Model.SyncQuaternion.Parser
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Parser
        path: ''
        startLine: 5110
      syntax:
        content:
          CSharp: public static pb.MessageParser<SyncQuaternion> Parser { get; }
          VB: Public Shared ReadOnly Property Parser As pb.MessageParser(Of SyncQuaternion)
        parameters: []
        return:
          type: pb.MessageParser{Unity.Reflect.Model.SyncQuaternion}
      overload: Unity.Reflect.Model.SyncQuaternion.Parser*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Unity.Reflect.Model.SyncQuaternion.Descriptor
      commentId: P:Unity.Reflect.Model.SyncQuaternion.Descriptor
      language: CSharp
      name:
        CSharp: Descriptor
        VB: Descriptor
      nameWithType:
        CSharp: SyncQuaternion.Descriptor
        VB: SyncQuaternion.Descriptor
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncQuaternion.Descriptor
        VB: Unity.Reflect.Model.SyncQuaternion.Descriptor
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Descriptor
        path: ''
        startLine: 5113
      syntax:
        content:
          CSharp: public static pbr.MessageDescriptor Descriptor { get; }
          VB: Public Shared ReadOnly Property Descriptor As pbr.MessageDescriptor
        parameters: []
        return:
          type: pbr.MessageDescriptor
      overload: Unity.Reflect.Model.SyncQuaternion.Descriptor*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Unity.Reflect.Model.SyncQuaternion.#ctor
      commentId: M:Unity.Reflect.Model.SyncQuaternion.#ctor
      language: CSharp
      name:
        CSharp: SyncQuaternion()
        VB: SyncQuaternion()
      nameWithType:
        CSharp: SyncQuaternion.SyncQuaternion()
        VB: SyncQuaternion.SyncQuaternion()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncQuaternion.SyncQuaternion()
        VB: Unity.Reflect.Model.SyncQuaternion.SyncQuaternion()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: .ctor
        path: ''
        startLine: 5123
      syntax:
        content:
          CSharp: public SyncQuaternion()
          VB: Public Sub New
      overload: Unity.Reflect.Model.SyncQuaternion.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncQuaternion.#ctor(Unity.Reflect.Model.SyncQuaternion)
      commentId: M:Unity.Reflect.Model.SyncQuaternion.#ctor(Unity.Reflect.Model.SyncQuaternion)
      language: CSharp
      name:
        CSharp: SyncQuaternion(SyncQuaternion)
        VB: SyncQuaternion(SyncQuaternion)
      nameWithType:
        CSharp: SyncQuaternion.SyncQuaternion(SyncQuaternion)
        VB: SyncQuaternion.SyncQuaternion(SyncQuaternion)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncQuaternion.SyncQuaternion(Unity.Reflect.Model.SyncQuaternion)
        VB: Unity.Reflect.Model.SyncQuaternion.SyncQuaternion(Unity.Reflect.Model.SyncQuaternion)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: .ctor
        path: ''
        startLine: 5130
      syntax:
        content:
          CSharp: public SyncQuaternion(SyncQuaternion other)
          VB: Public Sub New(other As SyncQuaternion)
        parameters:
        - id: other
          type: Unity.Reflect.Model.SyncQuaternion
      overload: Unity.Reflect.Model.SyncQuaternion.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncQuaternion.Clone
      commentId: M:Unity.Reflect.Model.SyncQuaternion.Clone
      language: CSharp
      name:
        CSharp: Clone()
        VB: Clone()
      nameWithType:
        CSharp: SyncQuaternion.Clone()
        VB: SyncQuaternion.Clone()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncQuaternion.Clone()
        VB: Unity.Reflect.Model.SyncQuaternion.Clone()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Clone
        path: ''
        startLine: 5139
      syntax:
        content:
          CSharp: public SyncQuaternion Clone()
          VB: Public Function Clone As SyncQuaternion
        return:
          type: Unity.Reflect.Model.SyncQuaternion
      overload: Unity.Reflect.Model.SyncQuaternion.Clone*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncQuaternion.XFieldNumber
      commentId: F:Unity.Reflect.Model.SyncQuaternion.XFieldNumber
      language: CSharp
      name:
        CSharp: XFieldNumber
        VB: XFieldNumber
      nameWithType:
        CSharp: SyncQuaternion.XFieldNumber
        VB: SyncQuaternion.XFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncQuaternion.XFieldNumber
        VB: Unity.Reflect.Model.SyncQuaternion.XFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: XFieldNumber
        path: ''
        startLine: 5145
      summary: Field number for the &quot;x&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int XFieldNumber = 1
          VB: Public Const XFieldNumber As Integer = 1
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncQuaternion.X
      commentId: P:Unity.Reflect.Model.SyncQuaternion.X
      language: CSharp
      name:
        CSharp: X
        VB: X
      nameWithType:
        CSharp: SyncQuaternion.X
        VB: SyncQuaternion.X
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncQuaternion.X
        VB: Unity.Reflect.Model.SyncQuaternion.X
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: X
        path: ''
        startLine: 5147
      syntax:
        content:
          CSharp: public float X { get; set; }
          VB: Public Property X As Single
        parameters: []
        return:
          type: System.Single
      overload: Unity.Reflect.Model.SyncQuaternion.X*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncQuaternion.YFieldNumber
      commentId: F:Unity.Reflect.Model.SyncQuaternion.YFieldNumber
      language: CSharp
      name:
        CSharp: YFieldNumber
        VB: YFieldNumber
      nameWithType:
        CSharp: SyncQuaternion.YFieldNumber
        VB: SyncQuaternion.YFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncQuaternion.YFieldNumber
        VB: Unity.Reflect.Model.SyncQuaternion.YFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: YFieldNumber
        path: ''
        startLine: 5156
      summary: Field number for the &quot;y&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int YFieldNumber = 2
          VB: Public Const YFieldNumber As Integer = 2
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncQuaternion.Y
      commentId: P:Unity.Reflect.Model.SyncQuaternion.Y
      language: CSharp
      name:
        CSharp: Y
        VB: Y
      nameWithType:
        CSharp: SyncQuaternion.Y
        VB: SyncQuaternion.Y
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncQuaternion.Y
        VB: Unity.Reflect.Model.SyncQuaternion.Y
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Y
        path: ''
        startLine: 5158
      syntax:
        content:
          CSharp: public float Y { get; set; }
          VB: Public Property Y As Single
        parameters: []
        return:
          type: System.Single
      overload: Unity.Reflect.Model.SyncQuaternion.Y*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncQuaternion.ZFieldNumber
      commentId: F:Unity.Reflect.Model.SyncQuaternion.ZFieldNumber
      language: CSharp
      name:
        CSharp: ZFieldNumber
        VB: ZFieldNumber
      nameWithType:
        CSharp: SyncQuaternion.ZFieldNumber
        VB: SyncQuaternion.ZFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncQuaternion.ZFieldNumber
        VB: Unity.Reflect.Model.SyncQuaternion.ZFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: ZFieldNumber
        path: ''
        startLine: 5167
      summary: Field number for the &quot;z&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int ZFieldNumber = 3
          VB: Public Const ZFieldNumber As Integer = 3
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncQuaternion.Z
      commentId: P:Unity.Reflect.Model.SyncQuaternion.Z
      language: CSharp
      name:
        CSharp: Z
        VB: Z
      nameWithType:
        CSharp: SyncQuaternion.Z
        VB: SyncQuaternion.Z
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncQuaternion.Z
        VB: Unity.Reflect.Model.SyncQuaternion.Z
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Z
        path: ''
        startLine: 5169
      syntax:
        content:
          CSharp: public float Z { get; set; }
          VB: Public Property Z As Single
        parameters: []
        return:
          type: System.Single
      overload: Unity.Reflect.Model.SyncQuaternion.Z*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncQuaternion.WFieldNumber
      commentId: F:Unity.Reflect.Model.SyncQuaternion.WFieldNumber
      language: CSharp
      name:
        CSharp: WFieldNumber
        VB: WFieldNumber
      nameWithType:
        CSharp: SyncQuaternion.WFieldNumber
        VB: SyncQuaternion.WFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncQuaternion.WFieldNumber
        VB: Unity.Reflect.Model.SyncQuaternion.WFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: WFieldNumber
        path: ''
        startLine: 5178
      summary: Field number for the &quot;w&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int WFieldNumber = 4
          VB: Public Const WFieldNumber As Integer = 4
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncQuaternion.W
      commentId: P:Unity.Reflect.Model.SyncQuaternion.W
      language: CSharp
      name:
        CSharp: W
        VB: W
      nameWithType:
        CSharp: SyncQuaternion.W
        VB: SyncQuaternion.W
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncQuaternion.W
        VB: Unity.Reflect.Model.SyncQuaternion.W
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: W
        path: ''
        startLine: 5180
      syntax:
        content:
          CSharp: public float W { get; set; }
          VB: Public Property W As Single
        parameters: []
        return:
          type: System.Single
      overload: Unity.Reflect.Model.SyncQuaternion.W*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncQuaternion.Equals(System.Object)
      commentId: M:Unity.Reflect.Model.SyncQuaternion.Equals(System.Object)
      language: CSharp
      name:
        CSharp: Equals(Object)
        VB: Equals(Object)
      nameWithType:
        CSharp: SyncQuaternion.Equals(Object)
        VB: SyncQuaternion.Equals(Object)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncQuaternion.Equals(System.Object)
        VB: Unity.Reflect.Model.SyncQuaternion.Equals(System.Object)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Equals
        path: ''
        startLine: 5188
      syntax:
        content:
          CSharp: public override bool Equals(object other)
          VB: Public Overrides Function Equals(other As Object) As Boolean
        parameters:
        - id: other
          type: System.Object
        return:
          type: System.Boolean
      overload: Unity.Reflect.Model.SyncQuaternion.Equals*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.Model.SyncQuaternion.Equals(Unity.Reflect.Model.SyncQuaternion)
      commentId: M:Unity.Reflect.Model.SyncQuaternion.Equals(Unity.Reflect.Model.SyncQuaternion)
      language: CSharp
      name:
        CSharp: Equals(SyncQuaternion)
        VB: Equals(SyncQuaternion)
      nameWithType:
        CSharp: SyncQuaternion.Equals(SyncQuaternion)
        VB: SyncQuaternion.Equals(SyncQuaternion)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncQuaternion.Equals(Unity.Reflect.Model.SyncQuaternion)
        VB: Unity.Reflect.Model.SyncQuaternion.Equals(Unity.Reflect.Model.SyncQuaternion)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Equals
        path: ''
        startLine: 5193
      syntax:
        content:
          CSharp: public bool Equals(SyncQuaternion other)
          VB: Public Function Equals(other As SyncQuaternion) As Boolean
        parameters:
        - id: other
          type: Unity.Reflect.Model.SyncQuaternion
        return:
          type: System.Boolean
      overload: Unity.Reflect.Model.SyncQuaternion.Equals*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncQuaternion.GetHashCode
      commentId: M:Unity.Reflect.Model.SyncQuaternion.GetHashCode
      language: CSharp
      name:
        CSharp: GetHashCode()
        VB: GetHashCode()
      nameWithType:
        CSharp: SyncQuaternion.GetHashCode()
        VB: SyncQuaternion.GetHashCode()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncQuaternion.GetHashCode()
        VB: Unity.Reflect.Model.SyncQuaternion.GetHashCode()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: GetHashCode
        path: ''
        startLine: 5208
      syntax:
        content:
          CSharp: public override int GetHashCode()
          VB: Public Overrides Function GetHashCode As Integer
        return:
          type: System.Int32
      overload: Unity.Reflect.Model.SyncQuaternion.GetHashCode*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.Model.SyncQuaternion.ToString
      commentId: M:Unity.Reflect.Model.SyncQuaternion.ToString
      language: CSharp
      name:
        CSharp: ToString()
        VB: ToString()
      nameWithType:
        CSharp: SyncQuaternion.ToString()
        VB: SyncQuaternion.ToString()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncQuaternion.ToString()
        VB: Unity.Reflect.Model.SyncQuaternion.ToString()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: ToString
        path: ''
        startLine: 5221
      syntax:
        content:
          CSharp: public override string ToString()
          VB: Public Overrides Function ToString As String
        return:
          type: System.String
      overload: Unity.Reflect.Model.SyncQuaternion.ToString*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.Model.SyncQuaternion.WriteTo(pb.CodedOutputStream)
      commentId: M:Unity.Reflect.Model.SyncQuaternion.WriteTo(pb.CodedOutputStream)
      language: CSharp
      name:
        CSharp: WriteTo(pb.CodedOutputStream)
        VB: WriteTo(pb.CodedOutputStream)
      nameWithType:
        CSharp: SyncQuaternion.WriteTo(pb.CodedOutputStream)
        VB: SyncQuaternion.WriteTo(pb.CodedOutputStream)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncQuaternion.WriteTo(pb.CodedOutputStream)
        VB: Unity.Reflect.Model.SyncQuaternion.WriteTo(pb.CodedOutputStream)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: WriteTo
        path: ''
        startLine: 5226
      syntax:
        content:
          CSharp: public void WriteTo(pb.CodedOutputStream output)
          VB: Public Sub WriteTo(output As pb.CodedOutputStream)
        parameters:
        - id: output
          type: pb.CodedOutputStream
      overload: Unity.Reflect.Model.SyncQuaternion.WriteTo*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncQuaternion.CalculateSize
      commentId: M:Unity.Reflect.Model.SyncQuaternion.CalculateSize
      language: CSharp
      name:
        CSharp: CalculateSize()
        VB: CalculateSize()
      nameWithType:
        CSharp: SyncQuaternion.CalculateSize()
        VB: SyncQuaternion.CalculateSize()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncQuaternion.CalculateSize()
        VB: Unity.Reflect.Model.SyncQuaternion.CalculateSize()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: CalculateSize
        path: ''
        startLine: 5249
      syntax:
        content:
          CSharp: public int CalculateSize()
          VB: Public Function CalculateSize As Integer
        return:
          type: System.Int32
      overload: Unity.Reflect.Model.SyncQuaternion.CalculateSize*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncQuaternion.MergeFrom(Unity.Reflect.Model.SyncQuaternion)
      commentId: M:Unity.Reflect.Model.SyncQuaternion.MergeFrom(Unity.Reflect.Model.SyncQuaternion)
      language: CSharp
      name:
        CSharp: MergeFrom(SyncQuaternion)
        VB: MergeFrom(SyncQuaternion)
      nameWithType:
        CSharp: SyncQuaternion.MergeFrom(SyncQuaternion)
        VB: SyncQuaternion.MergeFrom(SyncQuaternion)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncQuaternion.MergeFrom(Unity.Reflect.Model.SyncQuaternion)
        VB: Unity.Reflect.Model.SyncQuaternion.MergeFrom(Unity.Reflect.Model.SyncQuaternion)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: MergeFrom
        path: ''
        startLine: 5270
      syntax:
        content:
          CSharp: public void MergeFrom(SyncQuaternion other)
          VB: Public Sub MergeFrom(other As SyncQuaternion)
        parameters:
        - id: other
          type: Unity.Reflect.Model.SyncQuaternion
      overload: Unity.Reflect.Model.SyncQuaternion.MergeFrom*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncQuaternion.MergeFrom(pb.CodedInputStream)
      commentId: M:Unity.Reflect.Model.SyncQuaternion.MergeFrom(pb.CodedInputStream)
      language: CSharp
      name:
        CSharp: MergeFrom(pb.CodedInputStream)
        VB: MergeFrom(pb.CodedInputStream)
      nameWithType:
        CSharp: SyncQuaternion.MergeFrom(pb.CodedInputStream)
        VB: SyncQuaternion.MergeFrom(pb.CodedInputStream)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncQuaternion.MergeFrom(pb.CodedInputStream)
        VB: Unity.Reflect.Model.SyncQuaternion.MergeFrom(pb.CodedInputStream)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: MergeFrom
        path: ''
        startLine: 5290
      syntax:
        content:
          CSharp: public void MergeFrom(pb.CodedInputStream input)
          VB: Public Sub MergeFrom(input As pb.CodedInputStream)
        parameters:
        - id: input
          type: pb.CodedInputStream
      overload: Unity.Reflect.Model.SyncQuaternion.MergeFrom*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Unity.Reflect.Model.SyncMatrix
    commentId: T:Unity.Reflect.Model.SyncMatrix
    language: CSharp
    name:
      CSharp: SyncMatrix
      VB: SyncMatrix
    nameWithType:
      CSharp: SyncMatrix
      VB: SyncMatrix
    qualifiedName:
      CSharp: Unity.Reflect.Model.SyncMatrix
      VB: Unity.Reflect.Model.SyncMatrix
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect.Model
    source:
      id: SyncMatrix
      path: ''
      startLine: 5523
    syntax:
      content:
        CSharp: 'public sealed class SyncMatrix : pb.IMessage<SyncMatrix>'
        VB: >-
          Public NotInheritable Class SyncMatrix

              Inherits pb.IMessage(Of SyncMatrix)
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - sealed
      - class
      VB:
      - Public
      - NotInheritable
      - Class
    items:
    - id: Unity.Reflect.Model.SyncMatrix.Identity
      commentId: M:Unity.Reflect.Model.SyncMatrix.Identity
      language: CSharp
      name:
        CSharp: Identity()
        VB: Identity()
      nameWithType:
        CSharp: SyncMatrix.Identity()
        VB: SyncMatrix.Identity()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMatrix.Identity()
        VB: Unity.Reflect.Model.SyncMatrix.Identity()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Identity
        path: ''
        startLine: 1100
      syntax:
        content:
          CSharp: public static SyncMatrix Identity()
          VB: Public Shared Function Identity As SyncMatrix
        return:
          type: Unity.Reflect.Model.SyncMatrix
      overload: Unity.Reflect.Model.SyncMatrix.Identity*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Unity.Reflect.Model.SyncMatrix.#ctor(Unity.Reflect.Model.SyncFloat4,Unity.Reflect.Model.SyncFloat4,Unity.Reflect.Model.SyncFloat4,Unity.Reflect.Model.SyncFloat4)
      commentId: M:Unity.Reflect.Model.SyncMatrix.#ctor(Unity.Reflect.Model.SyncFloat4,Unity.Reflect.Model.SyncFloat4,Unity.Reflect.Model.SyncFloat4,Unity.Reflect.Model.SyncFloat4)
      language: CSharp
      name:
        CSharp: SyncMatrix(SyncFloat4, SyncFloat4, SyncFloat4, SyncFloat4)
        VB: SyncMatrix(SyncFloat4, SyncFloat4, SyncFloat4, SyncFloat4)
      nameWithType:
        CSharp: SyncMatrix.SyncMatrix(SyncFloat4, SyncFloat4, SyncFloat4, SyncFloat4)
        VB: SyncMatrix.SyncMatrix(SyncFloat4, SyncFloat4, SyncFloat4, SyncFloat4)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMatrix.SyncMatrix(Unity.Reflect.Model.SyncFloat4, Unity.Reflect.Model.SyncFloat4, Unity.Reflect.Model.SyncFloat4, Unity.Reflect.Model.SyncFloat4)
        VB: Unity.Reflect.Model.SyncMatrix.SyncMatrix(Unity.Reflect.Model.SyncFloat4, Unity.Reflect.Model.SyncFloat4, Unity.Reflect.Model.SyncFloat4, Unity.Reflect.Model.SyncFloat4)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: .ctor
        path: ''
        startLine: 1109
      syntax:
        content:
          CSharp: public SyncMatrix(SyncFloat4 c0, SyncFloat4 c1, SyncFloat4 c2, SyncFloat4 c3)
          VB: Public Sub New(c0 As SyncFloat4, c1 As SyncFloat4, c2 As SyncFloat4, c3 As SyncFloat4)
        parameters:
        - id: c0
          type: Unity.Reflect.Model.SyncFloat4
        - id: c1
          type: Unity.Reflect.Model.SyncFloat4
        - id: c2
          type: Unity.Reflect.Model.SyncFloat4
        - id: c3
          type: Unity.Reflect.Model.SyncFloat4
      overload: Unity.Reflect.Model.SyncMatrix.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncMatrix.ToTRS
      commentId: M:Unity.Reflect.Model.SyncMatrix.ToTRS
      language: CSharp
      name:
        CSharp: ToTRS()
        VB: ToTRS()
      nameWithType:
        CSharp: SyncMatrix.ToTRS()
        VB: SyncMatrix.ToTRS()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMatrix.ToTRS()
        VB: Unity.Reflect.Model.SyncMatrix.ToTRS()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: ToTRS
        path: ''
        startLine: 1117
      syntax:
        content:
          CSharp: public SyncTRS ToTRS()
          VB: Public Function ToTRS As SyncTRS
        return:
          type: Unity.Reflect.Model.SyncTRS
      overload: Unity.Reflect.Model.SyncMatrix.ToTRS*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncMatrix.Parser
      commentId: P:Unity.Reflect.Model.SyncMatrix.Parser
      language: CSharp
      name:
        CSharp: Parser
        VB: Parser
      nameWithType:
        CSharp: SyncMatrix.Parser
        VB: SyncMatrix.Parser
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMatrix.Parser
        VB: Unity.Reflect.Model.SyncMatrix.Parser
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Parser
        path: ''
        startLine: 5526
      syntax:
        content:
          CSharp: public static pb.MessageParser<SyncMatrix> Parser { get; }
          VB: Public Shared ReadOnly Property Parser As pb.MessageParser(Of SyncMatrix)
        parameters: []
        return:
          type: pb.MessageParser{Unity.Reflect.Model.SyncMatrix}
      overload: Unity.Reflect.Model.SyncMatrix.Parser*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Unity.Reflect.Model.SyncMatrix.Descriptor
      commentId: P:Unity.Reflect.Model.SyncMatrix.Descriptor
      language: CSharp
      name:
        CSharp: Descriptor
        VB: Descriptor
      nameWithType:
        CSharp: SyncMatrix.Descriptor
        VB: SyncMatrix.Descriptor
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMatrix.Descriptor
        VB: Unity.Reflect.Model.SyncMatrix.Descriptor
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Descriptor
        path: ''
        startLine: 5529
      syntax:
        content:
          CSharp: public static pbr.MessageDescriptor Descriptor { get; }
          VB: Public Shared ReadOnly Property Descriptor As pbr.MessageDescriptor
        parameters: []
        return:
          type: pbr.MessageDescriptor
      overload: Unity.Reflect.Model.SyncMatrix.Descriptor*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Unity.Reflect.Model.SyncMatrix.#ctor
      commentId: M:Unity.Reflect.Model.SyncMatrix.#ctor
      language: CSharp
      name:
        CSharp: SyncMatrix()
        VB: SyncMatrix()
      nameWithType:
        CSharp: SyncMatrix.SyncMatrix()
        VB: SyncMatrix.SyncMatrix()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMatrix.SyncMatrix()
        VB: Unity.Reflect.Model.SyncMatrix.SyncMatrix()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: .ctor
        path: ''
        startLine: 5539
      syntax:
        content:
          CSharp: public SyncMatrix()
          VB: Public Sub New
      overload: Unity.Reflect.Model.SyncMatrix.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncMatrix.#ctor(Unity.Reflect.Model.SyncMatrix)
      commentId: M:Unity.Reflect.Model.SyncMatrix.#ctor(Unity.Reflect.Model.SyncMatrix)
      language: CSharp
      name:
        CSharp: SyncMatrix(SyncMatrix)
        VB: SyncMatrix(SyncMatrix)
      nameWithType:
        CSharp: SyncMatrix.SyncMatrix(SyncMatrix)
        VB: SyncMatrix.SyncMatrix(SyncMatrix)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMatrix.SyncMatrix(Unity.Reflect.Model.SyncMatrix)
        VB: Unity.Reflect.Model.SyncMatrix.SyncMatrix(Unity.Reflect.Model.SyncMatrix)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: .ctor
        path: ''
        startLine: 5546
      syntax:
        content:
          CSharp: public SyncMatrix(SyncMatrix other)
          VB: Public Sub New(other As SyncMatrix)
        parameters:
        - id: other
          type: Unity.Reflect.Model.SyncMatrix
      overload: Unity.Reflect.Model.SyncMatrix.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncMatrix.Clone
      commentId: M:Unity.Reflect.Model.SyncMatrix.Clone
      language: CSharp
      name:
        CSharp: Clone()
        VB: Clone()
      nameWithType:
        CSharp: SyncMatrix.Clone()
        VB: SyncMatrix.Clone()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMatrix.Clone()
        VB: Unity.Reflect.Model.SyncMatrix.Clone()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Clone
        path: ''
        startLine: 5555
      syntax:
        content:
          CSharp: public SyncMatrix Clone()
          VB: Public Function Clone As SyncMatrix
        return:
          type: Unity.Reflect.Model.SyncMatrix
      overload: Unity.Reflect.Model.SyncMatrix.Clone*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncMatrix.C0FieldNumber
      commentId: F:Unity.Reflect.Model.SyncMatrix.C0FieldNumber
      language: CSharp
      name:
        CSharp: C0FieldNumber
        VB: C0FieldNumber
      nameWithType:
        CSharp: SyncMatrix.C0FieldNumber
        VB: SyncMatrix.C0FieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMatrix.C0FieldNumber
        VB: Unity.Reflect.Model.SyncMatrix.C0FieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: C0FieldNumber
        path: ''
        startLine: 5561
      summary: Field number for the &quot;c0&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int C0FieldNumber = 1
          VB: Public Const C0FieldNumber As Integer = 1
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncMatrix.C0
      commentId: P:Unity.Reflect.Model.SyncMatrix.C0
      language: CSharp
      name:
        CSharp: C0
        VB: C0
      nameWithType:
        CSharp: SyncMatrix.C0
        VB: SyncMatrix.C0
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMatrix.C0
        VB: Unity.Reflect.Model.SyncMatrix.C0
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: C0
        path: ''
        startLine: 5563
      syntax:
        content:
          CSharp: public SyncFloat4 C0 { get; set; }
          VB: Public Property C0 As SyncFloat4
        parameters: []
        return:
          type: Unity.Reflect.Model.SyncFloat4
      overload: Unity.Reflect.Model.SyncMatrix.C0*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncMatrix.C1FieldNumber
      commentId: F:Unity.Reflect.Model.SyncMatrix.C1FieldNumber
      language: CSharp
      name:
        CSharp: C1FieldNumber
        VB: C1FieldNumber
      nameWithType:
        CSharp: SyncMatrix.C1FieldNumber
        VB: SyncMatrix.C1FieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMatrix.C1FieldNumber
        VB: Unity.Reflect.Model.SyncMatrix.C1FieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: C1FieldNumber
        path: ''
        startLine: 5572
      summary: Field number for the &quot;c1&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int C1FieldNumber = 2
          VB: Public Const C1FieldNumber As Integer = 2
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncMatrix.C1
      commentId: P:Unity.Reflect.Model.SyncMatrix.C1
      language: CSharp
      name:
        CSharp: C1
        VB: C1
      nameWithType:
        CSharp: SyncMatrix.C1
        VB: SyncMatrix.C1
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMatrix.C1
        VB: Unity.Reflect.Model.SyncMatrix.C1
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: C1
        path: ''
        startLine: 5574
      syntax:
        content:
          CSharp: public SyncFloat4 C1 { get; set; }
          VB: Public Property C1 As SyncFloat4
        parameters: []
        return:
          type: Unity.Reflect.Model.SyncFloat4
      overload: Unity.Reflect.Model.SyncMatrix.C1*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncMatrix.C2FieldNumber
      commentId: F:Unity.Reflect.Model.SyncMatrix.C2FieldNumber
      language: CSharp
      name:
        CSharp: C2FieldNumber
        VB: C2FieldNumber
      nameWithType:
        CSharp: SyncMatrix.C2FieldNumber
        VB: SyncMatrix.C2FieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMatrix.C2FieldNumber
        VB: Unity.Reflect.Model.SyncMatrix.C2FieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: C2FieldNumber
        path: ''
        startLine: 5583
      summary: Field number for the &quot;c2&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int C2FieldNumber = 3
          VB: Public Const C2FieldNumber As Integer = 3
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncMatrix.C2
      commentId: P:Unity.Reflect.Model.SyncMatrix.C2
      language: CSharp
      name:
        CSharp: C2
        VB: C2
      nameWithType:
        CSharp: SyncMatrix.C2
        VB: SyncMatrix.C2
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMatrix.C2
        VB: Unity.Reflect.Model.SyncMatrix.C2
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: C2
        path: ''
        startLine: 5585
      syntax:
        content:
          CSharp: public SyncFloat4 C2 { get; set; }
          VB: Public Property C2 As SyncFloat4
        parameters: []
        return:
          type: Unity.Reflect.Model.SyncFloat4
      overload: Unity.Reflect.Model.SyncMatrix.C2*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncMatrix.C3FieldNumber
      commentId: F:Unity.Reflect.Model.SyncMatrix.C3FieldNumber
      language: CSharp
      name:
        CSharp: C3FieldNumber
        VB: C3FieldNumber
      nameWithType:
        CSharp: SyncMatrix.C3FieldNumber
        VB: SyncMatrix.C3FieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMatrix.C3FieldNumber
        VB: Unity.Reflect.Model.SyncMatrix.C3FieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: C3FieldNumber
        path: ''
        startLine: 5594
      summary: Field number for the &quot;c3&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int C3FieldNumber = 4
          VB: Public Const C3FieldNumber As Integer = 4
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncMatrix.C3
      commentId: P:Unity.Reflect.Model.SyncMatrix.C3
      language: CSharp
      name:
        CSharp: C3
        VB: C3
      nameWithType:
        CSharp: SyncMatrix.C3
        VB: SyncMatrix.C3
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMatrix.C3
        VB: Unity.Reflect.Model.SyncMatrix.C3
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: C3
        path: ''
        startLine: 5596
      syntax:
        content:
          CSharp: public SyncFloat4 C3 { get; set; }
          VB: Public Property C3 As SyncFloat4
        parameters: []
        return:
          type: Unity.Reflect.Model.SyncFloat4
      overload: Unity.Reflect.Model.SyncMatrix.C3*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncMatrix.Equals(System.Object)
      commentId: M:Unity.Reflect.Model.SyncMatrix.Equals(System.Object)
      language: CSharp
      name:
        CSharp: Equals(Object)
        VB: Equals(Object)
      nameWithType:
        CSharp: SyncMatrix.Equals(Object)
        VB: SyncMatrix.Equals(Object)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMatrix.Equals(System.Object)
        VB: Unity.Reflect.Model.SyncMatrix.Equals(System.Object)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Equals
        path: ''
        startLine: 5604
      syntax:
        content:
          CSharp: public override bool Equals(object other)
          VB: Public Overrides Function Equals(other As Object) As Boolean
        parameters:
        - id: other
          type: System.Object
        return:
          type: System.Boolean
      overload: Unity.Reflect.Model.SyncMatrix.Equals*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.Model.SyncMatrix.Equals(Unity.Reflect.Model.SyncMatrix)
      commentId: M:Unity.Reflect.Model.SyncMatrix.Equals(Unity.Reflect.Model.SyncMatrix)
      language: CSharp
      name:
        CSharp: Equals(SyncMatrix)
        VB: Equals(SyncMatrix)
      nameWithType:
        CSharp: SyncMatrix.Equals(SyncMatrix)
        VB: SyncMatrix.Equals(SyncMatrix)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMatrix.Equals(Unity.Reflect.Model.SyncMatrix)
        VB: Unity.Reflect.Model.SyncMatrix.Equals(Unity.Reflect.Model.SyncMatrix)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Equals
        path: ''
        startLine: 5609
      syntax:
        content:
          CSharp: public bool Equals(SyncMatrix other)
          VB: Public Function Equals(other As SyncMatrix) As Boolean
        parameters:
        - id: other
          type: Unity.Reflect.Model.SyncMatrix
        return:
          type: System.Boolean
      overload: Unity.Reflect.Model.SyncMatrix.Equals*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncMatrix.GetHashCode
      commentId: M:Unity.Reflect.Model.SyncMatrix.GetHashCode
      language: CSharp
      name:
        CSharp: GetHashCode()
        VB: GetHashCode()
      nameWithType:
        CSharp: SyncMatrix.GetHashCode()
        VB: SyncMatrix.GetHashCode()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMatrix.GetHashCode()
        VB: Unity.Reflect.Model.SyncMatrix.GetHashCode()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: GetHashCode
        path: ''
        startLine: 5624
      syntax:
        content:
          CSharp: public override int GetHashCode()
          VB: Public Overrides Function GetHashCode As Integer
        return:
          type: System.Int32
      overload: Unity.Reflect.Model.SyncMatrix.GetHashCode*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.Model.SyncMatrix.ToString
      commentId: M:Unity.Reflect.Model.SyncMatrix.ToString
      language: CSharp
      name:
        CSharp: ToString()
        VB: ToString()
      nameWithType:
        CSharp: SyncMatrix.ToString()
        VB: SyncMatrix.ToString()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMatrix.ToString()
        VB: Unity.Reflect.Model.SyncMatrix.ToString()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: ToString
        path: ''
        startLine: 5637
      syntax:
        content:
          CSharp: public override string ToString()
          VB: Public Overrides Function ToString As String
        return:
          type: System.String
      overload: Unity.Reflect.Model.SyncMatrix.ToString*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.Model.SyncMatrix.WriteTo(pb.CodedOutputStream)
      commentId: M:Unity.Reflect.Model.SyncMatrix.WriteTo(pb.CodedOutputStream)
      language: CSharp
      name:
        CSharp: WriteTo(pb.CodedOutputStream)
        VB: WriteTo(pb.CodedOutputStream)
      nameWithType:
        CSharp: SyncMatrix.WriteTo(pb.CodedOutputStream)
        VB: SyncMatrix.WriteTo(pb.CodedOutputStream)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMatrix.WriteTo(pb.CodedOutputStream)
        VB: Unity.Reflect.Model.SyncMatrix.WriteTo(pb.CodedOutputStream)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: WriteTo
        path: ''
        startLine: 5642
      syntax:
        content:
          CSharp: public void WriteTo(pb.CodedOutputStream output)
          VB: Public Sub WriteTo(output As pb.CodedOutputStream)
        parameters:
        - id: output
          type: pb.CodedOutputStream
      overload: Unity.Reflect.Model.SyncMatrix.WriteTo*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncMatrix.CalculateSize
      commentId: M:Unity.Reflect.Model.SyncMatrix.CalculateSize
      language: CSharp
      name:
        CSharp: CalculateSize()
        VB: CalculateSize()
      nameWithType:
        CSharp: SyncMatrix.CalculateSize()
        VB: SyncMatrix.CalculateSize()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMatrix.CalculateSize()
        VB: Unity.Reflect.Model.SyncMatrix.CalculateSize()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: CalculateSize
        path: ''
        startLine: 5665
      syntax:
        content:
          CSharp: public int CalculateSize()
          VB: Public Function CalculateSize As Integer
        return:
          type: System.Int32
      overload: Unity.Reflect.Model.SyncMatrix.CalculateSize*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncMatrix.MergeFrom(Unity.Reflect.Model.SyncMatrix)
      commentId: M:Unity.Reflect.Model.SyncMatrix.MergeFrom(Unity.Reflect.Model.SyncMatrix)
      language: CSharp
      name:
        CSharp: MergeFrom(SyncMatrix)
        VB: MergeFrom(SyncMatrix)
      nameWithType:
        CSharp: SyncMatrix.MergeFrom(SyncMatrix)
        VB: SyncMatrix.MergeFrom(SyncMatrix)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMatrix.MergeFrom(Unity.Reflect.Model.SyncMatrix)
        VB: Unity.Reflect.Model.SyncMatrix.MergeFrom(Unity.Reflect.Model.SyncMatrix)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: MergeFrom
        path: ''
        startLine: 5686
      syntax:
        content:
          CSharp: public void MergeFrom(SyncMatrix other)
          VB: Public Sub MergeFrom(other As SyncMatrix)
        parameters:
        - id: other
          type: Unity.Reflect.Model.SyncMatrix
      overload: Unity.Reflect.Model.SyncMatrix.MergeFrom*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncMatrix.MergeFrom(pb.CodedInputStream)
      commentId: M:Unity.Reflect.Model.SyncMatrix.MergeFrom(pb.CodedInputStream)
      language: CSharp
      name:
        CSharp: MergeFrom(pb.CodedInputStream)
        VB: MergeFrom(pb.CodedInputStream)
      nameWithType:
        CSharp: SyncMatrix.MergeFrom(pb.CodedInputStream)
        VB: SyncMatrix.MergeFrom(pb.CodedInputStream)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMatrix.MergeFrom(pb.CodedInputStream)
        VB: Unity.Reflect.Model.SyncMatrix.MergeFrom(pb.CodedInputStream)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: MergeFrom
        path: ''
        startLine: 5718
      syntax:
        content:
          CSharp: public void MergeFrom(pb.CodedInputStream input)
          VB: Public Sub MergeFrom(input As pb.CodedInputStream)
        parameters:
        - id: input
          type: pb.CodedInputStream
      overload: Unity.Reflect.Model.SyncMatrix.MergeFrom*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Unity.Reflect.Model.SyncTRS
    commentId: T:Unity.Reflect.Model.SyncTRS
    language: CSharp
    name:
      CSharp: SyncTRS
      VB: SyncTRS
    nameWithType:
      CSharp: SyncTRS
      VB: SyncTRS
    qualifiedName:
      CSharp: Unity.Reflect.Model.SyncTRS
      VB: Unity.Reflect.Model.SyncTRS
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect.Model
    source:
      id: SyncTRS
      path: ''
      startLine: 5320
    syntax:
      content:
        CSharp: 'public sealed class SyncTRS : pb.IMessage<SyncTRS>'
        VB: >-
          Public NotInheritable Class SyncTRS

              Inherits pb.IMessage(Of SyncTRS)
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - sealed
      - class
      VB:
      - Public
      - NotInheritable
      - Class
    items:
    - id: Unity.Reflect.Model.SyncTRS.Identity
      commentId: M:Unity.Reflect.Model.SyncTRS.Identity
      language: CSharp
      name:
        CSharp: Identity()
        VB: Identity()
      nameWithType:
        CSharp: SyncTRS.Identity()
        VB: SyncTRS.Identity()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncTRS.Identity()
        VB: Unity.Reflect.Model.SyncTRS.Identity()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Identity
        path: ''
        startLine: 1178
      syntax:
        content:
          CSharp: public static SyncTRS Identity()
          VB: Public Shared Function Identity As SyncTRS
        return:
          type: Unity.Reflect.Model.SyncTRS
      overload: Unity.Reflect.Model.SyncTRS.Identity*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Unity.Reflect.Model.SyncTRS.#ctor(Unity.Reflect.Model.SyncFloat3,Unity.Reflect.Model.SyncQuaternion,Unity.Reflect.Model.SyncFloat3)
      commentId: M:Unity.Reflect.Model.SyncTRS.#ctor(Unity.Reflect.Model.SyncFloat3,Unity.Reflect.Model.SyncQuaternion,Unity.Reflect.Model.SyncFloat3)
      language: CSharp
      name:
        CSharp: SyncTRS(SyncFloat3, SyncQuaternion, SyncFloat3)
        VB: SyncTRS(SyncFloat3, SyncQuaternion, SyncFloat3)
      nameWithType:
        CSharp: SyncTRS.SyncTRS(SyncFloat3, SyncQuaternion, SyncFloat3)
        VB: SyncTRS.SyncTRS(SyncFloat3, SyncQuaternion, SyncFloat3)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncTRS.SyncTRS(Unity.Reflect.Model.SyncFloat3, Unity.Reflect.Model.SyncQuaternion, Unity.Reflect.Model.SyncFloat3)
        VB: Unity.Reflect.Model.SyncTRS.SyncTRS(Unity.Reflect.Model.SyncFloat3, Unity.Reflect.Model.SyncQuaternion, Unity.Reflect.Model.SyncFloat3)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: .ctor
        path: ''
        startLine: 1180
      syntax:
        content:
          CSharp: public SyncTRS(SyncFloat3 position, SyncQuaternion rotation, SyncFloat3 scale)
          VB: Public Sub New(position As SyncFloat3, rotation As SyncQuaternion, scale As SyncFloat3)
        parameters:
        - id: position
          type: Unity.Reflect.Model.SyncFloat3
        - id: rotation
          type: Unity.Reflect.Model.SyncQuaternion
        - id: scale
          type: Unity.Reflect.Model.SyncFloat3
      overload: Unity.Reflect.Model.SyncTRS.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncTRS.TransformPoint(Unity.Reflect.Model.SyncFloat3)
      commentId: M:Unity.Reflect.Model.SyncTRS.TransformPoint(Unity.Reflect.Model.SyncFloat3)
      language: CSharp
      name:
        CSharp: TransformPoint(SyncFloat3)
        VB: TransformPoint(SyncFloat3)
      nameWithType:
        CSharp: SyncTRS.TransformPoint(SyncFloat3)
        VB: SyncTRS.TransformPoint(SyncFloat3)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncTRS.TransformPoint(Unity.Reflect.Model.SyncFloat3)
        VB: Unity.Reflect.Model.SyncTRS.TransformPoint(Unity.Reflect.Model.SyncFloat3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: TransformPoint
        path: ''
        startLine: 1187
      syntax:
        content:
          CSharp: public SyncFloat3 TransformPoint(SyncFloat3 pt)
          VB: Public Function TransformPoint(pt As SyncFloat3) As SyncFloat3
        parameters:
        - id: pt
          type: Unity.Reflect.Model.SyncFloat3
        return:
          type: Unity.Reflect.Model.SyncFloat3
      overload: Unity.Reflect.Model.SyncTRS.TransformPoint*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncTRS.TransformVector(Unity.Reflect.Model.SyncFloat3)
      commentId: M:Unity.Reflect.Model.SyncTRS.TransformVector(Unity.Reflect.Model.SyncFloat3)
      language: CSharp
      name:
        CSharp: TransformVector(SyncFloat3)
        VB: TransformVector(SyncFloat3)
      nameWithType:
        CSharp: SyncTRS.TransformVector(SyncFloat3)
        VB: SyncTRS.TransformVector(SyncFloat3)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncTRS.TransformVector(Unity.Reflect.Model.SyncFloat3)
        VB: Unity.Reflect.Model.SyncTRS.TransformVector(Unity.Reflect.Model.SyncFloat3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: TransformVector
        path: ''
        startLine: 1192
      syntax:
        content:
          CSharp: public SyncFloat3 TransformVector(SyncFloat3 vec)
          VB: Public Function TransformVector(vec As SyncFloat3) As SyncFloat3
        parameters:
        - id: vec
          type: Unity.Reflect.Model.SyncFloat3
        return:
          type: Unity.Reflect.Model.SyncFloat3
      overload: Unity.Reflect.Model.SyncTRS.TransformVector*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncTRS.Inverse
      commentId: M:Unity.Reflect.Model.SyncTRS.Inverse
      language: CSharp
      name:
        CSharp: Inverse()
        VB: Inverse()
      nameWithType:
        CSharp: SyncTRS.Inverse()
        VB: SyncTRS.Inverse()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncTRS.Inverse()
        VB: Unity.Reflect.Model.SyncTRS.Inverse()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Inverse
        path: ''
        startLine: 1197
      syntax:
        content:
          CSharp: public SyncTRS Inverse()
          VB: Public Function Inverse As SyncTRS
        return:
          type: Unity.Reflect.Model.SyncTRS
      overload: Unity.Reflect.Model.SyncTRS.Inverse*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncTRS.op_Multiply(Unity.Reflect.Model.SyncTRS,Unity.Reflect.Model.SyncTRS)
      commentId: M:Unity.Reflect.Model.SyncTRS.op_Multiply(Unity.Reflect.Model.SyncTRS,Unity.Reflect.Model.SyncTRS)
      language: CSharp
      name:
        CSharp: Multiply(SyncTRS, SyncTRS)
        VB: Multiply(SyncTRS, SyncTRS)
      nameWithType:
        CSharp: SyncTRS.Multiply(SyncTRS, SyncTRS)
        VB: SyncTRS.Multiply(SyncTRS, SyncTRS)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncTRS.Multiply(Unity.Reflect.Model.SyncTRS, Unity.Reflect.Model.SyncTRS)
        VB: Unity.Reflect.Model.SyncTRS.Multiply(Unity.Reflect.Model.SyncTRS, Unity.Reflect.Model.SyncTRS)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: op_Multiply
        path: ''
        startLine: 1210
      syntax:
        content:
          CSharp: public static SyncTRS operator *(SyncTRS left, SyncTRS right)
          VB: Public Shared Operator *(left As SyncTRS, right As SyncTRS) As SyncTRS
        parameters:
        - id: left
          type: Unity.Reflect.Model.SyncTRS
        - id: right
          type: Unity.Reflect.Model.SyncTRS
        return:
          type: Unity.Reflect.Model.SyncTRS
      overload: Unity.Reflect.Model.SyncTRS.op_Multiply*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Unity.Reflect.Model.SyncTRS.op_Equality(Unity.Reflect.Model.SyncTRS,Unity.Reflect.Model.SyncTRS)
      commentId: M:Unity.Reflect.Model.SyncTRS.op_Equality(Unity.Reflect.Model.SyncTRS,Unity.Reflect.Model.SyncTRS)
      language: CSharp
      name:
        CSharp: Equality(SyncTRS, SyncTRS)
        VB: Equality(SyncTRS, SyncTRS)
      nameWithType:
        CSharp: SyncTRS.Equality(SyncTRS, SyncTRS)
        VB: SyncTRS.Equality(SyncTRS, SyncTRS)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncTRS.Equality(Unity.Reflect.Model.SyncTRS, Unity.Reflect.Model.SyncTRS)
        VB: Unity.Reflect.Model.SyncTRS.Equality(Unity.Reflect.Model.SyncTRS, Unity.Reflect.Model.SyncTRS)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: op_Equality
        path: ''
        startLine: 1222
      syntax:
        content:
          CSharp: public static bool operator ==(SyncTRS t1, SyncTRS t2)
          VB: Public Shared Operator =(t1 As SyncTRS, t2 As SyncTRS) As Boolean
        parameters:
        - id: t1
          type: Unity.Reflect.Model.SyncTRS
        - id: t2
          type: Unity.Reflect.Model.SyncTRS
        return:
          type: System.Boolean
      overload: Unity.Reflect.Model.SyncTRS.op_Equality*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Unity.Reflect.Model.SyncTRS.op_Inequality(Unity.Reflect.Model.SyncTRS,Unity.Reflect.Model.SyncTRS)
      commentId: M:Unity.Reflect.Model.SyncTRS.op_Inequality(Unity.Reflect.Model.SyncTRS,Unity.Reflect.Model.SyncTRS)
      language: CSharp
      name:
        CSharp: Inequality(SyncTRS, SyncTRS)
        VB: Inequality(SyncTRS, SyncTRS)
      nameWithType:
        CSharp: SyncTRS.Inequality(SyncTRS, SyncTRS)
        VB: SyncTRS.Inequality(SyncTRS, SyncTRS)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncTRS.Inequality(Unity.Reflect.Model.SyncTRS, Unity.Reflect.Model.SyncTRS)
        VB: Unity.Reflect.Model.SyncTRS.Inequality(Unity.Reflect.Model.SyncTRS, Unity.Reflect.Model.SyncTRS)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: op_Inequality
        path: ''
        startLine: 1233
      syntax:
        content:
          CSharp: public static bool operator !=(SyncTRS t1, SyncTRS t2)
          VB: Public Shared Operator <>(t1 As SyncTRS, t2 As SyncTRS) As Boolean
        parameters:
        - id: t1
          type: Unity.Reflect.Model.SyncTRS
        - id: t2
          type: Unity.Reflect.Model.SyncTRS
        return:
          type: System.Boolean
      overload: Unity.Reflect.Model.SyncTRS.op_Inequality*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Unity.Reflect.Model.SyncTRS.FlipYZ
      commentId: M:Unity.Reflect.Model.SyncTRS.FlipYZ
      language: CSharp
      name:
        CSharp: FlipYZ()
        VB: FlipYZ()
      nameWithType:
        CSharp: SyncTRS.FlipYZ()
        VB: SyncTRS.FlipYZ()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncTRS.FlipYZ()
        VB: Unity.Reflect.Model.SyncTRS.FlipYZ()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: FlipYZ
        path: ''
        startLine: 1238
      syntax:
        content:
          CSharp: public SyncTRS FlipYZ()
          VB: Public Function FlipYZ As SyncTRS
        return:
          type: Unity.Reflect.Model.SyncTRS
      overload: Unity.Reflect.Model.SyncTRS.FlipYZ*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncTRS.Parser
      commentId: P:Unity.Reflect.Model.SyncTRS.Parser
      language: CSharp
      name:
        CSharp: Parser
        VB: Parser
      nameWithType:
        CSharp: SyncTRS.Parser
        VB: SyncTRS.Parser
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncTRS.Parser
        VB: Unity.Reflect.Model.SyncTRS.Parser
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Parser
        path: ''
        startLine: 5323
      syntax:
        content:
          CSharp: public static pb.MessageParser<SyncTRS> Parser { get; }
          VB: Public Shared ReadOnly Property Parser As pb.MessageParser(Of SyncTRS)
        parameters: []
        return:
          type: pb.MessageParser{Unity.Reflect.Model.SyncTRS}
      overload: Unity.Reflect.Model.SyncTRS.Parser*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Unity.Reflect.Model.SyncTRS.Descriptor
      commentId: P:Unity.Reflect.Model.SyncTRS.Descriptor
      language: CSharp
      name:
        CSharp: Descriptor
        VB: Descriptor
      nameWithType:
        CSharp: SyncTRS.Descriptor
        VB: SyncTRS.Descriptor
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncTRS.Descriptor
        VB: Unity.Reflect.Model.SyncTRS.Descriptor
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Descriptor
        path: ''
        startLine: 5326
      syntax:
        content:
          CSharp: public static pbr.MessageDescriptor Descriptor { get; }
          VB: Public Shared ReadOnly Property Descriptor As pbr.MessageDescriptor
        parameters: []
        return:
          type: pbr.MessageDescriptor
      overload: Unity.Reflect.Model.SyncTRS.Descriptor*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Unity.Reflect.Model.SyncTRS.#ctor
      commentId: M:Unity.Reflect.Model.SyncTRS.#ctor
      language: CSharp
      name:
        CSharp: SyncTRS()
        VB: SyncTRS()
      nameWithType:
        CSharp: SyncTRS.SyncTRS()
        VB: SyncTRS.SyncTRS()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncTRS.SyncTRS()
        VB: Unity.Reflect.Model.SyncTRS.SyncTRS()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: .ctor
        path: ''
        startLine: 5336
      syntax:
        content:
          CSharp: public SyncTRS()
          VB: Public Sub New
      overload: Unity.Reflect.Model.SyncTRS.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncTRS.#ctor(Unity.Reflect.Model.SyncTRS)
      commentId: M:Unity.Reflect.Model.SyncTRS.#ctor(Unity.Reflect.Model.SyncTRS)
      language: CSharp
      name:
        CSharp: SyncTRS(SyncTRS)
        VB: SyncTRS(SyncTRS)
      nameWithType:
        CSharp: SyncTRS.SyncTRS(SyncTRS)
        VB: SyncTRS.SyncTRS(SyncTRS)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncTRS.SyncTRS(Unity.Reflect.Model.SyncTRS)
        VB: Unity.Reflect.Model.SyncTRS.SyncTRS(Unity.Reflect.Model.SyncTRS)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: .ctor
        path: ''
        startLine: 5343
      syntax:
        content:
          CSharp: public SyncTRS(SyncTRS other)
          VB: Public Sub New(other As SyncTRS)
        parameters:
        - id: other
          type: Unity.Reflect.Model.SyncTRS
      overload: Unity.Reflect.Model.SyncTRS.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncTRS.Clone
      commentId: M:Unity.Reflect.Model.SyncTRS.Clone
      language: CSharp
      name:
        CSharp: Clone()
        VB: Clone()
      nameWithType:
        CSharp: SyncTRS.Clone()
        VB: SyncTRS.Clone()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncTRS.Clone()
        VB: Unity.Reflect.Model.SyncTRS.Clone()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Clone
        path: ''
        startLine: 5351
      syntax:
        content:
          CSharp: public SyncTRS Clone()
          VB: Public Function Clone As SyncTRS
        return:
          type: Unity.Reflect.Model.SyncTRS
      overload: Unity.Reflect.Model.SyncTRS.Clone*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncTRS.PositionFieldNumber
      commentId: F:Unity.Reflect.Model.SyncTRS.PositionFieldNumber
      language: CSharp
      name:
        CSharp: PositionFieldNumber
        VB: PositionFieldNumber
      nameWithType:
        CSharp: SyncTRS.PositionFieldNumber
        VB: SyncTRS.PositionFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncTRS.PositionFieldNumber
        VB: Unity.Reflect.Model.SyncTRS.PositionFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: PositionFieldNumber
        path: ''
        startLine: 5357
      summary: Field number for the &quot;position&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int PositionFieldNumber = 1
          VB: Public Const PositionFieldNumber As Integer = 1
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncTRS.Position
      commentId: P:Unity.Reflect.Model.SyncTRS.Position
      language: CSharp
      name:
        CSharp: Position
        VB: Position
      nameWithType:
        CSharp: SyncTRS.Position
        VB: SyncTRS.Position
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncTRS.Position
        VB: Unity.Reflect.Model.SyncTRS.Position
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Position
        path: ''
        startLine: 5359
      syntax:
        content:
          CSharp: public SyncFloat3 Position { get; set; }
          VB: Public Property Position As SyncFloat3
        parameters: []
        return:
          type: Unity.Reflect.Model.SyncFloat3
      overload: Unity.Reflect.Model.SyncTRS.Position*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncTRS.RotationFieldNumber
      commentId: F:Unity.Reflect.Model.SyncTRS.RotationFieldNumber
      language: CSharp
      name:
        CSharp: RotationFieldNumber
        VB: RotationFieldNumber
      nameWithType:
        CSharp: SyncTRS.RotationFieldNumber
        VB: SyncTRS.RotationFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncTRS.RotationFieldNumber
        VB: Unity.Reflect.Model.SyncTRS.RotationFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: RotationFieldNumber
        path: ''
        startLine: 5368
      summary: Field number for the &quot;rotation&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int RotationFieldNumber = 2
          VB: Public Const RotationFieldNumber As Integer = 2
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncTRS.Rotation
      commentId: P:Unity.Reflect.Model.SyncTRS.Rotation
      language: CSharp
      name:
        CSharp: Rotation
        VB: Rotation
      nameWithType:
        CSharp: SyncTRS.Rotation
        VB: SyncTRS.Rotation
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncTRS.Rotation
        VB: Unity.Reflect.Model.SyncTRS.Rotation
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Rotation
        path: ''
        startLine: 5370
      syntax:
        content:
          CSharp: public SyncQuaternion Rotation { get; set; }
          VB: Public Property Rotation As SyncQuaternion
        parameters: []
        return:
          type: Unity.Reflect.Model.SyncQuaternion
      overload: Unity.Reflect.Model.SyncTRS.Rotation*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncTRS.ScaleFieldNumber
      commentId: F:Unity.Reflect.Model.SyncTRS.ScaleFieldNumber
      language: CSharp
      name:
        CSharp: ScaleFieldNumber
        VB: ScaleFieldNumber
      nameWithType:
        CSharp: SyncTRS.ScaleFieldNumber
        VB: SyncTRS.ScaleFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncTRS.ScaleFieldNumber
        VB: Unity.Reflect.Model.SyncTRS.ScaleFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: ScaleFieldNumber
        path: ''
        startLine: 5379
      summary: Field number for the &quot;scale&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int ScaleFieldNumber = 3
          VB: Public Const ScaleFieldNumber As Integer = 3
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncTRS.Scale
      commentId: P:Unity.Reflect.Model.SyncTRS.Scale
      language: CSharp
      name:
        CSharp: Scale
        VB: Scale
      nameWithType:
        CSharp: SyncTRS.Scale
        VB: SyncTRS.Scale
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncTRS.Scale
        VB: Unity.Reflect.Model.SyncTRS.Scale
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Scale
        path: ''
        startLine: 5381
      syntax:
        content:
          CSharp: public SyncFloat3 Scale { get; set; }
          VB: Public Property Scale As SyncFloat3
        parameters: []
        return:
          type: Unity.Reflect.Model.SyncFloat3
      overload: Unity.Reflect.Model.SyncTRS.Scale*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncTRS.Equals(System.Object)
      commentId: M:Unity.Reflect.Model.SyncTRS.Equals(System.Object)
      language: CSharp
      name:
        CSharp: Equals(Object)
        VB: Equals(Object)
      nameWithType:
        CSharp: SyncTRS.Equals(Object)
        VB: SyncTRS.Equals(Object)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncTRS.Equals(System.Object)
        VB: Unity.Reflect.Model.SyncTRS.Equals(System.Object)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Equals
        path: ''
        startLine: 5389
      syntax:
        content:
          CSharp: public override bool Equals(object other)
          VB: Public Overrides Function Equals(other As Object) As Boolean
        parameters:
        - id: other
          type: System.Object
        return:
          type: System.Boolean
      overload: Unity.Reflect.Model.SyncTRS.Equals*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.Model.SyncTRS.Equals(Unity.Reflect.Model.SyncTRS)
      commentId: M:Unity.Reflect.Model.SyncTRS.Equals(Unity.Reflect.Model.SyncTRS)
      language: CSharp
      name:
        CSharp: Equals(SyncTRS)
        VB: Equals(SyncTRS)
      nameWithType:
        CSharp: SyncTRS.Equals(SyncTRS)
        VB: SyncTRS.Equals(SyncTRS)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncTRS.Equals(Unity.Reflect.Model.SyncTRS)
        VB: Unity.Reflect.Model.SyncTRS.Equals(Unity.Reflect.Model.SyncTRS)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Equals
        path: ''
        startLine: 5394
      syntax:
        content:
          CSharp: public bool Equals(SyncTRS other)
          VB: Public Function Equals(other As SyncTRS) As Boolean
        parameters:
        - id: other
          type: Unity.Reflect.Model.SyncTRS
        return:
          type: System.Boolean
      overload: Unity.Reflect.Model.SyncTRS.Equals*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncTRS.GetHashCode
      commentId: M:Unity.Reflect.Model.SyncTRS.GetHashCode
      language: CSharp
      name:
        CSharp: GetHashCode()
        VB: GetHashCode()
      nameWithType:
        CSharp: SyncTRS.GetHashCode()
        VB: SyncTRS.GetHashCode()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncTRS.GetHashCode()
        VB: Unity.Reflect.Model.SyncTRS.GetHashCode()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: GetHashCode
        path: ''
        startLine: 5408
      syntax:
        content:
          CSharp: public override int GetHashCode()
          VB: Public Overrides Function GetHashCode As Integer
        return:
          type: System.Int32
      overload: Unity.Reflect.Model.SyncTRS.GetHashCode*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.Model.SyncTRS.ToString
      commentId: M:Unity.Reflect.Model.SyncTRS.ToString
      language: CSharp
      name:
        CSharp: ToString()
        VB: ToString()
      nameWithType:
        CSharp: SyncTRS.ToString()
        VB: SyncTRS.ToString()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncTRS.ToString()
        VB: Unity.Reflect.Model.SyncTRS.ToString()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: ToString
        path: ''
        startLine: 5420
      syntax:
        content:
          CSharp: public override string ToString()
          VB: Public Overrides Function ToString As String
        return:
          type: System.String
      overload: Unity.Reflect.Model.SyncTRS.ToString*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.Model.SyncTRS.WriteTo(pb.CodedOutputStream)
      commentId: M:Unity.Reflect.Model.SyncTRS.WriteTo(pb.CodedOutputStream)
      language: CSharp
      name:
        CSharp: WriteTo(pb.CodedOutputStream)
        VB: WriteTo(pb.CodedOutputStream)
      nameWithType:
        CSharp: SyncTRS.WriteTo(pb.CodedOutputStream)
        VB: SyncTRS.WriteTo(pb.CodedOutputStream)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncTRS.WriteTo(pb.CodedOutputStream)
        VB: Unity.Reflect.Model.SyncTRS.WriteTo(pb.CodedOutputStream)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: WriteTo
        path: ''
        startLine: 5425
      syntax:
        content:
          CSharp: public void WriteTo(pb.CodedOutputStream output)
          VB: Public Sub WriteTo(output As pb.CodedOutputStream)
        parameters:
        - id: output
          type: pb.CodedOutputStream
      overload: Unity.Reflect.Model.SyncTRS.WriteTo*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncTRS.CalculateSize
      commentId: M:Unity.Reflect.Model.SyncTRS.CalculateSize
      language: CSharp
      name:
        CSharp: CalculateSize()
        VB: CalculateSize()
      nameWithType:
        CSharp: SyncTRS.CalculateSize()
        VB: SyncTRS.CalculateSize()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncTRS.CalculateSize()
        VB: Unity.Reflect.Model.SyncTRS.CalculateSize()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: CalculateSize
        path: ''
        startLine: 5444
      syntax:
        content:
          CSharp: public int CalculateSize()
          VB: Public Function CalculateSize As Integer
        return:
          type: System.Int32
      overload: Unity.Reflect.Model.SyncTRS.CalculateSize*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncTRS.MergeFrom(Unity.Reflect.Model.SyncTRS)
      commentId: M:Unity.Reflect.Model.SyncTRS.MergeFrom(Unity.Reflect.Model.SyncTRS)
      language: CSharp
      name:
        CSharp: MergeFrom(SyncTRS)
        VB: MergeFrom(SyncTRS)
      nameWithType:
        CSharp: SyncTRS.MergeFrom(SyncTRS)
        VB: SyncTRS.MergeFrom(SyncTRS)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncTRS.MergeFrom(Unity.Reflect.Model.SyncTRS)
        VB: Unity.Reflect.Model.SyncTRS.MergeFrom(Unity.Reflect.Model.SyncTRS)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: MergeFrom
        path: ''
        startLine: 5462
      syntax:
        content:
          CSharp: public void MergeFrom(SyncTRS other)
          VB: Public Sub MergeFrom(other As SyncTRS)
        parameters:
        - id: other
          type: Unity.Reflect.Model.SyncTRS
      overload: Unity.Reflect.Model.SyncTRS.MergeFrom*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncTRS.MergeFrom(pb.CodedInputStream)
      commentId: M:Unity.Reflect.Model.SyncTRS.MergeFrom(pb.CodedInputStream)
      language: CSharp
      name:
        CSharp: MergeFrom(pb.CodedInputStream)
        VB: MergeFrom(pb.CodedInputStream)
      nameWithType:
        CSharp: SyncTRS.MergeFrom(pb.CodedInputStream)
        VB: SyncTRS.MergeFrom(pb.CodedInputStream)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncTRS.MergeFrom(pb.CodedInputStream)
        VB: Unity.Reflect.Model.SyncTRS.MergeFrom(pb.CodedInputStream)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: MergeFrom
        path: ''
        startLine: 5488
      syntax:
        content:
          CSharp: public void MergeFrom(pb.CodedInputStream input)
          VB: Public Sub MergeFrom(input As pb.CodedInputStream)
        parameters:
        - id: input
          type: pb.CodedInputStream
      overload: Unity.Reflect.Model.SyncTRS.MergeFrom*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Unity.Reflect.Model.SyncTransform
    commentId: T:Unity.Reflect.Model.SyncTransform
    language: CSharp
    name:
      CSharp: SyncTransform
      VB: SyncTransform
    nameWithType:
      CSharp: SyncTransform
      VB: SyncTransform
    qualifiedName:
      CSharp: Unity.Reflect.Model.SyncTransform
      VB: Unity.Reflect.Model.SyncTransform
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect.Model
    source:
      id: SyncTransform
      path: ''
      startLine: 5760
    syntax:
      content:
        CSharp: 'public sealed class SyncTransform : pb.IMessage<SyncTransform>'
        VB: >-
          Public NotInheritable Class SyncTransform

              Inherits pb.IMessage(Of SyncTransform)
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - sealed
      - class
      VB:
      - Public
      - NotInheritable
      - Class
    items:
    - id: Unity.Reflect.Model.SyncTransform.Identity
      commentId: M:Unity.Reflect.Model.SyncTransform.Identity
      language: CSharp
      name:
        CSharp: Identity()
        VB: Identity()
      nameWithType:
        CSharp: SyncTransform.Identity()
        VB: SyncTransform.Identity()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncTransform.Identity()
        VB: Unity.Reflect.Model.SyncTransform.Identity()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Identity
        path: ''
        startLine: 1253
      syntax:
        content:
          CSharp: public static SyncTransform Identity()
          VB: Public Shared Function Identity As SyncTransform
        return:
          type: Unity.Reflect.Model.SyncTransform
      overload: Unity.Reflect.Model.SyncTransform.Identity*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Unity.Reflect.Model.SyncTransform.#ctor(Unity.Reflect.Model.SyncFloat3,Unity.Reflect.Model.SyncQuaternion,Unity.Reflect.Model.SyncFloat3)
      commentId: M:Unity.Reflect.Model.SyncTransform.#ctor(Unity.Reflect.Model.SyncFloat3,Unity.Reflect.Model.SyncQuaternion,Unity.Reflect.Model.SyncFloat3)
      language: CSharp
      name:
        CSharp: SyncTransform(SyncFloat3, SyncQuaternion, SyncFloat3)
        VB: SyncTransform(SyncFloat3, SyncQuaternion, SyncFloat3)
      nameWithType:
        CSharp: SyncTransform.SyncTransform(SyncFloat3, SyncQuaternion, SyncFloat3)
        VB: SyncTransform.SyncTransform(SyncFloat3, SyncQuaternion, SyncFloat3)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncTransform.SyncTransform(Unity.Reflect.Model.SyncFloat3, Unity.Reflect.Model.SyncQuaternion, Unity.Reflect.Model.SyncFloat3)
        VB: Unity.Reflect.Model.SyncTransform.SyncTransform(Unity.Reflect.Model.SyncFloat3, Unity.Reflect.Model.SyncQuaternion, Unity.Reflect.Model.SyncFloat3)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: .ctor
        path: ''
        startLine: 1255
      syntax:
        content:
          CSharp: public SyncTransform(SyncFloat3 position, SyncQuaternion rotation, SyncFloat3 scale)
          VB: Public Sub New(position As SyncFloat3, rotation As SyncQuaternion, scale As SyncFloat3)
        parameters:
        - id: position
          type: Unity.Reflect.Model.SyncFloat3
        - id: rotation
          type: Unity.Reflect.Model.SyncQuaternion
        - id: scale
          type: Unity.Reflect.Model.SyncFloat3
      overload: Unity.Reflect.Model.SyncTransform.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncTransform.#ctor(Unity.Reflect.Model.SyncMatrix)
      commentId: M:Unity.Reflect.Model.SyncTransform.#ctor(Unity.Reflect.Model.SyncMatrix)
      language: CSharp
      name:
        CSharp: SyncTransform(SyncMatrix)
        VB: SyncTransform(SyncMatrix)
      nameWithType:
        CSharp: SyncTransform.SyncTransform(SyncMatrix)
        VB: SyncTransform.SyncTransform(SyncMatrix)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncTransform.SyncTransform(Unity.Reflect.Model.SyncMatrix)
        VB: Unity.Reflect.Model.SyncTransform.SyncTransform(Unity.Reflect.Model.SyncMatrix)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: .ctor
        path: ''
        startLine: 1260
      syntax:
        content:
          CSharp: public SyncTransform(SyncMatrix matrix)
          VB: Public Sub New(matrix As SyncMatrix)
        parameters:
        - id: matrix
          type: Unity.Reflect.Model.SyncMatrix
      overload: Unity.Reflect.Model.SyncTransform.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncTransform.#ctor(Unity.Reflect.Model.SyncTRS)
      commentId: M:Unity.Reflect.Model.SyncTransform.#ctor(Unity.Reflect.Model.SyncTRS)
      language: CSharp
      name:
        CSharp: SyncTransform(SyncTRS)
        VB: SyncTransform(SyncTRS)
      nameWithType:
        CSharp: SyncTransform.SyncTransform(SyncTRS)
        VB: SyncTransform.SyncTransform(SyncTRS)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncTransform.SyncTransform(Unity.Reflect.Model.SyncTRS)
        VB: Unity.Reflect.Model.SyncTransform.SyncTransform(Unity.Reflect.Model.SyncTRS)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: .ctor
        path: ''
        startLine: 1266
      syntax:
        content:
          CSharp: public SyncTransform(SyncTRS trs)
          VB: Public Sub New(trs As SyncTRS)
        parameters:
        - id: trs
          type: Unity.Reflect.Model.SyncTRS
      overload: Unity.Reflect.Model.SyncTransform.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncTransform.Position
      commentId: P:Unity.Reflect.Model.SyncTransform.Position
      language: CSharp
      name:
        CSharp: Position
        VB: Position
      nameWithType:
        CSharp: SyncTransform.Position
        VB: SyncTransform.Position
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncTransform.Position
        VB: Unity.Reflect.Model.SyncTransform.Position
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Position
        path: ''
        startLine: 1271
      syntax:
        content:
          CSharp: public SyncFloat3 Position { get; set; }
          VB: Public Property Position As SyncFloat3
        parameters: []
        return:
          type: Unity.Reflect.Model.SyncFloat3
      overload: Unity.Reflect.Model.SyncTransform.Position*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncTransform.Rotation
      commentId: P:Unity.Reflect.Model.SyncTransform.Rotation
      language: CSharp
      name:
        CSharp: Rotation
        VB: Rotation
      nameWithType:
        CSharp: SyncTransform.Rotation
        VB: SyncTransform.Rotation
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncTransform.Rotation
        VB: Unity.Reflect.Model.SyncTransform.Rotation
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Rotation
        path: ''
        startLine: 1277
      syntax:
        content:
          CSharp: public SyncQuaternion Rotation { get; set; }
          VB: Public Property Rotation As SyncQuaternion
        parameters: []
        return:
          type: Unity.Reflect.Model.SyncQuaternion
      overload: Unity.Reflect.Model.SyncTransform.Rotation*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncTransform.Scale
      commentId: P:Unity.Reflect.Model.SyncTransform.Scale
      language: CSharp
      name:
        CSharp: Scale
        VB: Scale
      nameWithType:
        CSharp: SyncTransform.Scale
        VB: SyncTransform.Scale
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncTransform.Scale
        VB: Unity.Reflect.Model.SyncTransform.Scale
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Scale
        path: ''
        startLine: 1283
      syntax:
        content:
          CSharp: public SyncFloat3 Scale { get; set; }
          VB: Public Property Scale As SyncFloat3
        parameters: []
        return:
          type: Unity.Reflect.Model.SyncFloat3
      overload: Unity.Reflect.Model.SyncTransform.Scale*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncTransform.TransformPoint(Unity.Reflect.Model.SyncFloat3)
      commentId: M:Unity.Reflect.Model.SyncTransform.TransformPoint(Unity.Reflect.Model.SyncFloat3)
      language: CSharp
      name:
        CSharp: TransformPoint(SyncFloat3)
        VB: TransformPoint(SyncFloat3)
      nameWithType:
        CSharp: SyncTransform.TransformPoint(SyncFloat3)
        VB: SyncTransform.TransformPoint(SyncFloat3)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncTransform.TransformPoint(Unity.Reflect.Model.SyncFloat3)
        VB: Unity.Reflect.Model.SyncTransform.TransformPoint(Unity.Reflect.Model.SyncFloat3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: TransformPoint
        path: ''
        startLine: 1289
      syntax:
        content:
          CSharp: public SyncFloat3 TransformPoint(SyncFloat3 pt)
          VB: Public Function TransformPoint(pt As SyncFloat3) As SyncFloat3
        parameters:
        - id: pt
          type: Unity.Reflect.Model.SyncFloat3
        return:
          type: Unity.Reflect.Model.SyncFloat3
      overload: Unity.Reflect.Model.SyncTransform.TransformPoint*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncTransform.TransformVector(Unity.Reflect.Model.SyncFloat3)
      commentId: M:Unity.Reflect.Model.SyncTransform.TransformVector(Unity.Reflect.Model.SyncFloat3)
      language: CSharp
      name:
        CSharp: TransformVector(SyncFloat3)
        VB: TransformVector(SyncFloat3)
      nameWithType:
        CSharp: SyncTransform.TransformVector(SyncFloat3)
        VB: SyncTransform.TransformVector(SyncFloat3)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncTransform.TransformVector(Unity.Reflect.Model.SyncFloat3)
        VB: Unity.Reflect.Model.SyncTransform.TransformVector(Unity.Reflect.Model.SyncFloat3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: TransformVector
        path: ''
        startLine: 1295
      syntax:
        content:
          CSharp: public SyncFloat3 TransformVector(SyncFloat3 vec)
          VB: Public Function TransformVector(vec As SyncFloat3) As SyncFloat3
        parameters:
        - id: vec
          type: Unity.Reflect.Model.SyncFloat3
        return:
          type: Unity.Reflect.Model.SyncFloat3
      overload: Unity.Reflect.Model.SyncTransform.TransformVector*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncTransform.Inverse
      commentId: M:Unity.Reflect.Model.SyncTransform.Inverse
      language: CSharp
      name:
        CSharp: Inverse()
        VB: Inverse()
      nameWithType:
        CSharp: SyncTransform.Inverse()
        VB: SyncTransform.Inverse()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncTransform.Inverse()
        VB: Unity.Reflect.Model.SyncTransform.Inverse()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Inverse
        path: ''
        startLine: 1301
      syntax:
        content:
          CSharp: public SyncTransform Inverse()
          VB: Public Function Inverse As SyncTransform
        return:
          type: Unity.Reflect.Model.SyncTransform
      overload: Unity.Reflect.Model.SyncTransform.Inverse*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncTransform.op_Multiply(Unity.Reflect.Model.SyncTransform,Unity.Reflect.Model.SyncTransform)
      commentId: M:Unity.Reflect.Model.SyncTransform.op_Multiply(Unity.Reflect.Model.SyncTransform,Unity.Reflect.Model.SyncTransform)
      language: CSharp
      name:
        CSharp: Multiply(SyncTransform, SyncTransform)
        VB: Multiply(SyncTransform, SyncTransform)
      nameWithType:
        CSharp: SyncTransform.Multiply(SyncTransform, SyncTransform)
        VB: SyncTransform.Multiply(SyncTransform, SyncTransform)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncTransform.Multiply(Unity.Reflect.Model.SyncTransform, Unity.Reflect.Model.SyncTransform)
        VB: Unity.Reflect.Model.SyncTransform.Multiply(Unity.Reflect.Model.SyncTransform, Unity.Reflect.Model.SyncTransform)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: op_Multiply
        path: ''
        startLine: 1307
      syntax:
        content:
          CSharp: public static SyncTransform operator *(SyncTransform t1, SyncTransform t2)
          VB: Public Shared Operator *(t1 As SyncTransform, t2 As SyncTransform) As SyncTransform
        parameters:
        - id: t1
          type: Unity.Reflect.Model.SyncTransform
        - id: t2
          type: Unity.Reflect.Model.SyncTransform
        return:
          type: Unity.Reflect.Model.SyncTransform
      overload: Unity.Reflect.Model.SyncTransform.op_Multiply*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Unity.Reflect.Model.SyncTransform.op_Equality(Unity.Reflect.Model.SyncTransform,Unity.Reflect.Model.SyncTransform)
      commentId: M:Unity.Reflect.Model.SyncTransform.op_Equality(Unity.Reflect.Model.SyncTransform,Unity.Reflect.Model.SyncTransform)
      language: CSharp
      name:
        CSharp: Equality(SyncTransform, SyncTransform)
        VB: Equality(SyncTransform, SyncTransform)
      nameWithType:
        CSharp: SyncTransform.Equality(SyncTransform, SyncTransform)
        VB: SyncTransform.Equality(SyncTransform, SyncTransform)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncTransform.Equality(Unity.Reflect.Model.SyncTransform, Unity.Reflect.Model.SyncTransform)
        VB: Unity.Reflect.Model.SyncTransform.Equality(Unity.Reflect.Model.SyncTransform, Unity.Reflect.Model.SyncTransform)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: op_Equality
        path: ''
        startLine: 1318
      syntax:
        content:
          CSharp: public static bool operator ==(SyncTransform t1, SyncTransform t2)
          VB: Public Shared Operator =(t1 As SyncTransform, t2 As SyncTransform) As Boolean
        parameters:
        - id: t1
          type: Unity.Reflect.Model.SyncTransform
        - id: t2
          type: Unity.Reflect.Model.SyncTransform
        return:
          type: System.Boolean
      overload: Unity.Reflect.Model.SyncTransform.op_Equality*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Unity.Reflect.Model.SyncTransform.op_Inequality(Unity.Reflect.Model.SyncTransform,Unity.Reflect.Model.SyncTransform)
      commentId: M:Unity.Reflect.Model.SyncTransform.op_Inequality(Unity.Reflect.Model.SyncTransform,Unity.Reflect.Model.SyncTransform)
      language: CSharp
      name:
        CSharp: Inequality(SyncTransform, SyncTransform)
        VB: Inequality(SyncTransform, SyncTransform)
      nameWithType:
        CSharp: SyncTransform.Inequality(SyncTransform, SyncTransform)
        VB: SyncTransform.Inequality(SyncTransform, SyncTransform)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncTransform.Inequality(Unity.Reflect.Model.SyncTransform, Unity.Reflect.Model.SyncTransform)
        VB: Unity.Reflect.Model.SyncTransform.Inequality(Unity.Reflect.Model.SyncTransform, Unity.Reflect.Model.SyncTransform)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: op_Inequality
        path: ''
        startLine: 1335
      syntax:
        content:
          CSharp: public static bool operator !=(SyncTransform t1, SyncTransform t2)
          VB: Public Shared Operator <>(t1 As SyncTransform, t2 As SyncTransform) As Boolean
        parameters:
        - id: t1
          type: Unity.Reflect.Model.SyncTransform
        - id: t2
          type: Unity.Reflect.Model.SyncTransform
        return:
          type: System.Boolean
      overload: Unity.Reflect.Model.SyncTransform.op_Inequality*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Unity.Reflect.Model.SyncTransform.FlipYZ
      commentId: M:Unity.Reflect.Model.SyncTransform.FlipYZ
      language: CSharp
      name:
        CSharp: FlipYZ()
        VB: FlipYZ()
      nameWithType:
        CSharp: SyncTransform.FlipYZ()
        VB: SyncTransform.FlipYZ()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncTransform.FlipYZ()
        VB: Unity.Reflect.Model.SyncTransform.FlipYZ()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: FlipYZ
        path: ''
        startLine: 1340
      syntax:
        content:
          CSharp: public SyncTransform FlipYZ()
          VB: Public Function FlipYZ As SyncTransform
        return:
          type: Unity.Reflect.Model.SyncTransform
      overload: Unity.Reflect.Model.SyncTransform.FlipYZ*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncTransform.Parser
      commentId: P:Unity.Reflect.Model.SyncTransform.Parser
      language: CSharp
      name:
        CSharp: Parser
        VB: Parser
      nameWithType:
        CSharp: SyncTransform.Parser
        VB: SyncTransform.Parser
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncTransform.Parser
        VB: Unity.Reflect.Model.SyncTransform.Parser
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Parser
        path: ''
        startLine: 5763
      syntax:
        content:
          CSharp: public static pb.MessageParser<SyncTransform> Parser { get; }
          VB: Public Shared ReadOnly Property Parser As pb.MessageParser(Of SyncTransform)
        parameters: []
        return:
          type: pb.MessageParser{Unity.Reflect.Model.SyncTransform}
      overload: Unity.Reflect.Model.SyncTransform.Parser*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Unity.Reflect.Model.SyncTransform.Descriptor
      commentId: P:Unity.Reflect.Model.SyncTransform.Descriptor
      language: CSharp
      name:
        CSharp: Descriptor
        VB: Descriptor
      nameWithType:
        CSharp: SyncTransform.Descriptor
        VB: SyncTransform.Descriptor
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncTransform.Descriptor
        VB: Unity.Reflect.Model.SyncTransform.Descriptor
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Descriptor
        path: ''
        startLine: 5766
      syntax:
        content:
          CSharp: public static pbr.MessageDescriptor Descriptor { get; }
          VB: Public Shared ReadOnly Property Descriptor As pbr.MessageDescriptor
        parameters: []
        return:
          type: pbr.MessageDescriptor
      overload: Unity.Reflect.Model.SyncTransform.Descriptor*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Unity.Reflect.Model.SyncTransform.#ctor
      commentId: M:Unity.Reflect.Model.SyncTransform.#ctor
      language: CSharp
      name:
        CSharp: SyncTransform()
        VB: SyncTransform()
      nameWithType:
        CSharp: SyncTransform.SyncTransform()
        VB: SyncTransform.SyncTransform()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncTransform.SyncTransform()
        VB: Unity.Reflect.Model.SyncTransform.SyncTransform()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: .ctor
        path: ''
        startLine: 5776
      syntax:
        content:
          CSharp: public SyncTransform()
          VB: Public Sub New
      overload: Unity.Reflect.Model.SyncTransform.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncTransform.#ctor(Unity.Reflect.Model.SyncTransform)
      commentId: M:Unity.Reflect.Model.SyncTransform.#ctor(Unity.Reflect.Model.SyncTransform)
      language: CSharp
      name:
        CSharp: SyncTransform(SyncTransform)
        VB: SyncTransform(SyncTransform)
      nameWithType:
        CSharp: SyncTransform.SyncTransform(SyncTransform)
        VB: SyncTransform.SyncTransform(SyncTransform)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncTransform.SyncTransform(Unity.Reflect.Model.SyncTransform)
        VB: Unity.Reflect.Model.SyncTransform.SyncTransform(Unity.Reflect.Model.SyncTransform)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: .ctor
        path: ''
        startLine: 5783
      syntax:
        content:
          CSharp: public SyncTransform(SyncTransform other)
          VB: Public Sub New(other As SyncTransform)
        parameters:
        - id: other
          type: Unity.Reflect.Model.SyncTransform
      overload: Unity.Reflect.Model.SyncTransform.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncTransform.Clone
      commentId: M:Unity.Reflect.Model.SyncTransform.Clone
      language: CSharp
      name:
        CSharp: Clone()
        VB: Clone()
      nameWithType:
        CSharp: SyncTransform.Clone()
        VB: SyncTransform.Clone()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncTransform.Clone()
        VB: Unity.Reflect.Model.SyncTransform.Clone()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Clone
        path: ''
        startLine: 5797
      syntax:
        content:
          CSharp: public SyncTransform Clone()
          VB: Public Function Clone As SyncTransform
        return:
          type: Unity.Reflect.Model.SyncTransform
      overload: Unity.Reflect.Model.SyncTransform.Clone*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncTransform.TrsFieldNumber
      commentId: F:Unity.Reflect.Model.SyncTransform.TrsFieldNumber
      language: CSharp
      name:
        CSharp: TrsFieldNumber
        VB: TrsFieldNumber
      nameWithType:
        CSharp: SyncTransform.TrsFieldNumber
        VB: SyncTransform.TrsFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncTransform.TrsFieldNumber
        VB: Unity.Reflect.Model.SyncTransform.TrsFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: TrsFieldNumber
        path: ''
        startLine: 5803
      summary: Field number for the &quot;trs&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int TrsFieldNumber = 1
          VB: Public Const TrsFieldNumber As Integer = 1
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncTransform.Trs
      commentId: P:Unity.Reflect.Model.SyncTransform.Trs
      language: CSharp
      name:
        CSharp: Trs
        VB: Trs
      nameWithType:
        CSharp: SyncTransform.Trs
        VB: SyncTransform.Trs
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncTransform.Trs
        VB: Unity.Reflect.Model.SyncTransform.Trs
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Trs
        path: ''
        startLine: 5804
      syntax:
        content:
          CSharp: public SyncTRS Trs { get; set; }
          VB: Public Property Trs As SyncTRS
        parameters: []
        return:
          type: Unity.Reflect.Model.SyncTRS
      overload: Unity.Reflect.Model.SyncTransform.Trs*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncTransform.MatrixFieldNumber
      commentId: F:Unity.Reflect.Model.SyncTransform.MatrixFieldNumber
      language: CSharp
      name:
        CSharp: MatrixFieldNumber
        VB: MatrixFieldNumber
      nameWithType:
        CSharp: SyncTransform.MatrixFieldNumber
        VB: SyncTransform.MatrixFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncTransform.MatrixFieldNumber
        VB: Unity.Reflect.Model.SyncTransform.MatrixFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: MatrixFieldNumber
        path: ''
        startLine: 5814
      summary: Field number for the &quot;matrix&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int MatrixFieldNumber = 2
          VB: Public Const MatrixFieldNumber As Integer = 2
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncTransform.Matrix
      commentId: P:Unity.Reflect.Model.SyncTransform.Matrix
      language: CSharp
      name:
        CSharp: Matrix
        VB: Matrix
      nameWithType:
        CSharp: SyncTransform.Matrix
        VB: SyncTransform.Matrix
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncTransform.Matrix
        VB: Unity.Reflect.Model.SyncTransform.Matrix
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Matrix
        path: ''
        startLine: 5815
      syntax:
        content:
          CSharp: public SyncMatrix Matrix { get; set; }
          VB: Public Property Matrix As SyncMatrix
        parameters: []
        return:
          type: Unity.Reflect.Model.SyncMatrix
      overload: Unity.Reflect.Model.SyncTransform.Matrix*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncTransform.ValueCase
      commentId: P:Unity.Reflect.Model.SyncTransform.ValueCase
      language: CSharp
      name:
        CSharp: ValueCase
        VB: ValueCase
      nameWithType:
        CSharp: SyncTransform.ValueCase
        VB: SyncTransform.ValueCase
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncTransform.ValueCase
        VB: Unity.Reflect.Model.SyncTransform.ValueCase
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: ValueCase
        path: ''
        startLine: 5832
      syntax:
        content:
          CSharp: public SyncTransform.ValueOneofCase ValueCase { get; }
          VB: Public ReadOnly Property ValueCase As SyncTransform.ValueOneofCase
        parameters: []
        return:
          type: Unity.Reflect.Model.SyncTransform.ValueOneofCase
      overload: Unity.Reflect.Model.SyncTransform.ValueCase*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Unity.Reflect.Model.SyncTransform.ClearValue
      commentId: M:Unity.Reflect.Model.SyncTransform.ClearValue
      language: CSharp
      name:
        CSharp: ClearValue()
        VB: ClearValue()
      nameWithType:
        CSharp: SyncTransform.ClearValue()
        VB: SyncTransform.ClearValue()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncTransform.ClearValue()
        VB: Unity.Reflect.Model.SyncTransform.ClearValue()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: ClearValue
        path: ''
        startLine: 5837
      syntax:
        content:
          CSharp: public void ClearValue()
          VB: Public Sub ClearValue
      overload: Unity.Reflect.Model.SyncTransform.ClearValue*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncTransform.Equals(System.Object)
      commentId: M:Unity.Reflect.Model.SyncTransform.Equals(System.Object)
      language: CSharp
      name:
        CSharp: Equals(Object)
        VB: Equals(Object)
      nameWithType:
        CSharp: SyncTransform.Equals(Object)
        VB: SyncTransform.Equals(Object)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncTransform.Equals(System.Object)
        VB: Unity.Reflect.Model.SyncTransform.Equals(System.Object)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Equals
        path: ''
        startLine: 5843
      syntax:
        content:
          CSharp: public override bool Equals(object other)
          VB: Public Overrides Function Equals(other As Object) As Boolean
        parameters:
        - id: other
          type: System.Object
        return:
          type: System.Boolean
      overload: Unity.Reflect.Model.SyncTransform.Equals*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.Model.SyncTransform.Equals(Unity.Reflect.Model.SyncTransform)
      commentId: M:Unity.Reflect.Model.SyncTransform.Equals(Unity.Reflect.Model.SyncTransform)
      language: CSharp
      name:
        CSharp: Equals(SyncTransform)
        VB: Equals(SyncTransform)
      nameWithType:
        CSharp: SyncTransform.Equals(SyncTransform)
        VB: SyncTransform.Equals(SyncTransform)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncTransform.Equals(Unity.Reflect.Model.SyncTransform)
        VB: Unity.Reflect.Model.SyncTransform.Equals(Unity.Reflect.Model.SyncTransform)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Equals
        path: ''
        startLine: 5848
      syntax:
        content:
          CSharp: public bool Equals(SyncTransform other)
          VB: Public Function Equals(other As SyncTransform) As Boolean
        parameters:
        - id: other
          type: Unity.Reflect.Model.SyncTransform
        return:
          type: System.Boolean
      overload: Unity.Reflect.Model.SyncTransform.Equals*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncTransform.GetHashCode
      commentId: M:Unity.Reflect.Model.SyncTransform.GetHashCode
      language: CSharp
      name:
        CSharp: GetHashCode()
        VB: GetHashCode()
      nameWithType:
        CSharp: SyncTransform.GetHashCode()
        VB: SyncTransform.GetHashCode()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncTransform.GetHashCode()
        VB: Unity.Reflect.Model.SyncTransform.GetHashCode()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: GetHashCode
        path: ''
        startLine: 5862
      syntax:
        content:
          CSharp: public override int GetHashCode()
          VB: Public Overrides Function GetHashCode As Integer
        return:
          type: System.Int32
      overload: Unity.Reflect.Model.SyncTransform.GetHashCode*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.Model.SyncTransform.ToString
      commentId: M:Unity.Reflect.Model.SyncTransform.ToString
      language: CSharp
      name:
        CSharp: ToString()
        VB: ToString()
      nameWithType:
        CSharp: SyncTransform.ToString()
        VB: SyncTransform.ToString()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncTransform.ToString()
        VB: Unity.Reflect.Model.SyncTransform.ToString()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: ToString
        path: ''
        startLine: 5874
      syntax:
        content:
          CSharp: public override string ToString()
          VB: Public Overrides Function ToString As String
        return:
          type: System.String
      overload: Unity.Reflect.Model.SyncTransform.ToString*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.Model.SyncTransform.WriteTo(pb.CodedOutputStream)
      commentId: M:Unity.Reflect.Model.SyncTransform.WriteTo(pb.CodedOutputStream)
      language: CSharp
      name:
        CSharp: WriteTo(pb.CodedOutputStream)
        VB: WriteTo(pb.CodedOutputStream)
      nameWithType:
        CSharp: SyncTransform.WriteTo(pb.CodedOutputStream)
        VB: SyncTransform.WriteTo(pb.CodedOutputStream)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncTransform.WriteTo(pb.CodedOutputStream)
        VB: Unity.Reflect.Model.SyncTransform.WriteTo(pb.CodedOutputStream)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: WriteTo
        path: ''
        startLine: 5879
      syntax:
        content:
          CSharp: public void WriteTo(pb.CodedOutputStream output)
          VB: Public Sub WriteTo(output As pb.CodedOutputStream)
        parameters:
        - id: output
          type: pb.CodedOutputStream
      overload: Unity.Reflect.Model.SyncTransform.WriteTo*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncTransform.CalculateSize
      commentId: M:Unity.Reflect.Model.SyncTransform.CalculateSize
      language: CSharp
      name:
        CSharp: CalculateSize()
        VB: CalculateSize()
      nameWithType:
        CSharp: SyncTransform.CalculateSize()
        VB: SyncTransform.CalculateSize()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncTransform.CalculateSize()
        VB: Unity.Reflect.Model.SyncTransform.CalculateSize()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: CalculateSize
        path: ''
        startLine: 5894
      syntax:
        content:
          CSharp: public int CalculateSize()
          VB: Public Function CalculateSize As Integer
        return:
          type: System.Int32
      overload: Unity.Reflect.Model.SyncTransform.CalculateSize*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncTransform.MergeFrom(Unity.Reflect.Model.SyncTransform)
      commentId: M:Unity.Reflect.Model.SyncTransform.MergeFrom(Unity.Reflect.Model.SyncTransform)
      language: CSharp
      name:
        CSharp: MergeFrom(SyncTransform)
        VB: MergeFrom(SyncTransform)
      nameWithType:
        CSharp: SyncTransform.MergeFrom(SyncTransform)
        VB: SyncTransform.MergeFrom(SyncTransform)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncTransform.MergeFrom(Unity.Reflect.Model.SyncTransform)
        VB: Unity.Reflect.Model.SyncTransform.MergeFrom(Unity.Reflect.Model.SyncTransform)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: MergeFrom
        path: ''
        startLine: 5909
      syntax:
        content:
          CSharp: public void MergeFrom(SyncTransform other)
          VB: Public Sub MergeFrom(other As SyncTransform)
        parameters:
        - id: other
          type: Unity.Reflect.Model.SyncTransform
      overload: Unity.Reflect.Model.SyncTransform.MergeFrom*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncTransform.MergeFrom(pb.CodedInputStream)
      commentId: M:Unity.Reflect.Model.SyncTransform.MergeFrom(pb.CodedInputStream)
      language: CSharp
      name:
        CSharp: MergeFrom(pb.CodedInputStream)
        VB: MergeFrom(pb.CodedInputStream)
      nameWithType:
        CSharp: SyncTransform.MergeFrom(pb.CodedInputStream)
        VB: SyncTransform.MergeFrom(pb.CodedInputStream)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncTransform.MergeFrom(pb.CodedInputStream)
        VB: Unity.Reflect.Model.SyncTransform.MergeFrom(pb.CodedInputStream)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: MergeFrom
        path: ''
        startLine: 5932
      syntax:
        content:
          CSharp: public void MergeFrom(pb.CodedInputStream input)
          VB: Public Sub MergeFrom(input As pb.CodedInputStream)
        parameters:
        - id: input
          type: pb.CodedInputStream
      overload: Unity.Reflect.Model.SyncTransform.MergeFrom*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Unity.Reflect.Model.SyncTransform.ValueOneofCase
    commentId: T:Unity.Reflect.Model.SyncTransform.ValueOneofCase
    language: CSharp
    name:
      CSharp: SyncTransform.ValueOneofCase
      VB: SyncTransform.ValueOneofCase
    nameWithType:
      CSharp: SyncTransform.ValueOneofCase
      VB: SyncTransform.ValueOneofCase
    qualifiedName:
      CSharp: Unity.Reflect.Model.SyncTransform.ValueOneofCase
      VB: Unity.Reflect.Model.SyncTransform.ValueOneofCase
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect.Model
    source:
      id: ValueOneofCase
      path: ''
      startLine: 5826
    summary: Enum of possible cases for the &quot;value&quot; oneof.
    example: []
    syntax:
      content:
        CSharp: public enum ValueOneofCase
        VB: Public Enum ValueOneofCase
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Unity.Reflect.Model.SyncTransform.ValueOneofCase.None
      commentId: F:Unity.Reflect.Model.SyncTransform.ValueOneofCase.None
      language: CSharp
      name:
        CSharp: None
        VB: None
      nameWithType:
        CSharp: SyncTransform.ValueOneofCase.None
        VB: SyncTransform.ValueOneofCase.None
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncTransform.ValueOneofCase.None
        VB: Unity.Reflect.Model.SyncTransform.ValueOneofCase.None
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: None
        path: ''
        startLine: 5827
      syntax:
        content:
          CSharp: None = 0
          VB: None = 0
        return:
          type: Unity.Reflect.Model.SyncTransform.ValueOneofCase
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncTransform.ValueOneofCase.Trs
      commentId: F:Unity.Reflect.Model.SyncTransform.ValueOneofCase.Trs
      language: CSharp
      name:
        CSharp: Trs
        VB: Trs
      nameWithType:
        CSharp: SyncTransform.ValueOneofCase.Trs
        VB: SyncTransform.ValueOneofCase.Trs
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncTransform.ValueOneofCase.Trs
        VB: Unity.Reflect.Model.SyncTransform.ValueOneofCase.Trs
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Trs
        path: ''
        startLine: 5828
      syntax:
        content:
          CSharp: Trs = 1
          VB: Trs = 1
        return:
          type: Unity.Reflect.Model.SyncTransform.ValueOneofCase
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncTransform.ValueOneofCase.Matrix
      commentId: F:Unity.Reflect.Model.SyncTransform.ValueOneofCase.Matrix
      language: CSharp
      name:
        CSharp: Matrix
        VB: Matrix
      nameWithType:
        CSharp: SyncTransform.ValueOneofCase.Matrix
        VB: SyncTransform.ValueOneofCase.Matrix
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncTransform.ValueOneofCase.Matrix
        VB: Unity.Reflect.Model.SyncTransform.ValueOneofCase.Matrix
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Matrix
        path: ''
        startLine: 5829
      syntax:
        content:
          CSharp: Matrix = 2
          VB: Matrix = 2
        return:
          type: Unity.Reflect.Model.SyncTransform.ValueOneofCase
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Unity.Reflect.Model.SyncBoundingBox
    commentId: T:Unity.Reflect.Model.SyncBoundingBox
    language: CSharp
    name:
      CSharp: SyncBoundingBox
      VB: SyncBoundingBox
    nameWithType:
      CSharp: SyncBoundingBox
      VB: SyncBoundingBox
    qualifiedName:
      CSharp: Unity.Reflect.Model.SyncBoundingBox
      VB: Unity.Reflect.Model.SyncBoundingBox
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect.Model
    source:
      id: SyncBoundingBox
      path: ''
      startLine: 5964
    syntax:
      content:
        CSharp: 'public sealed class SyncBoundingBox : pb.IMessage<SyncBoundingBox>'
        VB: >-
          Public NotInheritable Class SyncBoundingBox

              Inherits pb.IMessage(Of SyncBoundingBox)
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - sealed
      - class
      VB:
      - Public
      - NotInheritable
      - Class
    items:
    - id: Unity.Reflect.Model.SyncBoundingBox.IsInitialized
      commentId: M:Unity.Reflect.Model.SyncBoundingBox.IsInitialized
      language: CSharp
      name:
        CSharp: IsInitialized()
        VB: IsInitialized()
      nameWithType:
        CSharp: SyncBoundingBox.IsInitialized()
        VB: SyncBoundingBox.IsInitialized()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncBoundingBox.IsInitialized()
        VB: Unity.Reflect.Model.SyncBoundingBox.IsInitialized()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: IsInitialized
        path: ''
        startLine: 1356
      syntax:
        content:
          CSharp: public bool IsInitialized()
          VB: Public Function IsInitialized As Boolean
        return:
          type: System.Boolean
      overload: Unity.Reflect.Model.SyncBoundingBox.IsInitialized*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncBoundingBox.Encapsulate(Unity.Reflect.Model.SyncFloat3)
      commentId: M:Unity.Reflect.Model.SyncBoundingBox.Encapsulate(Unity.Reflect.Model.SyncFloat3)
      language: CSharp
      name:
        CSharp: Encapsulate(SyncFloat3)
        VB: Encapsulate(SyncFloat3)
      nameWithType:
        CSharp: SyncBoundingBox.Encapsulate(SyncFloat3)
        VB: SyncBoundingBox.Encapsulate(SyncFloat3)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncBoundingBox.Encapsulate(Unity.Reflect.Model.SyncFloat3)
        VB: Unity.Reflect.Model.SyncBoundingBox.Encapsulate(Unity.Reflect.Model.SyncFloat3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Encapsulate
        path: ''
        startLine: 1361
      syntax:
        content:
          CSharp: public void Encapsulate(SyncFloat3 pt)
          VB: Public Sub Encapsulate(pt As SyncFloat3)
        parameters:
        - id: pt
          type: Unity.Reflect.Model.SyncFloat3
      overload: Unity.Reflect.Model.SyncBoundingBox.Encapsulate*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncBoundingBox.Encapsulate(Unity.Reflect.Model.SyncBoundingBox)
      commentId: M:Unity.Reflect.Model.SyncBoundingBox.Encapsulate(Unity.Reflect.Model.SyncBoundingBox)
      language: CSharp
      name:
        CSharp: Encapsulate(SyncBoundingBox)
        VB: Encapsulate(SyncBoundingBox)
      nameWithType:
        CSharp: SyncBoundingBox.Encapsulate(SyncBoundingBox)
        VB: SyncBoundingBox.Encapsulate(SyncBoundingBox)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncBoundingBox.Encapsulate(Unity.Reflect.Model.SyncBoundingBox)
        VB: Unity.Reflect.Model.SyncBoundingBox.Encapsulate(Unity.Reflect.Model.SyncBoundingBox)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Encapsulate
        path: ''
        startLine: 1380
      syntax:
        content:
          CSharp: public void Encapsulate(SyncBoundingBox bbox)
          VB: Public Sub Encapsulate(bbox As SyncBoundingBox)
        parameters:
        - id: bbox
          type: Unity.Reflect.Model.SyncBoundingBox
      overload: Unity.Reflect.Model.SyncBoundingBox.Encapsulate*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncBoundingBox.Transform(Unity.Reflect.Model.SyncTransform)
      commentId: M:Unity.Reflect.Model.SyncBoundingBox.Transform(Unity.Reflect.Model.SyncTransform)
      language: CSharp
      name:
        CSharp: Transform(SyncTransform)
        VB: Transform(SyncTransform)
      nameWithType:
        CSharp: SyncBoundingBox.Transform(SyncTransform)
        VB: SyncBoundingBox.Transform(SyncTransform)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncBoundingBox.Transform(Unity.Reflect.Model.SyncTransform)
        VB: Unity.Reflect.Model.SyncBoundingBox.Transform(Unity.Reflect.Model.SyncTransform)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Transform
        path: ''
        startLine: 1386
      syntax:
        content:
          CSharp: public SyncBoundingBox Transform(SyncTransform transform)
          VB: Public Function Transform(transform As SyncTransform) As SyncBoundingBox
        parameters:
        - id: transform
          type: Unity.Reflect.Model.SyncTransform
        return:
          type: Unity.Reflect.Model.SyncBoundingBox
      overload: Unity.Reflect.Model.SyncBoundingBox.Transform*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncBoundingBox.GetCorners
      commentId: M:Unity.Reflect.Model.SyncBoundingBox.GetCorners
      language: CSharp
      name:
        CSharp: GetCorners()
        VB: GetCorners()
      nameWithType:
        CSharp: SyncBoundingBox.GetCorners()
        VB: SyncBoundingBox.GetCorners()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncBoundingBox.GetCorners()
        VB: Unity.Reflect.Model.SyncBoundingBox.GetCorners()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: GetCorners
        path: ''
        startLine: 1399
      syntax:
        content:
          CSharp: public SyncFloat3[] GetCorners()
          VB: Public Function GetCorners As SyncFloat3()
        return:
          type: Unity.Reflect.Model.SyncFloat3[]
      overload: Unity.Reflect.Model.SyncBoundingBox.GetCorners*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncBoundingBox.Parser
      commentId: P:Unity.Reflect.Model.SyncBoundingBox.Parser
      language: CSharp
      name:
        CSharp: Parser
        VB: Parser
      nameWithType:
        CSharp: SyncBoundingBox.Parser
        VB: SyncBoundingBox.Parser
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncBoundingBox.Parser
        VB: Unity.Reflect.Model.SyncBoundingBox.Parser
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Parser
        path: ''
        startLine: 5967
      syntax:
        content:
          CSharp: public static pb.MessageParser<SyncBoundingBox> Parser { get; }
          VB: Public Shared ReadOnly Property Parser As pb.MessageParser(Of SyncBoundingBox)
        parameters: []
        return:
          type: pb.MessageParser{Unity.Reflect.Model.SyncBoundingBox}
      overload: Unity.Reflect.Model.SyncBoundingBox.Parser*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Unity.Reflect.Model.SyncBoundingBox.Descriptor
      commentId: P:Unity.Reflect.Model.SyncBoundingBox.Descriptor
      language: CSharp
      name:
        CSharp: Descriptor
        VB: Descriptor
      nameWithType:
        CSharp: SyncBoundingBox.Descriptor
        VB: SyncBoundingBox.Descriptor
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncBoundingBox.Descriptor
        VB: Unity.Reflect.Model.SyncBoundingBox.Descriptor
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Descriptor
        path: ''
        startLine: 5970
      syntax:
        content:
          CSharp: public static pbr.MessageDescriptor Descriptor { get; }
          VB: Public Shared ReadOnly Property Descriptor As pbr.MessageDescriptor
        parameters: []
        return:
          type: pbr.MessageDescriptor
      overload: Unity.Reflect.Model.SyncBoundingBox.Descriptor*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Unity.Reflect.Model.SyncBoundingBox.#ctor
      commentId: M:Unity.Reflect.Model.SyncBoundingBox.#ctor
      language: CSharp
      name:
        CSharp: SyncBoundingBox()
        VB: SyncBoundingBox()
      nameWithType:
        CSharp: SyncBoundingBox.SyncBoundingBox()
        VB: SyncBoundingBox.SyncBoundingBox()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncBoundingBox.SyncBoundingBox()
        VB: Unity.Reflect.Model.SyncBoundingBox.SyncBoundingBox()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: .ctor
        path: ''
        startLine: 5980
      syntax:
        content:
          CSharp: public SyncBoundingBox()
          VB: Public Sub New
      overload: Unity.Reflect.Model.SyncBoundingBox.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncBoundingBox.#ctor(Unity.Reflect.Model.SyncBoundingBox)
      commentId: M:Unity.Reflect.Model.SyncBoundingBox.#ctor(Unity.Reflect.Model.SyncBoundingBox)
      language: CSharp
      name:
        CSharp: SyncBoundingBox(SyncBoundingBox)
        VB: SyncBoundingBox(SyncBoundingBox)
      nameWithType:
        CSharp: SyncBoundingBox.SyncBoundingBox(SyncBoundingBox)
        VB: SyncBoundingBox.SyncBoundingBox(SyncBoundingBox)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncBoundingBox.SyncBoundingBox(Unity.Reflect.Model.SyncBoundingBox)
        VB: Unity.Reflect.Model.SyncBoundingBox.SyncBoundingBox(Unity.Reflect.Model.SyncBoundingBox)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: .ctor
        path: ''
        startLine: 5987
      syntax:
        content:
          CSharp: public SyncBoundingBox(SyncBoundingBox other)
          VB: Public Sub New(other As SyncBoundingBox)
        parameters:
        - id: other
          type: Unity.Reflect.Model.SyncBoundingBox
      overload: Unity.Reflect.Model.SyncBoundingBox.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncBoundingBox.Clone
      commentId: M:Unity.Reflect.Model.SyncBoundingBox.Clone
      language: CSharp
      name:
        CSharp: Clone()
        VB: Clone()
      nameWithType:
        CSharp: SyncBoundingBox.Clone()
        VB: SyncBoundingBox.Clone()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncBoundingBox.Clone()
        VB: Unity.Reflect.Model.SyncBoundingBox.Clone()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Clone
        path: ''
        startLine: 5994
      syntax:
        content:
          CSharp: public SyncBoundingBox Clone()
          VB: Public Function Clone As SyncBoundingBox
        return:
          type: Unity.Reflect.Model.SyncBoundingBox
      overload: Unity.Reflect.Model.SyncBoundingBox.Clone*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncBoundingBox.MinFieldNumber
      commentId: F:Unity.Reflect.Model.SyncBoundingBox.MinFieldNumber
      language: CSharp
      name:
        CSharp: MinFieldNumber
        VB: MinFieldNumber
      nameWithType:
        CSharp: SyncBoundingBox.MinFieldNumber
        VB: SyncBoundingBox.MinFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncBoundingBox.MinFieldNumber
        VB: Unity.Reflect.Model.SyncBoundingBox.MinFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: MinFieldNumber
        path: ''
        startLine: 6000
      summary: Field number for the &quot;min&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int MinFieldNumber = 1
          VB: Public Const MinFieldNumber As Integer = 1
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncBoundingBox.Min
      commentId: P:Unity.Reflect.Model.SyncBoundingBox.Min
      language: CSharp
      name:
        CSharp: Min
        VB: Min
      nameWithType:
        CSharp: SyncBoundingBox.Min
        VB: SyncBoundingBox.Min
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncBoundingBox.Min
        VB: Unity.Reflect.Model.SyncBoundingBox.Min
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Min
        path: ''
        startLine: 6002
      syntax:
        content:
          CSharp: public SyncFloat3 Min { get; set; }
          VB: Public Property Min As SyncFloat3
        parameters: []
        return:
          type: Unity.Reflect.Model.SyncFloat3
      overload: Unity.Reflect.Model.SyncBoundingBox.Min*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncBoundingBox.MaxFieldNumber
      commentId: F:Unity.Reflect.Model.SyncBoundingBox.MaxFieldNumber
      language: CSharp
      name:
        CSharp: MaxFieldNumber
        VB: MaxFieldNumber
      nameWithType:
        CSharp: SyncBoundingBox.MaxFieldNumber
        VB: SyncBoundingBox.MaxFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncBoundingBox.MaxFieldNumber
        VB: Unity.Reflect.Model.SyncBoundingBox.MaxFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: MaxFieldNumber
        path: ''
        startLine: 6011
      summary: Field number for the &quot;max&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int MaxFieldNumber = 2
          VB: Public Const MaxFieldNumber As Integer = 2
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncBoundingBox.Max
      commentId: P:Unity.Reflect.Model.SyncBoundingBox.Max
      language: CSharp
      name:
        CSharp: Max
        VB: Max
      nameWithType:
        CSharp: SyncBoundingBox.Max
        VB: SyncBoundingBox.Max
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncBoundingBox.Max
        VB: Unity.Reflect.Model.SyncBoundingBox.Max
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Max
        path: ''
        startLine: 6013
      syntax:
        content:
          CSharp: public SyncFloat3 Max { get; set; }
          VB: Public Property Max As SyncFloat3
        parameters: []
        return:
          type: Unity.Reflect.Model.SyncFloat3
      overload: Unity.Reflect.Model.SyncBoundingBox.Max*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncBoundingBox.Equals(System.Object)
      commentId: M:Unity.Reflect.Model.SyncBoundingBox.Equals(System.Object)
      language: CSharp
      name:
        CSharp: Equals(Object)
        VB: Equals(Object)
      nameWithType:
        CSharp: SyncBoundingBox.Equals(Object)
        VB: SyncBoundingBox.Equals(Object)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncBoundingBox.Equals(System.Object)
        VB: Unity.Reflect.Model.SyncBoundingBox.Equals(System.Object)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Equals
        path: ''
        startLine: 6021
      syntax:
        content:
          CSharp: public override bool Equals(object other)
          VB: Public Overrides Function Equals(other As Object) As Boolean
        parameters:
        - id: other
          type: System.Object
        return:
          type: System.Boolean
      overload: Unity.Reflect.Model.SyncBoundingBox.Equals*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.Model.SyncBoundingBox.Equals(Unity.Reflect.Model.SyncBoundingBox)
      commentId: M:Unity.Reflect.Model.SyncBoundingBox.Equals(Unity.Reflect.Model.SyncBoundingBox)
      language: CSharp
      name:
        CSharp: Equals(SyncBoundingBox)
        VB: Equals(SyncBoundingBox)
      nameWithType:
        CSharp: SyncBoundingBox.Equals(SyncBoundingBox)
        VB: SyncBoundingBox.Equals(SyncBoundingBox)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncBoundingBox.Equals(Unity.Reflect.Model.SyncBoundingBox)
        VB: Unity.Reflect.Model.SyncBoundingBox.Equals(Unity.Reflect.Model.SyncBoundingBox)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Equals
        path: ''
        startLine: 6026
      syntax:
        content:
          CSharp: public bool Equals(SyncBoundingBox other)
          VB: Public Function Equals(other As SyncBoundingBox) As Boolean
        parameters:
        - id: other
          type: Unity.Reflect.Model.SyncBoundingBox
        return:
          type: System.Boolean
      overload: Unity.Reflect.Model.SyncBoundingBox.Equals*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncBoundingBox.GetHashCode
      commentId: M:Unity.Reflect.Model.SyncBoundingBox.GetHashCode
      language: CSharp
      name:
        CSharp: GetHashCode()
        VB: GetHashCode()
      nameWithType:
        CSharp: SyncBoundingBox.GetHashCode()
        VB: SyncBoundingBox.GetHashCode()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncBoundingBox.GetHashCode()
        VB: Unity.Reflect.Model.SyncBoundingBox.GetHashCode()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: GetHashCode
        path: ''
        startLine: 6039
      syntax:
        content:
          CSharp: public override int GetHashCode()
          VB: Public Overrides Function GetHashCode As Integer
        return:
          type: System.Int32
      overload: Unity.Reflect.Model.SyncBoundingBox.GetHashCode*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.Model.SyncBoundingBox.ToString
      commentId: M:Unity.Reflect.Model.SyncBoundingBox.ToString
      language: CSharp
      name:
        CSharp: ToString()
        VB: ToString()
      nameWithType:
        CSharp: SyncBoundingBox.ToString()
        VB: SyncBoundingBox.ToString()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncBoundingBox.ToString()
        VB: Unity.Reflect.Model.SyncBoundingBox.ToString()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: ToString
        path: ''
        startLine: 6050
      syntax:
        content:
          CSharp: public override string ToString()
          VB: Public Overrides Function ToString As String
        return:
          type: System.String
      overload: Unity.Reflect.Model.SyncBoundingBox.ToString*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.Model.SyncBoundingBox.WriteTo(pb.CodedOutputStream)
      commentId: M:Unity.Reflect.Model.SyncBoundingBox.WriteTo(pb.CodedOutputStream)
      language: CSharp
      name:
        CSharp: WriteTo(pb.CodedOutputStream)
        VB: WriteTo(pb.CodedOutputStream)
      nameWithType:
        CSharp: SyncBoundingBox.WriteTo(pb.CodedOutputStream)
        VB: SyncBoundingBox.WriteTo(pb.CodedOutputStream)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncBoundingBox.WriteTo(pb.CodedOutputStream)
        VB: Unity.Reflect.Model.SyncBoundingBox.WriteTo(pb.CodedOutputStream)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: WriteTo
        path: ''
        startLine: 6055
      syntax:
        content:
          CSharp: public void WriteTo(pb.CodedOutputStream output)
          VB: Public Sub WriteTo(output As pb.CodedOutputStream)
        parameters:
        - id: output
          type: pb.CodedOutputStream
      overload: Unity.Reflect.Model.SyncBoundingBox.WriteTo*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncBoundingBox.CalculateSize
      commentId: M:Unity.Reflect.Model.SyncBoundingBox.CalculateSize
      language: CSharp
      name:
        CSharp: CalculateSize()
        VB: CalculateSize()
      nameWithType:
        CSharp: SyncBoundingBox.CalculateSize()
        VB: SyncBoundingBox.CalculateSize()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncBoundingBox.CalculateSize()
        VB: Unity.Reflect.Model.SyncBoundingBox.CalculateSize()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: CalculateSize
        path: ''
        startLine: 6070
      syntax:
        content:
          CSharp: public int CalculateSize()
          VB: Public Function CalculateSize As Integer
        return:
          type: System.Int32
      overload: Unity.Reflect.Model.SyncBoundingBox.CalculateSize*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncBoundingBox.MergeFrom(Unity.Reflect.Model.SyncBoundingBox)
      commentId: M:Unity.Reflect.Model.SyncBoundingBox.MergeFrom(Unity.Reflect.Model.SyncBoundingBox)
      language: CSharp
      name:
        CSharp: MergeFrom(SyncBoundingBox)
        VB: MergeFrom(SyncBoundingBox)
      nameWithType:
        CSharp: SyncBoundingBox.MergeFrom(SyncBoundingBox)
        VB: SyncBoundingBox.MergeFrom(SyncBoundingBox)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncBoundingBox.MergeFrom(Unity.Reflect.Model.SyncBoundingBox)
        VB: Unity.Reflect.Model.SyncBoundingBox.MergeFrom(Unity.Reflect.Model.SyncBoundingBox)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: MergeFrom
        path: ''
        startLine: 6085
      syntax:
        content:
          CSharp: public void MergeFrom(SyncBoundingBox other)
          VB: Public Sub MergeFrom(other As SyncBoundingBox)
        parameters:
        - id: other
          type: Unity.Reflect.Model.SyncBoundingBox
      overload: Unity.Reflect.Model.SyncBoundingBox.MergeFrom*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncBoundingBox.MergeFrom(pb.CodedInputStream)
      commentId: M:Unity.Reflect.Model.SyncBoundingBox.MergeFrom(pb.CodedInputStream)
      language: CSharp
      name:
        CSharp: MergeFrom(pb.CodedInputStream)
        VB: MergeFrom(pb.CodedInputStream)
      nameWithType:
        CSharp: SyncBoundingBox.MergeFrom(pb.CodedInputStream)
        VB: SyncBoundingBox.MergeFrom(pb.CodedInputStream)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncBoundingBox.MergeFrom(pb.CodedInputStream)
        VB: Unity.Reflect.Model.SyncBoundingBox.MergeFrom(pb.CodedInputStream)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: MergeFrom
        path: ''
        startLine: 6105
      syntax:
        content:
          CSharp: public void MergeFrom(pb.CodedInputStream input)
          VB: Public Sub MergeFrom(input As pb.CodedInputStream)
        parameters:
        - id: input
          type: pb.CodedInputStream
      overload: Unity.Reflect.Model.SyncBoundingBox.MergeFrom*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Unity.Reflect.Model.SyncMesh
    commentId: T:Unity.Reflect.Model.SyncMesh
    language: CSharp
    name:
      CSharp: SyncMesh
      VB: SyncMesh
    nameWithType:
      CSharp: SyncMesh
      VB: SyncMesh
    qualifiedName:
      CSharp: Unity.Reflect.Model.SyncMesh
      VB: Unity.Reflect.Model.SyncMesh
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect.Model
    source:
      id: SyncMesh
      path: ''
      startLine: 6183
    syntax:
      content:
        CSharp: 'public sealed class SyncMesh : pb.IMessage<SyncMesh>, ISyncModel, ISyncSendable'
        VB: >-
          Public NotInheritable Class SyncMesh

              Inherits pb.IMessage(Of SyncMesh)

              Implements ISyncModel, ISyncSendable
    inheritance:
    - System.Object
    implements:
    - Unity.Reflect.Model.ISyncModel
    modifiers:
      CSharp:
      - public
      - sealed
      - class
      VB:
      - Public
      - NotInheritable
      - Class
    items:
    - id: Unity.Reflect.Model.SyncMesh.Extension
      commentId: F:Unity.Reflect.Model.SyncMesh.Extension
      language: CSharp
      name:
        CSharp: Extension
        VB: Extension
      nameWithType:
        CSharp: SyncMesh.Extension
        VB: SyncMesh.Extension
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMesh.Extension
        VB: Unity.Reflect.Model.SyncMesh.Extension
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Extension
        path: ''
        startLine: 1422
      syntax:
        content:
          CSharp: public static string Extension
          VB: Public Shared Extension As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Unity.Reflect.Model.SyncMesh.#ctor(System.String,Unity.Reflect.Model.SyncFloat3[],Unity.Reflect.Model.SyncFloat3[],Unity.Reflect.Model.SyncFloat2[],Unity.Reflect.Model.SyncSubMesh[])
      commentId: M:Unity.Reflect.Model.SyncMesh.#ctor(System.String,Unity.Reflect.Model.SyncFloat3[],Unity.Reflect.Model.SyncFloat3[],Unity.Reflect.Model.SyncFloat2[],Unity.Reflect.Model.SyncSubMesh[])
      language: CSharp
      name:
        CSharp: SyncMesh(String, SyncFloat3[], SyncFloat3[], SyncFloat2[], SyncSubMesh[])
        VB: SyncMesh(String, SyncFloat3(), SyncFloat3(), SyncFloat2(), SyncSubMesh())
      nameWithType:
        CSharp: SyncMesh.SyncMesh(String, SyncFloat3[], SyncFloat3[], SyncFloat2[], SyncSubMesh[])
        VB: SyncMesh.SyncMesh(String, SyncFloat3(), SyncFloat3(), SyncFloat2(), SyncSubMesh())
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMesh.SyncMesh(System.String, Unity.Reflect.Model.SyncFloat3[], Unity.Reflect.Model.SyncFloat3[], Unity.Reflect.Model.SyncFloat2[], Unity.Reflect.Model.SyncSubMesh[])
        VB: Unity.Reflect.Model.SyncMesh.SyncMesh(System.String, Unity.Reflect.Model.SyncFloat3(), Unity.Reflect.Model.SyncFloat3(), Unity.Reflect.Model.SyncFloat2(), Unity.Reflect.Model.SyncSubMesh())
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: .ctor
        path: ''
        startLine: 1424
      syntax:
        content:
          CSharp: public SyncMesh(string name, SyncFloat3[] vertices, SyncFloat3[] normals, SyncFloat2[] uvs, SyncSubMesh[] subMeshes)
          VB: Public Sub New(name As String, vertices As SyncFloat3(), normals As SyncFloat3(), uvs As SyncFloat2(), subMeshes As SyncSubMesh())
        parameters:
        - id: name
          type: System.String
        - id: vertices
          type: Unity.Reflect.Model.SyncFloat3[]
        - id: normals
          type: Unity.Reflect.Model.SyncFloat3[]
        - id: uvs
          type: Unity.Reflect.Model.SyncFloat2[]
        - id: subMeshes
          type: Unity.Reflect.Model.SyncSubMesh[]
      overload: Unity.Reflect.Model.SyncMesh.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncMesh.Parser
      commentId: P:Unity.Reflect.Model.SyncMesh.Parser
      language: CSharp
      name:
        CSharp: Parser
        VB: Parser
      nameWithType:
        CSharp: SyncMesh.Parser
        VB: SyncMesh.Parser
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMesh.Parser
        VB: Unity.Reflect.Model.SyncMesh.Parser
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Parser
        path: ''
        startLine: 6186
      syntax:
        content:
          CSharp: public static pb.MessageParser<SyncMesh> Parser { get; }
          VB: Public Shared ReadOnly Property Parser As pb.MessageParser(Of SyncMesh)
        parameters: []
        return:
          type: pb.MessageParser{Unity.Reflect.Model.SyncMesh}
      overload: Unity.Reflect.Model.SyncMesh.Parser*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Unity.Reflect.Model.SyncMesh.Descriptor
      commentId: P:Unity.Reflect.Model.SyncMesh.Descriptor
      language: CSharp
      name:
        CSharp: Descriptor
        VB: Descriptor
      nameWithType:
        CSharp: SyncMesh.Descriptor
        VB: SyncMesh.Descriptor
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMesh.Descriptor
        VB: Unity.Reflect.Model.SyncMesh.Descriptor
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Descriptor
        path: ''
        startLine: 6189
      syntax:
        content:
          CSharp: public static pbr.MessageDescriptor Descriptor { get; }
          VB: Public Shared ReadOnly Property Descriptor As pbr.MessageDescriptor
        parameters: []
        return:
          type: pbr.MessageDescriptor
      overload: Unity.Reflect.Model.SyncMesh.Descriptor*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Unity.Reflect.Model.SyncMesh.#ctor
      commentId: M:Unity.Reflect.Model.SyncMesh.#ctor
      language: CSharp
      name:
        CSharp: SyncMesh()
        VB: SyncMesh()
      nameWithType:
        CSharp: SyncMesh.SyncMesh()
        VB: SyncMesh.SyncMesh()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMesh.SyncMesh()
        VB: Unity.Reflect.Model.SyncMesh.SyncMesh()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: .ctor
        path: ''
        startLine: 6199
      syntax:
        content:
          CSharp: public SyncMesh()
          VB: Public Sub New
      overload: Unity.Reflect.Model.SyncMesh.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncMesh.#ctor(Unity.Reflect.Model.SyncMesh)
      commentId: M:Unity.Reflect.Model.SyncMesh.#ctor(Unity.Reflect.Model.SyncMesh)
      language: CSharp
      name:
        CSharp: SyncMesh(SyncMesh)
        VB: SyncMesh(SyncMesh)
      nameWithType:
        CSharp: SyncMesh.SyncMesh(SyncMesh)
        VB: SyncMesh.SyncMesh(SyncMesh)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMesh.SyncMesh(Unity.Reflect.Model.SyncMesh)
        VB: Unity.Reflect.Model.SyncMesh.SyncMesh(Unity.Reflect.Model.SyncMesh)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: .ctor
        path: ''
        startLine: 6206
      syntax:
        content:
          CSharp: public SyncMesh(SyncMesh other)
          VB: Public Sub New(other As SyncMesh)
        parameters:
        - id: other
          type: Unity.Reflect.Model.SyncMesh
      overload: Unity.Reflect.Model.SyncMesh.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncMesh.Clone
      commentId: M:Unity.Reflect.Model.SyncMesh.Clone
      language: CSharp
      name:
        CSharp: Clone()
        VB: Clone()
      nameWithType:
        CSharp: SyncMesh.Clone()
        VB: SyncMesh.Clone()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMesh.Clone()
        VB: Unity.Reflect.Model.SyncMesh.Clone()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Clone
        path: ''
        startLine: 6216
      syntax:
        content:
          CSharp: public SyncMesh Clone()
          VB: Public Function Clone As SyncMesh
        return:
          type: Unity.Reflect.Model.SyncMesh
      overload: Unity.Reflect.Model.SyncMesh.Clone*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncMesh.NameFieldNumber
      commentId: F:Unity.Reflect.Model.SyncMesh.NameFieldNumber
      language: CSharp
      name:
        CSharp: NameFieldNumber
        VB: NameFieldNumber
      nameWithType:
        CSharp: SyncMesh.NameFieldNumber
        VB: SyncMesh.NameFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMesh.NameFieldNumber
        VB: Unity.Reflect.Model.SyncMesh.NameFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: NameFieldNumber
        path: ''
        startLine: 6222
      summary: Field number for the &quot;name&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int NameFieldNumber = 1
          VB: Public Const NameFieldNumber As Integer = 1
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncMesh.Name
      commentId: P:Unity.Reflect.Model.SyncMesh.Name
      language: CSharp
      name:
        CSharp: Name
        VB: Name
      nameWithType:
        CSharp: SyncMesh.Name
        VB: SyncMesh.Name
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMesh.Name
        VB: Unity.Reflect.Model.SyncMesh.Name
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Name
        path: ''
        startLine: 6224
      syntax:
        content:
          CSharp: public string Name { get; set; }
          VB: Public Property Name As String
        parameters: []
        return:
          type: System.String
      overload: Unity.Reflect.Model.SyncMesh.Name*
      implements:
      - Unity.Reflect.Model.ISyncModel.Name
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncMesh.VerticesFieldNumber
      commentId: F:Unity.Reflect.Model.SyncMesh.VerticesFieldNumber
      language: CSharp
      name:
        CSharp: VerticesFieldNumber
        VB: VerticesFieldNumber
      nameWithType:
        CSharp: SyncMesh.VerticesFieldNumber
        VB: SyncMesh.VerticesFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMesh.VerticesFieldNumber
        VB: Unity.Reflect.Model.SyncMesh.VerticesFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: VerticesFieldNumber
        path: ''
        startLine: 6233
      summary: Field number for the &quot;vertices&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int VerticesFieldNumber = 2
          VB: Public Const VerticesFieldNumber As Integer = 2
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncMesh.Vertices
      commentId: P:Unity.Reflect.Model.SyncMesh.Vertices
      language: CSharp
      name:
        CSharp: Vertices
        VB: Vertices
      nameWithType:
        CSharp: SyncMesh.Vertices
        VB: SyncMesh.Vertices
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMesh.Vertices
        VB: Unity.Reflect.Model.SyncMesh.Vertices
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Vertices
        path: ''
        startLine: 6237
      syntax:
        content:
          CSharp: public pbc.RepeatedField<SyncFloat3> Vertices { get; }
          VB: Public ReadOnly Property Vertices As pbc.RepeatedField(Of SyncFloat3)
        parameters: []
        return:
          type: pbc.RepeatedField{Unity.Reflect.Model.SyncFloat3}
      overload: Unity.Reflect.Model.SyncMesh.Vertices*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Unity.Reflect.Model.SyncMesh.NormalsFieldNumber
      commentId: F:Unity.Reflect.Model.SyncMesh.NormalsFieldNumber
      language: CSharp
      name:
        CSharp: NormalsFieldNumber
        VB: NormalsFieldNumber
      nameWithType:
        CSharp: SyncMesh.NormalsFieldNumber
        VB: SyncMesh.NormalsFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMesh.NormalsFieldNumber
        VB: Unity.Reflect.Model.SyncMesh.NormalsFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: NormalsFieldNumber
        path: ''
        startLine: 6243
      summary: Field number for the &quot;normals&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int NormalsFieldNumber = 3
          VB: Public Const NormalsFieldNumber As Integer = 3
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncMesh.Normals
      commentId: P:Unity.Reflect.Model.SyncMesh.Normals
      language: CSharp
      name:
        CSharp: Normals
        VB: Normals
      nameWithType:
        CSharp: SyncMesh.Normals
        VB: SyncMesh.Normals
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMesh.Normals
        VB: Unity.Reflect.Model.SyncMesh.Normals
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Normals
        path: ''
        startLine: 6247
      syntax:
        content:
          CSharp: public pbc.RepeatedField<SyncFloat3> Normals { get; }
          VB: Public ReadOnly Property Normals As pbc.RepeatedField(Of SyncFloat3)
        parameters: []
        return:
          type: pbc.RepeatedField{Unity.Reflect.Model.SyncFloat3}
      overload: Unity.Reflect.Model.SyncMesh.Normals*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Unity.Reflect.Model.SyncMesh.UvsFieldNumber
      commentId: F:Unity.Reflect.Model.SyncMesh.UvsFieldNumber
      language: CSharp
      name:
        CSharp: UvsFieldNumber
        VB: UvsFieldNumber
      nameWithType:
        CSharp: SyncMesh.UvsFieldNumber
        VB: SyncMesh.UvsFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMesh.UvsFieldNumber
        VB: Unity.Reflect.Model.SyncMesh.UvsFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: UvsFieldNumber
        path: ''
        startLine: 6253
      summary: Field number for the &quot;uvs&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int UvsFieldNumber = 4
          VB: Public Const UvsFieldNumber As Integer = 4
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncMesh.Uvs
      commentId: P:Unity.Reflect.Model.SyncMesh.Uvs
      language: CSharp
      name:
        CSharp: Uvs
        VB: Uvs
      nameWithType:
        CSharp: SyncMesh.Uvs
        VB: SyncMesh.Uvs
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMesh.Uvs
        VB: Unity.Reflect.Model.SyncMesh.Uvs
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Uvs
        path: ''
        startLine: 6257
      syntax:
        content:
          CSharp: public pbc.RepeatedField<SyncFloat2> Uvs { get; }
          VB: Public ReadOnly Property Uvs As pbc.RepeatedField(Of SyncFloat2)
        parameters: []
        return:
          type: pbc.RepeatedField{Unity.Reflect.Model.SyncFloat2}
      overload: Unity.Reflect.Model.SyncMesh.Uvs*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Unity.Reflect.Model.SyncMesh.SubmeshesFieldNumber
      commentId: F:Unity.Reflect.Model.SyncMesh.SubmeshesFieldNumber
      language: CSharp
      name:
        CSharp: SubmeshesFieldNumber
        VB: SubmeshesFieldNumber
      nameWithType:
        CSharp: SyncMesh.SubmeshesFieldNumber
        VB: SyncMesh.SubmeshesFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMesh.SubmeshesFieldNumber
        VB: Unity.Reflect.Model.SyncMesh.SubmeshesFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: SubmeshesFieldNumber
        path: ''
        startLine: 6263
      summary: Field number for the &quot;submeshes&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int SubmeshesFieldNumber = 5
          VB: Public Const SubmeshesFieldNumber As Integer = 5
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncMesh.Submeshes
      commentId: P:Unity.Reflect.Model.SyncMesh.Submeshes
      language: CSharp
      name:
        CSharp: Submeshes
        VB: Submeshes
      nameWithType:
        CSharp: SyncMesh.Submeshes
        VB: SyncMesh.Submeshes
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMesh.Submeshes
        VB: Unity.Reflect.Model.SyncMesh.Submeshes
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Submeshes
        path: ''
        startLine: 6267
      syntax:
        content:
          CSharp: public pbc.RepeatedField<SyncSubMesh> Submeshes { get; }
          VB: Public ReadOnly Property Submeshes As pbc.RepeatedField(Of SyncSubMesh)
        parameters: []
        return:
          type: pbc.RepeatedField{Unity.Reflect.Model.SyncSubMesh}
      overload: Unity.Reflect.Model.SyncMesh.Submeshes*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Unity.Reflect.Model.SyncMesh.Equals(System.Object)
      commentId: M:Unity.Reflect.Model.SyncMesh.Equals(System.Object)
      language: CSharp
      name:
        CSharp: Equals(Object)
        VB: Equals(Object)
      nameWithType:
        CSharp: SyncMesh.Equals(Object)
        VB: SyncMesh.Equals(Object)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMesh.Equals(System.Object)
        VB: Unity.Reflect.Model.SyncMesh.Equals(System.Object)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Equals
        path: ''
        startLine: 6272
      syntax:
        content:
          CSharp: public override bool Equals(object other)
          VB: Public Overrides Function Equals(other As Object) As Boolean
        parameters:
        - id: other
          type: System.Object
        return:
          type: System.Boolean
      overload: Unity.Reflect.Model.SyncMesh.Equals*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.Model.SyncMesh.Equals(Unity.Reflect.Model.SyncMesh)
      commentId: M:Unity.Reflect.Model.SyncMesh.Equals(Unity.Reflect.Model.SyncMesh)
      language: CSharp
      name:
        CSharp: Equals(SyncMesh)
        VB: Equals(SyncMesh)
      nameWithType:
        CSharp: SyncMesh.Equals(SyncMesh)
        VB: SyncMesh.Equals(SyncMesh)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMesh.Equals(Unity.Reflect.Model.SyncMesh)
        VB: Unity.Reflect.Model.SyncMesh.Equals(Unity.Reflect.Model.SyncMesh)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Equals
        path: ''
        startLine: 6277
      syntax:
        content:
          CSharp: public bool Equals(SyncMesh other)
          VB: Public Function Equals(other As SyncMesh) As Boolean
        parameters:
        - id: other
          type: Unity.Reflect.Model.SyncMesh
        return:
          type: System.Boolean
      overload: Unity.Reflect.Model.SyncMesh.Equals*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncMesh.GetHashCode
      commentId: M:Unity.Reflect.Model.SyncMesh.GetHashCode
      language: CSharp
      name:
        CSharp: GetHashCode()
        VB: GetHashCode()
      nameWithType:
        CSharp: SyncMesh.GetHashCode()
        VB: SyncMesh.GetHashCode()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMesh.GetHashCode()
        VB: Unity.Reflect.Model.SyncMesh.GetHashCode()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: GetHashCode
        path: ''
        startLine: 6293
      syntax:
        content:
          CSharp: public override int GetHashCode()
          VB: Public Overrides Function GetHashCode As Integer
        return:
          type: System.Int32
      overload: Unity.Reflect.Model.SyncMesh.GetHashCode*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.Model.SyncMesh.ToString
      commentId: M:Unity.Reflect.Model.SyncMesh.ToString
      language: CSharp
      name:
        CSharp: ToString()
        VB: ToString()
      nameWithType:
        CSharp: SyncMesh.ToString()
        VB: SyncMesh.ToString()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMesh.ToString()
        VB: Unity.Reflect.Model.SyncMesh.ToString()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: ToString
        path: ''
        startLine: 6307
      syntax:
        content:
          CSharp: public override string ToString()
          VB: Public Overrides Function ToString As String
        return:
          type: System.String
      overload: Unity.Reflect.Model.SyncMesh.ToString*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.Model.SyncMesh.WriteTo(pb.CodedOutputStream)
      commentId: M:Unity.Reflect.Model.SyncMesh.WriteTo(pb.CodedOutputStream)
      language: CSharp
      name:
        CSharp: WriteTo(pb.CodedOutputStream)
        VB: WriteTo(pb.CodedOutputStream)
      nameWithType:
        CSharp: SyncMesh.WriteTo(pb.CodedOutputStream)
        VB: SyncMesh.WriteTo(pb.CodedOutputStream)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMesh.WriteTo(pb.CodedOutputStream)
        VB: Unity.Reflect.Model.SyncMesh.WriteTo(pb.CodedOutputStream)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: WriteTo
        path: ''
        startLine: 6312
      syntax:
        content:
          CSharp: public void WriteTo(pb.CodedOutputStream output)
          VB: Public Sub WriteTo(output As pb.CodedOutputStream)
        parameters:
        - id: output
          type: pb.CodedOutputStream
      overload: Unity.Reflect.Model.SyncMesh.WriteTo*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncMesh.CalculateSize
      commentId: M:Unity.Reflect.Model.SyncMesh.CalculateSize
      language: CSharp
      name:
        CSharp: CalculateSize()
        VB: CalculateSize()
      nameWithType:
        CSharp: SyncMesh.CalculateSize()
        VB: SyncMesh.CalculateSize()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMesh.CalculateSize()
        VB: Unity.Reflect.Model.SyncMesh.CalculateSize()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: CalculateSize
        path: ''
        startLine: 6327
      syntax:
        content:
          CSharp: public int CalculateSize()
          VB: Public Function CalculateSize As Integer
        return:
          type: System.Int32
      overload: Unity.Reflect.Model.SyncMesh.CalculateSize*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncMesh.MergeFrom(Unity.Reflect.Model.SyncMesh)
      commentId: M:Unity.Reflect.Model.SyncMesh.MergeFrom(Unity.Reflect.Model.SyncMesh)
      language: CSharp
      name:
        CSharp: MergeFrom(SyncMesh)
        VB: MergeFrom(SyncMesh)
      nameWithType:
        CSharp: SyncMesh.MergeFrom(SyncMesh)
        VB: SyncMesh.MergeFrom(SyncMesh)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMesh.MergeFrom(Unity.Reflect.Model.SyncMesh)
        VB: Unity.Reflect.Model.SyncMesh.MergeFrom(Unity.Reflect.Model.SyncMesh)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: MergeFrom
        path: ''
        startLine: 6343
      syntax:
        content:
          CSharp: public void MergeFrom(SyncMesh other)
          VB: Public Sub MergeFrom(other As SyncMesh)
        parameters:
        - id: other
          type: Unity.Reflect.Model.SyncMesh
      overload: Unity.Reflect.Model.SyncMesh.MergeFrom*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncMesh.MergeFrom(pb.CodedInputStream)
      commentId: M:Unity.Reflect.Model.SyncMesh.MergeFrom(pb.CodedInputStream)
      language: CSharp
      name:
        CSharp: MergeFrom(pb.CodedInputStream)
        VB: MergeFrom(pb.CodedInputStream)
      nameWithType:
        CSharp: SyncMesh.MergeFrom(pb.CodedInputStream)
        VB: SyncMesh.MergeFrom(pb.CodedInputStream)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncMesh.MergeFrom(pb.CodedInputStream)
        VB: Unity.Reflect.Model.SyncMesh.MergeFrom(pb.CodedInputStream)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: MergeFrom
        path: ''
        startLine: 6358
      syntax:
        content:
          CSharp: public void MergeFrom(pb.CodedInputStream input)
          VB: Public Sub MergeFrom(input As pb.CodedInputStream)
        parameters:
        - id: input
          type: pb.CodedInputStream
      overload: Unity.Reflect.Model.SyncMesh.MergeFrom*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Unity.Reflect.Model.SyncSubMesh
    commentId: T:Unity.Reflect.Model.SyncSubMesh
    language: CSharp
    name:
      CSharp: SyncSubMesh
      VB: SyncSubMesh
    nameWithType:
      CSharp: SyncSubMesh
      VB: SyncSubMesh
    qualifiedName:
      CSharp: Unity.Reflect.Model.SyncSubMesh
      VB: Unity.Reflect.Model.SyncSubMesh
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect.Model
    source:
      id: SyncSubMesh
      path: ''
      startLine: 6392
    syntax:
      content:
        CSharp: 'public sealed class SyncSubMesh : pb.IMessage<SyncSubMesh>'
        VB: >-
          Public NotInheritable Class SyncSubMesh

              Inherits pb.IMessage(Of SyncSubMesh)
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - sealed
      - class
      VB:
      - Public
      - NotInheritable
      - Class
    items:
    - id: Unity.Reflect.Model.SyncSubMesh.#ctor(System.Int32[])
      commentId: M:Unity.Reflect.Model.SyncSubMesh.#ctor(System.Int32[])
      language: CSharp
      name:
        CSharp: SyncSubMesh(Int32[])
        VB: SyncSubMesh(Int32())
      nameWithType:
        CSharp: SyncSubMesh.SyncSubMesh(Int32[])
        VB: SyncSubMesh.SyncSubMesh(Int32())
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncSubMesh.SyncSubMesh(System.Int32[])
        VB: Unity.Reflect.Model.SyncSubMesh.SyncSubMesh(System.Int32())
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: .ctor
        path: ''
        startLine: 1446
      syntax:
        content:
          CSharp: public SyncSubMesh(int[] triangles)
          VB: Public Sub New(triangles As Integer())
        parameters:
        - id: triangles
          type: System.Int32[]
      overload: Unity.Reflect.Model.SyncSubMesh.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncSubMesh.Parser
      commentId: P:Unity.Reflect.Model.SyncSubMesh.Parser
      language: CSharp
      name:
        CSharp: Parser
        VB: Parser
      nameWithType:
        CSharp: SyncSubMesh.Parser
        VB: SyncSubMesh.Parser
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncSubMesh.Parser
        VB: Unity.Reflect.Model.SyncSubMesh.Parser
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Parser
        path: ''
        startLine: 6395
      syntax:
        content:
          CSharp: public static pb.MessageParser<SyncSubMesh> Parser { get; }
          VB: Public Shared ReadOnly Property Parser As pb.MessageParser(Of SyncSubMesh)
        parameters: []
        return:
          type: pb.MessageParser{Unity.Reflect.Model.SyncSubMesh}
      overload: Unity.Reflect.Model.SyncSubMesh.Parser*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Unity.Reflect.Model.SyncSubMesh.Descriptor
      commentId: P:Unity.Reflect.Model.SyncSubMesh.Descriptor
      language: CSharp
      name:
        CSharp: Descriptor
        VB: Descriptor
      nameWithType:
        CSharp: SyncSubMesh.Descriptor
        VB: SyncSubMesh.Descriptor
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncSubMesh.Descriptor
        VB: Unity.Reflect.Model.SyncSubMesh.Descriptor
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Descriptor
        path: ''
        startLine: 6398
      syntax:
        content:
          CSharp: public static pbr.MessageDescriptor Descriptor { get; }
          VB: Public Shared ReadOnly Property Descriptor As pbr.MessageDescriptor
        parameters: []
        return:
          type: pbr.MessageDescriptor
      overload: Unity.Reflect.Model.SyncSubMesh.Descriptor*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Unity.Reflect.Model.SyncSubMesh.#ctor
      commentId: M:Unity.Reflect.Model.SyncSubMesh.#ctor
      language: CSharp
      name:
        CSharp: SyncSubMesh()
        VB: SyncSubMesh()
      nameWithType:
        CSharp: SyncSubMesh.SyncSubMesh()
        VB: SyncSubMesh.SyncSubMesh()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncSubMesh.SyncSubMesh()
        VB: Unity.Reflect.Model.SyncSubMesh.SyncSubMesh()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: .ctor
        path: ''
        startLine: 6408
      syntax:
        content:
          CSharp: public SyncSubMesh()
          VB: Public Sub New
      overload: Unity.Reflect.Model.SyncSubMesh.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncSubMesh.#ctor(Unity.Reflect.Model.SyncSubMesh)
      commentId: M:Unity.Reflect.Model.SyncSubMesh.#ctor(Unity.Reflect.Model.SyncSubMesh)
      language: CSharp
      name:
        CSharp: SyncSubMesh(SyncSubMesh)
        VB: SyncSubMesh(SyncSubMesh)
      nameWithType:
        CSharp: SyncSubMesh.SyncSubMesh(SyncSubMesh)
        VB: SyncSubMesh.SyncSubMesh(SyncSubMesh)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncSubMesh.SyncSubMesh(Unity.Reflect.Model.SyncSubMesh)
        VB: Unity.Reflect.Model.SyncSubMesh.SyncSubMesh(Unity.Reflect.Model.SyncSubMesh)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: .ctor
        path: ''
        startLine: 6415
      syntax:
        content:
          CSharp: public SyncSubMesh(SyncSubMesh other)
          VB: Public Sub New(other As SyncSubMesh)
        parameters:
        - id: other
          type: Unity.Reflect.Model.SyncSubMesh
      overload: Unity.Reflect.Model.SyncSubMesh.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncSubMesh.Clone
      commentId: M:Unity.Reflect.Model.SyncSubMesh.Clone
      language: CSharp
      name:
        CSharp: Clone()
        VB: Clone()
      nameWithType:
        CSharp: SyncSubMesh.Clone()
        VB: SyncSubMesh.Clone()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncSubMesh.Clone()
        VB: Unity.Reflect.Model.SyncSubMesh.Clone()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Clone
        path: ''
        startLine: 6421
      syntax:
        content:
          CSharp: public SyncSubMesh Clone()
          VB: Public Function Clone As SyncSubMesh
        return:
          type: Unity.Reflect.Model.SyncSubMesh
      overload: Unity.Reflect.Model.SyncSubMesh.Clone*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncSubMesh.TrianglesFieldNumber
      commentId: F:Unity.Reflect.Model.SyncSubMesh.TrianglesFieldNumber
      language: CSharp
      name:
        CSharp: TrianglesFieldNumber
        VB: TrianglesFieldNumber
      nameWithType:
        CSharp: SyncSubMesh.TrianglesFieldNumber
        VB: SyncSubMesh.TrianglesFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncSubMesh.TrianglesFieldNumber
        VB: Unity.Reflect.Model.SyncSubMesh.TrianglesFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: TrianglesFieldNumber
        path: ''
        startLine: 6427
      summary: Field number for the &quot;triangles&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int TrianglesFieldNumber = 1
          VB: Public Const TrianglesFieldNumber As Integer = 1
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncSubMesh.Triangles
      commentId: P:Unity.Reflect.Model.SyncSubMesh.Triangles
      language: CSharp
      name:
        CSharp: Triangles
        VB: Triangles
      nameWithType:
        CSharp: SyncSubMesh.Triangles
        VB: SyncSubMesh.Triangles
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncSubMesh.Triangles
        VB: Unity.Reflect.Model.SyncSubMesh.Triangles
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Triangles
        path: ''
        startLine: 6431
      syntax:
        content:
          CSharp: public pbc.RepeatedField<int> Triangles { get; }
          VB: Public ReadOnly Property Triangles As pbc.RepeatedField(Of Integer)
        parameters: []
        return:
          type: pbc.RepeatedField{System.Int32}
      overload: Unity.Reflect.Model.SyncSubMesh.Triangles*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Unity.Reflect.Model.SyncSubMesh.Equals(System.Object)
      commentId: M:Unity.Reflect.Model.SyncSubMesh.Equals(System.Object)
      language: CSharp
      name:
        CSharp: Equals(Object)
        VB: Equals(Object)
      nameWithType:
        CSharp: SyncSubMesh.Equals(Object)
        VB: SyncSubMesh.Equals(Object)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncSubMesh.Equals(System.Object)
        VB: Unity.Reflect.Model.SyncSubMesh.Equals(System.Object)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Equals
        path: ''
        startLine: 6436
      syntax:
        content:
          CSharp: public override bool Equals(object other)
          VB: Public Overrides Function Equals(other As Object) As Boolean
        parameters:
        - id: other
          type: System.Object
        return:
          type: System.Boolean
      overload: Unity.Reflect.Model.SyncSubMesh.Equals*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.Model.SyncSubMesh.Equals(Unity.Reflect.Model.SyncSubMesh)
      commentId: M:Unity.Reflect.Model.SyncSubMesh.Equals(Unity.Reflect.Model.SyncSubMesh)
      language: CSharp
      name:
        CSharp: Equals(SyncSubMesh)
        VB: Equals(SyncSubMesh)
      nameWithType:
        CSharp: SyncSubMesh.Equals(SyncSubMesh)
        VB: SyncSubMesh.Equals(SyncSubMesh)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncSubMesh.Equals(Unity.Reflect.Model.SyncSubMesh)
        VB: Unity.Reflect.Model.SyncSubMesh.Equals(Unity.Reflect.Model.SyncSubMesh)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Equals
        path: ''
        startLine: 6441
      syntax:
        content:
          CSharp: public bool Equals(SyncSubMesh other)
          VB: Public Function Equals(other As SyncSubMesh) As Boolean
        parameters:
        - id: other
          type: Unity.Reflect.Model.SyncSubMesh
        return:
          type: System.Boolean
      overload: Unity.Reflect.Model.SyncSubMesh.Equals*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncSubMesh.GetHashCode
      commentId: M:Unity.Reflect.Model.SyncSubMesh.GetHashCode
      language: CSharp
      name:
        CSharp: GetHashCode()
        VB: GetHashCode()
      nameWithType:
        CSharp: SyncSubMesh.GetHashCode()
        VB: SyncSubMesh.GetHashCode()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncSubMesh.GetHashCode()
        VB: Unity.Reflect.Model.SyncSubMesh.GetHashCode()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: GetHashCode
        path: ''
        startLine: 6453
      syntax:
        content:
          CSharp: public override int GetHashCode()
          VB: Public Overrides Function GetHashCode As Integer
        return:
          type: System.Int32
      overload: Unity.Reflect.Model.SyncSubMesh.GetHashCode*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.Model.SyncSubMesh.ToString
      commentId: M:Unity.Reflect.Model.SyncSubMesh.ToString
      language: CSharp
      name:
        CSharp: ToString()
        VB: ToString()
      nameWithType:
        CSharp: SyncSubMesh.ToString()
        VB: SyncSubMesh.ToString()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncSubMesh.ToString()
        VB: Unity.Reflect.Model.SyncSubMesh.ToString()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: ToString
        path: ''
        startLine: 6463
      syntax:
        content:
          CSharp: public override string ToString()
          VB: Public Overrides Function ToString As String
        return:
          type: System.String
      overload: Unity.Reflect.Model.SyncSubMesh.ToString*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.Model.SyncSubMesh.WriteTo(pb.CodedOutputStream)
      commentId: M:Unity.Reflect.Model.SyncSubMesh.WriteTo(pb.CodedOutputStream)
      language: CSharp
      name:
        CSharp: WriteTo(pb.CodedOutputStream)
        VB: WriteTo(pb.CodedOutputStream)
      nameWithType:
        CSharp: SyncSubMesh.WriteTo(pb.CodedOutputStream)
        VB: SyncSubMesh.WriteTo(pb.CodedOutputStream)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncSubMesh.WriteTo(pb.CodedOutputStream)
        VB: Unity.Reflect.Model.SyncSubMesh.WriteTo(pb.CodedOutputStream)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: WriteTo
        path: ''
        startLine: 6468
      syntax:
        content:
          CSharp: public void WriteTo(pb.CodedOutputStream output)
          VB: Public Sub WriteTo(output As pb.CodedOutputStream)
        parameters:
        - id: output
          type: pb.CodedOutputStream
      overload: Unity.Reflect.Model.SyncSubMesh.WriteTo*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncSubMesh.CalculateSize
      commentId: M:Unity.Reflect.Model.SyncSubMesh.CalculateSize
      language: CSharp
      name:
        CSharp: CalculateSize()
        VB: CalculateSize()
      nameWithType:
        CSharp: SyncSubMesh.CalculateSize()
        VB: SyncSubMesh.CalculateSize()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncSubMesh.CalculateSize()
        VB: Unity.Reflect.Model.SyncSubMesh.CalculateSize()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: CalculateSize
        path: ''
        startLine: 6476
      syntax:
        content:
          CSharp: public int CalculateSize()
          VB: Public Function CalculateSize As Integer
        return:
          type: System.Int32
      overload: Unity.Reflect.Model.SyncSubMesh.CalculateSize*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncSubMesh.MergeFrom(Unity.Reflect.Model.SyncSubMesh)
      commentId: M:Unity.Reflect.Model.SyncSubMesh.MergeFrom(Unity.Reflect.Model.SyncSubMesh)
      language: CSharp
      name:
        CSharp: MergeFrom(SyncSubMesh)
        VB: MergeFrom(SyncSubMesh)
      nameWithType:
        CSharp: SyncSubMesh.MergeFrom(SyncSubMesh)
        VB: SyncSubMesh.MergeFrom(SyncSubMesh)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncSubMesh.MergeFrom(Unity.Reflect.Model.SyncSubMesh)
        VB: Unity.Reflect.Model.SyncSubMesh.MergeFrom(Unity.Reflect.Model.SyncSubMesh)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: MergeFrom
        path: ''
        startLine: 6486
      syntax:
        content:
          CSharp: public void MergeFrom(SyncSubMesh other)
          VB: Public Sub MergeFrom(other As SyncSubMesh)
        parameters:
        - id: other
          type: Unity.Reflect.Model.SyncSubMesh
      overload: Unity.Reflect.Model.SyncSubMesh.MergeFrom*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncSubMesh.MergeFrom(pb.CodedInputStream)
      commentId: M:Unity.Reflect.Model.SyncSubMesh.MergeFrom(pb.CodedInputStream)
      language: CSharp
      name:
        CSharp: MergeFrom(pb.CodedInputStream)
        VB: MergeFrom(pb.CodedInputStream)
      nameWithType:
        CSharp: SyncSubMesh.MergeFrom(pb.CodedInputStream)
        VB: SyncSubMesh.MergeFrom(pb.CodedInputStream)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncSubMesh.MergeFrom(pb.CodedInputStream)
        VB: Unity.Reflect.Model.SyncSubMesh.MergeFrom(pb.CodedInputStream)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: MergeFrom
        path: ''
        startLine: 6495
      syntax:
        content:
          CSharp: public void MergeFrom(pb.CodedInputStream input)
          VB: Public Sub MergeFrom(input As pb.CodedInputStream)
        parameters:
        - id: input
          type: pb.CodedInputStream
      overload: Unity.Reflect.Model.SyncSubMesh.MergeFrom*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Unity.Reflect.Model.SyncObject
    commentId: T:Unity.Reflect.Model.SyncObject
    language: CSharp
    name:
      CSharp: SyncObject
      VB: SyncObject
    nameWithType:
      CSharp: SyncObject
      VB: SyncObject
    qualifiedName:
      CSharp: Unity.Reflect.Model.SyncObject
      VB: Unity.Reflect.Model.SyncObject
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect.Model
    source:
      id: SyncObject
      path: ''
      startLine: 6577
    syntax:
      content:
        CSharp: 'public sealed class SyncObject : pb.IMessage<SyncObject>, ISyncModel, ISyncSendable'
        VB: >-
          Public NotInheritable Class SyncObject

              Inherits pb.IMessage(Of SyncObject)

              Implements ISyncModel, ISyncSendable
    inheritance:
    - System.Object
    implements:
    - Unity.Reflect.Model.ISyncModel
    modifiers:
      CSharp:
      - public
      - sealed
      - class
      VB:
      - Public
      - NotInheritable
      - Class
    items:
    - id: Unity.Reflect.Model.SyncObject.Extension
      commentId: F:Unity.Reflect.Model.SyncObject.Extension
      language: CSharp
      name:
        CSharp: Extension
        VB: Extension
      nameWithType:
        CSharp: SyncObject.Extension
        VB: SyncObject.Extension
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncObject.Extension
        VB: Unity.Reflect.Model.SyncObject.Extension
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Extension
        path: ''
        startLine: 1459
      syntax:
        content:
          CSharp: public static string Extension
          VB: Public Shared Extension As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Unity.Reflect.Model.SyncObject.#ctor(System.String)
      commentId: M:Unity.Reflect.Model.SyncObject.#ctor(System.String)
      language: CSharp
      name:
        CSharp: SyncObject(String)
        VB: SyncObject(String)
      nameWithType:
        CSharp: SyncObject.SyncObject(String)
        VB: SyncObject.SyncObject(String)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncObject.SyncObject(System.String)
        VB: Unity.Reflect.Model.SyncObject.SyncObject(System.String)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: .ctor
        path: ''
        startLine: 1461
      syntax:
        content:
          CSharp: public SyncObject(string name)
          VB: Public Sub New(name As String)
        parameters:
        - id: name
          type: System.String
      overload: Unity.Reflect.Model.SyncObject.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncObject.IsEmpty
      commentId: M:Unity.Reflect.Model.SyncObject.IsEmpty
      language: CSharp
      name:
        CSharp: IsEmpty()
        VB: IsEmpty()
      nameWithType:
        CSharp: SyncObject.IsEmpty()
        VB: SyncObject.IsEmpty()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncObject.IsEmpty()
        VB: Unity.Reflect.Model.SyncObject.IsEmpty()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: IsEmpty
        path: ''
        startLine: 1467
      syntax:
        content:
          CSharp: public bool IsEmpty()
          VB: Public Function IsEmpty As Boolean
        return:
          type: System.Boolean
      overload: Unity.Reflect.Model.SyncObject.IsEmpty*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncObject.Parser
      commentId: P:Unity.Reflect.Model.SyncObject.Parser
      language: CSharp
      name:
        CSharp: Parser
        VB: Parser
      nameWithType:
        CSharp: SyncObject.Parser
        VB: SyncObject.Parser
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncObject.Parser
        VB: Unity.Reflect.Model.SyncObject.Parser
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Parser
        path: ''
        startLine: 6580
      syntax:
        content:
          CSharp: public static pb.MessageParser<SyncObject> Parser { get; }
          VB: Public Shared ReadOnly Property Parser As pb.MessageParser(Of SyncObject)
        parameters: []
        return:
          type: pb.MessageParser{Unity.Reflect.Model.SyncObject}
      overload: Unity.Reflect.Model.SyncObject.Parser*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Unity.Reflect.Model.SyncObject.Descriptor
      commentId: P:Unity.Reflect.Model.SyncObject.Descriptor
      language: CSharp
      name:
        CSharp: Descriptor
        VB: Descriptor
      nameWithType:
        CSharp: SyncObject.Descriptor
        VB: SyncObject.Descriptor
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncObject.Descriptor
        VB: Unity.Reflect.Model.SyncObject.Descriptor
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Descriptor
        path: ''
        startLine: 6583
      syntax:
        content:
          CSharp: public static pbr.MessageDescriptor Descriptor { get; }
          VB: Public Shared ReadOnly Property Descriptor As pbr.MessageDescriptor
        parameters: []
        return:
          type: pbr.MessageDescriptor
      overload: Unity.Reflect.Model.SyncObject.Descriptor*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Unity.Reflect.Model.SyncObject.#ctor
      commentId: M:Unity.Reflect.Model.SyncObject.#ctor
      language: CSharp
      name:
        CSharp: SyncObject()
        VB: SyncObject()
      nameWithType:
        CSharp: SyncObject.SyncObject()
        VB: SyncObject.SyncObject()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncObject.SyncObject()
        VB: Unity.Reflect.Model.SyncObject.SyncObject()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: .ctor
        path: ''
        startLine: 6593
      syntax:
        content:
          CSharp: public SyncObject()
          VB: Public Sub New
      overload: Unity.Reflect.Model.SyncObject.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncObject.#ctor(Unity.Reflect.Model.SyncObject)
      commentId: M:Unity.Reflect.Model.SyncObject.#ctor(Unity.Reflect.Model.SyncObject)
      language: CSharp
      name:
        CSharp: SyncObject(SyncObject)
        VB: SyncObject(SyncObject)
      nameWithType:
        CSharp: SyncObject.SyncObject(SyncObject)
        VB: SyncObject.SyncObject(SyncObject)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncObject.SyncObject(Unity.Reflect.Model.SyncObject)
        VB: Unity.Reflect.Model.SyncObject.SyncObject(Unity.Reflect.Model.SyncObject)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: .ctor
        path: ''
        startLine: 6600
      syntax:
        content:
          CSharp: public SyncObject(SyncObject other)
          VB: Public Sub New(other As SyncObject)
        parameters:
        - id: other
          type: Unity.Reflect.Model.SyncObject
      overload: Unity.Reflect.Model.SyncObject.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncObject.Clone
      commentId: M:Unity.Reflect.Model.SyncObject.Clone
      language: CSharp
      name:
        CSharp: Clone()
        VB: Clone()
      nameWithType:
        CSharp: SyncObject.Clone()
        VB: SyncObject.Clone()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncObject.Clone()
        VB: Unity.Reflect.Model.SyncObject.Clone()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Clone
        path: ''
        startLine: 6614
      syntax:
        content:
          CSharp: public SyncObject Clone()
          VB: Public Function Clone As SyncObject
        return:
          type: Unity.Reflect.Model.SyncObject
      overload: Unity.Reflect.Model.SyncObject.Clone*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncObject.NameFieldNumber
      commentId: F:Unity.Reflect.Model.SyncObject.NameFieldNumber
      language: CSharp
      name:
        CSharp: NameFieldNumber
        VB: NameFieldNumber
      nameWithType:
        CSharp: SyncObject.NameFieldNumber
        VB: SyncObject.NameFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncObject.NameFieldNumber
        VB: Unity.Reflect.Model.SyncObject.NameFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: NameFieldNumber
        path: ''
        startLine: 6620
      summary: Field number for the &quot;name&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int NameFieldNumber = 1
          VB: Public Const NameFieldNumber As Integer = 1
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncObject.Name
      commentId: P:Unity.Reflect.Model.SyncObject.Name
      language: CSharp
      name:
        CSharp: Name
        VB: Name
      nameWithType:
        CSharp: SyncObject.Name
        VB: SyncObject.Name
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncObject.Name
        VB: Unity.Reflect.Model.SyncObject.Name
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Name
        path: ''
        startLine: 6622
      syntax:
        content:
          CSharp: public string Name { get; set; }
          VB: Public Property Name As String
        parameters: []
        return:
          type: System.String
      overload: Unity.Reflect.Model.SyncObject.Name*
      implements:
      - Unity.Reflect.Model.ISyncModel.Name
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncObject.TransformFieldNumber
      commentId: F:Unity.Reflect.Model.SyncObject.TransformFieldNumber
      language: CSharp
      name:
        CSharp: TransformFieldNumber
        VB: TransformFieldNumber
      nameWithType:
        CSharp: SyncObject.TransformFieldNumber
        VB: SyncObject.TransformFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncObject.TransformFieldNumber
        VB: Unity.Reflect.Model.SyncObject.TransformFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: TransformFieldNumber
        path: ''
        startLine: 6631
      summary: Field number for the &quot;transform&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int TransformFieldNumber = 2
          VB: Public Const TransformFieldNumber As Integer = 2
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncObject.Transform
      commentId: P:Unity.Reflect.Model.SyncObject.Transform
      language: CSharp
      name:
        CSharp: Transform
        VB: Transform
      nameWithType:
        CSharp: SyncObject.Transform
        VB: SyncObject.Transform
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncObject.Transform
        VB: Unity.Reflect.Model.SyncObject.Transform
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Transform
        path: ''
        startLine: 6633
      syntax:
        content:
          CSharp: public SyncTransform Transform { get; set; }
          VB: Public Property Transform As SyncTransform
        parameters: []
        return:
          type: Unity.Reflect.Model.SyncTransform
      overload: Unity.Reflect.Model.SyncObject.Transform*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncObject.MeshFieldNumber
      commentId: F:Unity.Reflect.Model.SyncObject.MeshFieldNumber
      language: CSharp
      name:
        CSharp: MeshFieldNumber
        VB: MeshFieldNumber
      nameWithType:
        CSharp: SyncObject.MeshFieldNumber
        VB: SyncObject.MeshFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncObject.MeshFieldNumber
        VB: Unity.Reflect.Model.SyncObject.MeshFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: MeshFieldNumber
        path: ''
        startLine: 6642
      summary: Field number for the &quot;mesh&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int MeshFieldNumber = 3
          VB: Public Const MeshFieldNumber As Integer = 3
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncObject.Mesh
      commentId: P:Unity.Reflect.Model.SyncObject.Mesh
      language: CSharp
      name:
        CSharp: Mesh
        VB: Mesh
      nameWithType:
        CSharp: SyncObject.Mesh
        VB: SyncObject.Mesh
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncObject.Mesh
        VB: Unity.Reflect.Model.SyncObject.Mesh
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Mesh
        path: ''
        startLine: 6644
      syntax:
        content:
          CSharp: public string Mesh { get; set; }
          VB: Public Property Mesh As String
        parameters: []
        return:
          type: System.String
      overload: Unity.Reflect.Model.SyncObject.Mesh*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncObject.MaterialsFieldNumber
      commentId: F:Unity.Reflect.Model.SyncObject.MaterialsFieldNumber
      language: CSharp
      name:
        CSharp: MaterialsFieldNumber
        VB: MaterialsFieldNumber
      nameWithType:
        CSharp: SyncObject.MaterialsFieldNumber
        VB: SyncObject.MaterialsFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncObject.MaterialsFieldNumber
        VB: Unity.Reflect.Model.SyncObject.MaterialsFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: MaterialsFieldNumber
        path: ''
        startLine: 6653
      summary: Field number for the &quot;materials&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int MaterialsFieldNumber = 4
          VB: Public Const MaterialsFieldNumber As Integer = 4
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncObject.Materials
      commentId: P:Unity.Reflect.Model.SyncObject.Materials
      language: CSharp
      name:
        CSharp: Materials
        VB: Materials
      nameWithType:
        CSharp: SyncObject.Materials
        VB: SyncObject.Materials
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncObject.Materials
        VB: Unity.Reflect.Model.SyncObject.Materials
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Materials
        path: ''
        startLine: 6657
      syntax:
        content:
          CSharp: public pbc.RepeatedField<string> Materials { get; }
          VB: Public ReadOnly Property Materials As pbc.RepeatedField(Of String)
        parameters: []
        return:
          type: pbc.RepeatedField{System.String}
      overload: Unity.Reflect.Model.SyncObject.Materials*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Unity.Reflect.Model.SyncObject.LightsFieldNumber
      commentId: F:Unity.Reflect.Model.SyncObject.LightsFieldNumber
      language: CSharp
      name:
        CSharp: LightsFieldNumber
        VB: LightsFieldNumber
      nameWithType:
        CSharp: SyncObject.LightsFieldNumber
        VB: SyncObject.LightsFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncObject.LightsFieldNumber
        VB: Unity.Reflect.Model.SyncObject.LightsFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: LightsFieldNumber
        path: ''
        startLine: 6663
      summary: Field number for the &quot;lights&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int LightsFieldNumber = 5
          VB: Public Const LightsFieldNumber As Integer = 5
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncObject.Lights
      commentId: P:Unity.Reflect.Model.SyncObject.Lights
      language: CSharp
      name:
        CSharp: Lights
        VB: Lights
      nameWithType:
        CSharp: SyncObject.Lights
        VB: SyncObject.Lights
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncObject.Lights
        VB: Unity.Reflect.Model.SyncObject.Lights
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Lights
        path: ''
        startLine: 6667
      syntax:
        content:
          CSharp: public pbc.RepeatedField<SyncLight> Lights { get; }
          VB: Public ReadOnly Property Lights As pbc.RepeatedField(Of SyncLight)
        parameters: []
        return:
          type: pbc.RepeatedField{Unity.Reflect.Model.SyncLight}
      overload: Unity.Reflect.Model.SyncObject.Lights*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Unity.Reflect.Model.SyncObject.RpcsFieldNumber
      commentId: F:Unity.Reflect.Model.SyncObject.RpcsFieldNumber
      language: CSharp
      name:
        CSharp: RpcsFieldNumber
        VB: RpcsFieldNumber
      nameWithType:
        CSharp: SyncObject.RpcsFieldNumber
        VB: SyncObject.RpcsFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncObject.RpcsFieldNumber
        VB: Unity.Reflect.Model.SyncObject.RpcsFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: RpcsFieldNumber
        path: ''
        startLine: 6673
      summary: Field number for the &quot;rpcs&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int RpcsFieldNumber = 6
          VB: Public Const RpcsFieldNumber As Integer = 6
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncObject.Rpcs
      commentId: P:Unity.Reflect.Model.SyncObject.Rpcs
      language: CSharp
      name:
        CSharp: Rpcs
        VB: Rpcs
      nameWithType:
        CSharp: SyncObject.Rpcs
        VB: SyncObject.Rpcs
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncObject.Rpcs
        VB: Unity.Reflect.Model.SyncObject.Rpcs
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Rpcs
        path: ''
        startLine: 6677
      syntax:
        content:
          CSharp: public pbc.RepeatedField<SyncRPC> Rpcs { get; }
          VB: Public ReadOnly Property Rpcs As pbc.RepeatedField(Of SyncRPC)
        parameters: []
        return:
          type: pbc.RepeatedField{Unity.Reflect.Model.SyncRPC}
      overload: Unity.Reflect.Model.SyncObject.Rpcs*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Unity.Reflect.Model.SyncObject.CamerasFieldNumber
      commentId: F:Unity.Reflect.Model.SyncObject.CamerasFieldNumber
      language: CSharp
      name:
        CSharp: CamerasFieldNumber
        VB: CamerasFieldNumber
      nameWithType:
        CSharp: SyncObject.CamerasFieldNumber
        VB: SyncObject.CamerasFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncObject.CamerasFieldNumber
        VB: Unity.Reflect.Model.SyncObject.CamerasFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: CamerasFieldNumber
        path: ''
        startLine: 6683
      summary: Field number for the &quot;cameras&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int CamerasFieldNumber = 7
          VB: Public Const CamerasFieldNumber As Integer = 7
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncObject.Cameras
      commentId: P:Unity.Reflect.Model.SyncObject.Cameras
      language: CSharp
      name:
        CSharp: Cameras
        VB: Cameras
      nameWithType:
        CSharp: SyncObject.Cameras
        VB: SyncObject.Cameras
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncObject.Cameras
        VB: Unity.Reflect.Model.SyncObject.Cameras
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Cameras
        path: ''
        startLine: 6687
      syntax:
        content:
          CSharp: public pbc.RepeatedField<SyncCamera> Cameras { get; }
          VB: Public ReadOnly Property Cameras As pbc.RepeatedField(Of SyncCamera)
        parameters: []
        return:
          type: pbc.RepeatedField{Unity.Reflect.Model.SyncCamera}
      overload: Unity.Reflect.Model.SyncObject.Cameras*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Unity.Reflect.Model.SyncObject.MetadataFieldNumber
      commentId: F:Unity.Reflect.Model.SyncObject.MetadataFieldNumber
      language: CSharp
      name:
        CSharp: MetadataFieldNumber
        VB: MetadataFieldNumber
      nameWithType:
        CSharp: SyncObject.MetadataFieldNumber
        VB: SyncObject.MetadataFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncObject.MetadataFieldNumber
        VB: Unity.Reflect.Model.SyncObject.MetadataFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: MetadataFieldNumber
        path: ''
        startLine: 6693
      summary: Field number for the &quot;metadata&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int MetadataFieldNumber = 8
          VB: Public Const MetadataFieldNumber As Integer = 8
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncObject.Metadata
      commentId: P:Unity.Reflect.Model.SyncObject.Metadata
      language: CSharp
      name:
        CSharp: Metadata
        VB: Metadata
      nameWithType:
        CSharp: SyncObject.Metadata
        VB: SyncObject.Metadata
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncObject.Metadata
        VB: Unity.Reflect.Model.SyncObject.Metadata
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Metadata
        path: ''
        startLine: 6697
      syntax:
        content:
          CSharp: public pbc.MapField<string, SyncParameter> Metadata { get; }
          VB: Public ReadOnly Property Metadata As pbc.MapField(Of String, SyncParameter)
        parameters: []
        return:
          type: pbc.MapField{System.String,Unity.Reflect.Model.SyncParameter}
      overload: Unity.Reflect.Model.SyncObject.Metadata*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Unity.Reflect.Model.SyncObject.ChildrenFieldNumber
      commentId: F:Unity.Reflect.Model.SyncObject.ChildrenFieldNumber
      language: CSharp
      name:
        CSharp: ChildrenFieldNumber
        VB: ChildrenFieldNumber
      nameWithType:
        CSharp: SyncObject.ChildrenFieldNumber
        VB: SyncObject.ChildrenFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncObject.ChildrenFieldNumber
        VB: Unity.Reflect.Model.SyncObject.ChildrenFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: ChildrenFieldNumber
        path: ''
        startLine: 6703
      summary: Field number for the &quot;children&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int ChildrenFieldNumber = 9
          VB: Public Const ChildrenFieldNumber As Integer = 9
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncObject.Children
      commentId: P:Unity.Reflect.Model.SyncObject.Children
      language: CSharp
      name:
        CSharp: Children
        VB: Children
      nameWithType:
        CSharp: SyncObject.Children
        VB: SyncObject.Children
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncObject.Children
        VB: Unity.Reflect.Model.SyncObject.Children
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Children
        path: ''
        startLine: 6707
      syntax:
        content:
          CSharp: public pbc.RepeatedField<SyncObject> Children { get; }
          VB: Public ReadOnly Property Children As pbc.RepeatedField(Of SyncObject)
        parameters: []
        return:
          type: pbc.RepeatedField{Unity.Reflect.Model.SyncObject}
      overload: Unity.Reflect.Model.SyncObject.Children*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Unity.Reflect.Model.SyncObject.Equals(System.Object)
      commentId: M:Unity.Reflect.Model.SyncObject.Equals(System.Object)
      language: CSharp
      name:
        CSharp: Equals(Object)
        VB: Equals(Object)
      nameWithType:
        CSharp: SyncObject.Equals(Object)
        VB: SyncObject.Equals(Object)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncObject.Equals(System.Object)
        VB: Unity.Reflect.Model.SyncObject.Equals(System.Object)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Equals
        path: ''
        startLine: 6712
      syntax:
        content:
          CSharp: public override bool Equals(object other)
          VB: Public Overrides Function Equals(other As Object) As Boolean
        parameters:
        - id: other
          type: System.Object
        return:
          type: System.Boolean
      overload: Unity.Reflect.Model.SyncObject.Equals*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.Model.SyncObject.Equals(Unity.Reflect.Model.SyncObject)
      commentId: M:Unity.Reflect.Model.SyncObject.Equals(Unity.Reflect.Model.SyncObject)
      language: CSharp
      name:
        CSharp: Equals(SyncObject)
        VB: Equals(SyncObject)
      nameWithType:
        CSharp: SyncObject.Equals(SyncObject)
        VB: SyncObject.Equals(SyncObject)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncObject.Equals(Unity.Reflect.Model.SyncObject)
        VB: Unity.Reflect.Model.SyncObject.Equals(Unity.Reflect.Model.SyncObject)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Equals
        path: ''
        startLine: 6717
      syntax:
        content:
          CSharp: public bool Equals(SyncObject other)
          VB: Public Function Equals(other As SyncObject) As Boolean
        parameters:
        - id: other
          type: Unity.Reflect.Model.SyncObject
        return:
          type: System.Boolean
      overload: Unity.Reflect.Model.SyncObject.Equals*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncObject.GetHashCode
      commentId: M:Unity.Reflect.Model.SyncObject.GetHashCode
      language: CSharp
      name:
        CSharp: GetHashCode()
        VB: GetHashCode()
      nameWithType:
        CSharp: SyncObject.GetHashCode()
        VB: SyncObject.GetHashCode()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncObject.GetHashCode()
        VB: Unity.Reflect.Model.SyncObject.GetHashCode()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: GetHashCode
        path: ''
        startLine: 6737
      syntax:
        content:
          CSharp: public override int GetHashCode()
          VB: Public Overrides Function GetHashCode As Integer
        return:
          type: System.Int32
      overload: Unity.Reflect.Model.SyncObject.GetHashCode*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.Model.SyncObject.ToString
      commentId: M:Unity.Reflect.Model.SyncObject.ToString
      language: CSharp
      name:
        CSharp: ToString()
        VB: ToString()
      nameWithType:
        CSharp: SyncObject.ToString()
        VB: SyncObject.ToString()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncObject.ToString()
        VB: Unity.Reflect.Model.SyncObject.ToString()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: ToString
        path: ''
        startLine: 6755
      syntax:
        content:
          CSharp: public override string ToString()
          VB: Public Overrides Function ToString As String
        return:
          type: System.String
      overload: Unity.Reflect.Model.SyncObject.ToString*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.Model.SyncObject.WriteTo(pb.CodedOutputStream)
      commentId: M:Unity.Reflect.Model.SyncObject.WriteTo(pb.CodedOutputStream)
      language: CSharp
      name:
        CSharp: WriteTo(pb.CodedOutputStream)
        VB: WriteTo(pb.CodedOutputStream)
      nameWithType:
        CSharp: SyncObject.WriteTo(pb.CodedOutputStream)
        VB: SyncObject.WriteTo(pb.CodedOutputStream)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncObject.WriteTo(pb.CodedOutputStream)
        VB: Unity.Reflect.Model.SyncObject.WriteTo(pb.CodedOutputStream)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: WriteTo
        path: ''
        startLine: 6760
      syntax:
        content:
          CSharp: public void WriteTo(pb.CodedOutputStream output)
          VB: Public Sub WriteTo(output As pb.CodedOutputStream)
        parameters:
        - id: output
          type: pb.CodedOutputStream
      overload: Unity.Reflect.Model.SyncObject.WriteTo*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncObject.CalculateSize
      commentId: M:Unity.Reflect.Model.SyncObject.CalculateSize
      language: CSharp
      name:
        CSharp: CalculateSize()
        VB: CalculateSize()
      nameWithType:
        CSharp: SyncObject.CalculateSize()
        VB: SyncObject.CalculateSize()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncObject.CalculateSize()
        VB: Unity.Reflect.Model.SyncObject.CalculateSize()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: CalculateSize
        path: ''
        startLine: 6785
      syntax:
        content:
          CSharp: public int CalculateSize()
          VB: Public Function CalculateSize As Integer
        return:
          type: System.Int32
      overload: Unity.Reflect.Model.SyncObject.CalculateSize*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncObject.MergeFrom(Unity.Reflect.Model.SyncObject)
      commentId: M:Unity.Reflect.Model.SyncObject.MergeFrom(Unity.Reflect.Model.SyncObject)
      language: CSharp
      name:
        CSharp: MergeFrom(SyncObject)
        VB: MergeFrom(SyncObject)
      nameWithType:
        CSharp: SyncObject.MergeFrom(SyncObject)
        VB: SyncObject.MergeFrom(SyncObject)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncObject.MergeFrom(Unity.Reflect.Model.SyncObject)
        VB: Unity.Reflect.Model.SyncObject.MergeFrom(Unity.Reflect.Model.SyncObject)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: MergeFrom
        path: ''
        startLine: 6809
      syntax:
        content:
          CSharp: public void MergeFrom(SyncObject other)
          VB: Public Sub MergeFrom(other As SyncObject)
        parameters:
        - id: other
          type: Unity.Reflect.Model.SyncObject
      overload: Unity.Reflect.Model.SyncObject.MergeFrom*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncObject.MergeFrom(pb.CodedInputStream)
      commentId: M:Unity.Reflect.Model.SyncObject.MergeFrom(pb.CodedInputStream)
      language: CSharp
      name:
        CSharp: MergeFrom(pb.CodedInputStream)
        VB: MergeFrom(pb.CodedInputStream)
      nameWithType:
        CSharp: SyncObject.MergeFrom(pb.CodedInputStream)
        VB: SyncObject.MergeFrom(pb.CodedInputStream)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncObject.MergeFrom(pb.CodedInputStream)
        VB: Unity.Reflect.Model.SyncObject.MergeFrom(pb.CodedInputStream)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: MergeFrom
        path: ''
        startLine: 6835
      syntax:
        content:
          CSharp: public void MergeFrom(pb.CodedInputStream input)
          VB: Public Sub MergeFrom(input As pb.CodedInputStream)
        parameters:
        - id: input
          type: pb.CodedInputStream
      overload: Unity.Reflect.Model.SyncObject.MergeFrom*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Unity.Reflect.Model.SyncObjectInstance
    commentId: T:Unity.Reflect.Model.SyncObjectInstance
    language: CSharp
    name:
      CSharp: SyncObjectInstance
      VB: SyncObjectInstance
    nameWithType:
      CSharp: SyncObjectInstance
      VB: SyncObjectInstance
    qualifiedName:
      CSharp: Unity.Reflect.Model.SyncObjectInstance
      VB: Unity.Reflect.Model.SyncObjectInstance
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect.Model
    source:
      id: SyncObjectInstance
      path: ''
      startLine: 6888
    syntax:
      content:
        CSharp: 'public sealed class SyncObjectInstance : pb.IMessage<SyncObjectInstance>, ISyncModel, ISyncSendable'
        VB: >-
          Public NotInheritable Class SyncObjectInstance

              Inherits pb.IMessage(Of SyncObjectInstance)

              Implements ISyncModel, ISyncSendable
    inheritance:
    - System.Object
    implements:
    - Unity.Reflect.Model.ISyncModel
    modifiers:
      CSharp:
      - public
      - sealed
      - class
      VB:
      - Public
      - NotInheritable
      - Class
    items:
    - id: Unity.Reflect.Model.SyncObjectInstance.Parser
      commentId: P:Unity.Reflect.Model.SyncObjectInstance.Parser
      language: CSharp
      name:
        CSharp: Parser
        VB: Parser
      nameWithType:
        CSharp: SyncObjectInstance.Parser
        VB: SyncObjectInstance.Parser
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncObjectInstance.Parser
        VB: Unity.Reflect.Model.SyncObjectInstance.Parser
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Parser
        path: ''
        startLine: 6891
      syntax:
        content:
          CSharp: public static pb.MessageParser<SyncObjectInstance> Parser { get; }
          VB: Public Shared ReadOnly Property Parser As pb.MessageParser(Of SyncObjectInstance)
        parameters: []
        return:
          type: pb.MessageParser{Unity.Reflect.Model.SyncObjectInstance}
      overload: Unity.Reflect.Model.SyncObjectInstance.Parser*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Unity.Reflect.Model.SyncObjectInstance.Descriptor
      commentId: P:Unity.Reflect.Model.SyncObjectInstance.Descriptor
      language: CSharp
      name:
        CSharp: Descriptor
        VB: Descriptor
      nameWithType:
        CSharp: SyncObjectInstance.Descriptor
        VB: SyncObjectInstance.Descriptor
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncObjectInstance.Descriptor
        VB: Unity.Reflect.Model.SyncObjectInstance.Descriptor
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Descriptor
        path: ''
        startLine: 6894
      syntax:
        content:
          CSharp: public static pbr.MessageDescriptor Descriptor { get; }
          VB: Public Shared ReadOnly Property Descriptor As pbr.MessageDescriptor
        parameters: []
        return:
          type: pbr.MessageDescriptor
      overload: Unity.Reflect.Model.SyncObjectInstance.Descriptor*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Unity.Reflect.Model.SyncObjectInstance.#ctor
      commentId: M:Unity.Reflect.Model.SyncObjectInstance.#ctor
      language: CSharp
      name:
        CSharp: SyncObjectInstance()
        VB: SyncObjectInstance()
      nameWithType:
        CSharp: SyncObjectInstance.SyncObjectInstance()
        VB: SyncObjectInstance.SyncObjectInstance()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncObjectInstance.SyncObjectInstance()
        VB: Unity.Reflect.Model.SyncObjectInstance.SyncObjectInstance()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: .ctor
        path: ''
        startLine: 6904
      syntax:
        content:
          CSharp: public SyncObjectInstance()
          VB: Public Sub New
      overload: Unity.Reflect.Model.SyncObjectInstance.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncObjectInstance.#ctor(Unity.Reflect.Model.SyncObjectInstance)
      commentId: M:Unity.Reflect.Model.SyncObjectInstance.#ctor(Unity.Reflect.Model.SyncObjectInstance)
      language: CSharp
      name:
        CSharp: SyncObjectInstance(SyncObjectInstance)
        VB: SyncObjectInstance(SyncObjectInstance)
      nameWithType:
        CSharp: SyncObjectInstance.SyncObjectInstance(SyncObjectInstance)
        VB: SyncObjectInstance.SyncObjectInstance(SyncObjectInstance)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncObjectInstance.SyncObjectInstance(Unity.Reflect.Model.SyncObjectInstance)
        VB: Unity.Reflect.Model.SyncObjectInstance.SyncObjectInstance(Unity.Reflect.Model.SyncObjectInstance)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: .ctor
        path: ''
        startLine: 6911
      syntax:
        content:
          CSharp: public SyncObjectInstance(SyncObjectInstance other)
          VB: Public Sub New(other As SyncObjectInstance)
        parameters:
        - id: other
          type: Unity.Reflect.Model.SyncObjectInstance
      overload: Unity.Reflect.Model.SyncObjectInstance.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncObjectInstance.Clone
      commentId: M:Unity.Reflect.Model.SyncObjectInstance.Clone
      language: CSharp
      name:
        CSharp: Clone()
        VB: Clone()
      nameWithType:
        CSharp: SyncObjectInstance.Clone()
        VB: SyncObjectInstance.Clone()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncObjectInstance.Clone()
        VB: Unity.Reflect.Model.SyncObjectInstance.Clone()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Clone
        path: ''
        startLine: 6920
      syntax:
        content:
          CSharp: public SyncObjectInstance Clone()
          VB: Public Function Clone As SyncObjectInstance
        return:
          type: Unity.Reflect.Model.SyncObjectInstance
      overload: Unity.Reflect.Model.SyncObjectInstance.Clone*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncObjectInstance.ObjectFieldNumber
      commentId: F:Unity.Reflect.Model.SyncObjectInstance.ObjectFieldNumber
      language: CSharp
      name:
        CSharp: ObjectFieldNumber
        VB: ObjectFieldNumber
      nameWithType:
        CSharp: SyncObjectInstance.ObjectFieldNumber
        VB: SyncObjectInstance.ObjectFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncObjectInstance.ObjectFieldNumber
        VB: Unity.Reflect.Model.SyncObjectInstance.ObjectFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: ObjectFieldNumber
        path: ''
        startLine: 6926
      summary: Field number for the &quot;object&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int ObjectFieldNumber = 1
          VB: Public Const ObjectFieldNumber As Integer = 1
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncObjectInstance.Object
      commentId: P:Unity.Reflect.Model.SyncObjectInstance.Object
      language: CSharp
      name:
        CSharp: Object
        VB: Object
      nameWithType:
        CSharp: SyncObjectInstance.Object
        VB: SyncObjectInstance.Object
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncObjectInstance.Object
        VB: Unity.Reflect.Model.SyncObjectInstance.Object
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Object
        path: ''
        startLine: 6928
      syntax:
        content:
          CSharp: public string Object { get; set; }
          VB: Public Property Object As String
        parameters: []
        return:
          type: System.String
      overload: Unity.Reflect.Model.SyncObjectInstance.Object*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncObjectInstance.NameFieldNumber
      commentId: F:Unity.Reflect.Model.SyncObjectInstance.NameFieldNumber
      language: CSharp
      name:
        CSharp: NameFieldNumber
        VB: NameFieldNumber
      nameWithType:
        CSharp: SyncObjectInstance.NameFieldNumber
        VB: SyncObjectInstance.NameFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncObjectInstance.NameFieldNumber
        VB: Unity.Reflect.Model.SyncObjectInstance.NameFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: NameFieldNumber
        path: ''
        startLine: 6937
      summary: Field number for the &quot;name&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int NameFieldNumber = 2
          VB: Public Const NameFieldNumber As Integer = 2
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncObjectInstance.Name
      commentId: P:Unity.Reflect.Model.SyncObjectInstance.Name
      language: CSharp
      name:
        CSharp: Name
        VB: Name
      nameWithType:
        CSharp: SyncObjectInstance.Name
        VB: SyncObjectInstance.Name
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncObjectInstance.Name
        VB: Unity.Reflect.Model.SyncObjectInstance.Name
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Name
        path: ''
        startLine: 6939
      syntax:
        content:
          CSharp: public string Name { get; set; }
          VB: Public Property Name As String
        parameters: []
        return:
          type: System.String
      overload: Unity.Reflect.Model.SyncObjectInstance.Name*
      implements:
      - Unity.Reflect.Model.ISyncModel.Name
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncObjectInstance.TransformFieldNumber
      commentId: F:Unity.Reflect.Model.SyncObjectInstance.TransformFieldNumber
      language: CSharp
      name:
        CSharp: TransformFieldNumber
        VB: TransformFieldNumber
      nameWithType:
        CSharp: SyncObjectInstance.TransformFieldNumber
        VB: SyncObjectInstance.TransformFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncObjectInstance.TransformFieldNumber
        VB: Unity.Reflect.Model.SyncObjectInstance.TransformFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: TransformFieldNumber
        path: ''
        startLine: 6948
      summary: Field number for the &quot;transform&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int TransformFieldNumber = 3
          VB: Public Const TransformFieldNumber As Integer = 3
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncObjectInstance.Transform
      commentId: P:Unity.Reflect.Model.SyncObjectInstance.Transform
      language: CSharp
      name:
        CSharp: Transform
        VB: Transform
      nameWithType:
        CSharp: SyncObjectInstance.Transform
        VB: SyncObjectInstance.Transform
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncObjectInstance.Transform
        VB: Unity.Reflect.Model.SyncObjectInstance.Transform
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Transform
        path: ''
        startLine: 6950
      syntax:
        content:
          CSharp: public SyncTransform Transform { get; set; }
          VB: Public Property Transform As SyncTransform
        parameters: []
        return:
          type: Unity.Reflect.Model.SyncTransform
      overload: Unity.Reflect.Model.SyncObjectInstance.Transform*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncObjectInstance.MetadataFieldNumber
      commentId: F:Unity.Reflect.Model.SyncObjectInstance.MetadataFieldNumber
      language: CSharp
      name:
        CSharp: MetadataFieldNumber
        VB: MetadataFieldNumber
      nameWithType:
        CSharp: SyncObjectInstance.MetadataFieldNumber
        VB: SyncObjectInstance.MetadataFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncObjectInstance.MetadataFieldNumber
        VB: Unity.Reflect.Model.SyncObjectInstance.MetadataFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: MetadataFieldNumber
        path: ''
        startLine: 6959
      summary: Field number for the &quot;metadata&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int MetadataFieldNumber = 4
          VB: Public Const MetadataFieldNumber As Integer = 4
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncObjectInstance.Metadata
      commentId: P:Unity.Reflect.Model.SyncObjectInstance.Metadata
      language: CSharp
      name:
        CSharp: Metadata
        VB: Metadata
      nameWithType:
        CSharp: SyncObjectInstance.Metadata
        VB: SyncObjectInstance.Metadata
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncObjectInstance.Metadata
        VB: Unity.Reflect.Model.SyncObjectInstance.Metadata
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Metadata
        path: ''
        startLine: 6963
      syntax:
        content:
          CSharp: public pbc.MapField<string, SyncParameter> Metadata { get; }
          VB: Public ReadOnly Property Metadata As pbc.MapField(Of String, SyncParameter)
        parameters: []
        return:
          type: pbc.MapField{System.String,Unity.Reflect.Model.SyncParameter}
      overload: Unity.Reflect.Model.SyncObjectInstance.Metadata*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Unity.Reflect.Model.SyncObjectInstance.Equals(System.Object)
      commentId: M:Unity.Reflect.Model.SyncObjectInstance.Equals(System.Object)
      language: CSharp
      name:
        CSharp: Equals(Object)
        VB: Equals(Object)
      nameWithType:
        CSharp: SyncObjectInstance.Equals(Object)
        VB: SyncObjectInstance.Equals(Object)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncObjectInstance.Equals(System.Object)
        VB: Unity.Reflect.Model.SyncObjectInstance.Equals(System.Object)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Equals
        path: ''
        startLine: 6968
      syntax:
        content:
          CSharp: public override bool Equals(object other)
          VB: Public Overrides Function Equals(other As Object) As Boolean
        parameters:
        - id: other
          type: System.Object
        return:
          type: System.Boolean
      overload: Unity.Reflect.Model.SyncObjectInstance.Equals*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.Model.SyncObjectInstance.Equals(Unity.Reflect.Model.SyncObjectInstance)
      commentId: M:Unity.Reflect.Model.SyncObjectInstance.Equals(Unity.Reflect.Model.SyncObjectInstance)
      language: CSharp
      name:
        CSharp: Equals(SyncObjectInstance)
        VB: Equals(SyncObjectInstance)
      nameWithType:
        CSharp: SyncObjectInstance.Equals(SyncObjectInstance)
        VB: SyncObjectInstance.Equals(SyncObjectInstance)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncObjectInstance.Equals(Unity.Reflect.Model.SyncObjectInstance)
        VB: Unity.Reflect.Model.SyncObjectInstance.Equals(Unity.Reflect.Model.SyncObjectInstance)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Equals
        path: ''
        startLine: 6973
      syntax:
        content:
          CSharp: public bool Equals(SyncObjectInstance other)
          VB: Public Function Equals(other As SyncObjectInstance) As Boolean
        parameters:
        - id: other
          type: Unity.Reflect.Model.SyncObjectInstance
        return:
          type: System.Boolean
      overload: Unity.Reflect.Model.SyncObjectInstance.Equals*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncObjectInstance.GetHashCode
      commentId: M:Unity.Reflect.Model.SyncObjectInstance.GetHashCode
      language: CSharp
      name:
        CSharp: GetHashCode()
        VB: GetHashCode()
      nameWithType:
        CSharp: SyncObjectInstance.GetHashCode()
        VB: SyncObjectInstance.GetHashCode()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncObjectInstance.GetHashCode()
        VB: Unity.Reflect.Model.SyncObjectInstance.GetHashCode()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: GetHashCode
        path: ''
        startLine: 6988
      syntax:
        content:
          CSharp: public override int GetHashCode()
          VB: Public Overrides Function GetHashCode As Integer
        return:
          type: System.Int32
      overload: Unity.Reflect.Model.SyncObjectInstance.GetHashCode*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.Model.SyncObjectInstance.ToString
      commentId: M:Unity.Reflect.Model.SyncObjectInstance.ToString
      language: CSharp
      name:
        CSharp: ToString()
        VB: ToString()
      nameWithType:
        CSharp: SyncObjectInstance.ToString()
        VB: SyncObjectInstance.ToString()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncObjectInstance.ToString()
        VB: Unity.Reflect.Model.SyncObjectInstance.ToString()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: ToString
        path: ''
        startLine: 7001
      syntax:
        content:
          CSharp: public override string ToString()
          VB: Public Overrides Function ToString As String
        return:
          type: System.String
      overload: Unity.Reflect.Model.SyncObjectInstance.ToString*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.Model.SyncObjectInstance.WriteTo(pb.CodedOutputStream)
      commentId: M:Unity.Reflect.Model.SyncObjectInstance.WriteTo(pb.CodedOutputStream)
      language: CSharp
      name:
        CSharp: WriteTo(pb.CodedOutputStream)
        VB: WriteTo(pb.CodedOutputStream)
      nameWithType:
        CSharp: SyncObjectInstance.WriteTo(pb.CodedOutputStream)
        VB: SyncObjectInstance.WriteTo(pb.CodedOutputStream)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncObjectInstance.WriteTo(pb.CodedOutputStream)
        VB: Unity.Reflect.Model.SyncObjectInstance.WriteTo(pb.CodedOutputStream)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: WriteTo
        path: ''
        startLine: 7006
      syntax:
        content:
          CSharp: public void WriteTo(pb.CodedOutputStream output)
          VB: Public Sub WriteTo(output As pb.CodedOutputStream)
        parameters:
        - id: output
          type: pb.CodedOutputStream
      overload: Unity.Reflect.Model.SyncObjectInstance.WriteTo*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncObjectInstance.CalculateSize
      commentId: M:Unity.Reflect.Model.SyncObjectInstance.CalculateSize
      language: CSharp
      name:
        CSharp: CalculateSize()
        VB: CalculateSize()
      nameWithType:
        CSharp: SyncObjectInstance.CalculateSize()
        VB: SyncObjectInstance.CalculateSize()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncObjectInstance.CalculateSize()
        VB: Unity.Reflect.Model.SyncObjectInstance.CalculateSize()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: CalculateSize
        path: ''
        startLine: 7026
      syntax:
        content:
          CSharp: public int CalculateSize()
          VB: Public Function CalculateSize As Integer
        return:
          type: System.Int32
      overload: Unity.Reflect.Model.SyncObjectInstance.CalculateSize*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncObjectInstance.MergeFrom(Unity.Reflect.Model.SyncObjectInstance)
      commentId: M:Unity.Reflect.Model.SyncObjectInstance.MergeFrom(Unity.Reflect.Model.SyncObjectInstance)
      language: CSharp
      name:
        CSharp: MergeFrom(SyncObjectInstance)
        VB: MergeFrom(SyncObjectInstance)
      nameWithType:
        CSharp: SyncObjectInstance.MergeFrom(SyncObjectInstance)
        VB: SyncObjectInstance.MergeFrom(SyncObjectInstance)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncObjectInstance.MergeFrom(Unity.Reflect.Model.SyncObjectInstance)
        VB: Unity.Reflect.Model.SyncObjectInstance.MergeFrom(Unity.Reflect.Model.SyncObjectInstance)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: MergeFrom
        path: ''
        startLine: 7045
      syntax:
        content:
          CSharp: public void MergeFrom(SyncObjectInstance other)
          VB: Public Sub MergeFrom(other As SyncObjectInstance)
        parameters:
        - id: other
          type: Unity.Reflect.Model.SyncObjectInstance
      overload: Unity.Reflect.Model.SyncObjectInstance.MergeFrom*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncObjectInstance.MergeFrom(pb.CodedInputStream)
      commentId: M:Unity.Reflect.Model.SyncObjectInstance.MergeFrom(pb.CodedInputStream)
      language: CSharp
      name:
        CSharp: MergeFrom(pb.CodedInputStream)
        VB: MergeFrom(pb.CodedInputStream)
      nameWithType:
        CSharp: SyncObjectInstance.MergeFrom(pb.CodedInputStream)
        VB: SyncObjectInstance.MergeFrom(pb.CodedInputStream)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncObjectInstance.MergeFrom(pb.CodedInputStream)
        VB: Unity.Reflect.Model.SyncObjectInstance.MergeFrom(pb.CodedInputStream)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: MergeFrom
        path: ''
        startLine: 7066
      syntax:
        content:
          CSharp: public void MergeFrom(pb.CodedInputStream input)
          VB: Public Sub MergeFrom(input As pb.CodedInputStream)
        parameters:
        - id: input
          type: pb.CodedInputStream
      overload: Unity.Reflect.Model.SyncObjectInstance.MergeFrom*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Unity.Reflect.Model.SyncPrefab
    commentId: T:Unity.Reflect.Model.SyncPrefab
    language: CSharp
    name:
      CSharp: SyncPrefab
      VB: SyncPrefab
    nameWithType:
      CSharp: SyncPrefab
      VB: SyncPrefab
    qualifiedName:
      CSharp: Unity.Reflect.Model.SyncPrefab
      VB: Unity.Reflect.Model.SyncPrefab
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect.Model
    source:
      id: SyncPrefab
      path: ''
      startLine: 7099
    syntax:
      content:
        CSharp: 'public sealed class SyncPrefab : pb.IMessage<SyncPrefab>, ISyncModel'
        VB: >-
          Public NotInheritable Class SyncPrefab

              Inherits pb.IMessage(Of SyncPrefab)

              Implements ISyncModel
    inheritance:
    - System.Object
    implements:
    - Unity.Reflect.Model.ISyncModel
    modifiers:
      CSharp:
      - public
      - sealed
      - class
      VB:
      - Public
      - NotInheritable
      - Class
    items:
    - id: Unity.Reflect.Model.SyncPrefab.Extension
      commentId: F:Unity.Reflect.Model.SyncPrefab.Extension
      language: CSharp
      name:
        CSharp: Extension
        VB: Extension
      nameWithType:
        CSharp: SyncPrefab.Extension
        VB: SyncPrefab.Extension
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncPrefab.Extension
        VB: Unity.Reflect.Model.SyncPrefab.Extension
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Extension
        path: ''
        startLine: 1518
      syntax:
        content:
          CSharp: public static string Extension
          VB: Public Shared Extension As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Unity.Reflect.Model.SyncPrefab.Parser
      commentId: P:Unity.Reflect.Model.SyncPrefab.Parser
      language: CSharp
      name:
        CSharp: Parser
        VB: Parser
      nameWithType:
        CSharp: SyncPrefab.Parser
        VB: SyncPrefab.Parser
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncPrefab.Parser
        VB: Unity.Reflect.Model.SyncPrefab.Parser
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Parser
        path: ''
        startLine: 7102
      syntax:
        content:
          CSharp: public static pb.MessageParser<SyncPrefab> Parser { get; }
          VB: Public Shared ReadOnly Property Parser As pb.MessageParser(Of SyncPrefab)
        parameters: []
        return:
          type: pb.MessageParser{Unity.Reflect.Model.SyncPrefab}
      overload: Unity.Reflect.Model.SyncPrefab.Parser*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Unity.Reflect.Model.SyncPrefab.Descriptor
      commentId: P:Unity.Reflect.Model.SyncPrefab.Descriptor
      language: CSharp
      name:
        CSharp: Descriptor
        VB: Descriptor
      nameWithType:
        CSharp: SyncPrefab.Descriptor
        VB: SyncPrefab.Descriptor
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncPrefab.Descriptor
        VB: Unity.Reflect.Model.SyncPrefab.Descriptor
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Descriptor
        path: ''
        startLine: 7105
      syntax:
        content:
          CSharp: public static pbr.MessageDescriptor Descriptor { get; }
          VB: Public Shared ReadOnly Property Descriptor As pbr.MessageDescriptor
        parameters: []
        return:
          type: pbr.MessageDescriptor
      overload: Unity.Reflect.Model.SyncPrefab.Descriptor*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Unity.Reflect.Model.SyncPrefab.#ctor
      commentId: M:Unity.Reflect.Model.SyncPrefab.#ctor
      language: CSharp
      name:
        CSharp: SyncPrefab()
        VB: SyncPrefab()
      nameWithType:
        CSharp: SyncPrefab.SyncPrefab()
        VB: SyncPrefab.SyncPrefab()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncPrefab.SyncPrefab()
        VB: Unity.Reflect.Model.SyncPrefab.SyncPrefab()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: .ctor
        path: ''
        startLine: 7115
      syntax:
        content:
          CSharp: public SyncPrefab()
          VB: Public Sub New
      overload: Unity.Reflect.Model.SyncPrefab.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncPrefab.#ctor(Unity.Reflect.Model.SyncPrefab)
      commentId: M:Unity.Reflect.Model.SyncPrefab.#ctor(Unity.Reflect.Model.SyncPrefab)
      language: CSharp
      name:
        CSharp: SyncPrefab(SyncPrefab)
        VB: SyncPrefab(SyncPrefab)
      nameWithType:
        CSharp: SyncPrefab.SyncPrefab(SyncPrefab)
        VB: SyncPrefab.SyncPrefab(SyncPrefab)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncPrefab.SyncPrefab(Unity.Reflect.Model.SyncPrefab)
        VB: Unity.Reflect.Model.SyncPrefab.SyncPrefab(Unity.Reflect.Model.SyncPrefab)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: .ctor
        path: ''
        startLine: 7122
      syntax:
        content:
          CSharp: public SyncPrefab(SyncPrefab other)
          VB: Public Sub New(other As SyncPrefab)
        parameters:
        - id: other
          type: Unity.Reflect.Model.SyncPrefab
      overload: Unity.Reflect.Model.SyncPrefab.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncPrefab.Clone
      commentId: M:Unity.Reflect.Model.SyncPrefab.Clone
      language: CSharp
      name:
        CSharp: Clone()
        VB: Clone()
      nameWithType:
        CSharp: SyncPrefab.Clone()
        VB: SyncPrefab.Clone()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncPrefab.Clone()
        VB: Unity.Reflect.Model.SyncPrefab.Clone()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Clone
        path: ''
        startLine: 7130
      syntax:
        content:
          CSharp: public SyncPrefab Clone()
          VB: Public Function Clone As SyncPrefab
        return:
          type: Unity.Reflect.Model.SyncPrefab
      overload: Unity.Reflect.Model.SyncPrefab.Clone*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncPrefab.NameFieldNumber
      commentId: F:Unity.Reflect.Model.SyncPrefab.NameFieldNumber
      language: CSharp
      name:
        CSharp: NameFieldNumber
        VB: NameFieldNumber
      nameWithType:
        CSharp: SyncPrefab.NameFieldNumber
        VB: SyncPrefab.NameFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncPrefab.NameFieldNumber
        VB: Unity.Reflect.Model.SyncPrefab.NameFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: NameFieldNumber
        path: ''
        startLine: 7136
      summary: Field number for the &quot;name&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int NameFieldNumber = 1
          VB: Public Const NameFieldNumber As Integer = 1
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncPrefab.Name
      commentId: P:Unity.Reflect.Model.SyncPrefab.Name
      language: CSharp
      name:
        CSharp: Name
        VB: Name
      nameWithType:
        CSharp: SyncPrefab.Name
        VB: SyncPrefab.Name
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncPrefab.Name
        VB: Unity.Reflect.Model.SyncPrefab.Name
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Name
        path: ''
        startLine: 7138
      syntax:
        content:
          CSharp: public string Name { get; set; }
          VB: Public Property Name As String
        parameters: []
        return:
          type: System.String
      overload: Unity.Reflect.Model.SyncPrefab.Name*
      implements:
      - Unity.Reflect.Model.ISyncModel.Name
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncPrefab.KeyFieldNumber
      commentId: F:Unity.Reflect.Model.SyncPrefab.KeyFieldNumber
      language: CSharp
      name:
        CSharp: KeyFieldNumber
        VB: KeyFieldNumber
      nameWithType:
        CSharp: SyncPrefab.KeyFieldNumber
        VB: SyncPrefab.KeyFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncPrefab.KeyFieldNumber
        VB: Unity.Reflect.Model.SyncPrefab.KeyFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: KeyFieldNumber
        path: ''
        startLine: 7147
      summary: Field number for the &quot;key&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int KeyFieldNumber = 2
          VB: Public Const KeyFieldNumber As Integer = 2
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncPrefab.Key
      commentId: P:Unity.Reflect.Model.SyncPrefab.Key
      language: CSharp
      name:
        CSharp: Key
        VB: Key
      nameWithType:
        CSharp: SyncPrefab.Key
        VB: SyncPrefab.Key
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncPrefab.Key
        VB: Unity.Reflect.Model.SyncPrefab.Key
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Key
        path: ''
        startLine: 7149
      syntax:
        content:
          CSharp: public string Key { get; set; }
          VB: Public Property Key As String
        parameters: []
        return:
          type: System.String
      overload: Unity.Reflect.Model.SyncPrefab.Key*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncPrefab.InstancesFieldNumber
      commentId: F:Unity.Reflect.Model.SyncPrefab.InstancesFieldNumber
      language: CSharp
      name:
        CSharp: InstancesFieldNumber
        VB: InstancesFieldNumber
      nameWithType:
        CSharp: SyncPrefab.InstancesFieldNumber
        VB: SyncPrefab.InstancesFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncPrefab.InstancesFieldNumber
        VB: Unity.Reflect.Model.SyncPrefab.InstancesFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: InstancesFieldNumber
        path: ''
        startLine: 7158
      summary: Field number for the &quot;instances&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int InstancesFieldNumber = 3
          VB: Public Const InstancesFieldNumber As Integer = 3
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncPrefab.Instances
      commentId: P:Unity.Reflect.Model.SyncPrefab.Instances
      language: CSharp
      name:
        CSharp: Instances
        VB: Instances
      nameWithType:
        CSharp: SyncPrefab.Instances
        VB: SyncPrefab.Instances
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncPrefab.Instances
        VB: Unity.Reflect.Model.SyncPrefab.Instances
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Instances
        path: ''
        startLine: 7162
      syntax:
        content:
          CSharp: public pbc.RepeatedField<SyncObjectInstance> Instances { get; }
          VB: Public ReadOnly Property Instances As pbc.RepeatedField(Of SyncObjectInstance)
        parameters: []
        return:
          type: pbc.RepeatedField{Unity.Reflect.Model.SyncObjectInstance}
      overload: Unity.Reflect.Model.SyncPrefab.Instances*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Unity.Reflect.Model.SyncPrefab.Equals(System.Object)
      commentId: M:Unity.Reflect.Model.SyncPrefab.Equals(System.Object)
      language: CSharp
      name:
        CSharp: Equals(Object)
        VB: Equals(Object)
      nameWithType:
        CSharp: SyncPrefab.Equals(Object)
        VB: SyncPrefab.Equals(Object)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncPrefab.Equals(System.Object)
        VB: Unity.Reflect.Model.SyncPrefab.Equals(System.Object)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Equals
        path: ''
        startLine: 7167
      syntax:
        content:
          CSharp: public override bool Equals(object other)
          VB: Public Overrides Function Equals(other As Object) As Boolean
        parameters:
        - id: other
          type: System.Object
        return:
          type: System.Boolean
      overload: Unity.Reflect.Model.SyncPrefab.Equals*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.Model.SyncPrefab.Equals(Unity.Reflect.Model.SyncPrefab)
      commentId: M:Unity.Reflect.Model.SyncPrefab.Equals(Unity.Reflect.Model.SyncPrefab)
      language: CSharp
      name:
        CSharp: Equals(SyncPrefab)
        VB: Equals(SyncPrefab)
      nameWithType:
        CSharp: SyncPrefab.Equals(SyncPrefab)
        VB: SyncPrefab.Equals(SyncPrefab)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncPrefab.Equals(Unity.Reflect.Model.SyncPrefab)
        VB: Unity.Reflect.Model.SyncPrefab.Equals(Unity.Reflect.Model.SyncPrefab)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Equals
        path: ''
        startLine: 7172
      syntax:
        content:
          CSharp: public bool Equals(SyncPrefab other)
          VB: Public Function Equals(other As SyncPrefab) As Boolean
        parameters:
        - id: other
          type: Unity.Reflect.Model.SyncPrefab
        return:
          type: System.Boolean
      overload: Unity.Reflect.Model.SyncPrefab.Equals*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncPrefab.GetHashCode
      commentId: M:Unity.Reflect.Model.SyncPrefab.GetHashCode
      language: CSharp
      name:
        CSharp: GetHashCode()
        VB: GetHashCode()
      nameWithType:
        CSharp: SyncPrefab.GetHashCode()
        VB: SyncPrefab.GetHashCode()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncPrefab.GetHashCode()
        VB: Unity.Reflect.Model.SyncPrefab.GetHashCode()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: GetHashCode
        path: ''
        startLine: 7186
      syntax:
        content:
          CSharp: public override int GetHashCode()
          VB: Public Overrides Function GetHashCode As Integer
        return:
          type: System.Int32
      overload: Unity.Reflect.Model.SyncPrefab.GetHashCode*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.Model.SyncPrefab.ToString
      commentId: M:Unity.Reflect.Model.SyncPrefab.ToString
      language: CSharp
      name:
        CSharp: ToString()
        VB: ToString()
      nameWithType:
        CSharp: SyncPrefab.ToString()
        VB: SyncPrefab.ToString()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncPrefab.ToString()
        VB: Unity.Reflect.Model.SyncPrefab.ToString()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: ToString
        path: ''
        startLine: 7198
      syntax:
        content:
          CSharp: public override string ToString()
          VB: Public Overrides Function ToString As String
        return:
          type: System.String
      overload: Unity.Reflect.Model.SyncPrefab.ToString*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.Model.SyncPrefab.WriteTo(pb.CodedOutputStream)
      commentId: M:Unity.Reflect.Model.SyncPrefab.WriteTo(pb.CodedOutputStream)
      language: CSharp
      name:
        CSharp: WriteTo(pb.CodedOutputStream)
        VB: WriteTo(pb.CodedOutputStream)
      nameWithType:
        CSharp: SyncPrefab.WriteTo(pb.CodedOutputStream)
        VB: SyncPrefab.WriteTo(pb.CodedOutputStream)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncPrefab.WriteTo(pb.CodedOutputStream)
        VB: Unity.Reflect.Model.SyncPrefab.WriteTo(pb.CodedOutputStream)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: WriteTo
        path: ''
        startLine: 7203
      syntax:
        content:
          CSharp: public void WriteTo(pb.CodedOutputStream output)
          VB: Public Sub WriteTo(output As pb.CodedOutputStream)
        parameters:
        - id: output
          type: pb.CodedOutputStream
      overload: Unity.Reflect.Model.SyncPrefab.WriteTo*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncPrefab.CalculateSize
      commentId: M:Unity.Reflect.Model.SyncPrefab.CalculateSize
      language: CSharp
      name:
        CSharp: CalculateSize()
        VB: CalculateSize()
      nameWithType:
        CSharp: SyncPrefab.CalculateSize()
        VB: SyncPrefab.CalculateSize()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncPrefab.CalculateSize()
        VB: Unity.Reflect.Model.SyncPrefab.CalculateSize()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: CalculateSize
        path: ''
        startLine: 7219
      syntax:
        content:
          CSharp: public int CalculateSize()
          VB: Public Function CalculateSize As Integer
        return:
          type: System.Int32
      overload: Unity.Reflect.Model.SyncPrefab.CalculateSize*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncPrefab.MergeFrom(Unity.Reflect.Model.SyncPrefab)
      commentId: M:Unity.Reflect.Model.SyncPrefab.MergeFrom(Unity.Reflect.Model.SyncPrefab)
      language: CSharp
      name:
        CSharp: MergeFrom(SyncPrefab)
        VB: MergeFrom(SyncPrefab)
      nameWithType:
        CSharp: SyncPrefab.MergeFrom(SyncPrefab)
        VB: SyncPrefab.MergeFrom(SyncPrefab)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncPrefab.MergeFrom(Unity.Reflect.Model.SyncPrefab)
        VB: Unity.Reflect.Model.SyncPrefab.MergeFrom(Unity.Reflect.Model.SyncPrefab)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: MergeFrom
        path: ''
        startLine: 7235
      syntax:
        content:
          CSharp: public void MergeFrom(SyncPrefab other)
          VB: Public Sub MergeFrom(other As SyncPrefab)
        parameters:
        - id: other
          type: Unity.Reflect.Model.SyncPrefab
      overload: Unity.Reflect.Model.SyncPrefab.MergeFrom*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncPrefab.MergeFrom(pb.CodedInputStream)
      commentId: M:Unity.Reflect.Model.SyncPrefab.MergeFrom(pb.CodedInputStream)
      language: CSharp
      name:
        CSharp: MergeFrom(pb.CodedInputStream)
        VB: MergeFrom(pb.CodedInputStream)
      nameWithType:
        CSharp: SyncPrefab.MergeFrom(pb.CodedInputStream)
        VB: SyncPrefab.MergeFrom(pb.CodedInputStream)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncPrefab.MergeFrom(pb.CodedInputStream)
        VB: Unity.Reflect.Model.SyncPrefab.MergeFrom(pb.CodedInputStream)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: MergeFrom
        path: ''
        startLine: 7250
      syntax:
        content:
          CSharp: public void MergeFrom(pb.CodedInputStream input)
          VB: Public Sub MergeFrom(input As pb.CodedInputStream)
        parameters:
        - id: input
          type: pb.CodedInputStream
      overload: Unity.Reflect.Model.SyncPrefab.MergeFrom*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Unity.Reflect.Model.SyncParameter
    commentId: T:Unity.Reflect.Model.SyncParameter
    language: CSharp
    name:
      CSharp: SyncParameter
      VB: SyncParameter
    nameWithType:
      CSharp: SyncParameter
      VB: SyncParameter
    qualifiedName:
      CSharp: Unity.Reflect.Model.SyncParameter
      VB: Unity.Reflect.Model.SyncParameter
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect.Model
    source:
      id: SyncParameter
      path: ''
      startLine: 7321
    syntax:
      content:
        CSharp: 'public sealed class SyncParameter : pb.IMessage<SyncParameter>'
        VB: >-
          Public NotInheritable Class SyncParameter

              Inherits pb.IMessage(Of SyncParameter)
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - sealed
      - class
      VB:
      - Public
      - NotInheritable
      - Class
    items:
    - id: Unity.Reflect.Model.SyncParameter.#ctor(System.String,System.String,System.Boolean)
      commentId: M:Unity.Reflect.Model.SyncParameter.#ctor(System.String,System.String,System.Boolean)
      language: CSharp
      name:
        CSharp: SyncParameter(String, String, Boolean)
        VB: SyncParameter(String, String, Boolean)
      nameWithType:
        CSharp: SyncParameter.SyncParameter(String, String, Boolean)
        VB: SyncParameter.SyncParameter(String, String, Boolean)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncParameter.SyncParameter(System.String, System.String, System.Boolean)
        VB: Unity.Reflect.Model.SyncParameter.SyncParameter(System.String, System.String, System.Boolean)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: .ctor
        path: ''
        startLine: 1529
      syntax:
        content:
          CSharp: public SyncParameter(string value, string parameterGroup, bool visible)
          VB: Public Sub New(value As String, parameterGroup As String, visible As Boolean)
        parameters:
        - id: value
          type: System.String
        - id: parameterGroup
          type: System.String
        - id: visible
          type: System.Boolean
      overload: Unity.Reflect.Model.SyncParameter.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncParameter.Parser
      commentId: P:Unity.Reflect.Model.SyncParameter.Parser
      language: CSharp
      name:
        CSharp: Parser
        VB: Parser
      nameWithType:
        CSharp: SyncParameter.Parser
        VB: SyncParameter.Parser
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncParameter.Parser
        VB: Unity.Reflect.Model.SyncParameter.Parser
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Parser
        path: ''
        startLine: 7324
      syntax:
        content:
          CSharp: public static pb.MessageParser<SyncParameter> Parser { get; }
          VB: Public Shared ReadOnly Property Parser As pb.MessageParser(Of SyncParameter)
        parameters: []
        return:
          type: pb.MessageParser{Unity.Reflect.Model.SyncParameter}
      overload: Unity.Reflect.Model.SyncParameter.Parser*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Unity.Reflect.Model.SyncParameter.Descriptor
      commentId: P:Unity.Reflect.Model.SyncParameter.Descriptor
      language: CSharp
      name:
        CSharp: Descriptor
        VB: Descriptor
      nameWithType:
        CSharp: SyncParameter.Descriptor
        VB: SyncParameter.Descriptor
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncParameter.Descriptor
        VB: Unity.Reflect.Model.SyncParameter.Descriptor
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Descriptor
        path: ''
        startLine: 7327
      syntax:
        content:
          CSharp: public static pbr.MessageDescriptor Descriptor { get; }
          VB: Public Shared ReadOnly Property Descriptor As pbr.MessageDescriptor
        parameters: []
        return:
          type: pbr.MessageDescriptor
      overload: Unity.Reflect.Model.SyncParameter.Descriptor*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Unity.Reflect.Model.SyncParameter.#ctor
      commentId: M:Unity.Reflect.Model.SyncParameter.#ctor
      language: CSharp
      name:
        CSharp: SyncParameter()
        VB: SyncParameter()
      nameWithType:
        CSharp: SyncParameter.SyncParameter()
        VB: SyncParameter.SyncParameter()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncParameter.SyncParameter()
        VB: Unity.Reflect.Model.SyncParameter.SyncParameter()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: .ctor
        path: ''
        startLine: 7337
      syntax:
        content:
          CSharp: public SyncParameter()
          VB: Public Sub New
      overload: Unity.Reflect.Model.SyncParameter.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncParameter.#ctor(Unity.Reflect.Model.SyncParameter)
      commentId: M:Unity.Reflect.Model.SyncParameter.#ctor(Unity.Reflect.Model.SyncParameter)
      language: CSharp
      name:
        CSharp: SyncParameter(SyncParameter)
        VB: SyncParameter(SyncParameter)
      nameWithType:
        CSharp: SyncParameter.SyncParameter(SyncParameter)
        VB: SyncParameter.SyncParameter(SyncParameter)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncParameter.SyncParameter(Unity.Reflect.Model.SyncParameter)
        VB: Unity.Reflect.Model.SyncParameter.SyncParameter(Unity.Reflect.Model.SyncParameter)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: .ctor
        path: ''
        startLine: 7344
      syntax:
        content:
          CSharp: public SyncParameter(SyncParameter other)
          VB: Public Sub New(other As SyncParameter)
        parameters:
        - id: other
          type: Unity.Reflect.Model.SyncParameter
      overload: Unity.Reflect.Model.SyncParameter.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncParameter.Clone
      commentId: M:Unity.Reflect.Model.SyncParameter.Clone
      language: CSharp
      name:
        CSharp: Clone()
        VB: Clone()
      nameWithType:
        CSharp: SyncParameter.Clone()
        VB: SyncParameter.Clone()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncParameter.Clone()
        VB: Unity.Reflect.Model.SyncParameter.Clone()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Clone
        path: ''
        startLine: 7352
      syntax:
        content:
          CSharp: public SyncParameter Clone()
          VB: Public Function Clone As SyncParameter
        return:
          type: Unity.Reflect.Model.SyncParameter
      overload: Unity.Reflect.Model.SyncParameter.Clone*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncParameter.ValueFieldNumber
      commentId: F:Unity.Reflect.Model.SyncParameter.ValueFieldNumber
      language: CSharp
      name:
        CSharp: ValueFieldNumber
        VB: ValueFieldNumber
      nameWithType:
        CSharp: SyncParameter.ValueFieldNumber
        VB: SyncParameter.ValueFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncParameter.ValueFieldNumber
        VB: Unity.Reflect.Model.SyncParameter.ValueFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: ValueFieldNumber
        path: ''
        startLine: 7358
      summary: Field number for the &quot;value&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int ValueFieldNumber = 1
          VB: Public Const ValueFieldNumber As Integer = 1
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncParameter.Value
      commentId: P:Unity.Reflect.Model.SyncParameter.Value
      language: CSharp
      name:
        CSharp: Value
        VB: Value
      nameWithType:
        CSharp: SyncParameter.Value
        VB: SyncParameter.Value
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncParameter.Value
        VB: Unity.Reflect.Model.SyncParameter.Value
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Value
        path: ''
        startLine: 7360
      syntax:
        content:
          CSharp: public string Value { get; set; }
          VB: Public Property Value As String
        parameters: []
        return:
          type: System.String
      overload: Unity.Reflect.Model.SyncParameter.Value*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncParameter.ParameterGroupFieldNumber
      commentId: F:Unity.Reflect.Model.SyncParameter.ParameterGroupFieldNumber
      language: CSharp
      name:
        CSharp: ParameterGroupFieldNumber
        VB: ParameterGroupFieldNumber
      nameWithType:
        CSharp: SyncParameter.ParameterGroupFieldNumber
        VB: SyncParameter.ParameterGroupFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncParameter.ParameterGroupFieldNumber
        VB: Unity.Reflect.Model.SyncParameter.ParameterGroupFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: ParameterGroupFieldNumber
        path: ''
        startLine: 7369
      summary: Field number for the &quot;parameterGroup&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int ParameterGroupFieldNumber = 2
          VB: Public Const ParameterGroupFieldNumber As Integer = 2
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncParameter.ParameterGroup
      commentId: P:Unity.Reflect.Model.SyncParameter.ParameterGroup
      language: CSharp
      name:
        CSharp: ParameterGroup
        VB: ParameterGroup
      nameWithType:
        CSharp: SyncParameter.ParameterGroup
        VB: SyncParameter.ParameterGroup
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncParameter.ParameterGroup
        VB: Unity.Reflect.Model.SyncParameter.ParameterGroup
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: ParameterGroup
        path: ''
        startLine: 7371
      syntax:
        content:
          CSharp: public string ParameterGroup { get; set; }
          VB: Public Property ParameterGroup As String
        parameters: []
        return:
          type: System.String
      overload: Unity.Reflect.Model.SyncParameter.ParameterGroup*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncParameter.VisibleFieldNumber
      commentId: F:Unity.Reflect.Model.SyncParameter.VisibleFieldNumber
      language: CSharp
      name:
        CSharp: VisibleFieldNumber
        VB: VisibleFieldNumber
      nameWithType:
        CSharp: SyncParameter.VisibleFieldNumber
        VB: SyncParameter.VisibleFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncParameter.VisibleFieldNumber
        VB: Unity.Reflect.Model.SyncParameter.VisibleFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: VisibleFieldNumber
        path: ''
        startLine: 7380
      summary: Field number for the &quot;visible&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int VisibleFieldNumber = 3
          VB: Public Const VisibleFieldNumber As Integer = 3
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncParameter.Visible
      commentId: P:Unity.Reflect.Model.SyncParameter.Visible
      language: CSharp
      name:
        CSharp: Visible
        VB: Visible
      nameWithType:
        CSharp: SyncParameter.Visible
        VB: SyncParameter.Visible
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncParameter.Visible
        VB: Unity.Reflect.Model.SyncParameter.Visible
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Visible
        path: ''
        startLine: 7382
      syntax:
        content:
          CSharp: public bool Visible { get; set; }
          VB: Public Property Visible As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: Unity.Reflect.Model.SyncParameter.Visible*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncParameter.Equals(System.Object)
      commentId: M:Unity.Reflect.Model.SyncParameter.Equals(System.Object)
      language: CSharp
      name:
        CSharp: Equals(Object)
        VB: Equals(Object)
      nameWithType:
        CSharp: SyncParameter.Equals(Object)
        VB: SyncParameter.Equals(Object)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncParameter.Equals(System.Object)
        VB: Unity.Reflect.Model.SyncParameter.Equals(System.Object)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Equals
        path: ''
        startLine: 7390
      syntax:
        content:
          CSharp: public override bool Equals(object other)
          VB: Public Overrides Function Equals(other As Object) As Boolean
        parameters:
        - id: other
          type: System.Object
        return:
          type: System.Boolean
      overload: Unity.Reflect.Model.SyncParameter.Equals*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.Model.SyncParameter.Equals(Unity.Reflect.Model.SyncParameter)
      commentId: M:Unity.Reflect.Model.SyncParameter.Equals(Unity.Reflect.Model.SyncParameter)
      language: CSharp
      name:
        CSharp: Equals(SyncParameter)
        VB: Equals(SyncParameter)
      nameWithType:
        CSharp: SyncParameter.Equals(SyncParameter)
        VB: SyncParameter.Equals(SyncParameter)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncParameter.Equals(Unity.Reflect.Model.SyncParameter)
        VB: Unity.Reflect.Model.SyncParameter.Equals(Unity.Reflect.Model.SyncParameter)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Equals
        path: ''
        startLine: 7395
      syntax:
        content:
          CSharp: public bool Equals(SyncParameter other)
          VB: Public Function Equals(other As SyncParameter) As Boolean
        parameters:
        - id: other
          type: Unity.Reflect.Model.SyncParameter
        return:
          type: System.Boolean
      overload: Unity.Reflect.Model.SyncParameter.Equals*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncParameter.GetHashCode
      commentId: M:Unity.Reflect.Model.SyncParameter.GetHashCode
      language: CSharp
      name:
        CSharp: GetHashCode()
        VB: GetHashCode()
      nameWithType:
        CSharp: SyncParameter.GetHashCode()
        VB: SyncParameter.GetHashCode()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncParameter.GetHashCode()
        VB: Unity.Reflect.Model.SyncParameter.GetHashCode()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: GetHashCode
        path: ''
        startLine: 7409
      syntax:
        content:
          CSharp: public override int GetHashCode()
          VB: Public Overrides Function GetHashCode As Integer
        return:
          type: System.Int32
      overload: Unity.Reflect.Model.SyncParameter.GetHashCode*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.Model.SyncParameter.ToString
      commentId: M:Unity.Reflect.Model.SyncParameter.ToString
      language: CSharp
      name:
        CSharp: ToString()
        VB: ToString()
      nameWithType:
        CSharp: SyncParameter.ToString()
        VB: SyncParameter.ToString()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncParameter.ToString()
        VB: Unity.Reflect.Model.SyncParameter.ToString()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: ToString
        path: ''
        startLine: 7421
      syntax:
        content:
          CSharp: public override string ToString()
          VB: Public Overrides Function ToString As String
        return:
          type: System.String
      overload: Unity.Reflect.Model.SyncParameter.ToString*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.Model.SyncParameter.WriteTo(pb.CodedOutputStream)
      commentId: M:Unity.Reflect.Model.SyncParameter.WriteTo(pb.CodedOutputStream)
      language: CSharp
      name:
        CSharp: WriteTo(pb.CodedOutputStream)
        VB: WriteTo(pb.CodedOutputStream)
      nameWithType:
        CSharp: SyncParameter.WriteTo(pb.CodedOutputStream)
        VB: SyncParameter.WriteTo(pb.CodedOutputStream)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncParameter.WriteTo(pb.CodedOutputStream)
        VB: Unity.Reflect.Model.SyncParameter.WriteTo(pb.CodedOutputStream)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: WriteTo
        path: ''
        startLine: 7426
      syntax:
        content:
          CSharp: public void WriteTo(pb.CodedOutputStream output)
          VB: Public Sub WriteTo(output As pb.CodedOutputStream)
        parameters:
        - id: output
          type: pb.CodedOutputStream
      overload: Unity.Reflect.Model.SyncParameter.WriteTo*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncParameter.CalculateSize
      commentId: M:Unity.Reflect.Model.SyncParameter.CalculateSize
      language: CSharp
      name:
        CSharp: CalculateSize()
        VB: CalculateSize()
      nameWithType:
        CSharp: SyncParameter.CalculateSize()
        VB: SyncParameter.CalculateSize()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncParameter.CalculateSize()
        VB: Unity.Reflect.Model.SyncParameter.CalculateSize()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: CalculateSize
        path: ''
        startLine: 7445
      syntax:
        content:
          CSharp: public int CalculateSize()
          VB: Public Function CalculateSize As Integer
        return:
          type: System.Int32
      overload: Unity.Reflect.Model.SyncParameter.CalculateSize*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncParameter.MergeFrom(Unity.Reflect.Model.SyncParameter)
      commentId: M:Unity.Reflect.Model.SyncParameter.MergeFrom(Unity.Reflect.Model.SyncParameter)
      language: CSharp
      name:
        CSharp: MergeFrom(SyncParameter)
        VB: MergeFrom(SyncParameter)
      nameWithType:
        CSharp: SyncParameter.MergeFrom(SyncParameter)
        VB: SyncParameter.MergeFrom(SyncParameter)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncParameter.MergeFrom(Unity.Reflect.Model.SyncParameter)
        VB: Unity.Reflect.Model.SyncParameter.MergeFrom(Unity.Reflect.Model.SyncParameter)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: MergeFrom
        path: ''
        startLine: 7463
      syntax:
        content:
          CSharp: public void MergeFrom(SyncParameter other)
          VB: Public Sub MergeFrom(other As SyncParameter)
        parameters:
        - id: other
          type: Unity.Reflect.Model.SyncParameter
      overload: Unity.Reflect.Model.SyncParameter.MergeFrom*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncParameter.MergeFrom(pb.CodedInputStream)
      commentId: M:Unity.Reflect.Model.SyncParameter.MergeFrom(pb.CodedInputStream)
      language: CSharp
      name:
        CSharp: MergeFrom(pb.CodedInputStream)
        VB: MergeFrom(pb.CodedInputStream)
      nameWithType:
        CSharp: SyncParameter.MergeFrom(pb.CodedInputStream)
        VB: SyncParameter.MergeFrom(pb.CodedInputStream)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncParameter.MergeFrom(pb.CodedInputStream)
        VB: Unity.Reflect.Model.SyncParameter.MergeFrom(pb.CodedInputStream)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: MergeFrom
        path: ''
        startLine: 7480
      syntax:
        content:
          CSharp: public void MergeFrom(pb.CodedInputStream input)
          VB: Public Sub MergeFrom(input As pb.CodedInputStream)
        parameters:
        - id: input
          type: pb.CodedInputStream
      overload: Unity.Reflect.Model.SyncParameter.MergeFrom*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Unity.Reflect.Model.SyncRPC
    commentId: T:Unity.Reflect.Model.SyncRPC
    language: CSharp
    name:
      CSharp: SyncRPC
      VB: SyncRPC
    nameWithType:
      CSharp: SyncRPC
      VB: SyncRPC
    qualifiedName:
      CSharp: Unity.Reflect.Model.SyncRPC
      VB: Unity.Reflect.Model.SyncRPC
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect.Model
    source:
      id: SyncRPC
      path: ''
      startLine: 7552
    syntax:
      content:
        CSharp: 'public sealed class SyncRPC : pb.IMessage<SyncRPC>'
        VB: >-
          Public NotInheritable Class SyncRPC

              Inherits pb.IMessage(Of SyncRPC)
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - sealed
      - class
      VB:
      - Public
      - NotInheritable
      - Class
    items:
    - id: Unity.Reflect.Model.SyncRPC.#ctor(System.String,Unity.Reflect.Model.SyncTransform)
      commentId: M:Unity.Reflect.Model.SyncRPC.#ctor(System.String,Unity.Reflect.Model.SyncTransform)
      language: CSharp
      name:
        CSharp: SyncRPC(String, SyncTransform)
        VB: SyncRPC(String, SyncTransform)
      nameWithType:
        CSharp: SyncRPC.SyncRPC(String, SyncTransform)
        VB: SyncRPC.SyncRPC(String, SyncTransform)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncRPC.SyncRPC(System.String, Unity.Reflect.Model.SyncTransform)
        VB: Unity.Reflect.Model.SyncRPC.SyncRPC(System.String, Unity.Reflect.Model.SyncTransform)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: .ctor
        path: ''
        startLine: 1631
      syntax:
        content:
          CSharp: public SyncRPC(string name, SyncTransform transform)
          VB: Public Sub New(name As String, transform As SyncTransform)
        parameters:
        - id: name
          type: System.String
        - id: transform
          type: Unity.Reflect.Model.SyncTransform
      overload: Unity.Reflect.Model.SyncRPC.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncRPC.Parser
      commentId: P:Unity.Reflect.Model.SyncRPC.Parser
      language: CSharp
      name:
        CSharp: Parser
        VB: Parser
      nameWithType:
        CSharp: SyncRPC.Parser
        VB: SyncRPC.Parser
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncRPC.Parser
        VB: Unity.Reflect.Model.SyncRPC.Parser
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Parser
        path: ''
        startLine: 7555
      syntax:
        content:
          CSharp: public static pb.MessageParser<SyncRPC> Parser { get; }
          VB: Public Shared ReadOnly Property Parser As pb.MessageParser(Of SyncRPC)
        parameters: []
        return:
          type: pb.MessageParser{Unity.Reflect.Model.SyncRPC}
      overload: Unity.Reflect.Model.SyncRPC.Parser*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Unity.Reflect.Model.SyncRPC.Descriptor
      commentId: P:Unity.Reflect.Model.SyncRPC.Descriptor
      language: CSharp
      name:
        CSharp: Descriptor
        VB: Descriptor
      nameWithType:
        CSharp: SyncRPC.Descriptor
        VB: SyncRPC.Descriptor
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncRPC.Descriptor
        VB: Unity.Reflect.Model.SyncRPC.Descriptor
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Descriptor
        path: ''
        startLine: 7558
      syntax:
        content:
          CSharp: public static pbr.MessageDescriptor Descriptor { get; }
          VB: Public Shared ReadOnly Property Descriptor As pbr.MessageDescriptor
        parameters: []
        return:
          type: pbr.MessageDescriptor
      overload: Unity.Reflect.Model.SyncRPC.Descriptor*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Unity.Reflect.Model.SyncRPC.#ctor
      commentId: M:Unity.Reflect.Model.SyncRPC.#ctor
      language: CSharp
      name:
        CSharp: SyncRPC()
        VB: SyncRPC()
      nameWithType:
        CSharp: SyncRPC.SyncRPC()
        VB: SyncRPC.SyncRPC()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncRPC.SyncRPC()
        VB: Unity.Reflect.Model.SyncRPC.SyncRPC()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: .ctor
        path: ''
        startLine: 7568
      syntax:
        content:
          CSharp: public SyncRPC()
          VB: Public Sub New
      overload: Unity.Reflect.Model.SyncRPC.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncRPC.#ctor(Unity.Reflect.Model.SyncRPC)
      commentId: M:Unity.Reflect.Model.SyncRPC.#ctor(Unity.Reflect.Model.SyncRPC)
      language: CSharp
      name:
        CSharp: SyncRPC(SyncRPC)
        VB: SyncRPC(SyncRPC)
      nameWithType:
        CSharp: SyncRPC.SyncRPC(SyncRPC)
        VB: SyncRPC.SyncRPC(SyncRPC)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncRPC.SyncRPC(Unity.Reflect.Model.SyncRPC)
        VB: Unity.Reflect.Model.SyncRPC.SyncRPC(Unity.Reflect.Model.SyncRPC)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: .ctor
        path: ''
        startLine: 7575
      syntax:
        content:
          CSharp: public SyncRPC(SyncRPC other)
          VB: Public Sub New(other As SyncRPC)
        parameters:
        - id: other
          type: Unity.Reflect.Model.SyncRPC
      overload: Unity.Reflect.Model.SyncRPC.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncRPC.Clone
      commentId: M:Unity.Reflect.Model.SyncRPC.Clone
      language: CSharp
      name:
        CSharp: Clone()
        VB: Clone()
      nameWithType:
        CSharp: SyncRPC.Clone()
        VB: SyncRPC.Clone()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncRPC.Clone()
        VB: Unity.Reflect.Model.SyncRPC.Clone()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Clone
        path: ''
        startLine: 7582
      syntax:
        content:
          CSharp: public SyncRPC Clone()
          VB: Public Function Clone As SyncRPC
        return:
          type: Unity.Reflect.Model.SyncRPC
      overload: Unity.Reflect.Model.SyncRPC.Clone*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncRPC.NameFieldNumber
      commentId: F:Unity.Reflect.Model.SyncRPC.NameFieldNumber
      language: CSharp
      name:
        CSharp: NameFieldNumber
        VB: NameFieldNumber
      nameWithType:
        CSharp: SyncRPC.NameFieldNumber
        VB: SyncRPC.NameFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncRPC.NameFieldNumber
        VB: Unity.Reflect.Model.SyncRPC.NameFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: NameFieldNumber
        path: ''
        startLine: 7588
      summary: Field number for the &quot;name&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int NameFieldNumber = 1
          VB: Public Const NameFieldNumber As Integer = 1
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncRPC.Name
      commentId: P:Unity.Reflect.Model.SyncRPC.Name
      language: CSharp
      name:
        CSharp: Name
        VB: Name
      nameWithType:
        CSharp: SyncRPC.Name
        VB: SyncRPC.Name
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncRPC.Name
        VB: Unity.Reflect.Model.SyncRPC.Name
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Name
        path: ''
        startLine: 7590
      syntax:
        content:
          CSharp: public string Name { get; set; }
          VB: Public Property Name As String
        parameters: []
        return:
          type: System.String
      overload: Unity.Reflect.Model.SyncRPC.Name*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncRPC.TransformFieldNumber
      commentId: F:Unity.Reflect.Model.SyncRPC.TransformFieldNumber
      language: CSharp
      name:
        CSharp: TransformFieldNumber
        VB: TransformFieldNumber
      nameWithType:
        CSharp: SyncRPC.TransformFieldNumber
        VB: SyncRPC.TransformFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncRPC.TransformFieldNumber
        VB: Unity.Reflect.Model.SyncRPC.TransformFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: TransformFieldNumber
        path: ''
        startLine: 7599
      summary: Field number for the &quot;transform&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int TransformFieldNumber = 2
          VB: Public Const TransformFieldNumber As Integer = 2
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncRPC.Transform
      commentId: P:Unity.Reflect.Model.SyncRPC.Transform
      language: CSharp
      name:
        CSharp: Transform
        VB: Transform
      nameWithType:
        CSharp: SyncRPC.Transform
        VB: SyncRPC.Transform
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncRPC.Transform
        VB: Unity.Reflect.Model.SyncRPC.Transform
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Transform
        path: ''
        startLine: 7601
      syntax:
        content:
          CSharp: public SyncTransform Transform { get; set; }
          VB: Public Property Transform As SyncTransform
        parameters: []
        return:
          type: Unity.Reflect.Model.SyncTransform
      overload: Unity.Reflect.Model.SyncRPC.Transform*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncRPC.Equals(System.Object)
      commentId: M:Unity.Reflect.Model.SyncRPC.Equals(System.Object)
      language: CSharp
      name:
        CSharp: Equals(Object)
        VB: Equals(Object)
      nameWithType:
        CSharp: SyncRPC.Equals(Object)
        VB: SyncRPC.Equals(Object)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncRPC.Equals(System.Object)
        VB: Unity.Reflect.Model.SyncRPC.Equals(System.Object)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Equals
        path: ''
        startLine: 7609
      syntax:
        content:
          CSharp: public override bool Equals(object other)
          VB: Public Overrides Function Equals(other As Object) As Boolean
        parameters:
        - id: other
          type: System.Object
        return:
          type: System.Boolean
      overload: Unity.Reflect.Model.SyncRPC.Equals*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.Model.SyncRPC.Equals(Unity.Reflect.Model.SyncRPC)
      commentId: M:Unity.Reflect.Model.SyncRPC.Equals(Unity.Reflect.Model.SyncRPC)
      language: CSharp
      name:
        CSharp: Equals(SyncRPC)
        VB: Equals(SyncRPC)
      nameWithType:
        CSharp: SyncRPC.Equals(SyncRPC)
        VB: SyncRPC.Equals(SyncRPC)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncRPC.Equals(Unity.Reflect.Model.SyncRPC)
        VB: Unity.Reflect.Model.SyncRPC.Equals(Unity.Reflect.Model.SyncRPC)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Equals
        path: ''
        startLine: 7614
      syntax:
        content:
          CSharp: public bool Equals(SyncRPC other)
          VB: Public Function Equals(other As SyncRPC) As Boolean
        parameters:
        - id: other
          type: Unity.Reflect.Model.SyncRPC
        return:
          type: System.Boolean
      overload: Unity.Reflect.Model.SyncRPC.Equals*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncRPC.GetHashCode
      commentId: M:Unity.Reflect.Model.SyncRPC.GetHashCode
      language: CSharp
      name:
        CSharp: GetHashCode()
        VB: GetHashCode()
      nameWithType:
        CSharp: SyncRPC.GetHashCode()
        VB: SyncRPC.GetHashCode()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncRPC.GetHashCode()
        VB: Unity.Reflect.Model.SyncRPC.GetHashCode()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: GetHashCode
        path: ''
        startLine: 7627
      syntax:
        content:
          CSharp: public override int GetHashCode()
          VB: Public Overrides Function GetHashCode As Integer
        return:
          type: System.Int32
      overload: Unity.Reflect.Model.SyncRPC.GetHashCode*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.Model.SyncRPC.ToString
      commentId: M:Unity.Reflect.Model.SyncRPC.ToString
      language: CSharp
      name:
        CSharp: ToString()
        VB: ToString()
      nameWithType:
        CSharp: SyncRPC.ToString()
        VB: SyncRPC.ToString()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncRPC.ToString()
        VB: Unity.Reflect.Model.SyncRPC.ToString()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: ToString
        path: ''
        startLine: 7638
      syntax:
        content:
          CSharp: public override string ToString()
          VB: Public Overrides Function ToString As String
        return:
          type: System.String
      overload: Unity.Reflect.Model.SyncRPC.ToString*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.Model.SyncRPC.WriteTo(pb.CodedOutputStream)
      commentId: M:Unity.Reflect.Model.SyncRPC.WriteTo(pb.CodedOutputStream)
      language: CSharp
      name:
        CSharp: WriteTo(pb.CodedOutputStream)
        VB: WriteTo(pb.CodedOutputStream)
      nameWithType:
        CSharp: SyncRPC.WriteTo(pb.CodedOutputStream)
        VB: SyncRPC.WriteTo(pb.CodedOutputStream)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncRPC.WriteTo(pb.CodedOutputStream)
        VB: Unity.Reflect.Model.SyncRPC.WriteTo(pb.CodedOutputStream)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: WriteTo
        path: ''
        startLine: 7643
      syntax:
        content:
          CSharp: public void WriteTo(pb.CodedOutputStream output)
          VB: Public Sub WriteTo(output As pb.CodedOutputStream)
        parameters:
        - id: output
          type: pb.CodedOutputStream
      overload: Unity.Reflect.Model.SyncRPC.WriteTo*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncRPC.CalculateSize
      commentId: M:Unity.Reflect.Model.SyncRPC.CalculateSize
      language: CSharp
      name:
        CSharp: CalculateSize()
        VB: CalculateSize()
      nameWithType:
        CSharp: SyncRPC.CalculateSize()
        VB: SyncRPC.CalculateSize()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncRPC.CalculateSize()
        VB: Unity.Reflect.Model.SyncRPC.CalculateSize()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: CalculateSize
        path: ''
        startLine: 7658
      syntax:
        content:
          CSharp: public int CalculateSize()
          VB: Public Function CalculateSize As Integer
        return:
          type: System.Int32
      overload: Unity.Reflect.Model.SyncRPC.CalculateSize*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncRPC.MergeFrom(Unity.Reflect.Model.SyncRPC)
      commentId: M:Unity.Reflect.Model.SyncRPC.MergeFrom(Unity.Reflect.Model.SyncRPC)
      language: CSharp
      name:
        CSharp: MergeFrom(SyncRPC)
        VB: MergeFrom(SyncRPC)
      nameWithType:
        CSharp: SyncRPC.MergeFrom(SyncRPC)
        VB: SyncRPC.MergeFrom(SyncRPC)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncRPC.MergeFrom(Unity.Reflect.Model.SyncRPC)
        VB: Unity.Reflect.Model.SyncRPC.MergeFrom(Unity.Reflect.Model.SyncRPC)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: MergeFrom
        path: ''
        startLine: 7673
      syntax:
        content:
          CSharp: public void MergeFrom(SyncRPC other)
          VB: Public Sub MergeFrom(other As SyncRPC)
        parameters:
        - id: other
          type: Unity.Reflect.Model.SyncRPC
      overload: Unity.Reflect.Model.SyncRPC.MergeFrom*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncRPC.MergeFrom(pb.CodedInputStream)
      commentId: M:Unity.Reflect.Model.SyncRPC.MergeFrom(pb.CodedInputStream)
      language: CSharp
      name:
        CSharp: MergeFrom(pb.CodedInputStream)
        VB: MergeFrom(pb.CodedInputStream)
      nameWithType:
        CSharp: SyncRPC.MergeFrom(pb.CodedInputStream)
        VB: SyncRPC.MergeFrom(pb.CodedInputStream)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncRPC.MergeFrom(pb.CodedInputStream)
        VB: Unity.Reflect.Model.SyncRPC.MergeFrom(pb.CodedInputStream)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: MergeFrom
        path: ''
        startLine: 7690
      syntax:
        content:
          CSharp: public void MergeFrom(pb.CodedInputStream input)
          VB: Public Sub MergeFrom(input As pb.CodedInputStream)
        parameters:
        - id: input
          type: pb.CodedInputStream
      overload: Unity.Reflect.Model.SyncRPC.MergeFrom*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Unity.Reflect.Model.SyncTexture
    commentId: T:Unity.Reflect.Model.SyncTexture
    language: CSharp
    name:
      CSharp: SyncTexture
      VB: SyncTexture
    nameWithType:
      CSharp: SyncTexture
      VB: SyncTexture
    qualifiedName:
      CSharp: Unity.Reflect.Model.SyncTexture
      VB: Unity.Reflect.Model.SyncTexture
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect.Model
    source:
      id: SyncTexture
      path: ''
      startLine: 13577
    syntax:
      content:
        CSharp: 'public sealed class SyncTexture : pb.IMessage<SyncTexture>, ISyncModel, ISyncSendable'
        VB: >-
          Public NotInheritable Class SyncTexture

              Inherits pb.IMessage(Of SyncTexture)

              Implements ISyncModel, ISyncSendable
    inheritance:
    - System.Object
    implements:
    - Unity.Reflect.Model.ISyncModel
    modifiers:
      CSharp:
      - public
      - sealed
      - class
      VB:
      - Public
      - NotInheritable
      - Class
    items:
    - id: Unity.Reflect.Model.SyncTexture.Extension
      commentId: F:Unity.Reflect.Model.SyncTexture.Extension
      language: CSharp
      name:
        CSharp: Extension
        VB: Extension
      nameWithType:
        CSharp: SyncTexture.Extension
        VB: SyncTexture.Extension
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncTexture.Extension
        VB: Unity.Reflect.Model.SyncTexture.Extension
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Extension
        path: ''
        startLine: 1679
      syntax:
        content:
          CSharp: public static string Extension
          VB: Public Shared Extension As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Unity.Reflect.Model.SyncTexture.Parser
      commentId: P:Unity.Reflect.Model.SyncTexture.Parser
      language: CSharp
      name:
        CSharp: Parser
        VB: Parser
      nameWithType:
        CSharp: SyncTexture.Parser
        VB: SyncTexture.Parser
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncTexture.Parser
        VB: Unity.Reflect.Model.SyncTexture.Parser
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Parser
        path: ''
        startLine: 13580
      syntax:
        content:
          CSharp: public static pb.MessageParser<SyncTexture> Parser { get; }
          VB: Public Shared ReadOnly Property Parser As pb.MessageParser(Of SyncTexture)
        parameters: []
        return:
          type: pb.MessageParser{Unity.Reflect.Model.SyncTexture}
      overload: Unity.Reflect.Model.SyncTexture.Parser*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Unity.Reflect.Model.SyncTexture.Descriptor
      commentId: P:Unity.Reflect.Model.SyncTexture.Descriptor
      language: CSharp
      name:
        CSharp: Descriptor
        VB: Descriptor
      nameWithType:
        CSharp: SyncTexture.Descriptor
        VB: SyncTexture.Descriptor
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncTexture.Descriptor
        VB: Unity.Reflect.Model.SyncTexture.Descriptor
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Descriptor
        path: ''
        startLine: 13583
      syntax:
        content:
          CSharp: public static pbr.MessageDescriptor Descriptor { get; }
          VB: Public Shared ReadOnly Property Descriptor As pbr.MessageDescriptor
        parameters: []
        return:
          type: pbr.MessageDescriptor
      overload: Unity.Reflect.Model.SyncTexture.Descriptor*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Unity.Reflect.Model.SyncTexture.#ctor
      commentId: M:Unity.Reflect.Model.SyncTexture.#ctor
      language: CSharp
      name:
        CSharp: SyncTexture()
        VB: SyncTexture()
      nameWithType:
        CSharp: SyncTexture.SyncTexture()
        VB: SyncTexture.SyncTexture()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncTexture.SyncTexture()
        VB: Unity.Reflect.Model.SyncTexture.SyncTexture()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: .ctor
        path: ''
        startLine: 13593
      syntax:
        content:
          CSharp: public SyncTexture()
          VB: Public Sub New
      overload: Unity.Reflect.Model.SyncTexture.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncTexture.#ctor(Unity.Reflect.Model.SyncTexture)
      commentId: M:Unity.Reflect.Model.SyncTexture.#ctor(Unity.Reflect.Model.SyncTexture)
      language: CSharp
      name:
        CSharp: SyncTexture(SyncTexture)
        VB: SyncTexture(SyncTexture)
      nameWithType:
        CSharp: SyncTexture.SyncTexture(SyncTexture)
        VB: SyncTexture.SyncTexture(SyncTexture)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncTexture.SyncTexture(Unity.Reflect.Model.SyncTexture)
        VB: Unity.Reflect.Model.SyncTexture.SyncTexture(Unity.Reflect.Model.SyncTexture)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: .ctor
        path: ''
        startLine: 13600
      syntax:
        content:
          CSharp: public SyncTexture(SyncTexture other)
          VB: Public Sub New(other As SyncTexture)
        parameters:
        - id: other
          type: Unity.Reflect.Model.SyncTexture
      overload: Unity.Reflect.Model.SyncTexture.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncTexture.Clone
      commentId: M:Unity.Reflect.Model.SyncTexture.Clone
      language: CSharp
      name:
        CSharp: Clone()
        VB: Clone()
      nameWithType:
        CSharp: SyncTexture.Clone()
        VB: SyncTexture.Clone()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncTexture.Clone()
        VB: Unity.Reflect.Model.SyncTexture.Clone()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Clone
        path: ''
        startLine: 13608
      syntax:
        content:
          CSharp: public SyncTexture Clone()
          VB: Public Function Clone As SyncTexture
        return:
          type: Unity.Reflect.Model.SyncTexture
      overload: Unity.Reflect.Model.SyncTexture.Clone*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncTexture.NameFieldNumber
      commentId: F:Unity.Reflect.Model.SyncTexture.NameFieldNumber
      language: CSharp
      name:
        CSharp: NameFieldNumber
        VB: NameFieldNumber
      nameWithType:
        CSharp: SyncTexture.NameFieldNumber
        VB: SyncTexture.NameFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncTexture.NameFieldNumber
        VB: Unity.Reflect.Model.SyncTexture.NameFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: NameFieldNumber
        path: ''
        startLine: 13614
      summary: Field number for the &quot;name&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int NameFieldNumber = 1
          VB: Public Const NameFieldNumber As Integer = 1
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncTexture.Name
      commentId: P:Unity.Reflect.Model.SyncTexture.Name
      language: CSharp
      name:
        CSharp: Name
        VB: Name
      nameWithType:
        CSharp: SyncTexture.Name
        VB: SyncTexture.Name
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncTexture.Name
        VB: Unity.Reflect.Model.SyncTexture.Name
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Name
        path: ''
        startLine: 13616
      syntax:
        content:
          CSharp: public string Name { get; set; }
          VB: Public Property Name As String
        parameters: []
        return:
          type: System.String
      overload: Unity.Reflect.Model.SyncTexture.Name*
      implements:
      - Unity.Reflect.Model.ISyncModel.Name
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncTexture.SourceFieldNumber
      commentId: F:Unity.Reflect.Model.SyncTexture.SourceFieldNumber
      language: CSharp
      name:
        CSharp: SourceFieldNumber
        VB: SourceFieldNumber
      nameWithType:
        CSharp: SyncTexture.SourceFieldNumber
        VB: SyncTexture.SourceFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncTexture.SourceFieldNumber
        VB: Unity.Reflect.Model.SyncTexture.SourceFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: SourceFieldNumber
        path: ''
        startLine: 13625
      summary: Field number for the &quot;source&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int SourceFieldNumber = 2
          VB: Public Const SourceFieldNumber As Integer = 2
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncTexture.Source
      commentId: P:Unity.Reflect.Model.SyncTexture.Source
      language: CSharp
      name:
        CSharp: Source
        VB: Source
      nameWithType:
        CSharp: SyncTexture.Source
        VB: SyncTexture.Source
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncTexture.Source
        VB: Unity.Reflect.Model.SyncTexture.Source
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Source
        path: ''
        startLine: 13627
      syntax:
        content:
          CSharp: public pb.ByteString Source { get; set; }
          VB: Public Property Source As pb.ByteString
        parameters: []
        return:
          type: pb.ByteString
      overload: Unity.Reflect.Model.SyncTexture.Source*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncTexture.ConvertToNormalMapFieldNumber
      commentId: F:Unity.Reflect.Model.SyncTexture.ConvertToNormalMapFieldNumber
      language: CSharp
      name:
        CSharp: ConvertToNormalMapFieldNumber
        VB: ConvertToNormalMapFieldNumber
      nameWithType:
        CSharp: SyncTexture.ConvertToNormalMapFieldNumber
        VB: SyncTexture.ConvertToNormalMapFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncTexture.ConvertToNormalMapFieldNumber
        VB: Unity.Reflect.Model.SyncTexture.ConvertToNormalMapFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: ConvertToNormalMapFieldNumber
        path: ''
        startLine: 13636
      summary: Field number for the &quot;convertToNormalMap&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int ConvertToNormalMapFieldNumber = 3
          VB: Public Const ConvertToNormalMapFieldNumber As Integer = 3
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Model.SyncTexture.ConvertToNormalMap
      commentId: P:Unity.Reflect.Model.SyncTexture.ConvertToNormalMap
      language: CSharp
      name:
        CSharp: ConvertToNormalMap
        VB: ConvertToNormalMap
      nameWithType:
        CSharp: SyncTexture.ConvertToNormalMap
        VB: SyncTexture.ConvertToNormalMap
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncTexture.ConvertToNormalMap
        VB: Unity.Reflect.Model.SyncTexture.ConvertToNormalMap
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: ConvertToNormalMap
        path: ''
        startLine: 13638
      syntax:
        content:
          CSharp: public bool ConvertToNormalMap { get; set; }
          VB: Public Property ConvertToNormalMap As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: Unity.Reflect.Model.SyncTexture.ConvertToNormalMap*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncTexture.Equals(System.Object)
      commentId: M:Unity.Reflect.Model.SyncTexture.Equals(System.Object)
      language: CSharp
      name:
        CSharp: Equals(Object)
        VB: Equals(Object)
      nameWithType:
        CSharp: SyncTexture.Equals(Object)
        VB: SyncTexture.Equals(Object)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncTexture.Equals(System.Object)
        VB: Unity.Reflect.Model.SyncTexture.Equals(System.Object)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Equals
        path: ''
        startLine: 13646
      syntax:
        content:
          CSharp: public override bool Equals(object other)
          VB: Public Overrides Function Equals(other As Object) As Boolean
        parameters:
        - id: other
          type: System.Object
        return:
          type: System.Boolean
      overload: Unity.Reflect.Model.SyncTexture.Equals*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.Model.SyncTexture.Equals(Unity.Reflect.Model.SyncTexture)
      commentId: M:Unity.Reflect.Model.SyncTexture.Equals(Unity.Reflect.Model.SyncTexture)
      language: CSharp
      name:
        CSharp: Equals(SyncTexture)
        VB: Equals(SyncTexture)
      nameWithType:
        CSharp: SyncTexture.Equals(SyncTexture)
        VB: SyncTexture.Equals(SyncTexture)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncTexture.Equals(Unity.Reflect.Model.SyncTexture)
        VB: Unity.Reflect.Model.SyncTexture.Equals(Unity.Reflect.Model.SyncTexture)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Equals
        path: ''
        startLine: 13651
      syntax:
        content:
          CSharp: public bool Equals(SyncTexture other)
          VB: Public Function Equals(other As SyncTexture) As Boolean
        parameters:
        - id: other
          type: Unity.Reflect.Model.SyncTexture
        return:
          type: System.Boolean
      overload: Unity.Reflect.Model.SyncTexture.Equals*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncTexture.GetHashCode
      commentId: M:Unity.Reflect.Model.SyncTexture.GetHashCode
      language: CSharp
      name:
        CSharp: GetHashCode()
        VB: GetHashCode()
      nameWithType:
        CSharp: SyncTexture.GetHashCode()
        VB: SyncTexture.GetHashCode()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncTexture.GetHashCode()
        VB: Unity.Reflect.Model.SyncTexture.GetHashCode()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: GetHashCode
        path: ''
        startLine: 13665
      syntax:
        content:
          CSharp: public override int GetHashCode()
          VB: Public Overrides Function GetHashCode As Integer
        return:
          type: System.Int32
      overload: Unity.Reflect.Model.SyncTexture.GetHashCode*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.Model.SyncTexture.ToString
      commentId: M:Unity.Reflect.Model.SyncTexture.ToString
      language: CSharp
      name:
        CSharp: ToString()
        VB: ToString()
      nameWithType:
        CSharp: SyncTexture.ToString()
        VB: SyncTexture.ToString()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncTexture.ToString()
        VB: Unity.Reflect.Model.SyncTexture.ToString()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: ToString
        path: ''
        startLine: 13677
      syntax:
        content:
          CSharp: public override string ToString()
          VB: Public Overrides Function ToString As String
        return:
          type: System.String
      overload: Unity.Reflect.Model.SyncTexture.ToString*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.Model.SyncTexture.WriteTo(pb.CodedOutputStream)
      commentId: M:Unity.Reflect.Model.SyncTexture.WriteTo(pb.CodedOutputStream)
      language: CSharp
      name:
        CSharp: WriteTo(pb.CodedOutputStream)
        VB: WriteTo(pb.CodedOutputStream)
      nameWithType:
        CSharp: SyncTexture.WriteTo(pb.CodedOutputStream)
        VB: SyncTexture.WriteTo(pb.CodedOutputStream)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncTexture.WriteTo(pb.CodedOutputStream)
        VB: Unity.Reflect.Model.SyncTexture.WriteTo(pb.CodedOutputStream)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: WriteTo
        path: ''
        startLine: 13682
      syntax:
        content:
          CSharp: public void WriteTo(pb.CodedOutputStream output)
          VB: Public Sub WriteTo(output As pb.CodedOutputStream)
        parameters:
        - id: output
          type: pb.CodedOutputStream
      overload: Unity.Reflect.Model.SyncTexture.WriteTo*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncTexture.CalculateSize
      commentId: M:Unity.Reflect.Model.SyncTexture.CalculateSize
      language: CSharp
      name:
        CSharp: CalculateSize()
        VB: CalculateSize()
      nameWithType:
        CSharp: SyncTexture.CalculateSize()
        VB: SyncTexture.CalculateSize()
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncTexture.CalculateSize()
        VB: Unity.Reflect.Model.SyncTexture.CalculateSize()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: CalculateSize
        path: ''
        startLine: 13701
      syntax:
        content:
          CSharp: public int CalculateSize()
          VB: Public Function CalculateSize As Integer
        return:
          type: System.Int32
      overload: Unity.Reflect.Model.SyncTexture.CalculateSize*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncTexture.MergeFrom(Unity.Reflect.Model.SyncTexture)
      commentId: M:Unity.Reflect.Model.SyncTexture.MergeFrom(Unity.Reflect.Model.SyncTexture)
      language: CSharp
      name:
        CSharp: MergeFrom(SyncTexture)
        VB: MergeFrom(SyncTexture)
      nameWithType:
        CSharp: SyncTexture.MergeFrom(SyncTexture)
        VB: SyncTexture.MergeFrom(SyncTexture)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncTexture.MergeFrom(Unity.Reflect.Model.SyncTexture)
        VB: Unity.Reflect.Model.SyncTexture.MergeFrom(Unity.Reflect.Model.SyncTexture)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: MergeFrom
        path: ''
        startLine: 13719
      syntax:
        content:
          CSharp: public void MergeFrom(SyncTexture other)
          VB: Public Sub MergeFrom(other As SyncTexture)
        parameters:
        - id: other
          type: Unity.Reflect.Model.SyncTexture
      overload: Unity.Reflect.Model.SyncTexture.MergeFrom*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Model.SyncTexture.MergeFrom(pb.CodedInputStream)
      commentId: M:Unity.Reflect.Model.SyncTexture.MergeFrom(pb.CodedInputStream)
      language: CSharp
      name:
        CSharp: MergeFrom(pb.CodedInputStream)
        VB: MergeFrom(pb.CodedInputStream)
      nameWithType:
        CSharp: SyncTexture.MergeFrom(pb.CodedInputStream)
        VB: SyncTexture.MergeFrom(pb.CodedInputStream)
      qualifiedName:
        CSharp: Unity.Reflect.Model.SyncTexture.MergeFrom(pb.CodedInputStream)
        VB: Unity.Reflect.Model.SyncTexture.MergeFrom(pb.CodedInputStream)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: MergeFrom
        path: ''
        startLine: 13736
      syntax:
        content:
          CSharp: public void MergeFrom(pb.CodedInputStream input)
          VB: Public Sub MergeFrom(input As pb.CodedInputStream)
        parameters:
        - id: input
          type: pb.CodedInputStream
      overload: Unity.Reflect.Model.SyncTexture.MergeFrom*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Unity.Reflect.Model.CameraReflection
    commentId: T:Unity.Reflect.Model.CameraReflection
    language: CSharp
    name:
      CSharp: CameraReflection
      VB: CameraReflection
    nameWithType:
      CSharp: CameraReflection
      VB: CameraReflection
    qualifiedName:
      CSharp: Unity.Reflect.Model.CameraReflection
      VB: Unity.Reflect.Model.CameraReflection
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect.Model
    source:
      id: CameraReflection
      path: ''
      startLine: 1707
    summary: Holder for reflection information generated from Camera.proto
    example: []
    syntax:
      content:
        CSharp: public static class CameraReflection
        VB: Public Module CameraReflection
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: Unity.Reflect.Model.CameraReflection.Descriptor
      commentId: P:Unity.Reflect.Model.CameraReflection.Descriptor
      language: CSharp
      name:
        CSharp: Descriptor
        VB: Descriptor
      nameWithType:
        CSharp: CameraReflection.Descriptor
        VB: CameraReflection.Descriptor
      qualifiedName:
        CSharp: Unity.Reflect.Model.CameraReflection.Descriptor
        VB: Unity.Reflect.Model.CameraReflection.Descriptor
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Descriptor
        path: ''
        startLine: 1711
      summary: File descriptor for Camera.proto
      example: []
      syntax:
        content:
          CSharp: public static pbr.FileDescriptor Descriptor { get; }
          VB: Public Shared ReadOnly Property Descriptor As pbr.FileDescriptor
        parameters: []
        return:
          type: pbr.FileDescriptor
      overload: Unity.Reflect.Model.CameraReflection.Descriptor*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
  - id: Unity.Reflect.Model.ColorReflection
    commentId: T:Unity.Reflect.Model.ColorReflection
    language: CSharp
    name:
      CSharp: ColorReflection
      VB: ColorReflection
    nameWithType:
      CSharp: ColorReflection
      VB: ColorReflection
    qualifiedName:
      CSharp: Unity.Reflect.Model.ColorReflection
      VB: Unity.Reflect.Model.ColorReflection
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect.Model
    source:
      id: ColorReflection
      path: ''
      startLine: 2199
    summary: Holder for reflection information generated from Color.proto
    example: []
    syntax:
      content:
        CSharp: public static class ColorReflection
        VB: Public Module ColorReflection
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: Unity.Reflect.Model.ColorReflection.Descriptor
      commentId: P:Unity.Reflect.Model.ColorReflection.Descriptor
      language: CSharp
      name:
        CSharp: Descriptor
        VB: Descriptor
      nameWithType:
        CSharp: ColorReflection.Descriptor
        VB: ColorReflection.Descriptor
      qualifiedName:
        CSharp: Unity.Reflect.Model.ColorReflection.Descriptor
        VB: Unity.Reflect.Model.ColorReflection.Descriptor
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Descriptor
        path: ''
        startLine: 2203
      summary: File descriptor for Color.proto
      example: []
      syntax:
        content:
          CSharp: public static pbr.FileDescriptor Descriptor { get; }
          VB: Public Shared ReadOnly Property Descriptor As pbr.FileDescriptor
        parameters: []
        return:
          type: pbr.FileDescriptor
      overload: Unity.Reflect.Model.ColorReflection.Descriptor*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
  - id: Unity.Reflect.Model.LightReflection
    commentId: T:Unity.Reflect.Model.LightReflection
    language: CSharp
    name:
      CSharp: LightReflection
      VB: LightReflection
    nameWithType:
      CSharp: LightReflection
      VB: LightReflection
    qualifiedName:
      CSharp: Unity.Reflect.Model.LightReflection
      VB: Unity.Reflect.Model.LightReflection
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect.Model
    source:
      id: LightReflection
      path: ''
      startLine: 2457
    summary: Holder for reflection information generated from Light.proto
    example: []
    syntax:
      content:
        CSharp: public static class LightReflection
        VB: Public Module LightReflection
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: Unity.Reflect.Model.LightReflection.Descriptor
      commentId: P:Unity.Reflect.Model.LightReflection.Descriptor
      language: CSharp
      name:
        CSharp: Descriptor
        VB: Descriptor
      nameWithType:
        CSharp: LightReflection.Descriptor
        VB: LightReflection.Descriptor
      qualifiedName:
        CSharp: Unity.Reflect.Model.LightReflection.Descriptor
        VB: Unity.Reflect.Model.LightReflection.Descriptor
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Descriptor
        path: ''
        startLine: 2461
      summary: File descriptor for Light.proto
      example: []
      syntax:
        content:
          CSharp: public static pbr.FileDescriptor Descriptor { get; }
          VB: Public Shared ReadOnly Property Descriptor As pbr.FileDescriptor
        parameters: []
        return:
          type: pbr.FileDescriptor
      overload: Unity.Reflect.Model.LightReflection.Descriptor*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
  - id: Unity.Reflect.Model.MaterialReflection
    commentId: T:Unity.Reflect.Model.MaterialReflection
    language: CSharp
    name:
      CSharp: MaterialReflection
      VB: MaterialReflection
    nameWithType:
      CSharp: MaterialReflection
      VB: MaterialReflection
    qualifiedName:
      CSharp: Unity.Reflect.Model.MaterialReflection
      VB: Unity.Reflect.Model.MaterialReflection
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect.Model
    source:
      id: MaterialReflection
      path: ''
      startLine: 3498
    summary: Holder for reflection information generated from Material.proto
    example: []
    syntax:
      content:
        CSharp: public static class MaterialReflection
        VB: Public Module MaterialReflection
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: Unity.Reflect.Model.MaterialReflection.Descriptor
      commentId: P:Unity.Reflect.Model.MaterialReflection.Descriptor
      language: CSharp
      name:
        CSharp: Descriptor
        VB: Descriptor
      nameWithType:
        CSharp: MaterialReflection.Descriptor
        VB: MaterialReflection.Descriptor
      qualifiedName:
        CSharp: Unity.Reflect.Model.MaterialReflection.Descriptor
        VB: Unity.Reflect.Model.MaterialReflection.Descriptor
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Descriptor
        path: ''
        startLine: 3502
      summary: File descriptor for Material.proto
      example: []
      syntax:
        content:
          CSharp: public static pbr.FileDescriptor Descriptor { get; }
          VB: Public Shared ReadOnly Property Descriptor As pbr.FileDescriptor
        parameters: []
        return:
          type: pbr.FileDescriptor
      overload: Unity.Reflect.Model.MaterialReflection.Descriptor*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
  - id: Unity.Reflect.Model.MathematicsReflection
    commentId: T:Unity.Reflect.Model.MathematicsReflection
    language: CSharp
    name:
      CSharp: MathematicsReflection
      VB: MathematicsReflection
    nameWithType:
      CSharp: MathematicsReflection
      VB: MathematicsReflection
    qualifiedName:
      CSharp: Unity.Reflect.Model.MathematicsReflection
      VB: Unity.Reflect.Model.MathematicsReflection
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect.Model
    source:
      id: MathematicsReflection
      path: ''
      startLine: 4506
    summary: Holder for reflection information generated from Mathematics.proto
    example: []
    syntax:
      content:
        CSharp: public static class MathematicsReflection
        VB: Public Module MathematicsReflection
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: Unity.Reflect.Model.MathematicsReflection.Descriptor
      commentId: P:Unity.Reflect.Model.MathematicsReflection.Descriptor
      language: CSharp
      name:
        CSharp: Descriptor
        VB: Descriptor
      nameWithType:
        CSharp: MathematicsReflection.Descriptor
        VB: MathematicsReflection.Descriptor
      qualifiedName:
        CSharp: Unity.Reflect.Model.MathematicsReflection.Descriptor
        VB: Unity.Reflect.Model.MathematicsReflection.Descriptor
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Descriptor
        path: ''
        startLine: 4510
      summary: File descriptor for Mathematics.proto
      example: []
      syntax:
        content:
          CSharp: public static pbr.FileDescriptor Descriptor { get; }
          VB: Public Shared ReadOnly Property Descriptor As pbr.FileDescriptor
        parameters: []
        return:
          type: pbr.FileDescriptor
      overload: Unity.Reflect.Model.MathematicsReflection.Descriptor*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
  - id: Unity.Reflect.Model.MeshReflection
    commentId: T:Unity.Reflect.Model.MeshReflection
    language: CSharp
    name:
      CSharp: MeshReflection
      VB: MeshReflection
    nameWithType:
      CSharp: MeshReflection
      VB: MeshReflection
    qualifiedName:
      CSharp: Unity.Reflect.Model.MeshReflection
      VB: Unity.Reflect.Model.MeshReflection
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect.Model
    source:
      id: MeshReflection
      path: ''
      startLine: 6153
    summary: Holder for reflection information generated from Mesh.proto
    example: []
    syntax:
      content:
        CSharp: public static class MeshReflection
        VB: Public Module MeshReflection
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: Unity.Reflect.Model.MeshReflection.Descriptor
      commentId: P:Unity.Reflect.Model.MeshReflection.Descriptor
      language: CSharp
      name:
        CSharp: Descriptor
        VB: Descriptor
      nameWithType:
        CSharp: MeshReflection.Descriptor
        VB: MeshReflection.Descriptor
      qualifiedName:
        CSharp: Unity.Reflect.Model.MeshReflection.Descriptor
        VB: Unity.Reflect.Model.MeshReflection.Descriptor
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Descriptor
        path: ''
        startLine: 6157
      summary: File descriptor for Mesh.proto
      example: []
      syntax:
        content:
          CSharp: public static pbr.FileDescriptor Descriptor { get; }
          VB: Public Shared ReadOnly Property Descriptor As pbr.FileDescriptor
        parameters: []
        return:
          type: pbr.FileDescriptor
      overload: Unity.Reflect.Model.MeshReflection.Descriptor*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
  - id: Unity.Reflect.Model.ObjectReflection
    commentId: T:Unity.Reflect.Model.ObjectReflection
    language: CSharp
    name:
      CSharp: ObjectReflection
      VB: ObjectReflection
    nameWithType:
      CSharp: ObjectReflection
      VB: ObjectReflection
    qualifiedName:
      CSharp: Unity.Reflect.Model.ObjectReflection
      VB: Unity.Reflect.Model.ObjectReflection
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect.Model
    source:
      id: ObjectReflection
      path: ''
      startLine: 6534
    summary: Holder for reflection information generated from Object.proto
    example: []
    syntax:
      content:
        CSharp: public static class ObjectReflection
        VB: Public Module ObjectReflection
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: Unity.Reflect.Model.ObjectReflection.Descriptor
      commentId: P:Unity.Reflect.Model.ObjectReflection.Descriptor
      language: CSharp
      name:
        CSharp: Descriptor
        VB: Descriptor
      nameWithType:
        CSharp: ObjectReflection.Descriptor
        VB: ObjectReflection.Descriptor
      qualifiedName:
        CSharp: Unity.Reflect.Model.ObjectReflection.Descriptor
        VB: Unity.Reflect.Model.ObjectReflection.Descriptor
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Descriptor
        path: ''
        startLine: 6538
      summary: File descriptor for Object.proto
      example: []
      syntax:
        content:
          CSharp: public static pbr.FileDescriptor Descriptor { get; }
          VB: Public Shared ReadOnly Property Descriptor As pbr.FileDescriptor
        parameters: []
        return:
          type: pbr.FileDescriptor
      overload: Unity.Reflect.Model.ObjectReflection.Descriptor*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
  - id: Unity.Reflect.Model.ParameterReflection
    commentId: T:Unity.Reflect.Model.ParameterReflection
    language: CSharp
    name:
      CSharp: ParameterReflection
      VB: ParameterReflection
    nameWithType:
      CSharp: ParameterReflection
      VB: ParameterReflection
    qualifiedName:
      CSharp: Unity.Reflect.Model.ParameterReflection
      VB: Unity.Reflect.Model.ParameterReflection
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect.Model
    source:
      id: ParameterReflection
      path: ''
      startLine: 7296
    summary: Holder for reflection information generated from Parameter.proto
    example: []
    syntax:
      content:
        CSharp: public static class ParameterReflection
        VB: Public Module ParameterReflection
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: Unity.Reflect.Model.ParameterReflection.Descriptor
      commentId: P:Unity.Reflect.Model.ParameterReflection.Descriptor
      language: CSharp
      name:
        CSharp: Descriptor
        VB: Descriptor
      nameWithType:
        CSharp: ParameterReflection.Descriptor
        VB: ParameterReflection.Descriptor
      qualifiedName:
        CSharp: Unity.Reflect.Model.ParameterReflection.Descriptor
        VB: Unity.Reflect.Model.ParameterReflection.Descriptor
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Descriptor
        path: ''
        startLine: 7300
      summary: File descriptor for Parameter.proto
      example: []
      syntax:
        content:
          CSharp: public static pbr.FileDescriptor Descriptor { get; }
          VB: Public Shared ReadOnly Property Descriptor As pbr.FileDescriptor
        parameters: []
        return:
          type: pbr.FileDescriptor
      overload: Unity.Reflect.Model.ParameterReflection.Descriptor*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
  - id: Unity.Reflect.Model.RpcReflection
    commentId: T:Unity.Reflect.Model.RpcReflection
    language: CSharp
    name:
      CSharp: RpcReflection
      VB: RpcReflection
    nameWithType:
      CSharp: RpcReflection
      VB: RpcReflection
    qualifiedName:
      CSharp: Unity.Reflect.Model.RpcReflection
      VB: Unity.Reflect.Model.RpcReflection
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect.Model
    source:
      id: RpcReflection
      path: ''
      startLine: 7526
    summary: Holder for reflection information generated from Rpc.proto
    example: []
    syntax:
      content:
        CSharp: public static class RpcReflection
        VB: Public Module RpcReflection
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: Unity.Reflect.Model.RpcReflection.Descriptor
      commentId: P:Unity.Reflect.Model.RpcReflection.Descriptor
      language: CSharp
      name:
        CSharp: Descriptor
        VB: Descriptor
      nameWithType:
        CSharp: RpcReflection.Descriptor
        VB: RpcReflection.Descriptor
      qualifiedName:
        CSharp: Unity.Reflect.Model.RpcReflection.Descriptor
        VB: Unity.Reflect.Model.RpcReflection.Descriptor
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Descriptor
        path: ''
        startLine: 7530
      summary: File descriptor for Rpc.proto
      example: []
      syntax:
        content:
          CSharp: public static pbr.FileDescriptor Descriptor { get; }
          VB: Public Shared ReadOnly Property Descriptor As pbr.FileDescriptor
        parameters: []
        return:
          type: pbr.FileDescriptor
      overload: Unity.Reflect.Model.RpcReflection.Descriptor*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
  - id: Unity.Reflect.Model.TextureReflection
    commentId: T:Unity.Reflect.Model.TextureReflection
    language: CSharp
    name:
      CSharp: TextureReflection
      VB: TextureReflection
    nameWithType:
      CSharp: TextureReflection
      VB: TextureReflection
    qualifiedName:
      CSharp: Unity.Reflect.Model.TextureReflection
      VB: Unity.Reflect.Model.TextureReflection
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect.Model
    source:
      id: TextureReflection
      path: ''
      startLine: 13552
    summary: Holder for reflection information generated from Texture.proto
    example: []
    syntax:
      content:
        CSharp: public static class TextureReflection
        VB: Public Module TextureReflection
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: Unity.Reflect.Model.TextureReflection.Descriptor
      commentId: P:Unity.Reflect.Model.TextureReflection.Descriptor
      language: CSharp
      name:
        CSharp: Descriptor
        VB: Descriptor
      nameWithType:
        CSharp: TextureReflection.Descriptor
        VB: TextureReflection.Descriptor
      qualifiedName:
        CSharp: Unity.Reflect.Model.TextureReflection.Descriptor
        VB: Unity.Reflect.Model.TextureReflection.Descriptor
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Descriptor
        path: ''
        startLine: 13556
      summary: File descriptor for Texture.proto
      example: []
      syntax:
        content:
          CSharp: public static pbr.FileDescriptor Descriptor { get; }
          VB: Public Shared ReadOnly Property Descriptor As pbr.FileDescriptor
        parameters: []
        return:
          type: pbr.FileDescriptor
      overload: Unity.Reflect.Model.TextureReflection.Descriptor*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
  - id: Unity.Reflect.Model.ISyncModel
    commentId: T:Unity.Reflect.Model.ISyncModel
    language: CSharp
    name:
      CSharp: ISyncModel
      VB: ISyncModel
    nameWithType:
      CSharp: ISyncModel
      VB: ISyncModel
    qualifiedName:
      CSharp: Unity.Reflect.Model.ISyncModel
      VB: Unity.Reflect.Model.ISyncModel
    type: Interface
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect.Model
    source:
      id: ISyncModel
      path: ''
      startLine: 17369
    syntax:
      content:
        CSharp: public interface ISyncModel
        VB: Public Interface ISyncModel
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: Unity.Reflect.Model.ISyncModel.Name
      commentId: P:Unity.Reflect.Model.ISyncModel.Name
      language: CSharp
      name:
        CSharp: Name
        VB: Name
      nameWithType:
        CSharp: ISyncModel.Name
        VB: ISyncModel.Name
      qualifiedName:
        CSharp: Unity.Reflect.Model.ISyncModel.Name
        VB: Unity.Reflect.Model.ISyncModel.Name
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Name
        path: ''
        startLine: 17371
      syntax:
        content:
          CSharp: string Name { get; set; }
          VB: Property Name As String
        parameters: []
        return:
          type: System.String
      overload: Unity.Reflect.Model.ISyncModel.Name*
      modifiers:
        CSharp:
        - get
        - set
        VB: []
  - id: Unity.Reflect.Model.Utils
    commentId: T:Unity.Reflect.Model.Utils
    language: CSharp
    name:
      CSharp: Utils
      VB: Utils
    nameWithType:
      CSharp: Utils
      VB: Utils
    qualifiedName:
      CSharp: Unity.Reflect.Model.Utils
      VB: Unity.Reflect.Model.Utils
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect.Model
    source:
      id: Utils
      path: ''
      startLine: 17388
    syntax:
      content:
        CSharp: public static class Utils
        VB: Public Module Utils
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - isExtensionMethod: true
      id: Unity.Reflect.Model.Utils.Set``1(RepeatedField{``0},IEnumerable{``0})
      commentId: M:Unity.Reflect.Model.Utils.Set``1(RepeatedField{``0},IEnumerable{``0})
      language: CSharp
      name:
        CSharp: Set<T>(RepeatedField<T>, IEnumerable<T>)
        VB: Set(Of T)(RepeatedField(Of T), IEnumerable(Of T))
      nameWithType:
        CSharp: Utils.Set<T>(RepeatedField<T>, IEnumerable<T>)
        VB: Utils.Set(Of T)(RepeatedField(Of T), IEnumerable(Of T))
      qualifiedName:
        CSharp: Unity.Reflect.Model.Utils.Set<T>(RepeatedField<T>, IEnumerable<T>)
        VB: Unity.Reflect.Model.Utils.Set(Of T)(RepeatedField(Of T), IEnumerable(Of T))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Set
        path: ''
        startLine: 17396
      summary: "\nFills the RepeatedField with the provided content.\n"
      example: []
      syntax:
        content:
          CSharp: public static void Set<T>(this RepeatedField<T> repeated, IEnumerable<T> values)
          VB: >-
            <ExtensionAttribute>

            Public Shared Sub Set(Of T)(repeated As RepeatedField(Of T), values As IEnumerable(Of T))
        parameters:
        - id: repeated
          type: RepeatedField{{T}}
          description: The RepeatedField that will be filled.
        - id: values
          type: IEnumerable{{T}}
          description: The content to set into the RepeatedField.
        typeParameters:
        - id: T
      overload: Unity.Reflect.Model.Utils.Set*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: Unity.Reflect.Model.Utils.Set(RepeatedField{System.String},IEnumerable{System.String})
      commentId: M:Unity.Reflect.Model.Utils.Set(RepeatedField{System.String},IEnumerable{System.String})
      language: CSharp
      name:
        CSharp: Set(RepeatedField<String>, IEnumerable<String>)
        VB: Set(RepeatedField(Of String), IEnumerable(Of String))
      nameWithType:
        CSharp: Utils.Set(RepeatedField<String>, IEnumerable<String>)
        VB: Utils.Set(RepeatedField(Of String), IEnumerable(Of String))
      qualifiedName:
        CSharp: Unity.Reflect.Model.Utils.Set(RepeatedField<System.String>, IEnumerable<System.String>)
        VB: Unity.Reflect.Model.Utils.Set(RepeatedField(Of System.String), IEnumerable(Of System.String))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Set
        path: ''
        startLine: 17408
      summary: "\nFills the RepeatedField with the provided content.\n"
      example: []
      syntax:
        content:
          CSharp: public static void Set(this RepeatedField<string> repeated, IEnumerable<string> values)
          VB: >-
            <ExtensionAttribute>

            Public Shared Sub Set(repeated As RepeatedField(Of String), values As IEnumerable(Of String))
        parameters:
        - id: repeated
          type: RepeatedField{System.String}
          description: The RepeatedField that will be filled.
        - id: values
          type: IEnumerable{System.String}
          description: The content to set into the RepeatedField.
      overload: Unity.Reflect.Model.Utils.Set*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: Unity.Reflect.Model.Utils.Set``2(MapField{``0,``1},IDictionary{``0,``1})
      commentId: M:Unity.Reflect.Model.Utils.Set``2(MapField{``0,``1},IDictionary{``0,``1})
      language: CSharp
      name:
        CSharp: Set<TKey, TValue>(MapField<TKey, TValue>, IDictionary<TKey, TValue>)
        VB: Set(Of TKey, TValue)(MapField(Of TKey, TValue), IDictionary(Of TKey, TValue))
      nameWithType:
        CSharp: Utils.Set<TKey, TValue>(MapField<TKey, TValue>, IDictionary<TKey, TValue>)
        VB: Utils.Set(Of TKey, TValue)(MapField(Of TKey, TValue), IDictionary(Of TKey, TValue))
      qualifiedName:
        CSharp: Unity.Reflect.Model.Utils.Set<TKey, TValue>(MapField<TKey, TValue>, IDictionary<TKey, TValue>)
        VB: Unity.Reflect.Model.Utils.Set(Of TKey, TValue)(MapField(Of TKey, TValue), IDictionary(Of TKey, TValue))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: Set
        path: ''
        startLine: 17420
      summary: "\nFills the MapField with the provided content.\n"
      example: []
      syntax:
        content:
          CSharp: public static void Set<TKey, TValue>(this MapField<TKey, TValue> mapField, IDictionary<TKey, TValue> values)
          VB: >-
            <ExtensionAttribute>

            Public Shared Sub Set(Of TKey, TValue)(mapField As MapField(Of TKey, TValue), values As IDictionary(Of TKey, TValue))
        parameters:
        - id: mapField
          type: MapField{{TKey},{TValue}}
          description: The MapField that will be filled.
        - id: values
          type: IDictionary{{TKey},{TValue}}
          description: The content to set into the MapField.
        typeParameters:
        - id: TKey
        - id: TValue
      overload: Unity.Reflect.Model.Utils.Set*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: Unity.Reflect.Model.Utils.PersistentHash(Unity.Reflect.Model.ISyncModel)
      commentId: M:Unity.Reflect.Model.Utils.PersistentHash(Unity.Reflect.Model.ISyncModel)
      language: CSharp
      name:
        CSharp: PersistentHash(ISyncModel)
        VB: PersistentHash(ISyncModel)
      nameWithType:
        CSharp: Utils.PersistentHash(ISyncModel)
        VB: Utils.PersistentHash(ISyncModel)
      qualifiedName:
        CSharp: Unity.Reflect.Model.Utils.PersistentHash(Unity.Reflect.Model.ISyncModel)
        VB: Unity.Reflect.Model.Utils.PersistentHash(Unity.Reflect.Model.ISyncModel)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Model
      source:
        id: PersistentHash
        path: ''
        startLine: 17432
      syntax:
        content:
          CSharp: public static string PersistentHash(this ISyncModel syncModel)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PersistentHash(syncModel As ISyncModel) As String
        parameters:
        - id: syncModel
          type: Unity.Reflect.Model.ISyncModel
        return:
          type: System.String
      overload: Unity.Reflect.Model.Utils.PersistentHash*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
- id: Unity.Reflect.Data
  commentId: N:Unity.Reflect.Data
  language: CSharp
  name:
    CSharp: Unity.Reflect.Data
    VB: Unity.Reflect.Data
  nameWithType:
    CSharp: Unity.Reflect.Data
    VB: Unity.Reflect.Data
  qualifiedName:
    CSharp: Unity.Reflect.Data
    VB: Unity.Reflect.Data
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Unity.Reflect.Data.SyncManifest
    commentId: T:Unity.Reflect.Data.SyncManifest
    language: CSharp
    name:
      CSharp: SyncManifest
      VB: SyncManifest
    nameWithType:
      CSharp: SyncManifest
      VB: SyncManifest
    qualifiedName:
      CSharp: Unity.Reflect.Data.SyncManifest
      VB: Unity.Reflect.Data.SyncManifest
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect.Data
    source:
      id: SyncManifest
      path: ''
      startLine: 3138
    syntax:
      content:
        CSharp: 'public sealed class SyncManifest : pb.IMessage<SyncManifest>'
        VB: >-
          Public NotInheritable Class SyncManifest

              Inherits pb.IMessage(Of SyncManifest)
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - sealed
      - class
      VB:
      - Public
      - NotInheritable
      - Class
    items:
    - id: Unity.Reflect.Data.SyncManifest.FileName
      commentId: F:Unity.Reflect.Data.SyncManifest.FileName
      language: CSharp
      name:
        CSharp: FileName
        VB: FileName
      nameWithType:
        CSharp: SyncManifest.FileName
        VB: SyncManifest.FileName
      qualifiedName:
        CSharp: Unity.Reflect.Data.SyncManifest.FileName
        VB: Unity.Reflect.Data.SyncManifest.FileName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Data
      source:
        id: FileName
        path: ''
        startLine: 531
      syntax:
        content:
          CSharp: public static readonly string FileName
          VB: Public Shared ReadOnly FileName As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - static
        - readonly
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Unity.Reflect.Data.SyncManifest.Content
      commentId: P:Unity.Reflect.Data.SyncManifest.Content
      language: CSharp
      name:
        CSharp: Content
        VB: Content
      nameWithType:
        CSharp: SyncManifest.Content
        VB: SyncManifest.Content
      qualifiedName:
        CSharp: Unity.Reflect.Data.SyncManifest.Content
        VB: Unity.Reflect.Data.SyncManifest.Content
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Data
      source:
        id: Content
        path: ''
        startLine: 536
      syntax:
        content:
          CSharp: public IReadOnlyDictionary<PersistentKey, ManifestEntry> Content { get; }
          VB: Public ReadOnly Property Content As IReadOnlyDictionary(Of PersistentKey, ManifestEntry)
        parameters: []
        return:
          type: IReadOnlyDictionary{Unity.Reflect.Data.PersistentKey,Unity.Reflect.Data.ManifestEntry}
      overload: Unity.Reflect.Data.SyncManifest.Content*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Unity.Reflect.Data.SyncManifest.Remaps
      commentId: P:Unity.Reflect.Data.SyncManifest.Remaps
      language: CSharp
      name:
        CSharp: Remaps
        VB: Remaps
      nameWithType:
        CSharp: SyncManifest.Remaps
        VB: SyncManifest.Remaps
      qualifiedName:
        CSharp: Unity.Reflect.Data.SyncManifest.Remaps
        VB: Unity.Reflect.Data.SyncManifest.Remaps
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Data
      source:
        id: Remaps
        path: ''
        startLine: 560
      syntax:
        content:
          CSharp: public Dictionary<PersistentKey, string> Remaps { get; }
          VB: Public ReadOnly Property Remaps As Dictionary(Of PersistentKey, String)
        parameters: []
        return:
          type: Dictionary{Unity.Reflect.Data.PersistentKey,System.String}
      overload: Unity.Reflect.Data.SyncManifest.Remaps*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Unity.Reflect.Data.SyncManifest.ExpectedManifestPath(System.String)
      commentId: M:Unity.Reflect.Data.SyncManifest.ExpectedManifestPath(System.String)
      language: CSharp
      name:
        CSharp: ExpectedManifestPath(String)
        VB: ExpectedManifestPath(String)
      nameWithType:
        CSharp: SyncManifest.ExpectedManifestPath(String)
        VB: SyncManifest.ExpectedManifestPath(String)
      qualifiedName:
        CSharp: Unity.Reflect.Data.SyncManifest.ExpectedManifestPath(System.String)
        VB: Unity.Reflect.Data.SyncManifest.ExpectedManifestPath(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Data
      source:
        id: ExpectedManifestPath
        path: ''
        startLine: 565
      syntax:
        content:
          CSharp: public static string ExpectedManifestPath(string destinationFolder)
          VB: Public Shared Function ExpectedManifestPath(destinationFolder As String) As String
        parameters:
        - id: destinationFolder
          type: System.String
        return:
          type: System.String
      overload: Unity.Reflect.Data.SyncManifest.ExpectedManifestPath*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Unity.Reflect.Data.SyncManifest.Append(Unity.Reflect.Data.PersistentKey,System.String,System.String,System.String,SyncBoundingBox)
      commentId: M:Unity.Reflect.Data.SyncManifest.Append(Unity.Reflect.Data.PersistentKey,System.String,System.String,System.String,SyncBoundingBox)
      language: CSharp
      name:
        CSharp: Append(PersistentKey, String, String, String, SyncBoundingBox)
        VB: Append(PersistentKey, String, String, String, SyncBoundingBox)
      nameWithType:
        CSharp: SyncManifest.Append(PersistentKey, String, String, String, SyncBoundingBox)
        VB: SyncManifest.Append(PersistentKey, String, String, String, SyncBoundingBox)
      qualifiedName:
        CSharp: Unity.Reflect.Data.SyncManifest.Append(Unity.Reflect.Data.PersistentKey, System.String, System.String, System.String, SyncBoundingBox)
        VB: Unity.Reflect.Data.SyncManifest.Append(Unity.Reflect.Data.PersistentKey, System.String, System.String, System.String, SyncBoundingBox)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Data
      source:
        id: Append
        path: ''
        startLine: 570
      syntax:
        content:
          CSharp: public void Append(PersistentKey key, string srcHash, string dstPath, string dstHash, SyncBoundingBox bbox)
          VB: Public Sub Append(key As PersistentKey, srcHash As String, dstPath As String, dstHash As String, bbox As SyncBoundingBox)
        parameters:
        - id: key
          type: Unity.Reflect.Data.PersistentKey
        - id: srcHash
          type: System.String
        - id: dstPath
          type: System.String
        - id: dstHash
          type: System.String
        - id: bbox
          type: SyncBoundingBox
      overload: Unity.Reflect.Data.SyncManifest.Append*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Data.SyncManifest.Save(System.String)
      commentId: M:Unity.Reflect.Data.SyncManifest.Save(System.String)
      language: CSharp
      name:
        CSharp: Save(String)
        VB: Save(String)
      nameWithType:
        CSharp: SyncManifest.Save(String)
        VB: SyncManifest.Save(String)
      qualifiedName:
        CSharp: Unity.Reflect.Data.SyncManifest.Save(System.String)
        VB: Unity.Reflect.Data.SyncManifest.Save(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Data
      source:
        id: Save
        path: ''
        startLine: 589
      syntax:
        content:
          CSharp: public void Save(string destinationFolder)
          VB: Public Sub Save(destinationFolder As String)
        parameters:
        - id: destinationFolder
          type: System.String
      overload: Unity.Reflect.Data.SyncManifest.Save*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Data.SyncManifest.LoadFromBytes(System.Byte[])
      commentId: M:Unity.Reflect.Data.SyncManifest.LoadFromBytes(System.Byte[])
      language: CSharp
      name:
        CSharp: LoadFromBytes(Byte[])
        VB: LoadFromBytes(Byte())
      nameWithType:
        CSharp: SyncManifest.LoadFromBytes(Byte[])
        VB: SyncManifest.LoadFromBytes(Byte())
      qualifiedName:
        CSharp: Unity.Reflect.Data.SyncManifest.LoadFromBytes(System.Byte[])
        VB: Unity.Reflect.Data.SyncManifest.LoadFromBytes(System.Byte())
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Data
      source:
        id: LoadFromBytes
        path: ''
        startLine: 623
      syntax:
        content:
          CSharp: public static SyncManifest LoadFromBytes(byte[] data)
          VB: Public Shared Function LoadFromBytes(data As Byte()) As SyncManifest
        parameters:
        - id: data
          type: System.Byte[]
        return:
          type: Unity.Reflect.Data.SyncManifest
      overload: Unity.Reflect.Data.SyncManifest.LoadFromBytes*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Unity.Reflect.Data.SyncManifest.ComputeDiff(Unity.Reflect.Data.SyncManifest,IList{Unity.Reflect.Data.ManifestEntry}@,IList{Unity.Reflect.Data.ManifestEntry}@)
      commentId: M:Unity.Reflect.Data.SyncManifest.ComputeDiff(Unity.Reflect.Data.SyncManifest,IList{Unity.Reflect.Data.ManifestEntry}@,IList{Unity.Reflect.Data.ManifestEntry}@)
      language: CSharp
      name:
        CSharp: ComputeDiff(SyncManifest, out IList<ManifestEntry>, out IList<ManifestEntry>)
        VB: ComputeDiff(SyncManifest, ByRef IList(Of ManifestEntry), ByRef IList(Of ManifestEntry))
      nameWithType:
        CSharp: SyncManifest.ComputeDiff(SyncManifest, out IList<ManifestEntry>, out IList<ManifestEntry>)
        VB: SyncManifest.ComputeDiff(SyncManifest, ByRef IList(Of ManifestEntry), ByRef IList(Of ManifestEntry))
      qualifiedName:
        CSharp: Unity.Reflect.Data.SyncManifest.ComputeDiff(Unity.Reflect.Data.SyncManifest, out IList<Unity.Reflect.Data.ManifestEntry>, out IList<Unity.Reflect.Data.ManifestEntry>)
        VB: Unity.Reflect.Data.SyncManifest.ComputeDiff(Unity.Reflect.Data.SyncManifest, ByRef IList(Of Unity.Reflect.Data.ManifestEntry), ByRef IList(Of Unity.Reflect.Data.ManifestEntry))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Data
      source:
        id: ComputeDiff
        path: ''
        startLine: 630
      syntax:
        content:
          CSharp: public void ComputeDiff(SyncManifest other, out IList<ManifestEntry> changed, out IList<ManifestEntry> removed)
          VB: Public Sub ComputeDiff(other As SyncManifest, ByRef changed As IList(Of ManifestEntry), ByRef removed As IList(Of ManifestEntry))
        parameters:
        - id: other
          type: Unity.Reflect.Data.SyncManifest
        - id: changed
          type: IList{Unity.Reflect.Data.ManifestEntry}
        - id: removed
          type: IList{Unity.Reflect.Data.ManifestEntry}
      overload: Unity.Reflect.Data.SyncManifest.ComputeDiff*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Data.SyncManifest.Parser
      commentId: P:Unity.Reflect.Data.SyncManifest.Parser
      language: CSharp
      name:
        CSharp: Parser
        VB: Parser
      nameWithType:
        CSharp: SyncManifest.Parser
        VB: SyncManifest.Parser
      qualifiedName:
        CSharp: Unity.Reflect.Data.SyncManifest.Parser
        VB: Unity.Reflect.Data.SyncManifest.Parser
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Data
      source:
        id: Parser
        path: ''
        startLine: 3141
      syntax:
        content:
          CSharp: public static pb.MessageParser<SyncManifest> Parser { get; }
          VB: Public Shared ReadOnly Property Parser As pb.MessageParser(Of SyncManifest)
        parameters: []
        return:
          type: pb.MessageParser{Unity.Reflect.Data.SyncManifest}
      overload: Unity.Reflect.Data.SyncManifest.Parser*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Unity.Reflect.Data.SyncManifest.Descriptor
      commentId: P:Unity.Reflect.Data.SyncManifest.Descriptor
      language: CSharp
      name:
        CSharp: Descriptor
        VB: Descriptor
      nameWithType:
        CSharp: SyncManifest.Descriptor
        VB: SyncManifest.Descriptor
      qualifiedName:
        CSharp: Unity.Reflect.Data.SyncManifest.Descriptor
        VB: Unity.Reflect.Data.SyncManifest.Descriptor
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Data
      source:
        id: Descriptor
        path: ''
        startLine: 3144
      syntax:
        content:
          CSharp: public static pbr.MessageDescriptor Descriptor { get; }
          VB: Public Shared ReadOnly Property Descriptor As pbr.MessageDescriptor
        parameters: []
        return:
          type: pbr.MessageDescriptor
      overload: Unity.Reflect.Data.SyncManifest.Descriptor*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Unity.Reflect.Data.SyncManifest.#ctor
      commentId: M:Unity.Reflect.Data.SyncManifest.#ctor
      language: CSharp
      name:
        CSharp: SyncManifest()
        VB: SyncManifest()
      nameWithType:
        CSharp: SyncManifest.SyncManifest()
        VB: SyncManifest.SyncManifest()
      qualifiedName:
        CSharp: Unity.Reflect.Data.SyncManifest.SyncManifest()
        VB: Unity.Reflect.Data.SyncManifest.SyncManifest()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Data
      source:
        id: .ctor
        path: ''
        startLine: 3154
      syntax:
        content:
          CSharp: public SyncManifest()
          VB: Public Sub New
      overload: Unity.Reflect.Data.SyncManifest.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Data.SyncManifest.#ctor(Unity.Reflect.Data.SyncManifest)
      commentId: M:Unity.Reflect.Data.SyncManifest.#ctor(Unity.Reflect.Data.SyncManifest)
      language: CSharp
      name:
        CSharp: SyncManifest(SyncManifest)
        VB: SyncManifest(SyncManifest)
      nameWithType:
        CSharp: SyncManifest.SyncManifest(SyncManifest)
        VB: SyncManifest.SyncManifest(SyncManifest)
      qualifiedName:
        CSharp: Unity.Reflect.Data.SyncManifest.SyncManifest(Unity.Reflect.Data.SyncManifest)
        VB: Unity.Reflect.Data.SyncManifest.SyncManifest(Unity.Reflect.Data.SyncManifest)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Data
      source:
        id: .ctor
        path: ''
        startLine: 3161
      syntax:
        content:
          CSharp: public SyncManifest(SyncManifest other)
          VB: Public Sub New(other As SyncManifest)
        parameters:
        - id: other
          type: Unity.Reflect.Data.SyncManifest
      overload: Unity.Reflect.Data.SyncManifest.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Data.SyncManifest.Clone
      commentId: M:Unity.Reflect.Data.SyncManifest.Clone
      language: CSharp
      name:
        CSharp: Clone()
        VB: Clone()
      nameWithType:
        CSharp: SyncManifest.Clone()
        VB: SyncManifest.Clone()
      qualifiedName:
        CSharp: Unity.Reflect.Data.SyncManifest.Clone()
        VB: Unity.Reflect.Data.SyncManifest.Clone()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Data
      source:
        id: Clone
        path: ''
        startLine: 3167
      syntax:
        content:
          CSharp: public SyncManifest Clone()
          VB: Public Function Clone As SyncManifest
        return:
          type: Unity.Reflect.Data.SyncManifest
      overload: Unity.Reflect.Data.SyncManifest.Clone*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Data.SyncManifest.EntriesFieldNumber
      commentId: F:Unity.Reflect.Data.SyncManifest.EntriesFieldNumber
      language: CSharp
      name:
        CSharp: EntriesFieldNumber
        VB: EntriesFieldNumber
      nameWithType:
        CSharp: SyncManifest.EntriesFieldNumber
        VB: SyncManifest.EntriesFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Data.SyncManifest.EntriesFieldNumber
        VB: Unity.Reflect.Data.SyncManifest.EntriesFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Data
      source:
        id: EntriesFieldNumber
        path: ''
        startLine: 3173
      summary: Field number for the &quot;entries&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int EntriesFieldNumber = 1
          VB: Public Const EntriesFieldNumber As Integer = 1
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Data.SyncManifest.Entries
      commentId: P:Unity.Reflect.Data.SyncManifest.Entries
      language: CSharp
      name:
        CSharp: Entries
        VB: Entries
      nameWithType:
        CSharp: SyncManifest.Entries
        VB: SyncManifest.Entries
      qualifiedName:
        CSharp: Unity.Reflect.Data.SyncManifest.Entries
        VB: Unity.Reflect.Data.SyncManifest.Entries
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Data
      source:
        id: Entries
        path: ''
        startLine: 3177
      syntax:
        content:
          CSharp: public pbc.MapField<string, ManifestEntry> Entries { get; }
          VB: Public ReadOnly Property Entries As pbc.MapField(Of String, ManifestEntry)
        parameters: []
        return:
          type: pbc.MapField{System.String,Unity.Reflect.Data.ManifestEntry}
      overload: Unity.Reflect.Data.SyncManifest.Entries*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Unity.Reflect.Data.SyncManifest.Equals(System.Object)
      commentId: M:Unity.Reflect.Data.SyncManifest.Equals(System.Object)
      language: CSharp
      name:
        CSharp: Equals(Object)
        VB: Equals(Object)
      nameWithType:
        CSharp: SyncManifest.Equals(Object)
        VB: SyncManifest.Equals(Object)
      qualifiedName:
        CSharp: Unity.Reflect.Data.SyncManifest.Equals(System.Object)
        VB: Unity.Reflect.Data.SyncManifest.Equals(System.Object)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Data
      source:
        id: Equals
        path: ''
        startLine: 3182
      syntax:
        content:
          CSharp: public override bool Equals(object other)
          VB: Public Overrides Function Equals(other As Object) As Boolean
        parameters:
        - id: other
          type: System.Object
        return:
          type: System.Boolean
      overload: Unity.Reflect.Data.SyncManifest.Equals*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.Data.SyncManifest.Equals(Unity.Reflect.Data.SyncManifest)
      commentId: M:Unity.Reflect.Data.SyncManifest.Equals(Unity.Reflect.Data.SyncManifest)
      language: CSharp
      name:
        CSharp: Equals(SyncManifest)
        VB: Equals(SyncManifest)
      nameWithType:
        CSharp: SyncManifest.Equals(SyncManifest)
        VB: SyncManifest.Equals(SyncManifest)
      qualifiedName:
        CSharp: Unity.Reflect.Data.SyncManifest.Equals(Unity.Reflect.Data.SyncManifest)
        VB: Unity.Reflect.Data.SyncManifest.Equals(Unity.Reflect.Data.SyncManifest)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Data
      source:
        id: Equals
        path: ''
        startLine: 3187
      syntax:
        content:
          CSharp: public bool Equals(SyncManifest other)
          VB: Public Function Equals(other As SyncManifest) As Boolean
        parameters:
        - id: other
          type: Unity.Reflect.Data.SyncManifest
        return:
          type: System.Boolean
      overload: Unity.Reflect.Data.SyncManifest.Equals*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Data.SyncManifest.GetHashCode
      commentId: M:Unity.Reflect.Data.SyncManifest.GetHashCode
      language: CSharp
      name:
        CSharp: GetHashCode()
        VB: GetHashCode()
      nameWithType:
        CSharp: SyncManifest.GetHashCode()
        VB: SyncManifest.GetHashCode()
      qualifiedName:
        CSharp: Unity.Reflect.Data.SyncManifest.GetHashCode()
        VB: Unity.Reflect.Data.SyncManifest.GetHashCode()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Data
      source:
        id: GetHashCode
        path: ''
        startLine: 3199
      syntax:
        content:
          CSharp: public override int GetHashCode()
          VB: Public Overrides Function GetHashCode As Integer
        return:
          type: System.Int32
      overload: Unity.Reflect.Data.SyncManifest.GetHashCode*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.Data.SyncManifest.ToString
      commentId: M:Unity.Reflect.Data.SyncManifest.ToString
      language: CSharp
      name:
        CSharp: ToString()
        VB: ToString()
      nameWithType:
        CSharp: SyncManifest.ToString()
        VB: SyncManifest.ToString()
      qualifiedName:
        CSharp: Unity.Reflect.Data.SyncManifest.ToString()
        VB: Unity.Reflect.Data.SyncManifest.ToString()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Data
      source:
        id: ToString
        path: ''
        startLine: 3209
      syntax:
        content:
          CSharp: public override string ToString()
          VB: Public Overrides Function ToString As String
        return:
          type: System.String
      overload: Unity.Reflect.Data.SyncManifest.ToString*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.Data.SyncManifest.WriteTo(pb.CodedOutputStream)
      commentId: M:Unity.Reflect.Data.SyncManifest.WriteTo(pb.CodedOutputStream)
      language: CSharp
      name:
        CSharp: WriteTo(pb.CodedOutputStream)
        VB: WriteTo(pb.CodedOutputStream)
      nameWithType:
        CSharp: SyncManifest.WriteTo(pb.CodedOutputStream)
        VB: SyncManifest.WriteTo(pb.CodedOutputStream)
      qualifiedName:
        CSharp: Unity.Reflect.Data.SyncManifest.WriteTo(pb.CodedOutputStream)
        VB: Unity.Reflect.Data.SyncManifest.WriteTo(pb.CodedOutputStream)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Data
      source:
        id: WriteTo
        path: ''
        startLine: 3214
      syntax:
        content:
          CSharp: public void WriteTo(pb.CodedOutputStream output)
          VB: Public Sub WriteTo(output As pb.CodedOutputStream)
        parameters:
        - id: output
          type: pb.CodedOutputStream
      overload: Unity.Reflect.Data.SyncManifest.WriteTo*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Data.SyncManifest.CalculateSize
      commentId: M:Unity.Reflect.Data.SyncManifest.CalculateSize
      language: CSharp
      name:
        CSharp: CalculateSize()
        VB: CalculateSize()
      nameWithType:
        CSharp: SyncManifest.CalculateSize()
        VB: SyncManifest.CalculateSize()
      qualifiedName:
        CSharp: Unity.Reflect.Data.SyncManifest.CalculateSize()
        VB: Unity.Reflect.Data.SyncManifest.CalculateSize()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Data
      source:
        id: CalculateSize
        path: ''
        startLine: 3222
      syntax:
        content:
          CSharp: public int CalculateSize()
          VB: Public Function CalculateSize As Integer
        return:
          type: System.Int32
      overload: Unity.Reflect.Data.SyncManifest.CalculateSize*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Data.SyncManifest.MergeFrom(Unity.Reflect.Data.SyncManifest)
      commentId: M:Unity.Reflect.Data.SyncManifest.MergeFrom(Unity.Reflect.Data.SyncManifest)
      language: CSharp
      name:
        CSharp: MergeFrom(SyncManifest)
        VB: MergeFrom(SyncManifest)
      nameWithType:
        CSharp: SyncManifest.MergeFrom(SyncManifest)
        VB: SyncManifest.MergeFrom(SyncManifest)
      qualifiedName:
        CSharp: Unity.Reflect.Data.SyncManifest.MergeFrom(Unity.Reflect.Data.SyncManifest)
        VB: Unity.Reflect.Data.SyncManifest.MergeFrom(Unity.Reflect.Data.SyncManifest)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Data
      source:
        id: MergeFrom
        path: ''
        startLine: 3232
      syntax:
        content:
          CSharp: public void MergeFrom(SyncManifest other)
          VB: Public Sub MergeFrom(other As SyncManifest)
        parameters:
        - id: other
          type: Unity.Reflect.Data.SyncManifest
      overload: Unity.Reflect.Data.SyncManifest.MergeFrom*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Data.SyncManifest.MergeFrom(pb.CodedInputStream)
      commentId: M:Unity.Reflect.Data.SyncManifest.MergeFrom(pb.CodedInputStream)
      language: CSharp
      name:
        CSharp: MergeFrom(pb.CodedInputStream)
        VB: MergeFrom(pb.CodedInputStream)
      nameWithType:
        CSharp: SyncManifest.MergeFrom(pb.CodedInputStream)
        VB: SyncManifest.MergeFrom(pb.CodedInputStream)
      qualifiedName:
        CSharp: Unity.Reflect.Data.SyncManifest.MergeFrom(pb.CodedInputStream)
        VB: Unity.Reflect.Data.SyncManifest.MergeFrom(pb.CodedInputStream)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Data
      source:
        id: MergeFrom
        path: ''
        startLine: 3241
      syntax:
        content:
          CSharp: public void MergeFrom(pb.CodedInputStream input)
          VB: Public Sub MergeFrom(input As pb.CodedInputStream)
        parameters:
        - id: input
          type: pb.CodedInputStream
      overload: Unity.Reflect.Data.SyncManifest.MergeFrom*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Unity.Reflect.Data.PersistentKey
    commentId: T:Unity.Reflect.Data.PersistentKey
    language: CSharp
    name:
      CSharp: PersistentKey
      VB: PersistentKey
    nameWithType:
      CSharp: PersistentKey
      VB: PersistentKey
    qualifiedName:
      CSharp: Unity.Reflect.Data.PersistentKey
      VB: Unity.Reflect.Data.PersistentKey
    type: Struct
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect.Data
    source:
      id: PersistentKey
      path: ''
      startLine: 1545
    syntax:
      content:
        CSharp: public struct PersistentKey
        VB: Public Structure PersistentKey
    inheritedMembers:
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetType
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: Unity.Reflect.Data.PersistentKey.typeName
      commentId: F:Unity.Reflect.Data.PersistentKey.typeName
      language: CSharp
      name:
        CSharp: typeName
        VB: typeName
      nameWithType:
        CSharp: PersistentKey.typeName
        VB: PersistentKey.typeName
      qualifiedName:
        CSharp: Unity.Reflect.Data.PersistentKey.typeName
        VB: Unity.Reflect.Data.PersistentKey.typeName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Data
      source:
        id: typeName
        path: ''
        startLine: 1547
      syntax:
        content:
          CSharp: public readonly string typeName
          VB: Public ReadOnly typeName As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - readonly
        VB:
        - Public
        - ReadOnly
    - id: Unity.Reflect.Data.PersistentKey.name
      commentId: F:Unity.Reflect.Data.PersistentKey.name
      language: CSharp
      name:
        CSharp: name
        VB: name
      nameWithType:
        CSharp: PersistentKey.name
        VB: PersistentKey.name
      qualifiedName:
        CSharp: Unity.Reflect.Data.PersistentKey.name
        VB: Unity.Reflect.Data.PersistentKey.name
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Data
      source:
        id: name
        path: ''
        startLine: 1548
      syntax:
        content:
          CSharp: public readonly string name
          VB: Public ReadOnly name As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - readonly
        VB:
        - Public
        - ReadOnly
    - id: Unity.Reflect.Data.PersistentKey.Invalid
      commentId: F:Unity.Reflect.Data.PersistentKey.Invalid
      language: CSharp
      name:
        CSharp: Invalid
        VB: Invalid
      nameWithType:
        CSharp: PersistentKey.Invalid
        VB: PersistentKey.Invalid
      qualifiedName:
        CSharp: Unity.Reflect.Data.PersistentKey.Invalid
        VB: Unity.Reflect.Data.PersistentKey.Invalid
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Data
      source:
        id: Invalid
        path: ''
        startLine: 1550
      syntax:
        content:
          CSharp: public static PersistentKey Invalid
          VB: Public Shared Invalid As PersistentKey
        return:
          type: Unity.Reflect.Data.PersistentKey
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Unity.Reflect.Data.PersistentKey.GetTypeName(MemberInfo)
      commentId: M:Unity.Reflect.Data.PersistentKey.GetTypeName(MemberInfo)
      language: CSharp
      name:
        CSharp: GetTypeName(MemberInfo)
        VB: GetTypeName(MemberInfo)
      nameWithType:
        CSharp: PersistentKey.GetTypeName(MemberInfo)
        VB: PersistentKey.GetTypeName(MemberInfo)
      qualifiedName:
        CSharp: Unity.Reflect.Data.PersistentKey.GetTypeName(MemberInfo)
        VB: Unity.Reflect.Data.PersistentKey.GetTypeName(MemberInfo)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Data
      source:
        id: GetTypeName
        path: ''
        startLine: 1558
      syntax:
        content:
          CSharp: public static string GetTypeName(MemberInfo type)
          VB: Public Shared Function GetTypeName(type As MemberInfo) As String
        parameters:
        - id: type
          type: MemberInfo
        return:
          type: System.String
      overload: Unity.Reflect.Data.PersistentKey.GetTypeName*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Unity.Reflect.Data.PersistentKey.#ctor(System.String,System.String)
      commentId: M:Unity.Reflect.Data.PersistentKey.#ctor(System.String,System.String)
      language: CSharp
      name:
        CSharp: PersistentKey(String, String)
        VB: PersistentKey(String, String)
      nameWithType:
        CSharp: PersistentKey.PersistentKey(String, String)
        VB: PersistentKey.PersistentKey(String, String)
      qualifiedName:
        CSharp: Unity.Reflect.Data.PersistentKey.PersistentKey(System.String, System.String)
        VB: Unity.Reflect.Data.PersistentKey.PersistentKey(System.String, System.String)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Data
      source:
        id: .ctor
        path: ''
        startLine: 1563
      syntax:
        content:
          CSharp: public PersistentKey(string typeName, string name)
          VB: Public Sub New(typeName As String, name As String)
        parameters:
        - id: typeName
          type: System.String
        - id: name
          type: System.String
      overload: Unity.Reflect.Data.PersistentKey.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Data.PersistentKey.GetKey(ISyncModel)
      commentId: M:Unity.Reflect.Data.PersistentKey.GetKey(ISyncModel)
      language: CSharp
      name:
        CSharp: GetKey(ISyncModel)
        VB: GetKey(ISyncModel)
      nameWithType:
        CSharp: PersistentKey.GetKey(ISyncModel)
        VB: PersistentKey.GetKey(ISyncModel)
      qualifiedName:
        CSharp: Unity.Reflect.Data.PersistentKey.GetKey(ISyncModel)
        VB: Unity.Reflect.Data.PersistentKey.GetKey(ISyncModel)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Data
      source:
        id: GetKey
        path: ''
        startLine: 1569
      syntax:
        content:
          CSharp: public static PersistentKey GetKey(ISyncModel model)
          VB: Public Shared Function GetKey(model As ISyncModel) As PersistentKey
        parameters:
        - id: model
          type: ISyncModel
        return:
          type: Unity.Reflect.Data.PersistentKey
      overload: Unity.Reflect.Data.PersistentKey.GetKey*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Unity.Reflect.Data.PersistentKey.GetKey``1(System.String)
      commentId: M:Unity.Reflect.Data.PersistentKey.GetKey``1(System.String)
      language: CSharp
      name:
        CSharp: GetKey<T>(String)
        VB: GetKey(Of T)(String)
      nameWithType:
        CSharp: PersistentKey.GetKey<T>(String)
        VB: PersistentKey.GetKey(Of T)(String)
      qualifiedName:
        CSharp: Unity.Reflect.Data.PersistentKey.GetKey<T>(System.String)
        VB: Unity.Reflect.Data.PersistentKey.GetKey(Of T)(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Data
      source:
        id: GetKey
        path: ''
        startLine: 1574
      syntax:
        content:
          CSharp: >-
            public static PersistentKey GetKey<T>(string name)

                where T : ISyncModel
          VB: Public Shared Function GetKey(Of T As ISyncModel)(name As String) As PersistentKey
        parameters:
        - id: name
          type: System.String
        typeParameters:
        - id: T
        return:
          type: Unity.Reflect.Data.PersistentKey
      overload: Unity.Reflect.Data.PersistentKey.GetKey*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Unity.Reflect.Data.PersistentKey.Equals(Unity.Reflect.Data.PersistentKey)
      commentId: M:Unity.Reflect.Data.PersistentKey.Equals(Unity.Reflect.Data.PersistentKey)
      language: CSharp
      name:
        CSharp: Equals(PersistentKey)
        VB: Equals(PersistentKey)
      nameWithType:
        CSharp: PersistentKey.Equals(PersistentKey)
        VB: PersistentKey.Equals(PersistentKey)
      qualifiedName:
        CSharp: Unity.Reflect.Data.PersistentKey.Equals(Unity.Reflect.Data.PersistentKey)
        VB: Unity.Reflect.Data.PersistentKey.Equals(Unity.Reflect.Data.PersistentKey)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Data
      source:
        id: Equals
        path: ''
        startLine: 1579
      syntax:
        content:
          CSharp: public bool Equals(PersistentKey other)
          VB: Public Function Equals(other As PersistentKey) As Boolean
        parameters:
        - id: other
          type: Unity.Reflect.Data.PersistentKey
        return:
          type: System.Boolean
      overload: Unity.Reflect.Data.PersistentKey.Equals*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Data.PersistentKey.Equals(System.Object)
      commentId: M:Unity.Reflect.Data.PersistentKey.Equals(System.Object)
      language: CSharp
      name:
        CSharp: Equals(Object)
        VB: Equals(Object)
      nameWithType:
        CSharp: PersistentKey.Equals(Object)
        VB: PersistentKey.Equals(Object)
      qualifiedName:
        CSharp: Unity.Reflect.Data.PersistentKey.Equals(System.Object)
        VB: Unity.Reflect.Data.PersistentKey.Equals(System.Object)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Data
      source:
        id: Equals
        path: ''
        startLine: 1584
      syntax:
        content:
          CSharp: public override bool Equals(object obj)
          VB: Public Overrides Function Equals(obj As Object) As Boolean
        parameters:
        - id: obj
          type: System.Object
        return:
          type: System.Boolean
      overload: Unity.Reflect.Data.PersistentKey.Equals*
      overridden: System.ValueType.Equals(System.Object)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.Data.PersistentKey.op_Equality(Unity.Reflect.Data.PersistentKey,Unity.Reflect.Data.PersistentKey)
      commentId: M:Unity.Reflect.Data.PersistentKey.op_Equality(Unity.Reflect.Data.PersistentKey,Unity.Reflect.Data.PersistentKey)
      language: CSharp
      name:
        CSharp: Equality(PersistentKey, PersistentKey)
        VB: Equality(PersistentKey, PersistentKey)
      nameWithType:
        CSharp: PersistentKey.Equality(PersistentKey, PersistentKey)
        VB: PersistentKey.Equality(PersistentKey, PersistentKey)
      qualifiedName:
        CSharp: Unity.Reflect.Data.PersistentKey.Equality(Unity.Reflect.Data.PersistentKey, Unity.Reflect.Data.PersistentKey)
        VB: Unity.Reflect.Data.PersistentKey.Equality(Unity.Reflect.Data.PersistentKey, Unity.Reflect.Data.PersistentKey)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Data
      source:
        id: op_Equality
        path: ''
        startLine: 1590
      syntax:
        content:
          CSharp: public static bool operator ==(PersistentKey k1, PersistentKey k2)
          VB: Public Shared Operator =(k1 As PersistentKey, k2 As PersistentKey) As Boolean
        parameters:
        - id: k1
          type: Unity.Reflect.Data.PersistentKey
        - id: k2
          type: Unity.Reflect.Data.PersistentKey
        return:
          type: System.Boolean
      overload: Unity.Reflect.Data.PersistentKey.op_Equality*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Unity.Reflect.Data.PersistentKey.op_Inequality(Unity.Reflect.Data.PersistentKey,Unity.Reflect.Data.PersistentKey)
      commentId: M:Unity.Reflect.Data.PersistentKey.op_Inequality(Unity.Reflect.Data.PersistentKey,Unity.Reflect.Data.PersistentKey)
      language: CSharp
      name:
        CSharp: Inequality(PersistentKey, PersistentKey)
        VB: Inequality(PersistentKey, PersistentKey)
      nameWithType:
        CSharp: PersistentKey.Inequality(PersistentKey, PersistentKey)
        VB: PersistentKey.Inequality(PersistentKey, PersistentKey)
      qualifiedName:
        CSharp: Unity.Reflect.Data.PersistentKey.Inequality(Unity.Reflect.Data.PersistentKey, Unity.Reflect.Data.PersistentKey)
        VB: Unity.Reflect.Data.PersistentKey.Inequality(Unity.Reflect.Data.PersistentKey, Unity.Reflect.Data.PersistentKey)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Data
      source:
        id: op_Inequality
        path: ''
        startLine: 1595
      syntax:
        content:
          CSharp: public static bool operator !=(PersistentKey k1, PersistentKey k2)
          VB: Public Shared Operator <>(k1 As PersistentKey, k2 As PersistentKey) As Boolean
        parameters:
        - id: k1
          type: Unity.Reflect.Data.PersistentKey
        - id: k2
          type: Unity.Reflect.Data.PersistentKey
        return:
          type: System.Boolean
      overload: Unity.Reflect.Data.PersistentKey.op_Inequality*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Unity.Reflect.Data.PersistentKey.GetHashCode
      commentId: M:Unity.Reflect.Data.PersistentKey.GetHashCode
      language: CSharp
      name:
        CSharp: GetHashCode()
        VB: GetHashCode()
      nameWithType:
        CSharp: PersistentKey.GetHashCode()
        VB: PersistentKey.GetHashCode()
      qualifiedName:
        CSharp: Unity.Reflect.Data.PersistentKey.GetHashCode()
        VB: Unity.Reflect.Data.PersistentKey.GetHashCode()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Data
      source:
        id: GetHashCode
        path: ''
        startLine: 1600
      syntax:
        content:
          CSharp: public override int GetHashCode()
          VB: Public Overrides Function GetHashCode As Integer
        return:
          type: System.Int32
      overload: Unity.Reflect.Data.PersistentKey.GetHashCode*
      overridden: System.ValueType.GetHashCode
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.Data.PersistentKey.ToString
      commentId: M:Unity.Reflect.Data.PersistentKey.ToString
      language: CSharp
      name:
        CSharp: ToString()
        VB: ToString()
      nameWithType:
        CSharp: PersistentKey.ToString()
        VB: PersistentKey.ToString()
      qualifiedName:
        CSharp: Unity.Reflect.Data.PersistentKey.ToString()
        VB: Unity.Reflect.Data.PersistentKey.ToString()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Data
      source:
        id: ToString
        path: ''
        startLine: 1608
      syntax:
        content:
          CSharp: public override string ToString()
          VB: Public Overrides Function ToString As String
        return:
          type: System.String
      overload: Unity.Reflect.Data.PersistentKey.ToString*
      overridden: System.ValueType.ToString
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.Data.PersistentKey.Encode(Unity.Reflect.Data.PersistentKey)
      commentId: M:Unity.Reflect.Data.PersistentKey.Encode(Unity.Reflect.Data.PersistentKey)
      language: CSharp
      name:
        CSharp: Encode(PersistentKey)
        VB: Encode(PersistentKey)
      nameWithType:
        CSharp: PersistentKey.Encode(PersistentKey)
        VB: PersistentKey.Encode(PersistentKey)
      qualifiedName:
        CSharp: Unity.Reflect.Data.PersistentKey.Encode(Unity.Reflect.Data.PersistentKey)
        VB: Unity.Reflect.Data.PersistentKey.Encode(Unity.Reflect.Data.PersistentKey)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Data
      source:
        id: Encode
        path: ''
        startLine: 1613
      syntax:
        content:
          CSharp: public static string Encode(PersistentKey key)
          VB: Public Shared Function Encode(key As PersistentKey) As String
        parameters:
        - id: key
          type: Unity.Reflect.Data.PersistentKey
        return:
          type: System.String
      overload: Unity.Reflect.Data.PersistentKey.Encode*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Unity.Reflect.Data.PersistentKey.Decode(System.String)
      commentId: M:Unity.Reflect.Data.PersistentKey.Decode(System.String)
      language: CSharp
      name:
        CSharp: Decode(String)
        VB: Decode(String)
      nameWithType:
        CSharp: PersistentKey.Decode(String)
        VB: PersistentKey.Decode(String)
      qualifiedName:
        CSharp: Unity.Reflect.Data.PersistentKey.Decode(System.String)
        VB: Unity.Reflect.Data.PersistentKey.Decode(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Data
      source:
        id: Decode
        path: ''
        startLine: 1618
      syntax:
        content:
          CSharp: public static PersistentKey Decode(string str)
          VB: Public Shared Function Decode(str As String) As PersistentKey
        parameters:
        - id: str
          type: System.String
        return:
          type: Unity.Reflect.Data.PersistentKey
      overload: Unity.Reflect.Data.PersistentKey.Decode*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: Unity.Reflect.Data.ManifestReflection
    commentId: T:Unity.Reflect.Data.ManifestReflection
    language: CSharp
    name:
      CSharp: ManifestReflection
      VB: ManifestReflection
    nameWithType:
      CSharp: ManifestReflection
      VB: ManifestReflection
    qualifiedName:
      CSharp: Unity.Reflect.Data.ManifestReflection
      VB: Unity.Reflect.Data.ManifestReflection
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect.Data
    source:
      id: ManifestReflection
      path: ''
      startLine: 3106
    summary: Holder for reflection information generated from Manifest.proto
    example: []
    syntax:
      content:
        CSharp: public static class ManifestReflection
        VB: Public Module ManifestReflection
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: Unity.Reflect.Data.ManifestReflection.Descriptor
      commentId: P:Unity.Reflect.Data.ManifestReflection.Descriptor
      language: CSharp
      name:
        CSharp: Descriptor
        VB: Descriptor
      nameWithType:
        CSharp: ManifestReflection.Descriptor
        VB: ManifestReflection.Descriptor
      qualifiedName:
        CSharp: Unity.Reflect.Data.ManifestReflection.Descriptor
        VB: Unity.Reflect.Data.ManifestReflection.Descriptor
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Data
      source:
        id: Descriptor
        path: ''
        startLine: 3110
      summary: File descriptor for Manifest.proto
      example: []
      syntax:
        content:
          CSharp: public static pbr.FileDescriptor Descriptor { get; }
          VB: Public Shared ReadOnly Property Descriptor As pbr.FileDescriptor
        parameters: []
        return:
          type: pbr.FileDescriptor
      overload: Unity.Reflect.Data.ManifestReflection.Descriptor*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
  - id: Unity.Reflect.Data.ManifestEntry
    commentId: T:Unity.Reflect.Data.ManifestEntry
    language: CSharp
    name:
      CSharp: ManifestEntry
      VB: ManifestEntry
    nameWithType:
      CSharp: ManifestEntry
      VB: ManifestEntry
    qualifiedName:
      CSharp: Unity.Reflect.Data.ManifestEntry
      VB: Unity.Reflect.Data.ManifestEntry
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect.Data
    source:
      id: ManifestEntry
      path: ''
      startLine: 3259
    syntax:
      content:
        CSharp: 'public sealed class ManifestEntry : pb.IMessage<ManifestEntry>'
        VB: >-
          Public NotInheritable Class ManifestEntry

              Inherits pb.IMessage(Of ManifestEntry)
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - sealed
      - class
      VB:
      - Public
      - NotInheritable
      - Class
    items:
    - id: Unity.Reflect.Data.ManifestEntry.Parser
      commentId: P:Unity.Reflect.Data.ManifestEntry.Parser
      language: CSharp
      name:
        CSharp: Parser
        VB: Parser
      nameWithType:
        CSharp: ManifestEntry.Parser
        VB: ManifestEntry.Parser
      qualifiedName:
        CSharp: Unity.Reflect.Data.ManifestEntry.Parser
        VB: Unity.Reflect.Data.ManifestEntry.Parser
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Data
      source:
        id: Parser
        path: ''
        startLine: 3262
      syntax:
        content:
          CSharp: public static pb.MessageParser<ManifestEntry> Parser { get; }
          VB: Public Shared ReadOnly Property Parser As pb.MessageParser(Of ManifestEntry)
        parameters: []
        return:
          type: pb.MessageParser{Unity.Reflect.Data.ManifestEntry}
      overload: Unity.Reflect.Data.ManifestEntry.Parser*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Unity.Reflect.Data.ManifestEntry.Descriptor
      commentId: P:Unity.Reflect.Data.ManifestEntry.Descriptor
      language: CSharp
      name:
        CSharp: Descriptor
        VB: Descriptor
      nameWithType:
        CSharp: ManifestEntry.Descriptor
        VB: ManifestEntry.Descriptor
      qualifiedName:
        CSharp: Unity.Reflect.Data.ManifestEntry.Descriptor
        VB: Unity.Reflect.Data.ManifestEntry.Descriptor
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Data
      source:
        id: Descriptor
        path: ''
        startLine: 3265
      syntax:
        content:
          CSharp: public static pbr.MessageDescriptor Descriptor { get; }
          VB: Public Shared ReadOnly Property Descriptor As pbr.MessageDescriptor
        parameters: []
        return:
          type: pbr.MessageDescriptor
      overload: Unity.Reflect.Data.ManifestEntry.Descriptor*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Unity.Reflect.Data.ManifestEntry.#ctor
      commentId: M:Unity.Reflect.Data.ManifestEntry.#ctor
      language: CSharp
      name:
        CSharp: ManifestEntry()
        VB: ManifestEntry()
      nameWithType:
        CSharp: ManifestEntry.ManifestEntry()
        VB: ManifestEntry.ManifestEntry()
      qualifiedName:
        CSharp: Unity.Reflect.Data.ManifestEntry.ManifestEntry()
        VB: Unity.Reflect.Data.ManifestEntry.ManifestEntry()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Data
      source:
        id: .ctor
        path: ''
        startLine: 3275
      syntax:
        content:
          CSharp: public ManifestEntry()
          VB: Public Sub New
      overload: Unity.Reflect.Data.ManifestEntry.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Data.ManifestEntry.#ctor(Unity.Reflect.Data.ManifestEntry)
      commentId: M:Unity.Reflect.Data.ManifestEntry.#ctor(Unity.Reflect.Data.ManifestEntry)
      language: CSharp
      name:
        CSharp: ManifestEntry(ManifestEntry)
        VB: ManifestEntry(ManifestEntry)
      nameWithType:
        CSharp: ManifestEntry.ManifestEntry(ManifestEntry)
        VB: ManifestEntry.ManifestEntry(ManifestEntry)
      qualifiedName:
        CSharp: Unity.Reflect.Data.ManifestEntry.ManifestEntry(Unity.Reflect.Data.ManifestEntry)
        VB: Unity.Reflect.Data.ManifestEntry.ManifestEntry(Unity.Reflect.Data.ManifestEntry)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Data
      source:
        id: .ctor
        path: ''
        startLine: 3282
      syntax:
        content:
          CSharp: public ManifestEntry(ManifestEntry other)
          VB: Public Sub New(other As ManifestEntry)
        parameters:
        - id: other
          type: Unity.Reflect.Data.ManifestEntry
      overload: Unity.Reflect.Data.ManifestEntry.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Data.ManifestEntry.Clone
      commentId: M:Unity.Reflect.Data.ManifestEntry.Clone
      language: CSharp
      name:
        CSharp: Clone()
        VB: Clone()
      nameWithType:
        CSharp: ManifestEntry.Clone()
        VB: ManifestEntry.Clone()
      qualifiedName:
        CSharp: Unity.Reflect.Data.ManifestEntry.Clone()
        VB: Unity.Reflect.Data.ManifestEntry.Clone()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Data
      source:
        id: Clone
        path: ''
        startLine: 3291
      syntax:
        content:
          CSharp: public ManifestEntry Clone()
          VB: Public Function Clone As ManifestEntry
        return:
          type: Unity.Reflect.Data.ManifestEntry
      overload: Unity.Reflect.Data.ManifestEntry.Clone*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Data.ManifestEntry.DstPathFieldNumber
      commentId: F:Unity.Reflect.Data.ManifestEntry.DstPathFieldNumber
      language: CSharp
      name:
        CSharp: DstPathFieldNumber
        VB: DstPathFieldNumber
      nameWithType:
        CSharp: ManifestEntry.DstPathFieldNumber
        VB: ManifestEntry.DstPathFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Data.ManifestEntry.DstPathFieldNumber
        VB: Unity.Reflect.Data.ManifestEntry.DstPathFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Data
      source:
        id: DstPathFieldNumber
        path: ''
        startLine: 3297
      summary: Field number for the &quot;dstPath&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int DstPathFieldNumber = 3
          VB: Public Const DstPathFieldNumber As Integer = 3
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Data.ManifestEntry.DstPath
      commentId: P:Unity.Reflect.Data.ManifestEntry.DstPath
      language: CSharp
      name:
        CSharp: DstPath
        VB: DstPath
      nameWithType:
        CSharp: ManifestEntry.DstPath
        VB: ManifestEntry.DstPath
      qualifiedName:
        CSharp: Unity.Reflect.Data.ManifestEntry.DstPath
        VB: Unity.Reflect.Data.ManifestEntry.DstPath
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Data
      source:
        id: DstPath
        path: ''
        startLine: 3299
      syntax:
        content:
          CSharp: public string DstPath { get; set; }
          VB: Public Property DstPath As String
        parameters: []
        return:
          type: System.String
      overload: Unity.Reflect.Data.ManifestEntry.DstPath*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Data.ManifestEntry.SrcHashFieldNumber
      commentId: F:Unity.Reflect.Data.ManifestEntry.SrcHashFieldNumber
      language: CSharp
      name:
        CSharp: SrcHashFieldNumber
        VB: SrcHashFieldNumber
      nameWithType:
        CSharp: ManifestEntry.SrcHashFieldNumber
        VB: ManifestEntry.SrcHashFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Data.ManifestEntry.SrcHashFieldNumber
        VB: Unity.Reflect.Data.ManifestEntry.SrcHashFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Data
      source:
        id: SrcHashFieldNumber
        path: ''
        startLine: 3308
      summary: Field number for the &quot;srcHash&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int SrcHashFieldNumber = 4
          VB: Public Const SrcHashFieldNumber As Integer = 4
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Data.ManifestEntry.SrcHash
      commentId: P:Unity.Reflect.Data.ManifestEntry.SrcHash
      language: CSharp
      name:
        CSharp: SrcHash
        VB: SrcHash
      nameWithType:
        CSharp: ManifestEntry.SrcHash
        VB: ManifestEntry.SrcHash
      qualifiedName:
        CSharp: Unity.Reflect.Data.ManifestEntry.SrcHash
        VB: Unity.Reflect.Data.ManifestEntry.SrcHash
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Data
      source:
        id: SrcHash
        path: ''
        startLine: 3310
      syntax:
        content:
          CSharp: public string SrcHash { get; set; }
          VB: Public Property SrcHash As String
        parameters: []
        return:
          type: System.String
      overload: Unity.Reflect.Data.ManifestEntry.SrcHash*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Data.ManifestEntry.DstHashFieldNumber
      commentId: F:Unity.Reflect.Data.ManifestEntry.DstHashFieldNumber
      language: CSharp
      name:
        CSharp: DstHashFieldNumber
        VB: DstHashFieldNumber
      nameWithType:
        CSharp: ManifestEntry.DstHashFieldNumber
        VB: ManifestEntry.DstHashFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Data.ManifestEntry.DstHashFieldNumber
        VB: Unity.Reflect.Data.ManifestEntry.DstHashFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Data
      source:
        id: DstHashFieldNumber
        path: ''
        startLine: 3319
      summary: Field number for the &quot;dstHash&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int DstHashFieldNumber = 5
          VB: Public Const DstHashFieldNumber As Integer = 5
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Data.ManifestEntry.DstHash
      commentId: P:Unity.Reflect.Data.ManifestEntry.DstHash
      language: CSharp
      name:
        CSharp: DstHash
        VB: DstHash
      nameWithType:
        CSharp: ManifestEntry.DstHash
        VB: ManifestEntry.DstHash
      qualifiedName:
        CSharp: Unity.Reflect.Data.ManifestEntry.DstHash
        VB: Unity.Reflect.Data.ManifestEntry.DstHash
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Data
      source:
        id: DstHash
        path: ''
        startLine: 3321
      syntax:
        content:
          CSharp: public string DstHash { get; set; }
          VB: Public Property DstHash As String
        parameters: []
        return:
          type: System.String
      overload: Unity.Reflect.Data.ManifestEntry.DstHash*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Data.ManifestEntry.BoundingBoxFieldNumber
      commentId: F:Unity.Reflect.Data.ManifestEntry.BoundingBoxFieldNumber
      language: CSharp
      name:
        CSharp: BoundingBoxFieldNumber
        VB: BoundingBoxFieldNumber
      nameWithType:
        CSharp: ManifestEntry.BoundingBoxFieldNumber
        VB: ManifestEntry.BoundingBoxFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.Data.ManifestEntry.BoundingBoxFieldNumber
        VB: Unity.Reflect.Data.ManifestEntry.BoundingBoxFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Data
      source:
        id: BoundingBoxFieldNumber
        path: ''
        startLine: 3330
      summary: Field number for the &quot;boundingBox&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int BoundingBoxFieldNumber = 6
          VB: Public Const BoundingBoxFieldNumber As Integer = 6
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Data.ManifestEntry.BoundingBox
      commentId: P:Unity.Reflect.Data.ManifestEntry.BoundingBox
      language: CSharp
      name:
        CSharp: BoundingBox
        VB: BoundingBox
      nameWithType:
        CSharp: ManifestEntry.BoundingBox
        VB: ManifestEntry.BoundingBox
      qualifiedName:
        CSharp: Unity.Reflect.Data.ManifestEntry.BoundingBox
        VB: Unity.Reflect.Data.ManifestEntry.BoundingBox
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Data
      source:
        id: BoundingBox
        path: ''
        startLine: 3332
      syntax:
        content:
          CSharp: public SyncBoundingBox BoundingBox { get; set; }
          VB: Public Property BoundingBox As SyncBoundingBox
        parameters: []
        return:
          type: Unity.Reflect.Model.SyncBoundingBox
      overload: Unity.Reflect.Data.ManifestEntry.BoundingBox*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Data.ManifestEntry.Equals(System.Object)
      commentId: M:Unity.Reflect.Data.ManifestEntry.Equals(System.Object)
      language: CSharp
      name:
        CSharp: Equals(Object)
        VB: Equals(Object)
      nameWithType:
        CSharp: ManifestEntry.Equals(Object)
        VB: ManifestEntry.Equals(Object)
      qualifiedName:
        CSharp: Unity.Reflect.Data.ManifestEntry.Equals(System.Object)
        VB: Unity.Reflect.Data.ManifestEntry.Equals(System.Object)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Data
      source:
        id: Equals
        path: ''
        startLine: 3340
      syntax:
        content:
          CSharp: public override bool Equals(object other)
          VB: Public Overrides Function Equals(other As Object) As Boolean
        parameters:
        - id: other
          type: System.Object
        return:
          type: System.Boolean
      overload: Unity.Reflect.Data.ManifestEntry.Equals*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.Data.ManifestEntry.Equals(Unity.Reflect.Data.ManifestEntry)
      commentId: M:Unity.Reflect.Data.ManifestEntry.Equals(Unity.Reflect.Data.ManifestEntry)
      language: CSharp
      name:
        CSharp: Equals(ManifestEntry)
        VB: Equals(ManifestEntry)
      nameWithType:
        CSharp: ManifestEntry.Equals(ManifestEntry)
        VB: ManifestEntry.Equals(ManifestEntry)
      qualifiedName:
        CSharp: Unity.Reflect.Data.ManifestEntry.Equals(Unity.Reflect.Data.ManifestEntry)
        VB: Unity.Reflect.Data.ManifestEntry.Equals(Unity.Reflect.Data.ManifestEntry)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Data
      source:
        id: Equals
        path: ''
        startLine: 3345
      syntax:
        content:
          CSharp: public bool Equals(ManifestEntry other)
          VB: Public Function Equals(other As ManifestEntry) As Boolean
        parameters:
        - id: other
          type: Unity.Reflect.Data.ManifestEntry
        return:
          type: System.Boolean
      overload: Unity.Reflect.Data.ManifestEntry.Equals*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Data.ManifestEntry.GetHashCode
      commentId: M:Unity.Reflect.Data.ManifestEntry.GetHashCode
      language: CSharp
      name:
        CSharp: GetHashCode()
        VB: GetHashCode()
      nameWithType:
        CSharp: ManifestEntry.GetHashCode()
        VB: ManifestEntry.GetHashCode()
      qualifiedName:
        CSharp: Unity.Reflect.Data.ManifestEntry.GetHashCode()
        VB: Unity.Reflect.Data.ManifestEntry.GetHashCode()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Data
      source:
        id: GetHashCode
        path: ''
        startLine: 3360
      syntax:
        content:
          CSharp: public override int GetHashCode()
          VB: Public Overrides Function GetHashCode As Integer
        return:
          type: System.Int32
      overload: Unity.Reflect.Data.ManifestEntry.GetHashCode*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.Data.ManifestEntry.ToString
      commentId: M:Unity.Reflect.Data.ManifestEntry.ToString
      language: CSharp
      name:
        CSharp: ToString()
        VB: ToString()
      nameWithType:
        CSharp: ManifestEntry.ToString()
        VB: ManifestEntry.ToString()
      qualifiedName:
        CSharp: Unity.Reflect.Data.ManifestEntry.ToString()
        VB: Unity.Reflect.Data.ManifestEntry.ToString()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Data
      source:
        id: ToString
        path: ''
        startLine: 3373
      syntax:
        content:
          CSharp: public override string ToString()
          VB: Public Overrides Function ToString As String
        return:
          type: System.String
      overload: Unity.Reflect.Data.ManifestEntry.ToString*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.Data.ManifestEntry.WriteTo(pb.CodedOutputStream)
      commentId: M:Unity.Reflect.Data.ManifestEntry.WriteTo(pb.CodedOutputStream)
      language: CSharp
      name:
        CSharp: WriteTo(pb.CodedOutputStream)
        VB: WriteTo(pb.CodedOutputStream)
      nameWithType:
        CSharp: ManifestEntry.WriteTo(pb.CodedOutputStream)
        VB: ManifestEntry.WriteTo(pb.CodedOutputStream)
      qualifiedName:
        CSharp: Unity.Reflect.Data.ManifestEntry.WriteTo(pb.CodedOutputStream)
        VB: Unity.Reflect.Data.ManifestEntry.WriteTo(pb.CodedOutputStream)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Data
      source:
        id: WriteTo
        path: ''
        startLine: 3378
      syntax:
        content:
          CSharp: public void WriteTo(pb.CodedOutputStream output)
          VB: Public Sub WriteTo(output As pb.CodedOutputStream)
        parameters:
        - id: output
          type: pb.CodedOutputStream
      overload: Unity.Reflect.Data.ManifestEntry.WriteTo*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Data.ManifestEntry.CalculateSize
      commentId: M:Unity.Reflect.Data.ManifestEntry.CalculateSize
      language: CSharp
      name:
        CSharp: CalculateSize()
        VB: CalculateSize()
      nameWithType:
        CSharp: ManifestEntry.CalculateSize()
        VB: ManifestEntry.CalculateSize()
      qualifiedName:
        CSharp: Unity.Reflect.Data.ManifestEntry.CalculateSize()
        VB: Unity.Reflect.Data.ManifestEntry.CalculateSize()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Data
      source:
        id: CalculateSize
        path: ''
        startLine: 3401
      syntax:
        content:
          CSharp: public int CalculateSize()
          VB: Public Function CalculateSize As Integer
        return:
          type: System.Int32
      overload: Unity.Reflect.Data.ManifestEntry.CalculateSize*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Data.ManifestEntry.MergeFrom(Unity.Reflect.Data.ManifestEntry)
      commentId: M:Unity.Reflect.Data.ManifestEntry.MergeFrom(Unity.Reflect.Data.ManifestEntry)
      language: CSharp
      name:
        CSharp: MergeFrom(ManifestEntry)
        VB: MergeFrom(ManifestEntry)
      nameWithType:
        CSharp: ManifestEntry.MergeFrom(ManifestEntry)
        VB: ManifestEntry.MergeFrom(ManifestEntry)
      qualifiedName:
        CSharp: Unity.Reflect.Data.ManifestEntry.MergeFrom(Unity.Reflect.Data.ManifestEntry)
        VB: Unity.Reflect.Data.ManifestEntry.MergeFrom(Unity.Reflect.Data.ManifestEntry)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Data
      source:
        id: MergeFrom
        path: ''
        startLine: 3422
      syntax:
        content:
          CSharp: public void MergeFrom(ManifestEntry other)
          VB: Public Sub MergeFrom(other As ManifestEntry)
        parameters:
        - id: other
          type: Unity.Reflect.Data.ManifestEntry
      overload: Unity.Reflect.Data.ManifestEntry.MergeFrom*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Data.ManifestEntry.MergeFrom(pb.CodedInputStream)
      commentId: M:Unity.Reflect.Data.ManifestEntry.MergeFrom(pb.CodedInputStream)
      language: CSharp
      name:
        CSharp: MergeFrom(pb.CodedInputStream)
        VB: MergeFrom(pb.CodedInputStream)
      nameWithType:
        CSharp: ManifestEntry.MergeFrom(pb.CodedInputStream)
        VB: ManifestEntry.MergeFrom(pb.CodedInputStream)
      qualifiedName:
        CSharp: Unity.Reflect.Data.ManifestEntry.MergeFrom(pb.CodedInputStream)
        VB: Unity.Reflect.Data.ManifestEntry.MergeFrom(pb.CodedInputStream)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Data
      source:
        id: MergeFrom
        path: ''
        startLine: 3445
      syntax:
        content:
          CSharp: public void MergeFrom(pb.CodedInputStream input)
          VB: Public Sub MergeFrom(input As pb.CodedInputStream)
        parameters:
        - id: input
          type: pb.CodedInputStream
      overload: Unity.Reflect.Data.ManifestEntry.MergeFrom*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: Unity.Reflect.Services
  commentId: N:Unity.Reflect.Services
  language: CSharp
  name:
    CSharp: Unity.Reflect.Services
    VB: Unity.Reflect.Services
  nameWithType:
    CSharp: Unity.Reflect.Services
    VB: Unity.Reflect.Services
  qualifiedName:
    CSharp: Unity.Reflect.Services
    VB: Unity.Reflect.Services
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Unity.Reflect.Services.ProjectInfo
    commentId: T:Unity.Reflect.Services.ProjectInfo
    language: CSharp
    name:
      CSharp: ProjectInfo
      VB: ProjectInfo
    nameWithType:
      CSharp: ProjectInfo
      VB: ProjectInfo
    qualifiedName:
      CSharp: Unity.Reflect.Services.ProjectInfo
      VB: Unity.Reflect.Services.ProjectInfo
    type: Struct
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect.Services
    source:
      id: ProjectInfo
      path: ''
      startLine: 18079
    summary: "\nThis struct specifies information about a specific project that has been discovered by the <xref href=\"Unity.Reflect.Services.ProjectDiscovery\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    example: []
    syntax:
      content:
        CSharp: public struct ProjectInfo
        VB: Public Structure ProjectInfo
    inheritedMembers:
    - System.ValueType.Equals(System.Object)
    - System.ValueType.GetHashCode
    - System.ValueType.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetType
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: Unity.Reflect.Services.ProjectInfo.ServerProjectId
      commentId: P:Unity.Reflect.Services.ProjectInfo.ServerProjectId
      language: CSharp
      name:
        CSharp: ServerProjectId
        VB: ServerProjectId
      nameWithType:
        CSharp: ProjectInfo.ServerProjectId
        VB: ProjectInfo.ServerProjectId
      qualifiedName:
        CSharp: Unity.Reflect.Services.ProjectInfo.ServerProjectId
        VB: Unity.Reflect.Services.ProjectInfo.ServerProjectId
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Services
      source:
        id: ServerProjectId
        path: ''
        startLine: 18081
      syntax:
        content:
          CSharp: public string ServerProjectId { get; set; }
          VB: Public Property ServerProjectId As String
        parameters: []
        return:
          type: System.String
      overload: Unity.Reflect.Services.ProjectInfo.ServerProjectId*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Services.ProjectInfo.ProjectId
      commentId: P:Unity.Reflect.Services.ProjectInfo.ProjectId
      language: CSharp
      name:
        CSharp: ProjectId
        VB: ProjectId
      nameWithType:
        CSharp: ProjectInfo.ProjectId
        VB: ProjectInfo.ProjectId
      qualifiedName:
        CSharp: Unity.Reflect.Services.ProjectInfo.ProjectId
        VB: Unity.Reflect.Services.ProjectInfo.ProjectId
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Services
      source:
        id: ProjectId
        path: ''
        startLine: 18082
      syntax:
        content:
          CSharp: public string ProjectId { get; set; }
          VB: Public Property ProjectId As String
        parameters: []
        return:
          type: System.String
      overload: Unity.Reflect.Services.ProjectInfo.ProjectId*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Services.ProjectInfo.Name
      commentId: P:Unity.Reflect.Services.ProjectInfo.Name
      language: CSharp
      name:
        CSharp: Name
        VB: Name
      nameWithType:
        CSharp: ProjectInfo.Name
        VB: ProjectInfo.Name
      qualifiedName:
        CSharp: Unity.Reflect.Services.ProjectInfo.Name
        VB: Unity.Reflect.Services.ProjectInfo.Name
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Services
      source:
        id: Name
        path: ''
        startLine: 18083
      syntax:
        content:
          CSharp: public string Name { get; set; }
          VB: Public Property Name As String
        parameters: []
        return:
          type: System.String
      overload: Unity.Reflect.Services.ProjectInfo.Name*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Services.ProjectInfo.ServerName
      commentId: P:Unity.Reflect.Services.ProjectInfo.ServerName
      language: CSharp
      name:
        CSharp: ServerName
        VB: ServerName
      nameWithType:
        CSharp: ProjectInfo.ServerName
        VB: ProjectInfo.ServerName
      qualifiedName:
        CSharp: Unity.Reflect.Services.ProjectInfo.ServerName
        VB: Unity.Reflect.Services.ProjectInfo.ServerName
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Services
      source:
        id: ServerName
        path: ''
        startLine: 18084
      syntax:
        content:
          CSharp: public string ServerName { get; set; }
          VB: Public Property ServerName As String
        parameters: []
        return:
          type: System.String
      overload: Unity.Reflect.Services.ProjectInfo.ServerName*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Services.ProjectInfo.ServerAddress
      commentId: P:Unity.Reflect.Services.ProjectInfo.ServerAddress
      language: CSharp
      name:
        CSharp: ServerAddress
        VB: ServerAddress
      nameWithType:
        CSharp: ProjectInfo.ServerAddress
        VB: ProjectInfo.ServerAddress
      qualifiedName:
        CSharp: Unity.Reflect.Services.ProjectInfo.ServerAddress
        VB: Unity.Reflect.Services.ProjectInfo.ServerAddress
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Services
      source:
        id: ServerAddress
        path: ''
        startLine: 18085
      syntax:
        content:
          CSharp: public string ServerAddress { get; set; }
          VB: Public Property ServerAddress As String
        parameters: []
        return:
          type: System.String
      overload: Unity.Reflect.Services.ProjectInfo.ServerAddress*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Services.ProjectInfo.UserId
      commentId: P:Unity.Reflect.Services.ProjectInfo.UserId
      language: CSharp
      name:
        CSharp: UserId
        VB: UserId
      nameWithType:
        CSharp: ProjectInfo.UserId
        VB: ProjectInfo.UserId
      qualifiedName:
        CSharp: Unity.Reflect.Services.ProjectInfo.UserId
        VB: Unity.Reflect.Services.ProjectInfo.UserId
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Services
      source:
        id: UserId
        path: ''
        startLine: 18086
      syntax:
        content:
          CSharp: public string UserId { get; set; }
          VB: Public Property UserId As String
        parameters: []
        return:
          type: System.String
      overload: Unity.Reflect.Services.ProjectInfo.UserId*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Services.ProjectInfo.OrgId
      commentId: P:Unity.Reflect.Services.ProjectInfo.OrgId
      language: CSharp
      name:
        CSharp: OrgId
        VB: OrgId
      nameWithType:
        CSharp: ProjectInfo.OrgId
        VB: ProjectInfo.OrgId
      qualifiedName:
        CSharp: Unity.Reflect.Services.ProjectInfo.OrgId
        VB: Unity.Reflect.Services.ProjectInfo.OrgId
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Services
      source:
        id: OrgId
        path: ''
        startLine: 18087
      syntax:
        content:
          CSharp: public string OrgId { get; set; }
          VB: Public Property OrgId As String
        parameters: []
        return:
          type: System.String
      overload: Unity.Reflect.Services.ProjectInfo.OrgId*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Services.ProjectInfo.LastUpdated
      commentId: P:Unity.Reflect.Services.ProjectInfo.LastUpdated
      language: CSharp
      name:
        CSharp: LastUpdated
        VB: LastUpdated
      nameWithType:
        CSharp: ProjectInfo.LastUpdated
        VB: ProjectInfo.LastUpdated
      qualifiedName:
        CSharp: Unity.Reflect.Services.ProjectInfo.LastUpdated
        VB: Unity.Reflect.Services.ProjectInfo.LastUpdated
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Services
      source:
        id: LastUpdated
        path: ''
        startLine: 18088
      syntax:
        content:
          CSharp: public DateTime LastUpdated { get; set; }
          VB: Public Property LastUpdated As Date
        parameters: []
        return:
          type: System.DateTime
      overload: Unity.Reflect.Services.ProjectInfo.LastUpdated*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.Services.ProjectInfo.ServiceChannel
      commentId: P:Unity.Reflect.Services.ProjectInfo.ServiceChannel
      language: CSharp
      name:
        CSharp: ServiceChannel
        VB: ServiceChannel
      nameWithType:
        CSharp: ProjectInfo.ServiceChannel
        VB: ProjectInfo.ServiceChannel
      qualifiedName:
        CSharp: Unity.Reflect.Services.ProjectInfo.ServiceChannel
        VB: Unity.Reflect.Services.ProjectInfo.ServiceChannel
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Services
      source:
        id: ServiceChannel
        path: ''
        startLine: 18089
      syntax:
        content:
          CSharp: public TargetChannel ServiceChannel { get; set; }
          VB: Public Property ServiceChannel As TargetChannel
        parameters: []
        return:
          type: Unity.Reflect.TargetChannel
      overload: Unity.Reflect.Services.ProjectInfo.ServiceChannel*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    references:
      Unity.Reflect.Services.ProjectDiscovery: 
  - id: Unity.Reflect.Services.ProjectDiscovery
    commentId: T:Unity.Reflect.Services.ProjectDiscovery
    language: CSharp
    name:
      CSharp: ProjectDiscovery
      VB: ProjectDiscovery
    nameWithType:
      CSharp: ProjectDiscovery
      VB: ProjectDiscovery
    qualifiedName:
      CSharp: Unity.Reflect.Services.ProjectDiscovery
      VB: Unity.Reflect.Services.ProjectDiscovery
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect.Services
    source:
      id: ProjectDiscovery
      path: ''
      startLine: 18095
    summary: "\nThis class allows services to be discovered over the local network.\n"
    example: []
    syntax:
      content:
        CSharp: public class ProjectDiscovery
        VB: Public Class ProjectDiscovery
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Unity.Reflect.Services.ProjectDiscovery.OnProjectAdded
      commentId: E:Unity.Reflect.Services.ProjectDiscovery.OnProjectAdded
      language: CSharp
      name:
        CSharp: OnProjectAdded
        VB: OnProjectAdded
      nameWithType:
        CSharp: ProjectDiscovery.OnProjectAdded
        VB: ProjectDiscovery.OnProjectAdded
      qualifiedName:
        CSharp: Unity.Reflect.Services.ProjectDiscovery.OnProjectAdded
        VB: Unity.Reflect.Services.ProjectDiscovery.OnProjectAdded
      type: Event
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Services
      source:
        id: OnProjectAdded
        path: ''
        startLine: 18102
      summary: "\nThis event is triggered when a project is added to the available project list.\n"
      example: []
      syntax:
        content:
          CSharp: public event Action<ProjectInfo> OnProjectAdded
          VB: Public Event OnProjectAdded As Action(Of ProjectInfo)
        return:
          type: System.Action{Unity.Reflect.Services.ProjectInfo}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Services.ProjectDiscovery.OnProjectRemoved
      commentId: E:Unity.Reflect.Services.ProjectDiscovery.OnProjectRemoved
      language: CSharp
      name:
        CSharp: OnProjectRemoved
        VB: OnProjectRemoved
      nameWithType:
        CSharp: ProjectDiscovery.OnProjectRemoved
        VB: ProjectDiscovery.OnProjectRemoved
      qualifiedName:
        CSharp: Unity.Reflect.Services.ProjectDiscovery.OnProjectRemoved
        VB: Unity.Reflect.Services.ProjectDiscovery.OnProjectRemoved
      type: Event
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Services
      source:
        id: OnProjectRemoved
        path: ''
        startLine: 18107
      summary: "\nThis event is triggered when a project is removed from the available project list.\n"
      example: []
      syntax:
        content:
          CSharp: public event Action<ProjectInfo> OnProjectRemoved
          VB: Public Event OnProjectRemoved As Action(Of ProjectInfo)
        return:
          type: System.Action{Unity.Reflect.Services.ProjectInfo}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Services.ProjectDiscovery.availableProjects
      commentId: P:Unity.Reflect.Services.ProjectDiscovery.availableProjects
      language: CSharp
      name:
        CSharp: availableProjects
        VB: availableProjects
      nameWithType:
        CSharp: ProjectDiscovery.availableProjects
        VB: ProjectDiscovery.availableProjects
      qualifiedName:
        CSharp: Unity.Reflect.Services.ProjectDiscovery.availableProjects
        VB: Unity.Reflect.Services.ProjectDiscovery.availableProjects
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Services
      source:
        id: availableProjects
        path: ''
        startLine: 18112
      summary: "\nA list of all available projects that have been discovered by the ProjectDiscovery.\n"
      example: []
      syntax:
        content:
          CSharp: public static IReadOnlyDictionary<string, ProjectInfo> availableProjects { get; }
          VB: Public Shared ReadOnly Property availableProjects As IReadOnlyDictionary(Of String, ProjectInfo)
        parameters: []
        return:
          type: IReadOnlyDictionary{System.String,Unity.Reflect.Services.ProjectInfo}
      overload: Unity.Reflect.Services.ProjectDiscovery.availableProjects*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Unity.Reflect.Services.ProjectDiscovery.#ctor(System.Boolean)
      commentId: M:Unity.Reflect.Services.ProjectDiscovery.#ctor(System.Boolean)
      language: CSharp
      name:
        CSharp: ProjectDiscovery(Boolean)
        VB: ProjectDiscovery(Boolean)
      nameWithType:
        CSharp: ProjectDiscovery.ProjectDiscovery(Boolean)
        VB: ProjectDiscovery.ProjectDiscovery(Boolean)
      qualifiedName:
        CSharp: Unity.Reflect.Services.ProjectDiscovery.ProjectDiscovery(System.Boolean)
        VB: Unity.Reflect.Services.ProjectDiscovery.ProjectDiscovery(System.Boolean)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Services
      source:
        id: .ctor
        path: ''
        startLine: 18129
      summary: "\nCreates a ProjectDiscovery\n"
      example: []
      syntax:
        content:
          CSharp: public ProjectDiscovery(bool isServer)
          VB: Public Sub New(isServer As Boolean)
        parameters:
        - id: isServer
          type: System.Boolean
          description: Whether the user of the Discovery is a server
      overload: Unity.Reflect.Services.ProjectDiscovery.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Services.ProjectDiscovery.Start
      commentId: M:Unity.Reflect.Services.ProjectDiscovery.Start
      language: CSharp
      name:
        CSharp: Start()
        VB: Start()
      nameWithType:
        CSharp: ProjectDiscovery.Start()
        VB: ProjectDiscovery.Start()
      qualifiedName:
        CSharp: Unity.Reflect.Services.ProjectDiscovery.Start()
        VB: Unity.Reflect.Services.ProjectDiscovery.Start()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Services
      source:
        id: Start
        path: ''
        startLine: 18184
      summary: "\nStarts the discovery.\n"
      example: []
      syntax:
        content:
          CSharp: public void Start()
          VB: Public Sub Start
      overload: Unity.Reflect.Services.ProjectDiscovery.Start*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.Services.ProjectDiscovery.Stop
      commentId: M:Unity.Reflect.Services.ProjectDiscovery.Stop
      language: CSharp
      name:
        CSharp: Stop()
        VB: Stop()
      nameWithType:
        CSharp: ProjectDiscovery.Stop()
        VB: ProjectDiscovery.Stop()
      qualifiedName:
        CSharp: Unity.Reflect.Services.ProjectDiscovery.Stop()
        VB: Unity.Reflect.Services.ProjectDiscovery.Stop()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Services
      source:
        id: Stop
        path: ''
        startLine: 18197
      summary: "\nStops the discovery.\n"
      example: []
      syntax:
        content:
          CSharp: public void Stop()
          VB: Public Sub Stop
      overload: Unity.Reflect.Services.ProjectDiscovery.Stop*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: Unity.Reflect.ProjectServer.Services
  commentId: N:Unity.Reflect.ProjectServer.Services
  language: CSharp
  name:
    CSharp: Unity.Reflect.ProjectServer.Services
    VB: Unity.Reflect.ProjectServer.Services
  nameWithType:
    CSharp: Unity.Reflect.ProjectServer.Services
    VB: Unity.Reflect.ProjectServer.Services
  qualifiedName:
    CSharp: Unity.Reflect.ProjectServer.Services
    VB: Unity.Reflect.ProjectServer.Services
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Unity.Reflect.ProjectServer.Services.CommonReflection
    commentId: T:Unity.Reflect.ProjectServer.Services.CommonReflection
    language: CSharp
    name:
      CSharp: CommonReflection
      VB: CommonReflection
    nameWithType:
      CSharp: CommonReflection
      VB: CommonReflection
    qualifiedName:
      CSharp: Unity.Reflect.ProjectServer.Services.CommonReflection
      VB: Unity.Reflect.ProjectServer.Services.CommonReflection
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect.ProjectServer.Services
    source:
      id: CommonReflection
      path: ''
      startLine: 14758
    summary: Holder for reflection information generated from ProjectServer/Common.proto
    example: []
    syntax:
      content:
        CSharp: public static class CommonReflection
        VB: Public Module CommonReflection
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: Unity.Reflect.ProjectServer.Services.CommonReflection.Descriptor
      commentId: P:Unity.Reflect.ProjectServer.Services.CommonReflection.Descriptor
      language: CSharp
      name:
        CSharp: Descriptor
        VB: Descriptor
      nameWithType:
        CSharp: CommonReflection.Descriptor
        VB: CommonReflection.Descriptor
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.CommonReflection.Descriptor
        VB: Unity.Reflect.ProjectServer.Services.CommonReflection.Descriptor
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services
      source:
        id: Descriptor
        path: ''
        startLine: 14762
      summary: File descriptor for ProjectServer/Common.proto
      example: []
      syntax:
        content:
          CSharp: public static pbr.FileDescriptor Descriptor { get; }
          VB: Public Shared ReadOnly Property Descriptor As pbr.FileDescriptor
        parameters: []
        return:
          type: pbr.FileDescriptor
      overload: Unity.Reflect.ProjectServer.Services.CommonReflection.Descriptor*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
  - id: Unity.Reflect.ProjectServer.Services.Empty
    commentId: T:Unity.Reflect.ProjectServer.Services.Empty
    language: CSharp
    name:
      CSharp: Empty
      VB: Empty
    nameWithType:
      CSharp: Empty
      VB: Empty
    qualifiedName:
      CSharp: Unity.Reflect.ProjectServer.Services.Empty
      VB: Unity.Reflect.ProjectServer.Services.Empty
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect.ProjectServer.Services
    source:
      id: Empty
      path: ''
      startLine: 14784
    syntax:
      content:
        CSharp: 'public sealed class Empty : pb.IMessage<Empty>'
        VB: >-
          Public NotInheritable Class Empty

              Inherits pb.IMessage(Of Empty)
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - sealed
      - class
      VB:
      - Public
      - NotInheritable
      - Class
    items:
    - id: Unity.Reflect.ProjectServer.Services.Empty.Parser
      commentId: P:Unity.Reflect.ProjectServer.Services.Empty.Parser
      language: CSharp
      name:
        CSharp: Parser
        VB: Parser
      nameWithType:
        CSharp: Empty.Parser
        VB: Empty.Parser
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Empty.Parser
        VB: Unity.Reflect.ProjectServer.Services.Empty.Parser
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services
      source:
        id: Parser
        path: ''
        startLine: 14787
      syntax:
        content:
          CSharp: public static pb.MessageParser<Empty> Parser { get; }
          VB: Public Shared ReadOnly Property Parser As pb.MessageParser(Of Empty)
        parameters: []
        return:
          type: pb.MessageParser{Unity.Reflect.ProjectServer.Services.Empty}
      overload: Unity.Reflect.ProjectServer.Services.Empty.Parser*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Unity.Reflect.ProjectServer.Services.Empty.Descriptor
      commentId: P:Unity.Reflect.ProjectServer.Services.Empty.Descriptor
      language: CSharp
      name:
        CSharp: Descriptor
        VB: Descriptor
      nameWithType:
        CSharp: Empty.Descriptor
        VB: Empty.Descriptor
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Empty.Descriptor
        VB: Unity.Reflect.ProjectServer.Services.Empty.Descriptor
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services
      source:
        id: Descriptor
        path: ''
        startLine: 14790
      syntax:
        content:
          CSharp: public static pbr.MessageDescriptor Descriptor { get; }
          VB: Public Shared ReadOnly Property Descriptor As pbr.MessageDescriptor
        parameters: []
        return:
          type: pbr.MessageDescriptor
      overload: Unity.Reflect.ProjectServer.Services.Empty.Descriptor*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Unity.Reflect.ProjectServer.Services.Empty.#ctor
      commentId: M:Unity.Reflect.ProjectServer.Services.Empty.#ctor
      language: CSharp
      name:
        CSharp: Empty()
        VB: Empty()
      nameWithType:
        CSharp: Empty.Empty()
        VB: Empty.Empty()
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Empty.Empty()
        VB: Unity.Reflect.ProjectServer.Services.Empty.Empty()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services
      source:
        id: .ctor
        path: ''
        startLine: 14800
      syntax:
        content:
          CSharp: public Empty()
          VB: Public Sub New
      overload: Unity.Reflect.ProjectServer.Services.Empty.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Empty.#ctor(Unity.Reflect.ProjectServer.Services.Empty)
      commentId: M:Unity.Reflect.ProjectServer.Services.Empty.#ctor(Unity.Reflect.ProjectServer.Services.Empty)
      language: CSharp
      name:
        CSharp: Empty(Empty)
        VB: Empty(Empty)
      nameWithType:
        CSharp: Empty.Empty(Empty)
        VB: Empty.Empty(Empty)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Empty.Empty(Unity.Reflect.ProjectServer.Services.Empty)
        VB: Unity.Reflect.ProjectServer.Services.Empty.Empty(Unity.Reflect.ProjectServer.Services.Empty)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services
      source:
        id: .ctor
        path: ''
        startLine: 14807
      syntax:
        content:
          CSharp: public Empty(Empty other)
          VB: Public Sub New(other As Empty)
        parameters:
        - id: other
          type: Unity.Reflect.ProjectServer.Services.Empty
      overload: Unity.Reflect.ProjectServer.Services.Empty.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Empty.Clone
      commentId: M:Unity.Reflect.ProjectServer.Services.Empty.Clone
      language: CSharp
      name:
        CSharp: Clone()
        VB: Clone()
      nameWithType:
        CSharp: Empty.Clone()
        VB: Empty.Clone()
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Empty.Clone()
        VB: Unity.Reflect.ProjectServer.Services.Empty.Clone()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services
      source:
        id: Clone
        path: ''
        startLine: 14812
      syntax:
        content:
          CSharp: public Empty Clone()
          VB: Public Function Clone As Empty
        return:
          type: Unity.Reflect.ProjectServer.Services.Empty
      overload: Unity.Reflect.ProjectServer.Services.Empty.Clone*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Empty.Equals(System.Object)
      commentId: M:Unity.Reflect.ProjectServer.Services.Empty.Equals(System.Object)
      language: CSharp
      name:
        CSharp: Equals(Object)
        VB: Equals(Object)
      nameWithType:
        CSharp: Empty.Equals(Object)
        VB: Empty.Equals(Object)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Empty.Equals(System.Object)
        VB: Unity.Reflect.ProjectServer.Services.Empty.Equals(System.Object)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services
      source:
        id: Equals
        path: ''
        startLine: 14817
      syntax:
        content:
          CSharp: public override bool Equals(object other)
          VB: Public Overrides Function Equals(other As Object) As Boolean
        parameters:
        - id: other
          type: System.Object
        return:
          type: System.Boolean
      overload: Unity.Reflect.ProjectServer.Services.Empty.Equals*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.ProjectServer.Services.Empty.Equals(Unity.Reflect.ProjectServer.Services.Empty)
      commentId: M:Unity.Reflect.ProjectServer.Services.Empty.Equals(Unity.Reflect.ProjectServer.Services.Empty)
      language: CSharp
      name:
        CSharp: Equals(Empty)
        VB: Equals(Empty)
      nameWithType:
        CSharp: Empty.Equals(Empty)
        VB: Empty.Equals(Empty)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Empty.Equals(Unity.Reflect.ProjectServer.Services.Empty)
        VB: Unity.Reflect.ProjectServer.Services.Empty.Equals(Unity.Reflect.ProjectServer.Services.Empty)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services
      source:
        id: Equals
        path: ''
        startLine: 14822
      syntax:
        content:
          CSharp: public bool Equals(Empty other)
          VB: Public Function Equals(other As Empty) As Boolean
        parameters:
        - id: other
          type: Unity.Reflect.ProjectServer.Services.Empty
        return:
          type: System.Boolean
      overload: Unity.Reflect.ProjectServer.Services.Empty.Equals*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Empty.GetHashCode
      commentId: M:Unity.Reflect.ProjectServer.Services.Empty.GetHashCode
      language: CSharp
      name:
        CSharp: GetHashCode()
        VB: GetHashCode()
      nameWithType:
        CSharp: Empty.GetHashCode()
        VB: Empty.GetHashCode()
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Empty.GetHashCode()
        VB: Unity.Reflect.ProjectServer.Services.Empty.GetHashCode()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services
      source:
        id: GetHashCode
        path: ''
        startLine: 14833
      syntax:
        content:
          CSharp: public override int GetHashCode()
          VB: Public Overrides Function GetHashCode As Integer
        return:
          type: System.Int32
      overload: Unity.Reflect.ProjectServer.Services.Empty.GetHashCode*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.ProjectServer.Services.Empty.ToString
      commentId: M:Unity.Reflect.ProjectServer.Services.Empty.ToString
      language: CSharp
      name:
        CSharp: ToString()
        VB: ToString()
      nameWithType:
        CSharp: Empty.ToString()
        VB: Empty.ToString()
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Empty.ToString()
        VB: Unity.Reflect.ProjectServer.Services.Empty.ToString()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services
      source:
        id: ToString
        path: ''
        startLine: 14842
      syntax:
        content:
          CSharp: public override string ToString()
          VB: Public Overrides Function ToString As String
        return:
          type: System.String
      overload: Unity.Reflect.ProjectServer.Services.Empty.ToString*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.ProjectServer.Services.Empty.WriteTo(pb.CodedOutputStream)
      commentId: M:Unity.Reflect.ProjectServer.Services.Empty.WriteTo(pb.CodedOutputStream)
      language: CSharp
      name:
        CSharp: WriteTo(pb.CodedOutputStream)
        VB: WriteTo(pb.CodedOutputStream)
      nameWithType:
        CSharp: Empty.WriteTo(pb.CodedOutputStream)
        VB: Empty.WriteTo(pb.CodedOutputStream)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Empty.WriteTo(pb.CodedOutputStream)
        VB: Unity.Reflect.ProjectServer.Services.Empty.WriteTo(pb.CodedOutputStream)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services
      source:
        id: WriteTo
        path: ''
        startLine: 14847
      syntax:
        content:
          CSharp: public void WriteTo(pb.CodedOutputStream output)
          VB: Public Sub WriteTo(output As pb.CodedOutputStream)
        parameters:
        - id: output
          type: pb.CodedOutputStream
      overload: Unity.Reflect.ProjectServer.Services.Empty.WriteTo*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Empty.CalculateSize
      commentId: M:Unity.Reflect.ProjectServer.Services.Empty.CalculateSize
      language: CSharp
      name:
        CSharp: CalculateSize()
        VB: CalculateSize()
      nameWithType:
        CSharp: Empty.CalculateSize()
        VB: Empty.CalculateSize()
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Empty.CalculateSize()
        VB: Unity.Reflect.ProjectServer.Services.Empty.CalculateSize()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services
      source:
        id: CalculateSize
        path: ''
        startLine: 14854
      syntax:
        content:
          CSharp: public int CalculateSize()
          VB: Public Function CalculateSize As Integer
        return:
          type: System.Int32
      overload: Unity.Reflect.ProjectServer.Services.Empty.CalculateSize*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Empty.MergeFrom(Unity.Reflect.ProjectServer.Services.Empty)
      commentId: M:Unity.Reflect.ProjectServer.Services.Empty.MergeFrom(Unity.Reflect.ProjectServer.Services.Empty)
      language: CSharp
      name:
        CSharp: MergeFrom(Empty)
        VB: MergeFrom(Empty)
      nameWithType:
        CSharp: Empty.MergeFrom(Empty)
        VB: Empty.MergeFrom(Empty)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Empty.MergeFrom(Unity.Reflect.ProjectServer.Services.Empty)
        VB: Unity.Reflect.ProjectServer.Services.Empty.MergeFrom(Unity.Reflect.ProjectServer.Services.Empty)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services
      source:
        id: MergeFrom
        path: ''
        startLine: 14863
      syntax:
        content:
          CSharp: public void MergeFrom(Empty other)
          VB: Public Sub MergeFrom(other As Empty)
        parameters:
        - id: other
          type: Unity.Reflect.ProjectServer.Services.Empty
      overload: Unity.Reflect.ProjectServer.Services.Empty.MergeFrom*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Empty.MergeFrom(pb.CodedInputStream)
      commentId: M:Unity.Reflect.ProjectServer.Services.Empty.MergeFrom(pb.CodedInputStream)
      language: CSharp
      name:
        CSharp: MergeFrom(pb.CodedInputStream)
        VB: MergeFrom(pb.CodedInputStream)
      nameWithType:
        CSharp: Empty.MergeFrom(pb.CodedInputStream)
        VB: Empty.MergeFrom(pb.CodedInputStream)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Empty.MergeFrom(pb.CodedInputStream)
        VB: Unity.Reflect.ProjectServer.Services.Empty.MergeFrom(pb.CodedInputStream)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services
      source:
        id: MergeFrom
        path: ''
        startLine: 14871
      syntax:
        content:
          CSharp: public void MergeFrom(pb.CodedInputStream input)
          VB: Public Sub MergeFrom(input As pb.CodedInputStream)
        parameters:
        - id: input
          type: pb.CodedInputStream
      overload: Unity.Reflect.ProjectServer.Services.Empty.MergeFrom*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: Unity.Reflect.ProjectServer.Services.Authentication
  commentId: N:Unity.Reflect.ProjectServer.Services.Authentication
  language: CSharp
  name:
    CSharp: Unity.Reflect.ProjectServer.Services.Authentication
    VB: Unity.Reflect.ProjectServer.Services.Authentication
  nameWithType:
    CSharp: Unity.Reflect.ProjectServer.Services.Authentication
    VB: Unity.Reflect.ProjectServer.Services.Authentication
  qualifiedName:
    CSharp: Unity.Reflect.ProjectServer.Services.Authentication
    VB: Unity.Reflect.ProjectServer.Services.Authentication
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationReflection
    commentId: T:Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationReflection
    language: CSharp
    name:
      CSharp: AuthenticationReflection
      VB: AuthenticationReflection
    nameWithType:
      CSharp: AuthenticationReflection
      VB: AuthenticationReflection
    qualifiedName:
      CSharp: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationReflection
      VB: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationReflection
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect.ProjectServer.Services.Authentication
    source:
      id: AuthenticationReflection
      path: ''
      startLine: 13782
    summary: Holder for reflection information generated from ProjectServer/Authentication.proto
    example: []
    syntax:
      content:
        CSharp: public static class AuthenticationReflection
        VB: Public Module AuthenticationReflection
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationReflection.Descriptor
      commentId: P:Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationReflection.Descriptor
      language: CSharp
      name:
        CSharp: Descriptor
        VB: Descriptor
      nameWithType:
        CSharp: AuthenticationReflection.Descriptor
        VB: AuthenticationReflection.Descriptor
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationReflection.Descriptor
        VB: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationReflection.Descriptor
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: Descriptor
        path: ''
        startLine: 13786
      summary: File descriptor for ProjectServer/Authentication.proto
      example: []
      syntax:
        content:
          CSharp: public static pbr.FileDescriptor Descriptor { get; }
          VB: Public Shared ReadOnly Property Descriptor As pbr.FileDescriptor
        parameters: []
        return:
          type: pbr.FileDescriptor
      overload: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationReflection.Descriptor*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
  - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessType
    commentId: T:Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessType
    language: CSharp
    name:
      CSharp: ProjectAccessType
      VB: ProjectAccessType
    nameWithType:
      CSharp: ProjectAccessType
      VB: ProjectAccessType
    qualifiedName:
      CSharp: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessType
      VB: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessType
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect.ProjectServer.Services.Authentication
    source:
      id: ProjectAccessType
      path: ''
      startLine: 13826
    syntax:
      content:
        CSharp: public enum ProjectAccessType
        VB: Public Enum ProjectAccessType
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessType.View
      commentId: F:Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessType.View
      language: CSharp
      name:
        CSharp: View
        VB: View
      nameWithType:
        CSharp: ProjectAccessType.View
        VB: ProjectAccessType.View
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessType.View
        VB: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessType.View
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: View
        path: ''
        startLine: 13827
      syntax:
        content:
          CSharp: View = 0
          VB: View = 0
        return:
          type: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessType.Publish
      commentId: F:Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessType.Publish
      language: CSharp
      name:
        CSharp: Publish
        VB: Publish
      nameWithType:
        CSharp: ProjectAccessType.Publish
        VB: ProjectAccessType.Publish
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessType.Publish
        VB: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessType.Publish
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: Publish
        path: ''
        startLine: 13828
      syntax:
        content:
          CSharp: Publish = 1
          VB: Publish = 1
        return:
          type: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse
    commentId: T:Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse
    language: CSharp
    name:
      CSharp: SigninResponse
      VB: SigninResponse
    nameWithType:
      CSharp: SigninResponse
      VB: SigninResponse
    qualifiedName:
      CSharp: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse
      VB: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect.ProjectServer.Services.Authentication
    source:
      id: SigninResponse
      path: ''
      startLine: 13834
    syntax:
      content:
        CSharp: 'public sealed class SigninResponse : pb.IMessage<SigninResponse>'
        VB: >-
          Public NotInheritable Class SigninResponse

              Inherits pb.IMessage(Of SigninResponse)
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - sealed
      - class
      VB:
      - Public
      - NotInheritable
      - Class
    items:
    - id: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.Parser
      commentId: P:Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.Parser
      language: CSharp
      name:
        CSharp: Parser
        VB: Parser
      nameWithType:
        CSharp: SigninResponse.Parser
        VB: SigninResponse.Parser
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.Parser
        VB: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.Parser
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: Parser
        path: ''
        startLine: 13837
      syntax:
        content:
          CSharp: public static pb.MessageParser<SigninResponse> Parser { get; }
          VB: Public Shared ReadOnly Property Parser As pb.MessageParser(Of SigninResponse)
        parameters: []
        return:
          type: pb.MessageParser{Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse}
      overload: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.Parser*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.Descriptor
      commentId: P:Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.Descriptor
      language: CSharp
      name:
        CSharp: Descriptor
        VB: Descriptor
      nameWithType:
        CSharp: SigninResponse.Descriptor
        VB: SigninResponse.Descriptor
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.Descriptor
        VB: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.Descriptor
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: Descriptor
        path: ''
        startLine: 13840
      syntax:
        content:
          CSharp: public static pbr.MessageDescriptor Descriptor { get; }
          VB: Public Shared ReadOnly Property Descriptor As pbr.MessageDescriptor
        parameters: []
        return:
          type: pbr.MessageDescriptor
      overload: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.Descriptor*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.#ctor
      commentId: M:Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.#ctor
      language: CSharp
      name:
        CSharp: SigninResponse()
        VB: SigninResponse()
      nameWithType:
        CSharp: SigninResponse.SigninResponse()
        VB: SigninResponse.SigninResponse()
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.SigninResponse()
        VB: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.SigninResponse()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: .ctor
        path: ''
        startLine: 13850
      syntax:
        content:
          CSharp: public SigninResponse()
          VB: Public Sub New
      overload: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.#ctor(Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse)
      commentId: M:Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.#ctor(Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse)
      language: CSharp
      name:
        CSharp: SigninResponse(SigninResponse)
        VB: SigninResponse(SigninResponse)
      nameWithType:
        CSharp: SigninResponse.SigninResponse(SigninResponse)
        VB: SigninResponse.SigninResponse(SigninResponse)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.SigninResponse(Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse)
        VB: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.SigninResponse(Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: .ctor
        path: ''
        startLine: 13857
      syntax:
        content:
          CSharp: public SigninResponse(SigninResponse other)
          VB: Public Sub New(other As SigninResponse)
        parameters:
        - id: other
          type: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse
      overload: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.Clone
      commentId: M:Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.Clone
      language: CSharp
      name:
        CSharp: Clone()
        VB: Clone()
      nameWithType:
        CSharp: SigninResponse.Clone()
        VB: SigninResponse.Clone()
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.Clone()
        VB: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.Clone()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: Clone
        path: ''
        startLine: 13863
      syntax:
        content:
          CSharp: public SigninResponse Clone()
          VB: Public Function Clone As SigninResponse
        return:
          type: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse
      overload: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.Clone*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.TokenFieldNumber
      commentId: F:Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.TokenFieldNumber
      language: CSharp
      name:
        CSharp: TokenFieldNumber
        VB: TokenFieldNumber
      nameWithType:
        CSharp: SigninResponse.TokenFieldNumber
        VB: SigninResponse.TokenFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.TokenFieldNumber
        VB: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.TokenFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: TokenFieldNumber
        path: ''
        startLine: 13869
      summary: Field number for the &quot;token&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int TokenFieldNumber = 1
          VB: Public Const TokenFieldNumber As Integer = 1
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.Token
      commentId: P:Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.Token
      language: CSharp
      name:
        CSharp: Token
        VB: Token
      nameWithType:
        CSharp: SigninResponse.Token
        VB: SigninResponse.Token
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.Token
        VB: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.Token
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: Token
        path: ''
        startLine: 13871
      syntax:
        content:
          CSharp: public string Token { get; set; }
          VB: Public Property Token As String
        parameters: []
        return:
          type: System.String
      overload: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.Token*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.Equals(System.Object)
      commentId: M:Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.Equals(System.Object)
      language: CSharp
      name:
        CSharp: Equals(Object)
        VB: Equals(Object)
      nameWithType:
        CSharp: SigninResponse.Equals(Object)
        VB: SigninResponse.Equals(Object)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.Equals(System.Object)
        VB: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.Equals(System.Object)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: Equals
        path: ''
        startLine: 13879
      syntax:
        content:
          CSharp: public override bool Equals(object other)
          VB: Public Overrides Function Equals(other As Object) As Boolean
        parameters:
        - id: other
          type: System.Object
        return:
          type: System.Boolean
      overload: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.Equals*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.Equals(Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse)
      commentId: M:Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.Equals(Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse)
      language: CSharp
      name:
        CSharp: Equals(SigninResponse)
        VB: Equals(SigninResponse)
      nameWithType:
        CSharp: SigninResponse.Equals(SigninResponse)
        VB: SigninResponse.Equals(SigninResponse)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.Equals(Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse)
        VB: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.Equals(Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: Equals
        path: ''
        startLine: 13884
      syntax:
        content:
          CSharp: public bool Equals(SigninResponse other)
          VB: Public Function Equals(other As SigninResponse) As Boolean
        parameters:
        - id: other
          type: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse
        return:
          type: System.Boolean
      overload: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.Equals*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.GetHashCode
      commentId: M:Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.GetHashCode
      language: CSharp
      name:
        CSharp: GetHashCode()
        VB: GetHashCode()
      nameWithType:
        CSharp: SigninResponse.GetHashCode()
        VB: SigninResponse.GetHashCode()
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.GetHashCode()
        VB: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.GetHashCode()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: GetHashCode
        path: ''
        startLine: 13896
      syntax:
        content:
          CSharp: public override int GetHashCode()
          VB: Public Overrides Function GetHashCode As Integer
        return:
          type: System.Int32
      overload: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.GetHashCode*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.ToString
      commentId: M:Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.ToString
      language: CSharp
      name:
        CSharp: ToString()
        VB: ToString()
      nameWithType:
        CSharp: SigninResponse.ToString()
        VB: SigninResponse.ToString()
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.ToString()
        VB: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.ToString()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: ToString
        path: ''
        startLine: 13906
      syntax:
        content:
          CSharp: public override string ToString()
          VB: Public Overrides Function ToString As String
        return:
          type: System.String
      overload: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.ToString*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.WriteTo(pb.CodedOutputStream)
      commentId: M:Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.WriteTo(pb.CodedOutputStream)
      language: CSharp
      name:
        CSharp: WriteTo(pb.CodedOutputStream)
        VB: WriteTo(pb.CodedOutputStream)
      nameWithType:
        CSharp: SigninResponse.WriteTo(pb.CodedOutputStream)
        VB: SigninResponse.WriteTo(pb.CodedOutputStream)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.WriteTo(pb.CodedOutputStream)
        VB: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.WriteTo(pb.CodedOutputStream)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: WriteTo
        path: ''
        startLine: 13911
      syntax:
        content:
          CSharp: public void WriteTo(pb.CodedOutputStream output)
          VB: Public Sub WriteTo(output As pb.CodedOutputStream)
        parameters:
        - id: output
          type: pb.CodedOutputStream
      overload: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.WriteTo*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.CalculateSize
      commentId: M:Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.CalculateSize
      language: CSharp
      name:
        CSharp: CalculateSize()
        VB: CalculateSize()
      nameWithType:
        CSharp: SigninResponse.CalculateSize()
        VB: SigninResponse.CalculateSize()
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.CalculateSize()
        VB: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.CalculateSize()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: CalculateSize
        path: ''
        startLine: 13922
      syntax:
        content:
          CSharp: public int CalculateSize()
          VB: Public Function CalculateSize As Integer
        return:
          type: System.Int32
      overload: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.CalculateSize*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.MergeFrom(Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse)
      commentId: M:Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.MergeFrom(Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse)
      language: CSharp
      name:
        CSharp: MergeFrom(SigninResponse)
        VB: MergeFrom(SigninResponse)
      nameWithType:
        CSharp: SigninResponse.MergeFrom(SigninResponse)
        VB: SigninResponse.MergeFrom(SigninResponse)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.MergeFrom(Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse)
        VB: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.MergeFrom(Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: MergeFrom
        path: ''
        startLine: 13934
      syntax:
        content:
          CSharp: public void MergeFrom(SigninResponse other)
          VB: Public Sub MergeFrom(other As SigninResponse)
        parameters:
        - id: other
          type: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse
      overload: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.MergeFrom*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.MergeFrom(pb.CodedInputStream)
      commentId: M:Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.MergeFrom(pb.CodedInputStream)
      language: CSharp
      name:
        CSharp: MergeFrom(pb.CodedInputStream)
        VB: MergeFrom(pb.CodedInputStream)
      nameWithType:
        CSharp: SigninResponse.MergeFrom(pb.CodedInputStream)
        VB: SigninResponse.MergeFrom(pb.CodedInputStream)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.MergeFrom(pb.CodedInputStream)
        VB: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.MergeFrom(pb.CodedInputStream)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: MergeFrom
        path: ''
        startLine: 13945
      syntax:
        content:
          CSharp: public void MergeFrom(pb.CodedInputStream input)
          VB: Public Sub MergeFrom(input As pb.CodedInputStream)
        parameters:
        - id: input
          type: pb.CodedInputStream
      overload: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.MergeFrom*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest
    commentId: T:Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest
    language: CSharp
    name:
      CSharp: PublicKeyRequest
      VB: PublicKeyRequest
    nameWithType:
      CSharp: PublicKeyRequest
      VB: PublicKeyRequest
    qualifiedName:
      CSharp: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest
      VB: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect.ProjectServer.Services.Authentication
    source:
      id: PublicKeyRequest
      path: ''
      startLine: 13963
    syntax:
      content:
        CSharp: 'public sealed class PublicKeyRequest : pb.IMessage<PublicKeyRequest>'
        VB: >-
          Public NotInheritable Class PublicKeyRequest

              Inherits pb.IMessage(Of PublicKeyRequest)
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - sealed
      - class
      VB:
      - Public
      - NotInheritable
      - Class
    items:
    - id: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.Parser
      commentId: P:Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.Parser
      language: CSharp
      name:
        CSharp: Parser
        VB: Parser
      nameWithType:
        CSharp: PublicKeyRequest.Parser
        VB: PublicKeyRequest.Parser
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.Parser
        VB: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.Parser
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: Parser
        path: ''
        startLine: 13966
      syntax:
        content:
          CSharp: public static pb.MessageParser<PublicKeyRequest> Parser { get; }
          VB: Public Shared ReadOnly Property Parser As pb.MessageParser(Of PublicKeyRequest)
        parameters: []
        return:
          type: pb.MessageParser{Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest}
      overload: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.Parser*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.Descriptor
      commentId: P:Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.Descriptor
      language: CSharp
      name:
        CSharp: Descriptor
        VB: Descriptor
      nameWithType:
        CSharp: PublicKeyRequest.Descriptor
        VB: PublicKeyRequest.Descriptor
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.Descriptor
        VB: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.Descriptor
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: Descriptor
        path: ''
        startLine: 13969
      syntax:
        content:
          CSharp: public static pbr.MessageDescriptor Descriptor { get; }
          VB: Public Shared ReadOnly Property Descriptor As pbr.MessageDescriptor
        parameters: []
        return:
          type: pbr.MessageDescriptor
      overload: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.Descriptor*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.#ctor
      commentId: M:Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.#ctor
      language: CSharp
      name:
        CSharp: PublicKeyRequest()
        VB: PublicKeyRequest()
      nameWithType:
        CSharp: PublicKeyRequest.PublicKeyRequest()
        VB: PublicKeyRequest.PublicKeyRequest()
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.PublicKeyRequest()
        VB: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.PublicKeyRequest()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: .ctor
        path: ''
        startLine: 13979
      syntax:
        content:
          CSharp: public PublicKeyRequest()
          VB: Public Sub New
      overload: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.#ctor(Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest)
      commentId: M:Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.#ctor(Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest)
      language: CSharp
      name:
        CSharp: PublicKeyRequest(PublicKeyRequest)
        VB: PublicKeyRequest(PublicKeyRequest)
      nameWithType:
        CSharp: PublicKeyRequest.PublicKeyRequest(PublicKeyRequest)
        VB: PublicKeyRequest.PublicKeyRequest(PublicKeyRequest)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.PublicKeyRequest(Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest)
        VB: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.PublicKeyRequest(Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: .ctor
        path: ''
        startLine: 13986
      syntax:
        content:
          CSharp: public PublicKeyRequest(PublicKeyRequest other)
          VB: Public Sub New(other As PublicKeyRequest)
        parameters:
        - id: other
          type: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest
      overload: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.Clone
      commentId: M:Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.Clone
      language: CSharp
      name:
        CSharp: Clone()
        VB: Clone()
      nameWithType:
        CSharp: PublicKeyRequest.Clone()
        VB: PublicKeyRequest.Clone()
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.Clone()
        VB: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.Clone()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: Clone
        path: ''
        startLine: 13992
      syntax:
        content:
          CSharp: public PublicKeyRequest Clone()
          VB: Public Function Clone As PublicKeyRequest
        return:
          type: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest
      overload: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.Clone*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.KidFieldNumber
      commentId: F:Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.KidFieldNumber
      language: CSharp
      name:
        CSharp: KidFieldNumber
        VB: KidFieldNumber
      nameWithType:
        CSharp: PublicKeyRequest.KidFieldNumber
        VB: PublicKeyRequest.KidFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.KidFieldNumber
        VB: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.KidFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: KidFieldNumber
        path: ''
        startLine: 13998
      summary: Field number for the &quot;kid&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int KidFieldNumber = 1
          VB: Public Const KidFieldNumber As Integer = 1
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.Kid
      commentId: P:Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.Kid
      language: CSharp
      name:
        CSharp: Kid
        VB: Kid
      nameWithType:
        CSharp: PublicKeyRequest.Kid
        VB: PublicKeyRequest.Kid
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.Kid
        VB: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.Kid
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: Kid
        path: ''
        startLine: 14000
      syntax:
        content:
          CSharp: public string Kid { get; set; }
          VB: Public Property Kid As String
        parameters: []
        return:
          type: System.String
      overload: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.Kid*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.Equals(System.Object)
      commentId: M:Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.Equals(System.Object)
      language: CSharp
      name:
        CSharp: Equals(Object)
        VB: Equals(Object)
      nameWithType:
        CSharp: PublicKeyRequest.Equals(Object)
        VB: PublicKeyRequest.Equals(Object)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.Equals(System.Object)
        VB: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.Equals(System.Object)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: Equals
        path: ''
        startLine: 14008
      syntax:
        content:
          CSharp: public override bool Equals(object other)
          VB: Public Overrides Function Equals(other As Object) As Boolean
        parameters:
        - id: other
          type: System.Object
        return:
          type: System.Boolean
      overload: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.Equals*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.Equals(Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest)
      commentId: M:Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.Equals(Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest)
      language: CSharp
      name:
        CSharp: Equals(PublicKeyRequest)
        VB: Equals(PublicKeyRequest)
      nameWithType:
        CSharp: PublicKeyRequest.Equals(PublicKeyRequest)
        VB: PublicKeyRequest.Equals(PublicKeyRequest)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.Equals(Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest)
        VB: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.Equals(Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: Equals
        path: ''
        startLine: 14013
      syntax:
        content:
          CSharp: public bool Equals(PublicKeyRequest other)
          VB: Public Function Equals(other As PublicKeyRequest) As Boolean
        parameters:
        - id: other
          type: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest
        return:
          type: System.Boolean
      overload: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.Equals*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.GetHashCode
      commentId: M:Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.GetHashCode
      language: CSharp
      name:
        CSharp: GetHashCode()
        VB: GetHashCode()
      nameWithType:
        CSharp: PublicKeyRequest.GetHashCode()
        VB: PublicKeyRequest.GetHashCode()
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.GetHashCode()
        VB: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.GetHashCode()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: GetHashCode
        path: ''
        startLine: 14025
      syntax:
        content:
          CSharp: public override int GetHashCode()
          VB: Public Overrides Function GetHashCode As Integer
        return:
          type: System.Int32
      overload: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.GetHashCode*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.ToString
      commentId: M:Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.ToString
      language: CSharp
      name:
        CSharp: ToString()
        VB: ToString()
      nameWithType:
        CSharp: PublicKeyRequest.ToString()
        VB: PublicKeyRequest.ToString()
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.ToString()
        VB: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.ToString()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: ToString
        path: ''
        startLine: 14035
      syntax:
        content:
          CSharp: public override string ToString()
          VB: Public Overrides Function ToString As String
        return:
          type: System.String
      overload: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.ToString*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.WriteTo(pb.CodedOutputStream)
      commentId: M:Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.WriteTo(pb.CodedOutputStream)
      language: CSharp
      name:
        CSharp: WriteTo(pb.CodedOutputStream)
        VB: WriteTo(pb.CodedOutputStream)
      nameWithType:
        CSharp: PublicKeyRequest.WriteTo(pb.CodedOutputStream)
        VB: PublicKeyRequest.WriteTo(pb.CodedOutputStream)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.WriteTo(pb.CodedOutputStream)
        VB: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.WriteTo(pb.CodedOutputStream)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: WriteTo
        path: ''
        startLine: 14040
      syntax:
        content:
          CSharp: public void WriteTo(pb.CodedOutputStream output)
          VB: Public Sub WriteTo(output As pb.CodedOutputStream)
        parameters:
        - id: output
          type: pb.CodedOutputStream
      overload: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.WriteTo*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.CalculateSize
      commentId: M:Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.CalculateSize
      language: CSharp
      name:
        CSharp: CalculateSize()
        VB: CalculateSize()
      nameWithType:
        CSharp: PublicKeyRequest.CalculateSize()
        VB: PublicKeyRequest.CalculateSize()
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.CalculateSize()
        VB: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.CalculateSize()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: CalculateSize
        path: ''
        startLine: 14051
      syntax:
        content:
          CSharp: public int CalculateSize()
          VB: Public Function CalculateSize As Integer
        return:
          type: System.Int32
      overload: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.CalculateSize*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.MergeFrom(Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest)
      commentId: M:Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.MergeFrom(Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest)
      language: CSharp
      name:
        CSharp: MergeFrom(PublicKeyRequest)
        VB: MergeFrom(PublicKeyRequest)
      nameWithType:
        CSharp: PublicKeyRequest.MergeFrom(PublicKeyRequest)
        VB: PublicKeyRequest.MergeFrom(PublicKeyRequest)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.MergeFrom(Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest)
        VB: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.MergeFrom(Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: MergeFrom
        path: ''
        startLine: 14063
      syntax:
        content:
          CSharp: public void MergeFrom(PublicKeyRequest other)
          VB: Public Sub MergeFrom(other As PublicKeyRequest)
        parameters:
        - id: other
          type: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest
      overload: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.MergeFrom*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.MergeFrom(pb.CodedInputStream)
      commentId: M:Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.MergeFrom(pb.CodedInputStream)
      language: CSharp
      name:
        CSharp: MergeFrom(pb.CodedInputStream)
        VB: MergeFrom(pb.CodedInputStream)
      nameWithType:
        CSharp: PublicKeyRequest.MergeFrom(pb.CodedInputStream)
        VB: PublicKeyRequest.MergeFrom(pb.CodedInputStream)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.MergeFrom(pb.CodedInputStream)
        VB: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.MergeFrom(pb.CodedInputStream)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: MergeFrom
        path: ''
        startLine: 14074
      syntax:
        content:
          CSharp: public void MergeFrom(pb.CodedInputStream input)
          VB: Public Sub MergeFrom(input As pb.CodedInputStream)
        parameters:
        - id: input
          type: pb.CodedInputStream
      overload: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.MergeFrom*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse
    commentId: T:Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse
    language: CSharp
    name:
      CSharp: PublicKeyResponse
      VB: PublicKeyResponse
    nameWithType:
      CSharp: PublicKeyResponse
      VB: PublicKeyResponse
    qualifiedName:
      CSharp: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse
      VB: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect.ProjectServer.Services.Authentication
    source:
      id: PublicKeyResponse
      path: ''
      startLine: 14092
    syntax:
      content:
        CSharp: 'public sealed class PublicKeyResponse : pb.IMessage<PublicKeyResponse>'
        VB: >-
          Public NotInheritable Class PublicKeyResponse

              Inherits pb.IMessage(Of PublicKeyResponse)
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - sealed
      - class
      VB:
      - Public
      - NotInheritable
      - Class
    items:
    - id: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.Parser
      commentId: P:Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.Parser
      language: CSharp
      name:
        CSharp: Parser
        VB: Parser
      nameWithType:
        CSharp: PublicKeyResponse.Parser
        VB: PublicKeyResponse.Parser
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.Parser
        VB: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.Parser
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: Parser
        path: ''
        startLine: 14095
      syntax:
        content:
          CSharp: public static pb.MessageParser<PublicKeyResponse> Parser { get; }
          VB: Public Shared ReadOnly Property Parser As pb.MessageParser(Of PublicKeyResponse)
        parameters: []
        return:
          type: pb.MessageParser{Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse}
      overload: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.Parser*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.Descriptor
      commentId: P:Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.Descriptor
      language: CSharp
      name:
        CSharp: Descriptor
        VB: Descriptor
      nameWithType:
        CSharp: PublicKeyResponse.Descriptor
        VB: PublicKeyResponse.Descriptor
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.Descriptor
        VB: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.Descriptor
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: Descriptor
        path: ''
        startLine: 14098
      syntax:
        content:
          CSharp: public static pbr.MessageDescriptor Descriptor { get; }
          VB: Public Shared ReadOnly Property Descriptor As pbr.MessageDescriptor
        parameters: []
        return:
          type: pbr.MessageDescriptor
      overload: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.Descriptor*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.#ctor
      commentId: M:Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.#ctor
      language: CSharp
      name:
        CSharp: PublicKeyResponse()
        VB: PublicKeyResponse()
      nameWithType:
        CSharp: PublicKeyResponse.PublicKeyResponse()
        VB: PublicKeyResponse.PublicKeyResponse()
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.PublicKeyResponse()
        VB: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.PublicKeyResponse()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: .ctor
        path: ''
        startLine: 14108
      syntax:
        content:
          CSharp: public PublicKeyResponse()
          VB: Public Sub New
      overload: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.#ctor(Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse)
      commentId: M:Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.#ctor(Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse)
      language: CSharp
      name:
        CSharp: PublicKeyResponse(PublicKeyResponse)
        VB: PublicKeyResponse(PublicKeyResponse)
      nameWithType:
        CSharp: PublicKeyResponse.PublicKeyResponse(PublicKeyResponse)
        VB: PublicKeyResponse.PublicKeyResponse(PublicKeyResponse)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.PublicKeyResponse(Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse)
        VB: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.PublicKeyResponse(Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: .ctor
        path: ''
        startLine: 14115
      syntax:
        content:
          CSharp: public PublicKeyResponse(PublicKeyResponse other)
          VB: Public Sub New(other As PublicKeyResponse)
        parameters:
        - id: other
          type: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse
      overload: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.Clone
      commentId: M:Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.Clone
      language: CSharp
      name:
        CSharp: Clone()
        VB: Clone()
      nameWithType:
        CSharp: PublicKeyResponse.Clone()
        VB: PublicKeyResponse.Clone()
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.Clone()
        VB: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.Clone()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: Clone
        path: ''
        startLine: 14122
      syntax:
        content:
          CSharp: public PublicKeyResponse Clone()
          VB: Public Function Clone As PublicKeyResponse
        return:
          type: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse
      overload: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.Clone*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.ModulusFieldNumber
      commentId: F:Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.ModulusFieldNumber
      language: CSharp
      name:
        CSharp: ModulusFieldNumber
        VB: ModulusFieldNumber
      nameWithType:
        CSharp: PublicKeyResponse.ModulusFieldNumber
        VB: PublicKeyResponse.ModulusFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.ModulusFieldNumber
        VB: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.ModulusFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: ModulusFieldNumber
        path: ''
        startLine: 14128
      summary: Field number for the &quot;modulus&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int ModulusFieldNumber = 1
          VB: Public Const ModulusFieldNumber As Integer = 1
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.Modulus
      commentId: P:Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.Modulus
      language: CSharp
      name:
        CSharp: Modulus
        VB: Modulus
      nameWithType:
        CSharp: PublicKeyResponse.Modulus
        VB: PublicKeyResponse.Modulus
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.Modulus
        VB: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.Modulus
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: Modulus
        path: ''
        startLine: 14130
      syntax:
        content:
          CSharp: public pb.ByteString Modulus { get; set; }
          VB: Public Property Modulus As pb.ByteString
        parameters: []
        return:
          type: pb.ByteString
      overload: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.Modulus*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.ExponentFieldNumber
      commentId: F:Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.ExponentFieldNumber
      language: CSharp
      name:
        CSharp: ExponentFieldNumber
        VB: ExponentFieldNumber
      nameWithType:
        CSharp: PublicKeyResponse.ExponentFieldNumber
        VB: PublicKeyResponse.ExponentFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.ExponentFieldNumber
        VB: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.ExponentFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: ExponentFieldNumber
        path: ''
        startLine: 14139
      summary: Field number for the &quot;exponent&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int ExponentFieldNumber = 2
          VB: Public Const ExponentFieldNumber As Integer = 2
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.Exponent
      commentId: P:Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.Exponent
      language: CSharp
      name:
        CSharp: Exponent
        VB: Exponent
      nameWithType:
        CSharp: PublicKeyResponse.Exponent
        VB: PublicKeyResponse.Exponent
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.Exponent
        VB: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.Exponent
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: Exponent
        path: ''
        startLine: 14141
      syntax:
        content:
          CSharp: public pb.ByteString Exponent { get; set; }
          VB: Public Property Exponent As pb.ByteString
        parameters: []
        return:
          type: pb.ByteString
      overload: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.Exponent*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.Equals(System.Object)
      commentId: M:Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.Equals(System.Object)
      language: CSharp
      name:
        CSharp: Equals(Object)
        VB: Equals(Object)
      nameWithType:
        CSharp: PublicKeyResponse.Equals(Object)
        VB: PublicKeyResponse.Equals(Object)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.Equals(System.Object)
        VB: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.Equals(System.Object)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: Equals
        path: ''
        startLine: 14149
      syntax:
        content:
          CSharp: public override bool Equals(object other)
          VB: Public Overrides Function Equals(other As Object) As Boolean
        parameters:
        - id: other
          type: System.Object
        return:
          type: System.Boolean
      overload: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.Equals*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.Equals(Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse)
      commentId: M:Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.Equals(Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse)
      language: CSharp
      name:
        CSharp: Equals(PublicKeyResponse)
        VB: Equals(PublicKeyResponse)
      nameWithType:
        CSharp: PublicKeyResponse.Equals(PublicKeyResponse)
        VB: PublicKeyResponse.Equals(PublicKeyResponse)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.Equals(Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse)
        VB: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.Equals(Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: Equals
        path: ''
        startLine: 14154
      syntax:
        content:
          CSharp: public bool Equals(PublicKeyResponse other)
          VB: Public Function Equals(other As PublicKeyResponse) As Boolean
        parameters:
        - id: other
          type: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse
        return:
          type: System.Boolean
      overload: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.Equals*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.GetHashCode
      commentId: M:Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.GetHashCode
      language: CSharp
      name:
        CSharp: GetHashCode()
        VB: GetHashCode()
      nameWithType:
        CSharp: PublicKeyResponse.GetHashCode()
        VB: PublicKeyResponse.GetHashCode()
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.GetHashCode()
        VB: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.GetHashCode()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: GetHashCode
        path: ''
        startLine: 14167
      syntax:
        content:
          CSharp: public override int GetHashCode()
          VB: Public Overrides Function GetHashCode As Integer
        return:
          type: System.Int32
      overload: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.GetHashCode*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.ToString
      commentId: M:Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.ToString
      language: CSharp
      name:
        CSharp: ToString()
        VB: ToString()
      nameWithType:
        CSharp: PublicKeyResponse.ToString()
        VB: PublicKeyResponse.ToString()
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.ToString()
        VB: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.ToString()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: ToString
        path: ''
        startLine: 14178
      syntax:
        content:
          CSharp: public override string ToString()
          VB: Public Overrides Function ToString As String
        return:
          type: System.String
      overload: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.ToString*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.WriteTo(pb.CodedOutputStream)
      commentId: M:Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.WriteTo(pb.CodedOutputStream)
      language: CSharp
      name:
        CSharp: WriteTo(pb.CodedOutputStream)
        VB: WriteTo(pb.CodedOutputStream)
      nameWithType:
        CSharp: PublicKeyResponse.WriteTo(pb.CodedOutputStream)
        VB: PublicKeyResponse.WriteTo(pb.CodedOutputStream)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.WriteTo(pb.CodedOutputStream)
        VB: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.WriteTo(pb.CodedOutputStream)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: WriteTo
        path: ''
        startLine: 14183
      syntax:
        content:
          CSharp: public void WriteTo(pb.CodedOutputStream output)
          VB: Public Sub WriteTo(output As pb.CodedOutputStream)
        parameters:
        - id: output
          type: pb.CodedOutputStream
      overload: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.WriteTo*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.CalculateSize
      commentId: M:Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.CalculateSize
      language: CSharp
      name:
        CSharp: CalculateSize()
        VB: CalculateSize()
      nameWithType:
        CSharp: PublicKeyResponse.CalculateSize()
        VB: PublicKeyResponse.CalculateSize()
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.CalculateSize()
        VB: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.CalculateSize()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: CalculateSize
        path: ''
        startLine: 14198
      syntax:
        content:
          CSharp: public int CalculateSize()
          VB: Public Function CalculateSize As Integer
        return:
          type: System.Int32
      overload: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.CalculateSize*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.MergeFrom(Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse)
      commentId: M:Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.MergeFrom(Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse)
      language: CSharp
      name:
        CSharp: MergeFrom(PublicKeyResponse)
        VB: MergeFrom(PublicKeyResponse)
      nameWithType:
        CSharp: PublicKeyResponse.MergeFrom(PublicKeyResponse)
        VB: PublicKeyResponse.MergeFrom(PublicKeyResponse)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.MergeFrom(Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse)
        VB: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.MergeFrom(Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: MergeFrom
        path: ''
        startLine: 14213
      syntax:
        content:
          CSharp: public void MergeFrom(PublicKeyResponse other)
          VB: Public Sub MergeFrom(other As PublicKeyResponse)
        parameters:
        - id: other
          type: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse
      overload: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.MergeFrom*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.MergeFrom(pb.CodedInputStream)
      commentId: M:Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.MergeFrom(pb.CodedInputStream)
      language: CSharp
      name:
        CSharp: MergeFrom(pb.CodedInputStream)
        VB: MergeFrom(pb.CodedInputStream)
      nameWithType:
        CSharp: PublicKeyResponse.MergeFrom(pb.CodedInputStream)
        VB: PublicKeyResponse.MergeFrom(pb.CodedInputStream)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.MergeFrom(pb.CodedInputStream)
        VB: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.MergeFrom(pb.CodedInputStream)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: MergeFrom
        path: ''
        startLine: 14227
      syntax:
        content:
          CSharp: public void MergeFrom(pb.CodedInputStream input)
          VB: Public Sub MergeFrom(input As pb.CodedInputStream)
        parameters:
        - id: input
          type: pb.CodedInputStream
      overload: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.MergeFrom*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest
    commentId: T:Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest
    language: CSharp
    name:
      CSharp: ProjectAccessTokenRequest
      VB: ProjectAccessTokenRequest
    nameWithType:
      CSharp: ProjectAccessTokenRequest
      VB: ProjectAccessTokenRequest
    qualifiedName:
      CSharp: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest
      VB: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect.ProjectServer.Services.Authentication
    source:
      id: ProjectAccessTokenRequest
      path: ''
      startLine: 14249
    syntax:
      content:
        CSharp: 'public sealed class ProjectAccessTokenRequest : pb.IMessage<ProjectAccessTokenRequest>'
        VB: >-
          Public NotInheritable Class ProjectAccessTokenRequest

              Inherits pb.IMessage(Of ProjectAccessTokenRequest)
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - sealed
      - class
      VB:
      - Public
      - NotInheritable
      - Class
    items:
    - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.Parser
      commentId: P:Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.Parser
      language: CSharp
      name:
        CSharp: Parser
        VB: Parser
      nameWithType:
        CSharp: ProjectAccessTokenRequest.Parser
        VB: ProjectAccessTokenRequest.Parser
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.Parser
        VB: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.Parser
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: Parser
        path: ''
        startLine: 14252
      syntax:
        content:
          CSharp: public static pb.MessageParser<ProjectAccessTokenRequest> Parser { get; }
          VB: Public Shared ReadOnly Property Parser As pb.MessageParser(Of ProjectAccessTokenRequest)
        parameters: []
        return:
          type: pb.MessageParser{Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest}
      overload: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.Parser*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.Descriptor
      commentId: P:Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.Descriptor
      language: CSharp
      name:
        CSharp: Descriptor
        VB: Descriptor
      nameWithType:
        CSharp: ProjectAccessTokenRequest.Descriptor
        VB: ProjectAccessTokenRequest.Descriptor
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.Descriptor
        VB: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.Descriptor
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: Descriptor
        path: ''
        startLine: 14255
      syntax:
        content:
          CSharp: public static pbr.MessageDescriptor Descriptor { get; }
          VB: Public Shared ReadOnly Property Descriptor As pbr.MessageDescriptor
        parameters: []
        return:
          type: pbr.MessageDescriptor
      overload: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.Descriptor*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.#ctor
      commentId: M:Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.#ctor
      language: CSharp
      name:
        CSharp: ProjectAccessTokenRequest()
        VB: ProjectAccessTokenRequest()
      nameWithType:
        CSharp: ProjectAccessTokenRequest.ProjectAccessTokenRequest()
        VB: ProjectAccessTokenRequest.ProjectAccessTokenRequest()
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.ProjectAccessTokenRequest()
        VB: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.ProjectAccessTokenRequest()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: .ctor
        path: ''
        startLine: 14265
      syntax:
        content:
          CSharp: public ProjectAccessTokenRequest()
          VB: Public Sub New
      overload: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.#ctor(Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest)
      commentId: M:Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.#ctor(Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest)
      language: CSharp
      name:
        CSharp: ProjectAccessTokenRequest(ProjectAccessTokenRequest)
        VB: ProjectAccessTokenRequest(ProjectAccessTokenRequest)
      nameWithType:
        CSharp: ProjectAccessTokenRequest.ProjectAccessTokenRequest(ProjectAccessTokenRequest)
        VB: ProjectAccessTokenRequest.ProjectAccessTokenRequest(ProjectAccessTokenRequest)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.ProjectAccessTokenRequest(Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest)
        VB: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.ProjectAccessTokenRequest(Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: .ctor
        path: ''
        startLine: 14272
      syntax:
        content:
          CSharp: public ProjectAccessTokenRequest(ProjectAccessTokenRequest other)
          VB: Public Sub New(other As ProjectAccessTokenRequest)
        parameters:
        - id: other
          type: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest
      overload: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.Clone
      commentId: M:Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.Clone
      language: CSharp
      name:
        CSharp: Clone()
        VB: Clone()
      nameWithType:
        CSharp: ProjectAccessTokenRequest.Clone()
        VB: ProjectAccessTokenRequest.Clone()
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.Clone()
        VB: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.Clone()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: Clone
        path: ''
        startLine: 14280
      syntax:
        content:
          CSharp: public ProjectAccessTokenRequest Clone()
          VB: Public Function Clone As ProjectAccessTokenRequest
        return:
          type: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest
      overload: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.Clone*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.ProjectIdFieldNumber
      commentId: F:Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.ProjectIdFieldNumber
      language: CSharp
      name:
        CSharp: ProjectIdFieldNumber
        VB: ProjectIdFieldNumber
      nameWithType:
        CSharp: ProjectAccessTokenRequest.ProjectIdFieldNumber
        VB: ProjectAccessTokenRequest.ProjectIdFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.ProjectIdFieldNumber
        VB: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.ProjectIdFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: ProjectIdFieldNumber
        path: ''
        startLine: 14286
      summary: Field number for the &quot;projectId&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int ProjectIdFieldNumber = 1
          VB: Public Const ProjectIdFieldNumber As Integer = 1
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.ProjectId
      commentId: P:Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.ProjectId
      language: CSharp
      name:
        CSharp: ProjectId
        VB: ProjectId
      nameWithType:
        CSharp: ProjectAccessTokenRequest.ProjectId
        VB: ProjectAccessTokenRequest.ProjectId
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.ProjectId
        VB: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.ProjectId
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: ProjectId
        path: ''
        startLine: 14288
      syntax:
        content:
          CSharp: public string ProjectId { get; set; }
          VB: Public Property ProjectId As String
        parameters: []
        return:
          type: System.String
      overload: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.ProjectId*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.HostAddressFieldNumber
      commentId: F:Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.HostAddressFieldNumber
      language: CSharp
      name:
        CSharp: HostAddressFieldNumber
        VB: HostAddressFieldNumber
      nameWithType:
        CSharp: ProjectAccessTokenRequest.HostAddressFieldNumber
        VB: ProjectAccessTokenRequest.HostAddressFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.HostAddressFieldNumber
        VB: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.HostAddressFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: HostAddressFieldNumber
        path: ''
        startLine: 14297
      summary: Field number for the &quot;hostAddress&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int HostAddressFieldNumber = 2
          VB: Public Const HostAddressFieldNumber As Integer = 2
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.HostAddress
      commentId: P:Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.HostAddress
      language: CSharp
      name:
        CSharp: HostAddress
        VB: HostAddress
      nameWithType:
        CSharp: ProjectAccessTokenRequest.HostAddress
        VB: ProjectAccessTokenRequest.HostAddress
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.HostAddress
        VB: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.HostAddress
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: HostAddress
        path: ''
        startLine: 14299
      syntax:
        content:
          CSharp: public string HostAddress { get; set; }
          VB: Public Property HostAddress As String
        parameters: []
        return:
          type: System.String
      overload: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.HostAddress*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.AccessTypeFieldNumber
      commentId: F:Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.AccessTypeFieldNumber
      language: CSharp
      name:
        CSharp: AccessTypeFieldNumber
        VB: AccessTypeFieldNumber
      nameWithType:
        CSharp: ProjectAccessTokenRequest.AccessTypeFieldNumber
        VB: ProjectAccessTokenRequest.AccessTypeFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.AccessTypeFieldNumber
        VB: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.AccessTypeFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: AccessTypeFieldNumber
        path: ''
        startLine: 14308
      summary: Field number for the &quot;accessType&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int AccessTypeFieldNumber = 3
          VB: Public Const AccessTypeFieldNumber As Integer = 3
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.AccessType
      commentId: P:Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.AccessType
      language: CSharp
      name:
        CSharp: AccessType
        VB: AccessType
      nameWithType:
        CSharp: ProjectAccessTokenRequest.AccessType
        VB: ProjectAccessTokenRequest.AccessType
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.AccessType
        VB: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.AccessType
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: AccessType
        path: ''
        startLine: 14310
      syntax:
        content:
          CSharp: public ProjectAccessType AccessType { get; set; }
          VB: Public Property AccessType As ProjectAccessType
        parameters: []
        return:
          type: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessType
      overload: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.AccessType*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.Equals(System.Object)
      commentId: M:Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.Equals(System.Object)
      language: CSharp
      name:
        CSharp: Equals(Object)
        VB: Equals(Object)
      nameWithType:
        CSharp: ProjectAccessTokenRequest.Equals(Object)
        VB: ProjectAccessTokenRequest.Equals(Object)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.Equals(System.Object)
        VB: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.Equals(System.Object)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: Equals
        path: ''
        startLine: 14318
      syntax:
        content:
          CSharp: public override bool Equals(object other)
          VB: Public Overrides Function Equals(other As Object) As Boolean
        parameters:
        - id: other
          type: System.Object
        return:
          type: System.Boolean
      overload: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.Equals*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.Equals(Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest)
      commentId: M:Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.Equals(Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest)
      language: CSharp
      name:
        CSharp: Equals(ProjectAccessTokenRequest)
        VB: Equals(ProjectAccessTokenRequest)
      nameWithType:
        CSharp: ProjectAccessTokenRequest.Equals(ProjectAccessTokenRequest)
        VB: ProjectAccessTokenRequest.Equals(ProjectAccessTokenRequest)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.Equals(Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest)
        VB: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.Equals(Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: Equals
        path: ''
        startLine: 14323
      syntax:
        content:
          CSharp: public bool Equals(ProjectAccessTokenRequest other)
          VB: Public Function Equals(other As ProjectAccessTokenRequest) As Boolean
        parameters:
        - id: other
          type: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest
        return:
          type: System.Boolean
      overload: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.Equals*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.GetHashCode
      commentId: M:Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.GetHashCode
      language: CSharp
      name:
        CSharp: GetHashCode()
        VB: GetHashCode()
      nameWithType:
        CSharp: ProjectAccessTokenRequest.GetHashCode()
        VB: ProjectAccessTokenRequest.GetHashCode()
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.GetHashCode()
        VB: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.GetHashCode()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: GetHashCode
        path: ''
        startLine: 14337
      syntax:
        content:
          CSharp: public override int GetHashCode()
          VB: Public Overrides Function GetHashCode As Integer
        return:
          type: System.Int32
      overload: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.GetHashCode*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.ToString
      commentId: M:Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.ToString
      language: CSharp
      name:
        CSharp: ToString()
        VB: ToString()
      nameWithType:
        CSharp: ProjectAccessTokenRequest.ToString()
        VB: ProjectAccessTokenRequest.ToString()
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.ToString()
        VB: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.ToString()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: ToString
        path: ''
        startLine: 14349
      syntax:
        content:
          CSharp: public override string ToString()
          VB: Public Overrides Function ToString As String
        return:
          type: System.String
      overload: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.ToString*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.WriteTo(pb.CodedOutputStream)
      commentId: M:Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.WriteTo(pb.CodedOutputStream)
      language: CSharp
      name:
        CSharp: WriteTo(pb.CodedOutputStream)
        VB: WriteTo(pb.CodedOutputStream)
      nameWithType:
        CSharp: ProjectAccessTokenRequest.WriteTo(pb.CodedOutputStream)
        VB: ProjectAccessTokenRequest.WriteTo(pb.CodedOutputStream)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.WriteTo(pb.CodedOutputStream)
        VB: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.WriteTo(pb.CodedOutputStream)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: WriteTo
        path: ''
        startLine: 14354
      syntax:
        content:
          CSharp: public void WriteTo(pb.CodedOutputStream output)
          VB: Public Sub WriteTo(output As pb.CodedOutputStream)
        parameters:
        - id: output
          type: pb.CodedOutputStream
      overload: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.WriteTo*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.CalculateSize
      commentId: M:Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.CalculateSize
      language: CSharp
      name:
        CSharp: CalculateSize()
        VB: CalculateSize()
      nameWithType:
        CSharp: ProjectAccessTokenRequest.CalculateSize()
        VB: ProjectAccessTokenRequest.CalculateSize()
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.CalculateSize()
        VB: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.CalculateSize()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: CalculateSize
        path: ''
        startLine: 14373
      syntax:
        content:
          CSharp: public int CalculateSize()
          VB: Public Function CalculateSize As Integer
        return:
          type: System.Int32
      overload: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.CalculateSize*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.MergeFrom(Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest)
      commentId: M:Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.MergeFrom(Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest)
      language: CSharp
      name:
        CSharp: MergeFrom(ProjectAccessTokenRequest)
        VB: MergeFrom(ProjectAccessTokenRequest)
      nameWithType:
        CSharp: ProjectAccessTokenRequest.MergeFrom(ProjectAccessTokenRequest)
        VB: ProjectAccessTokenRequest.MergeFrom(ProjectAccessTokenRequest)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.MergeFrom(Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest)
        VB: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.MergeFrom(Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: MergeFrom
        path: ''
        startLine: 14391
      syntax:
        content:
          CSharp: public void MergeFrom(ProjectAccessTokenRequest other)
          VB: Public Sub MergeFrom(other As ProjectAccessTokenRequest)
        parameters:
        - id: other
          type: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest
      overload: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.MergeFrom*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.MergeFrom(pb.CodedInputStream)
      commentId: M:Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.MergeFrom(pb.CodedInputStream)
      language: CSharp
      name:
        CSharp: MergeFrom(pb.CodedInputStream)
        VB: MergeFrom(pb.CodedInputStream)
      nameWithType:
        CSharp: ProjectAccessTokenRequest.MergeFrom(pb.CodedInputStream)
        VB: ProjectAccessTokenRequest.MergeFrom(pb.CodedInputStream)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.MergeFrom(pb.CodedInputStream)
        VB: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.MergeFrom(pb.CodedInputStream)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: MergeFrom
        path: ''
        startLine: 14408
      syntax:
        content:
          CSharp: public void MergeFrom(pb.CodedInputStream input)
          VB: Public Sub MergeFrom(input As pb.CodedInputStream)
        parameters:
        - id: input
          type: pb.CodedInputStream
      overload: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.MergeFrom*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse
    commentId: T:Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse
    language: CSharp
    name:
      CSharp: ProjectAccessTokenResponse
      VB: ProjectAccessTokenResponse
    nameWithType:
      CSharp: ProjectAccessTokenResponse
      VB: ProjectAccessTokenResponse
    qualifiedName:
      CSharp: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse
      VB: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect.ProjectServer.Services.Authentication
    source:
      id: ProjectAccessTokenResponse
      path: ''
      startLine: 14434
    syntax:
      content:
        CSharp: 'public sealed class ProjectAccessTokenResponse : pb.IMessage<ProjectAccessTokenResponse>'
        VB: >-
          Public NotInheritable Class ProjectAccessTokenResponse

              Inherits pb.IMessage(Of ProjectAccessTokenResponse)
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - sealed
      - class
      VB:
      - Public
      - NotInheritable
      - Class
    items:
    - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.Parser
      commentId: P:Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.Parser
      language: CSharp
      name:
        CSharp: Parser
        VB: Parser
      nameWithType:
        CSharp: ProjectAccessTokenResponse.Parser
        VB: ProjectAccessTokenResponse.Parser
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.Parser
        VB: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.Parser
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: Parser
        path: ''
        startLine: 14437
      syntax:
        content:
          CSharp: public static pb.MessageParser<ProjectAccessTokenResponse> Parser { get; }
          VB: Public Shared ReadOnly Property Parser As pb.MessageParser(Of ProjectAccessTokenResponse)
        parameters: []
        return:
          type: pb.MessageParser{Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse}
      overload: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.Parser*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.Descriptor
      commentId: P:Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.Descriptor
      language: CSharp
      name:
        CSharp: Descriptor
        VB: Descriptor
      nameWithType:
        CSharp: ProjectAccessTokenResponse.Descriptor
        VB: ProjectAccessTokenResponse.Descriptor
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.Descriptor
        VB: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.Descriptor
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: Descriptor
        path: ''
        startLine: 14440
      syntax:
        content:
          CSharp: public static pbr.MessageDescriptor Descriptor { get; }
          VB: Public Shared ReadOnly Property Descriptor As pbr.MessageDescriptor
        parameters: []
        return:
          type: pbr.MessageDescriptor
      overload: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.Descriptor*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.#ctor
      commentId: M:Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.#ctor
      language: CSharp
      name:
        CSharp: ProjectAccessTokenResponse()
        VB: ProjectAccessTokenResponse()
      nameWithType:
        CSharp: ProjectAccessTokenResponse.ProjectAccessTokenResponse()
        VB: ProjectAccessTokenResponse.ProjectAccessTokenResponse()
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.ProjectAccessTokenResponse()
        VB: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.ProjectAccessTokenResponse()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: .ctor
        path: ''
        startLine: 14450
      syntax:
        content:
          CSharp: public ProjectAccessTokenResponse()
          VB: Public Sub New
      overload: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.#ctor(Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse)
      commentId: M:Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.#ctor(Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse)
      language: CSharp
      name:
        CSharp: ProjectAccessTokenResponse(ProjectAccessTokenResponse)
        VB: ProjectAccessTokenResponse(ProjectAccessTokenResponse)
      nameWithType:
        CSharp: ProjectAccessTokenResponse.ProjectAccessTokenResponse(ProjectAccessTokenResponse)
        VB: ProjectAccessTokenResponse.ProjectAccessTokenResponse(ProjectAccessTokenResponse)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.ProjectAccessTokenResponse(Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse)
        VB: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.ProjectAccessTokenResponse(Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: .ctor
        path: ''
        startLine: 14457
      syntax:
        content:
          CSharp: public ProjectAccessTokenResponse(ProjectAccessTokenResponse other)
          VB: Public Sub New(other As ProjectAccessTokenResponse)
        parameters:
        - id: other
          type: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse
      overload: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.Clone
      commentId: M:Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.Clone
      language: CSharp
      name:
        CSharp: Clone()
        VB: Clone()
      nameWithType:
        CSharp: ProjectAccessTokenResponse.Clone()
        VB: ProjectAccessTokenResponse.Clone()
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.Clone()
        VB: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.Clone()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: Clone
        path: ''
        startLine: 14463
      syntax:
        content:
          CSharp: public ProjectAccessTokenResponse Clone()
          VB: Public Function Clone As ProjectAccessTokenResponse
        return:
          type: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse
      overload: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.Clone*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.TokenFieldNumber
      commentId: F:Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.TokenFieldNumber
      language: CSharp
      name:
        CSharp: TokenFieldNumber
        VB: TokenFieldNumber
      nameWithType:
        CSharp: ProjectAccessTokenResponse.TokenFieldNumber
        VB: ProjectAccessTokenResponse.TokenFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.TokenFieldNumber
        VB: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.TokenFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: TokenFieldNumber
        path: ''
        startLine: 14469
      summary: Field number for the &quot;token&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int TokenFieldNumber = 1
          VB: Public Const TokenFieldNumber As Integer = 1
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.Token
      commentId: P:Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.Token
      language: CSharp
      name:
        CSharp: Token
        VB: Token
      nameWithType:
        CSharp: ProjectAccessTokenResponse.Token
        VB: ProjectAccessTokenResponse.Token
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.Token
        VB: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.Token
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: Token
        path: ''
        startLine: 14471
      syntax:
        content:
          CSharp: public string Token { get; set; }
          VB: Public Property Token As String
        parameters: []
        return:
          type: System.String
      overload: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.Token*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.Equals(System.Object)
      commentId: M:Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.Equals(System.Object)
      language: CSharp
      name:
        CSharp: Equals(Object)
        VB: Equals(Object)
      nameWithType:
        CSharp: ProjectAccessTokenResponse.Equals(Object)
        VB: ProjectAccessTokenResponse.Equals(Object)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.Equals(System.Object)
        VB: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.Equals(System.Object)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: Equals
        path: ''
        startLine: 14479
      syntax:
        content:
          CSharp: public override bool Equals(object other)
          VB: Public Overrides Function Equals(other As Object) As Boolean
        parameters:
        - id: other
          type: System.Object
        return:
          type: System.Boolean
      overload: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.Equals*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.Equals(Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse)
      commentId: M:Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.Equals(Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse)
      language: CSharp
      name:
        CSharp: Equals(ProjectAccessTokenResponse)
        VB: Equals(ProjectAccessTokenResponse)
      nameWithType:
        CSharp: ProjectAccessTokenResponse.Equals(ProjectAccessTokenResponse)
        VB: ProjectAccessTokenResponse.Equals(ProjectAccessTokenResponse)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.Equals(Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse)
        VB: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.Equals(Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: Equals
        path: ''
        startLine: 14484
      syntax:
        content:
          CSharp: public bool Equals(ProjectAccessTokenResponse other)
          VB: Public Function Equals(other As ProjectAccessTokenResponse) As Boolean
        parameters:
        - id: other
          type: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse
        return:
          type: System.Boolean
      overload: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.Equals*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.GetHashCode
      commentId: M:Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.GetHashCode
      language: CSharp
      name:
        CSharp: GetHashCode()
        VB: GetHashCode()
      nameWithType:
        CSharp: ProjectAccessTokenResponse.GetHashCode()
        VB: ProjectAccessTokenResponse.GetHashCode()
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.GetHashCode()
        VB: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.GetHashCode()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: GetHashCode
        path: ''
        startLine: 14496
      syntax:
        content:
          CSharp: public override int GetHashCode()
          VB: Public Overrides Function GetHashCode As Integer
        return:
          type: System.Int32
      overload: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.GetHashCode*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.ToString
      commentId: M:Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.ToString
      language: CSharp
      name:
        CSharp: ToString()
        VB: ToString()
      nameWithType:
        CSharp: ProjectAccessTokenResponse.ToString()
        VB: ProjectAccessTokenResponse.ToString()
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.ToString()
        VB: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.ToString()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: ToString
        path: ''
        startLine: 14506
      syntax:
        content:
          CSharp: public override string ToString()
          VB: Public Overrides Function ToString As String
        return:
          type: System.String
      overload: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.ToString*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.WriteTo(pb.CodedOutputStream)
      commentId: M:Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.WriteTo(pb.CodedOutputStream)
      language: CSharp
      name:
        CSharp: WriteTo(pb.CodedOutputStream)
        VB: WriteTo(pb.CodedOutputStream)
      nameWithType:
        CSharp: ProjectAccessTokenResponse.WriteTo(pb.CodedOutputStream)
        VB: ProjectAccessTokenResponse.WriteTo(pb.CodedOutputStream)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.WriteTo(pb.CodedOutputStream)
        VB: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.WriteTo(pb.CodedOutputStream)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: WriteTo
        path: ''
        startLine: 14511
      syntax:
        content:
          CSharp: public void WriteTo(pb.CodedOutputStream output)
          VB: Public Sub WriteTo(output As pb.CodedOutputStream)
        parameters:
        - id: output
          type: pb.CodedOutputStream
      overload: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.WriteTo*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.CalculateSize
      commentId: M:Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.CalculateSize
      language: CSharp
      name:
        CSharp: CalculateSize()
        VB: CalculateSize()
      nameWithType:
        CSharp: ProjectAccessTokenResponse.CalculateSize()
        VB: ProjectAccessTokenResponse.CalculateSize()
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.CalculateSize()
        VB: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.CalculateSize()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: CalculateSize
        path: ''
        startLine: 14522
      syntax:
        content:
          CSharp: public int CalculateSize()
          VB: Public Function CalculateSize As Integer
        return:
          type: System.Int32
      overload: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.CalculateSize*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.MergeFrom(Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse)
      commentId: M:Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.MergeFrom(Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse)
      language: CSharp
      name:
        CSharp: MergeFrom(ProjectAccessTokenResponse)
        VB: MergeFrom(ProjectAccessTokenResponse)
      nameWithType:
        CSharp: ProjectAccessTokenResponse.MergeFrom(ProjectAccessTokenResponse)
        VB: ProjectAccessTokenResponse.MergeFrom(ProjectAccessTokenResponse)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.MergeFrom(Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse)
        VB: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.MergeFrom(Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: MergeFrom
        path: ''
        startLine: 14534
      syntax:
        content:
          CSharp: public void MergeFrom(ProjectAccessTokenResponse other)
          VB: Public Sub MergeFrom(other As ProjectAccessTokenResponse)
        parameters:
        - id: other
          type: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse
      overload: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.MergeFrom*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.MergeFrom(pb.CodedInputStream)
      commentId: M:Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.MergeFrom(pb.CodedInputStream)
      language: CSharp
      name:
        CSharp: MergeFrom(pb.CodedInputStream)
        VB: MergeFrom(pb.CodedInputStream)
      nameWithType:
        CSharp: ProjectAccessTokenResponse.MergeFrom(pb.CodedInputStream)
        VB: ProjectAccessTokenResponse.MergeFrom(pb.CodedInputStream)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.MergeFrom(pb.CodedInputStream)
        VB: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.MergeFrom(pb.CodedInputStream)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: MergeFrom
        path: ''
        startLine: 14545
      syntax:
        content:
          CSharp: public void MergeFrom(pb.CodedInputStream input)
          VB: Public Sub MergeFrom(input As pb.CodedInputStream)
        parameters:
        - id: input
          type: pb.CodedInputStream
      overload: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.MergeFrom*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService
    commentId: T:Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService
    language: CSharp
    name:
      CSharp: AuthenticationService
      VB: AuthenticationService
    nameWithType:
      CSharp: AuthenticationService
      VB: AuthenticationService
    qualifiedName:
      CSharp: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService
      VB: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect.ProjectServer.Services.Authentication
    source:
      id: AuthenticationService
      path: ''
      startLine: 14582
    summary: "\nThis service can be called anonymously\n"
    example: []
    syntax:
      content:
        CSharp: public static class AuthenticationService
        VB: Public Module AuthenticationService
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.Descriptor
      commentId: P:Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.Descriptor
      language: CSharp
      name:
        CSharp: Descriptor
        VB: Descriptor
      nameWithType:
        CSharp: AuthenticationService.Descriptor
        VB: AuthenticationService.Descriptor
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.Descriptor
        VB: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.Descriptor
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: Descriptor
        path: ''
        startLine: 14615
      summary: Service descriptor
      example: []
      syntax:
        content:
          CSharp: public static Google.Protobuf.Reflection.ServiceDescriptor Descriptor { get; }
          VB: Public Shared ReadOnly Property Descriptor As Google.Protobuf.Reflection.ServiceDescriptor
        parameters: []
        return:
          type: Google.Protobuf.Reflection.ServiceDescriptor
      overload: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.Descriptor*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.BindService(Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceBase)
      commentId: M:Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.BindService(Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceBase)
      language: CSharp
      name:
        CSharp: BindService(AuthenticationService.AuthenticationServiceBase)
        VB: BindService(AuthenticationService.AuthenticationServiceBase)
      nameWithType:
        CSharp: AuthenticationService.BindService(AuthenticationService.AuthenticationServiceBase)
        VB: AuthenticationService.BindService(AuthenticationService.AuthenticationServiceBase)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.BindService(Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceBase)
        VB: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.BindService(Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceBase)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: BindService
        path: ''
        startLine: 14721
      summary: Creates service definition that can be registered with a server
      example: []
      syntax:
        content:
          CSharp: public static grpc.ServerServiceDefinition BindService(AuthenticationService.AuthenticationServiceBase serviceImpl)
          VB: Public Shared Function BindService(serviceImpl As AuthenticationService.AuthenticationServiceBase) As grpc.ServerServiceDefinition
        parameters:
        - id: serviceImpl
          type: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceBase
          description: An object implementing the server-side handling logic.
        return:
          type: grpc.ServerServiceDefinition
      overload: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.BindService*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.BindService(grpc.ServiceBinderBase,Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceBase)
      commentId: M:Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.BindService(grpc.ServiceBinderBase,Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceBase)
      language: CSharp
      name:
        CSharp: BindService(grpc.ServiceBinderBase, AuthenticationService.AuthenticationServiceBase)
        VB: BindService(grpc.ServiceBinderBase, AuthenticationService.AuthenticationServiceBase)
      nameWithType:
        CSharp: AuthenticationService.BindService(grpc.ServiceBinderBase, AuthenticationService.AuthenticationServiceBase)
        VB: AuthenticationService.BindService(grpc.ServiceBinderBase, AuthenticationService.AuthenticationServiceBase)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.BindService(grpc.ServiceBinderBase, Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceBase)
        VB: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.BindService(grpc.ServiceBinderBase, Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceBase)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: BindService
        path: ''
        startLine: 14733
      summary: >-
        Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.

        Note: this method is part of an experimental API that can change or be removed without any prior notice.
      example: []
      syntax:
        content:
          CSharp: public static void BindService(grpc.ServiceBinderBase serviceBinder, AuthenticationService.AuthenticationServiceBase serviceImpl)
          VB: Public Shared Sub BindService(serviceBinder As grpc.ServiceBinderBase, serviceImpl As AuthenticationService.AuthenticationServiceBase)
        parameters:
        - id: serviceBinder
          type: grpc.ServiceBinderBase
          description: Service methods will be bound by calling <code>AddMethod</code> on this object.
        - id: serviceImpl
          type: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceBase
          description: An object implementing the server-side handling logic.
      overload: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.BindService*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceBase
    commentId: T:Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceBase
    language: CSharp
    name:
      CSharp: AuthenticationService.AuthenticationServiceBase
      VB: AuthenticationService.AuthenticationServiceBase
    nameWithType:
      CSharp: AuthenticationService.AuthenticationServiceBase
      VB: AuthenticationService.AuthenticationServiceBase
    qualifiedName:
      CSharp: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceBase
      VB: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceBase
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect.ProjectServer.Services.Authentication
    source:
      id: AuthenticationServiceBase
      path: ''
      startLine: 14621
    summary: Base class for server-side implementations of AuthenticationService
    example: []
    syntax:
      content:
        CSharp: public abstract class AuthenticationServiceBase
        VB: Public MustInherit Class AuthenticationServiceBase
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items:
    - id: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceBase.Signin(Unity.Reflect.ProjectServer.Services.Empty,grpc.ServerCallContext)
      commentId: M:Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceBase.Signin(Unity.Reflect.ProjectServer.Services.Empty,grpc.ServerCallContext)
      language: CSharp
      name:
        CSharp: Signin(Empty, grpc.ServerCallContext)
        VB: Signin(Empty, grpc.ServerCallContext)
      nameWithType:
        CSharp: AuthenticationService.AuthenticationServiceBase.Signin(Empty, grpc.ServerCallContext)
        VB: AuthenticationService.AuthenticationServiceBase.Signin(Empty, grpc.ServerCallContext)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceBase.Signin(Unity.Reflect.ProjectServer.Services.Empty, grpc.ServerCallContext)
        VB: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceBase.Signin(Unity.Reflect.ProjectServer.Services.Empty, grpc.ServerCallContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: Signin
        path: ''
        startLine: 14624
      syntax:
        content:
          CSharp: public virtual Task<SigninResponse> Signin(Empty request, grpc.ServerCallContext context)
          VB: Public Overridable Function Signin(request As Empty, context As grpc.ServerCallContext) As Task(Of SigninResponse)
        parameters:
        - id: request
          type: Unity.Reflect.ProjectServer.Services.Empty
        - id: context
          type: grpc.ServerCallContext
        return:
          type: System.Threading.Tasks.Task{Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse}
      overload: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceBase.Signin*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceBase.GetPublicKey(Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest,grpc.ServerCallContext)
      commentId: M:Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceBase.GetPublicKey(Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest,grpc.ServerCallContext)
      language: CSharp
      name:
        CSharp: GetPublicKey(PublicKeyRequest, grpc.ServerCallContext)
        VB: GetPublicKey(PublicKeyRequest, grpc.ServerCallContext)
      nameWithType:
        CSharp: AuthenticationService.AuthenticationServiceBase.GetPublicKey(PublicKeyRequest, grpc.ServerCallContext)
        VB: AuthenticationService.AuthenticationServiceBase.GetPublicKey(PublicKeyRequest, grpc.ServerCallContext)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceBase.GetPublicKey(Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest, grpc.ServerCallContext)
        VB: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceBase.GetPublicKey(Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest, grpc.ServerCallContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: GetPublicKey
        path: ''
        startLine: 14629
      syntax:
        content:
          CSharp: public virtual Task<PublicKeyResponse> GetPublicKey(PublicKeyRequest request, grpc.ServerCallContext context)
          VB: Public Overridable Function GetPublicKey(request As PublicKeyRequest, context As grpc.ServerCallContext) As Task(Of PublicKeyResponse)
        parameters:
        - id: request
          type: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest
        - id: context
          type: grpc.ServerCallContext
        return:
          type: System.Threading.Tasks.Task{Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse}
      overload: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceBase.GetPublicKey*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceBase.GetProjectAccessToken(Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest,grpc.ServerCallContext)
      commentId: M:Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceBase.GetProjectAccessToken(Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest,grpc.ServerCallContext)
      language: CSharp
      name:
        CSharp: GetProjectAccessToken(ProjectAccessTokenRequest, grpc.ServerCallContext)
        VB: GetProjectAccessToken(ProjectAccessTokenRequest, grpc.ServerCallContext)
      nameWithType:
        CSharp: AuthenticationService.AuthenticationServiceBase.GetProjectAccessToken(ProjectAccessTokenRequest, grpc.ServerCallContext)
        VB: AuthenticationService.AuthenticationServiceBase.GetProjectAccessToken(ProjectAccessTokenRequest, grpc.ServerCallContext)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceBase.GetProjectAccessToken(Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest, grpc.ServerCallContext)
        VB: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceBase.GetProjectAccessToken(Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest, grpc.ServerCallContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: GetProjectAccessToken
        path: ''
        startLine: 14634
      syntax:
        content:
          CSharp: public virtual Task<ProjectAccessTokenResponse> GetProjectAccessToken(ProjectAccessTokenRequest request, grpc.ServerCallContext context)
          VB: Public Overridable Function GetProjectAccessToken(request As ProjectAccessTokenRequest, context As grpc.ServerCallContext) As Task(Of ProjectAccessTokenResponse)
        parameters:
        - id: request
          type: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest
        - id: context
          type: grpc.ServerCallContext
        return:
          type: System.Threading.Tasks.Task{Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse}
      overload: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceBase.GetProjectAccessToken*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
  - id: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient
    commentId: T:Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient
    language: CSharp
    name:
      CSharp: AuthenticationService.AuthenticationServiceClient
      VB: AuthenticationService.AuthenticationServiceClient
    nameWithType:
      CSharp: AuthenticationService.AuthenticationServiceClient
      VB: AuthenticationService.AuthenticationServiceClient
    qualifiedName:
      CSharp: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient
      VB: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect.ProjectServer.Services.Authentication
    source:
      id: AuthenticationServiceClient
      path: ''
      startLine: 14642
    summary: Client for AuthenticationService
    example: []
    syntax:
      content:
        CSharp: 'public class AuthenticationServiceClient : grpc.ClientBase<AuthenticationService.AuthenticationServiceClient>'
        VB: >-
          Public Class AuthenticationServiceClient

              Inherits grpc.ClientBase(Of AuthenticationService.AuthenticationServiceClient)
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.#ctor(grpc.Channel)
      commentId: M:Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.#ctor(grpc.Channel)
      language: CSharp
      name:
        CSharp: AuthenticationServiceClient(grpc.Channel)
        VB: AuthenticationServiceClient(grpc.Channel)
      nameWithType:
        CSharp: AuthenticationService.AuthenticationServiceClient.AuthenticationServiceClient(grpc.Channel)
        VB: AuthenticationService.AuthenticationServiceClient.AuthenticationServiceClient(grpc.Channel)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.AuthenticationServiceClient(grpc.Channel)
        VB: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.AuthenticationServiceClient(grpc.Channel)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: .ctor
        path: ''
        startLine: 14646
      summary: Creates a new client for AuthenticationService
      example: []
      syntax:
        content:
          CSharp: public AuthenticationServiceClient(grpc.Channel channel)
          VB: Public Sub New(channel As grpc.Channel)
        parameters:
        - id: channel
          type: grpc.Channel
          description: The channel to use to make remote calls.
      overload: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.#ctor(grpc.CallInvoker)
      commentId: M:Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.#ctor(grpc.CallInvoker)
      language: CSharp
      name:
        CSharp: AuthenticationServiceClient(grpc.CallInvoker)
        VB: AuthenticationServiceClient(grpc.CallInvoker)
      nameWithType:
        CSharp: AuthenticationService.AuthenticationServiceClient.AuthenticationServiceClient(grpc.CallInvoker)
        VB: AuthenticationService.AuthenticationServiceClient.AuthenticationServiceClient(grpc.CallInvoker)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.AuthenticationServiceClient(grpc.CallInvoker)
        VB: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.AuthenticationServiceClient(grpc.CallInvoker)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: .ctor
        path: ''
        startLine: 14651
      summary: Creates a new client for AuthenticationService that uses a custom <code>CallInvoker</code>.
      example: []
      syntax:
        content:
          CSharp: public AuthenticationServiceClient(grpc.CallInvoker callInvoker)
          VB: Public Sub New(callInvoker As grpc.CallInvoker)
        parameters:
        - id: callInvoker
          type: grpc.CallInvoker
          description: The callInvoker to use to make remote calls.
      overload: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.#ctor
      commentId: M:Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.#ctor
      language: CSharp
      name:
        CSharp: AuthenticationServiceClient()
        VB: AuthenticationServiceClient()
      nameWithType:
        CSharp: AuthenticationService.AuthenticationServiceClient.AuthenticationServiceClient()
        VB: AuthenticationService.AuthenticationServiceClient.AuthenticationServiceClient()
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.AuthenticationServiceClient()
        VB: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.AuthenticationServiceClient()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: .ctor
        path: ''
        startLine: 14655
      summary: Protected parameterless constructor to allow creation of test doubles.
      example: []
      syntax:
        content:
          CSharp: protected AuthenticationServiceClient()
          VB: Protected Sub New
      overload: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.#ctor*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.#ctor(ClientBaseConfiguration)
      commentId: M:Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.#ctor(ClientBaseConfiguration)
      language: CSharp
      name:
        CSharp: AuthenticationServiceClient(ClientBaseConfiguration)
        VB: AuthenticationServiceClient(ClientBaseConfiguration)
      nameWithType:
        CSharp: AuthenticationService.AuthenticationServiceClient.AuthenticationServiceClient(ClientBaseConfiguration)
        VB: AuthenticationService.AuthenticationServiceClient.AuthenticationServiceClient(ClientBaseConfiguration)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.AuthenticationServiceClient(ClientBaseConfiguration)
        VB: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.AuthenticationServiceClient(ClientBaseConfiguration)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: .ctor
        path: ''
        startLine: 14660
      summary: Protected constructor to allow creation of configured clients.
      example: []
      syntax:
        content:
          CSharp: protected AuthenticationServiceClient(ClientBaseConfiguration configuration)
          VB: Protected Sub New(configuration As ClientBaseConfiguration)
        parameters:
        - id: configuration
          type: ClientBaseConfiguration
          description: The client configuration.
      overload: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.#ctor*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.Signin(Unity.Reflect.ProjectServer.Services.Empty,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
      commentId: M:Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.Signin(Unity.Reflect.ProjectServer.Services.Empty,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
      language: CSharp
      name:
        CSharp: Signin(Empty, grpc.Metadata, Nullable<DateTime>, CancellationToken)
        VB: Signin(Empty, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
      nameWithType:
        CSharp: AuthenticationService.AuthenticationServiceClient.Signin(Empty, grpc.Metadata, Nullable<DateTime>, CancellationToken)
        VB: AuthenticationService.AuthenticationServiceClient.Signin(Empty, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.Signin(Unity.Reflect.ProjectServer.Services.Empty, grpc.Metadata, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
        VB: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.Signin(Unity.Reflect.ProjectServer.Services.Empty, grpc.Metadata, System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: Signin
        path: ''
        startLine: 14664
      syntax:
        content:
          CSharp: public virtual SigninResponse Signin(Empty request, grpc.Metadata headers = null, DateTime? deadline = default(DateTime? ), CancellationToken cancellationToken = default(CancellationToken))
          VB: Public Overridable Function Signin(request As Empty, headers As grpc.Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As SigninResponse
        parameters:
        - id: request
          type: Unity.Reflect.ProjectServer.Services.Empty
        - id: headers
          type: grpc.Metadata
        - id: deadline
          type: System.Nullable{System.DateTime}
        - id: cancellationToken
          type: System.Threading.CancellationToken
        return:
          type: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse
      overload: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.Signin*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.Signin(Unity.Reflect.ProjectServer.Services.Empty,grpc.CallOptions)
      commentId: M:Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.Signin(Unity.Reflect.ProjectServer.Services.Empty,grpc.CallOptions)
      language: CSharp
      name:
        CSharp: Signin(Empty, grpc.CallOptions)
        VB: Signin(Empty, grpc.CallOptions)
      nameWithType:
        CSharp: AuthenticationService.AuthenticationServiceClient.Signin(Empty, grpc.CallOptions)
        VB: AuthenticationService.AuthenticationServiceClient.Signin(Empty, grpc.CallOptions)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.Signin(Unity.Reflect.ProjectServer.Services.Empty, grpc.CallOptions)
        VB: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.Signin(Unity.Reflect.ProjectServer.Services.Empty, grpc.CallOptions)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: Signin
        path: ''
        startLine: 14668
      syntax:
        content:
          CSharp: public virtual SigninResponse Signin(Empty request, grpc.CallOptions options)
          VB: Public Overridable Function Signin(request As Empty, options As grpc.CallOptions) As SigninResponse
        parameters:
        - id: request
          type: Unity.Reflect.ProjectServer.Services.Empty
        - id: options
          type: grpc.CallOptions
        return:
          type: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse
      overload: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.Signin*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.SigninAsync(Unity.Reflect.ProjectServer.Services.Empty,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
      commentId: M:Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.SigninAsync(Unity.Reflect.ProjectServer.Services.Empty,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
      language: CSharp
      name:
        CSharp: SigninAsync(Empty, grpc.Metadata, Nullable<DateTime>, CancellationToken)
        VB: SigninAsync(Empty, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
      nameWithType:
        CSharp: AuthenticationService.AuthenticationServiceClient.SigninAsync(Empty, grpc.Metadata, Nullable<DateTime>, CancellationToken)
        VB: AuthenticationService.AuthenticationServiceClient.SigninAsync(Empty, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.SigninAsync(Unity.Reflect.ProjectServer.Services.Empty, grpc.Metadata, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
        VB: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.SigninAsync(Unity.Reflect.ProjectServer.Services.Empty, grpc.Metadata, System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: SigninAsync
        path: ''
        startLine: 14672
      syntax:
        content:
          CSharp: public virtual grpc.AsyncUnaryCall<SigninResponse> SigninAsync(Empty request, grpc.Metadata headers = null, DateTime? deadline = default(DateTime? ), CancellationToken cancellationToken = default(CancellationToken))
          VB: Public Overridable Function SigninAsync(request As Empty, headers As grpc.Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As grpc.AsyncUnaryCall(Of SigninResponse)
        parameters:
        - id: request
          type: Unity.Reflect.ProjectServer.Services.Empty
        - id: headers
          type: grpc.Metadata
        - id: deadline
          type: System.Nullable{System.DateTime}
        - id: cancellationToken
          type: System.Threading.CancellationToken
        return:
          type: grpc.AsyncUnaryCall{Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse}
      overload: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.SigninAsync*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.SigninAsync(Unity.Reflect.ProjectServer.Services.Empty,grpc.CallOptions)
      commentId: M:Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.SigninAsync(Unity.Reflect.ProjectServer.Services.Empty,grpc.CallOptions)
      language: CSharp
      name:
        CSharp: SigninAsync(Empty, grpc.CallOptions)
        VB: SigninAsync(Empty, grpc.CallOptions)
      nameWithType:
        CSharp: AuthenticationService.AuthenticationServiceClient.SigninAsync(Empty, grpc.CallOptions)
        VB: AuthenticationService.AuthenticationServiceClient.SigninAsync(Empty, grpc.CallOptions)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.SigninAsync(Unity.Reflect.ProjectServer.Services.Empty, grpc.CallOptions)
        VB: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.SigninAsync(Unity.Reflect.ProjectServer.Services.Empty, grpc.CallOptions)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: SigninAsync
        path: ''
        startLine: 14676
      syntax:
        content:
          CSharp: public virtual grpc.AsyncUnaryCall<SigninResponse> SigninAsync(Empty request, grpc.CallOptions options)
          VB: Public Overridable Function SigninAsync(request As Empty, options As grpc.CallOptions) As grpc.AsyncUnaryCall(Of SigninResponse)
        parameters:
        - id: request
          type: Unity.Reflect.ProjectServer.Services.Empty
        - id: options
          type: grpc.CallOptions
        return:
          type: grpc.AsyncUnaryCall{Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse}
      overload: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.SigninAsync*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.GetPublicKey(Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
      commentId: M:Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.GetPublicKey(Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
      language: CSharp
      name:
        CSharp: GetPublicKey(PublicKeyRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
        VB: GetPublicKey(PublicKeyRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
      nameWithType:
        CSharp: AuthenticationService.AuthenticationServiceClient.GetPublicKey(PublicKeyRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
        VB: AuthenticationService.AuthenticationServiceClient.GetPublicKey(PublicKeyRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.GetPublicKey(Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest, grpc.Metadata, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
        VB: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.GetPublicKey(Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest, grpc.Metadata, System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: GetPublicKey
        path: ''
        startLine: 14680
      syntax:
        content:
          CSharp: public virtual PublicKeyResponse GetPublicKey(PublicKeyRequest request, grpc.Metadata headers = null, DateTime? deadline = default(DateTime? ), CancellationToken cancellationToken = default(CancellationToken))
          VB: Public Overridable Function GetPublicKey(request As PublicKeyRequest, headers As grpc.Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As PublicKeyResponse
        parameters:
        - id: request
          type: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest
        - id: headers
          type: grpc.Metadata
        - id: deadline
          type: System.Nullable{System.DateTime}
        - id: cancellationToken
          type: System.Threading.CancellationToken
        return:
          type: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse
      overload: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.GetPublicKey*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.GetPublicKey(Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest,grpc.CallOptions)
      commentId: M:Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.GetPublicKey(Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest,grpc.CallOptions)
      language: CSharp
      name:
        CSharp: GetPublicKey(PublicKeyRequest, grpc.CallOptions)
        VB: GetPublicKey(PublicKeyRequest, grpc.CallOptions)
      nameWithType:
        CSharp: AuthenticationService.AuthenticationServiceClient.GetPublicKey(PublicKeyRequest, grpc.CallOptions)
        VB: AuthenticationService.AuthenticationServiceClient.GetPublicKey(PublicKeyRequest, grpc.CallOptions)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.GetPublicKey(Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest, grpc.CallOptions)
        VB: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.GetPublicKey(Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest, grpc.CallOptions)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: GetPublicKey
        path: ''
        startLine: 14684
      syntax:
        content:
          CSharp: public virtual PublicKeyResponse GetPublicKey(PublicKeyRequest request, grpc.CallOptions options)
          VB: Public Overridable Function GetPublicKey(request As PublicKeyRequest, options As grpc.CallOptions) As PublicKeyResponse
        parameters:
        - id: request
          type: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest
        - id: options
          type: grpc.CallOptions
        return:
          type: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse
      overload: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.GetPublicKey*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.GetPublicKeyAsync(Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
      commentId: M:Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.GetPublicKeyAsync(Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
      language: CSharp
      name:
        CSharp: GetPublicKeyAsync(PublicKeyRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
        VB: GetPublicKeyAsync(PublicKeyRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
      nameWithType:
        CSharp: AuthenticationService.AuthenticationServiceClient.GetPublicKeyAsync(PublicKeyRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
        VB: AuthenticationService.AuthenticationServiceClient.GetPublicKeyAsync(PublicKeyRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.GetPublicKeyAsync(Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest, grpc.Metadata, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
        VB: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.GetPublicKeyAsync(Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest, grpc.Metadata, System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: GetPublicKeyAsync
        path: ''
        startLine: 14688
      syntax:
        content:
          CSharp: public virtual grpc.AsyncUnaryCall<PublicKeyResponse> GetPublicKeyAsync(PublicKeyRequest request, grpc.Metadata headers = null, DateTime? deadline = default(DateTime? ), CancellationToken cancellationToken = default(CancellationToken))
          VB: Public Overridable Function GetPublicKeyAsync(request As PublicKeyRequest, headers As grpc.Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As grpc.AsyncUnaryCall(Of PublicKeyResponse)
        parameters:
        - id: request
          type: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest
        - id: headers
          type: grpc.Metadata
        - id: deadline
          type: System.Nullable{System.DateTime}
        - id: cancellationToken
          type: System.Threading.CancellationToken
        return:
          type: grpc.AsyncUnaryCall{Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse}
      overload: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.GetPublicKeyAsync*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.GetPublicKeyAsync(Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest,grpc.CallOptions)
      commentId: M:Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.GetPublicKeyAsync(Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest,grpc.CallOptions)
      language: CSharp
      name:
        CSharp: GetPublicKeyAsync(PublicKeyRequest, grpc.CallOptions)
        VB: GetPublicKeyAsync(PublicKeyRequest, grpc.CallOptions)
      nameWithType:
        CSharp: AuthenticationService.AuthenticationServiceClient.GetPublicKeyAsync(PublicKeyRequest, grpc.CallOptions)
        VB: AuthenticationService.AuthenticationServiceClient.GetPublicKeyAsync(PublicKeyRequest, grpc.CallOptions)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.GetPublicKeyAsync(Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest, grpc.CallOptions)
        VB: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.GetPublicKeyAsync(Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest, grpc.CallOptions)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: GetPublicKeyAsync
        path: ''
        startLine: 14692
      syntax:
        content:
          CSharp: public virtual grpc.AsyncUnaryCall<PublicKeyResponse> GetPublicKeyAsync(PublicKeyRequest request, grpc.CallOptions options)
          VB: Public Overridable Function GetPublicKeyAsync(request As PublicKeyRequest, options As grpc.CallOptions) As grpc.AsyncUnaryCall(Of PublicKeyResponse)
        parameters:
        - id: request
          type: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest
        - id: options
          type: grpc.CallOptions
        return:
          type: grpc.AsyncUnaryCall{Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse}
      overload: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.GetPublicKeyAsync*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.GetProjectAccessToken(Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
      commentId: M:Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.GetProjectAccessToken(Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
      language: CSharp
      name:
        CSharp: GetProjectAccessToken(ProjectAccessTokenRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
        VB: GetProjectAccessToken(ProjectAccessTokenRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
      nameWithType:
        CSharp: AuthenticationService.AuthenticationServiceClient.GetProjectAccessToken(ProjectAccessTokenRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
        VB: AuthenticationService.AuthenticationServiceClient.GetProjectAccessToken(ProjectAccessTokenRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.GetProjectAccessToken(Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest, grpc.Metadata, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
        VB: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.GetProjectAccessToken(Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest, grpc.Metadata, System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: GetProjectAccessToken
        path: ''
        startLine: 14696
      syntax:
        content:
          CSharp: public virtual ProjectAccessTokenResponse GetProjectAccessToken(ProjectAccessTokenRequest request, grpc.Metadata headers = null, DateTime? deadline = default(DateTime? ), CancellationToken cancellationToken = default(CancellationToken))
          VB: Public Overridable Function GetProjectAccessToken(request As ProjectAccessTokenRequest, headers As grpc.Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As ProjectAccessTokenResponse
        parameters:
        - id: request
          type: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest
        - id: headers
          type: grpc.Metadata
        - id: deadline
          type: System.Nullable{System.DateTime}
        - id: cancellationToken
          type: System.Threading.CancellationToken
        return:
          type: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse
      overload: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.GetProjectAccessToken*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.GetProjectAccessToken(Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest,grpc.CallOptions)
      commentId: M:Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.GetProjectAccessToken(Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest,grpc.CallOptions)
      language: CSharp
      name:
        CSharp: GetProjectAccessToken(ProjectAccessTokenRequest, grpc.CallOptions)
        VB: GetProjectAccessToken(ProjectAccessTokenRequest, grpc.CallOptions)
      nameWithType:
        CSharp: AuthenticationService.AuthenticationServiceClient.GetProjectAccessToken(ProjectAccessTokenRequest, grpc.CallOptions)
        VB: AuthenticationService.AuthenticationServiceClient.GetProjectAccessToken(ProjectAccessTokenRequest, grpc.CallOptions)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.GetProjectAccessToken(Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest, grpc.CallOptions)
        VB: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.GetProjectAccessToken(Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest, grpc.CallOptions)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: GetProjectAccessToken
        path: ''
        startLine: 14700
      syntax:
        content:
          CSharp: public virtual ProjectAccessTokenResponse GetProjectAccessToken(ProjectAccessTokenRequest request, grpc.CallOptions options)
          VB: Public Overridable Function GetProjectAccessToken(request As ProjectAccessTokenRequest, options As grpc.CallOptions) As ProjectAccessTokenResponse
        parameters:
        - id: request
          type: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest
        - id: options
          type: grpc.CallOptions
        return:
          type: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse
      overload: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.GetProjectAccessToken*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.GetProjectAccessTokenAsync(Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
      commentId: M:Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.GetProjectAccessTokenAsync(Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
      language: CSharp
      name:
        CSharp: GetProjectAccessTokenAsync(ProjectAccessTokenRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
        VB: GetProjectAccessTokenAsync(ProjectAccessTokenRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
      nameWithType:
        CSharp: AuthenticationService.AuthenticationServiceClient.GetProjectAccessTokenAsync(ProjectAccessTokenRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
        VB: AuthenticationService.AuthenticationServiceClient.GetProjectAccessTokenAsync(ProjectAccessTokenRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.GetProjectAccessTokenAsync(Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest, grpc.Metadata, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
        VB: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.GetProjectAccessTokenAsync(Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest, grpc.Metadata, System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: GetProjectAccessTokenAsync
        path: ''
        startLine: 14704
      syntax:
        content:
          CSharp: public virtual grpc.AsyncUnaryCall<ProjectAccessTokenResponse> GetProjectAccessTokenAsync(ProjectAccessTokenRequest request, grpc.Metadata headers = null, DateTime? deadline = default(DateTime? ), CancellationToken cancellationToken = default(CancellationToken))
          VB: Public Overridable Function GetProjectAccessTokenAsync(request As ProjectAccessTokenRequest, headers As grpc.Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As grpc.AsyncUnaryCall(Of ProjectAccessTokenResponse)
        parameters:
        - id: request
          type: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest
        - id: headers
          type: grpc.Metadata
        - id: deadline
          type: System.Nullable{System.DateTime}
        - id: cancellationToken
          type: System.Threading.CancellationToken
        return:
          type: grpc.AsyncUnaryCall{Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse}
      overload: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.GetProjectAccessTokenAsync*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.GetProjectAccessTokenAsync(Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest,grpc.CallOptions)
      commentId: M:Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.GetProjectAccessTokenAsync(Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest,grpc.CallOptions)
      language: CSharp
      name:
        CSharp: GetProjectAccessTokenAsync(ProjectAccessTokenRequest, grpc.CallOptions)
        VB: GetProjectAccessTokenAsync(ProjectAccessTokenRequest, grpc.CallOptions)
      nameWithType:
        CSharp: AuthenticationService.AuthenticationServiceClient.GetProjectAccessTokenAsync(ProjectAccessTokenRequest, grpc.CallOptions)
        VB: AuthenticationService.AuthenticationServiceClient.GetProjectAccessTokenAsync(ProjectAccessTokenRequest, grpc.CallOptions)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.GetProjectAccessTokenAsync(Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest, grpc.CallOptions)
        VB: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.GetProjectAccessTokenAsync(Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest, grpc.CallOptions)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: GetProjectAccessTokenAsync
        path: ''
        startLine: 14708
      syntax:
        content:
          CSharp: public virtual grpc.AsyncUnaryCall<ProjectAccessTokenResponse> GetProjectAccessTokenAsync(ProjectAccessTokenRequest request, grpc.CallOptions options)
          VB: Public Overridable Function GetProjectAccessTokenAsync(request As ProjectAccessTokenRequest, options As grpc.CallOptions) As grpc.AsyncUnaryCall(Of ProjectAccessTokenResponse)
        parameters:
        - id: request
          type: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest
        - id: options
          type: grpc.CallOptions
        return:
          type: grpc.AsyncUnaryCall{Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse}
      overload: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.GetProjectAccessTokenAsync*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.NewInstance(ClientBaseConfiguration)
      commentId: M:Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.NewInstance(ClientBaseConfiguration)
      language: CSharp
      name:
        CSharp: NewInstance(ClientBaseConfiguration)
        VB: NewInstance(ClientBaseConfiguration)
      nameWithType:
        CSharp: AuthenticationService.AuthenticationServiceClient.NewInstance(ClientBaseConfiguration)
        VB: AuthenticationService.AuthenticationServiceClient.NewInstance(ClientBaseConfiguration)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.NewInstance(ClientBaseConfiguration)
        VB: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.NewInstance(ClientBaseConfiguration)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Authentication
      source:
        id: NewInstance
        path: ''
        startLine: 14713
      summary: Creates a new instance of client from given <code>ClientBaseConfiguration</code>.
      example: []
      syntax:
        content:
          CSharp: protected override AuthenticationService.AuthenticationServiceClient NewInstance(ClientBaseConfiguration configuration)
          VB: Protected Overrides Function NewInstance(configuration As ClientBaseConfiguration) As AuthenticationService.AuthenticationServiceClient
        parameters:
        - id: configuration
          type: ClientBaseConfiguration
        return:
          type: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient
      overload: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.NewInstance*
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
- id: Unity.Reflect.ProjectServer.Services.Publisher
  commentId: N:Unity.Reflect.ProjectServer.Services.Publisher
  language: CSharp
  name:
    CSharp: Unity.Reflect.ProjectServer.Services.Publisher
    VB: Unity.Reflect.ProjectServer.Services.Publisher
  nameWithType:
    CSharp: Unity.Reflect.ProjectServer.Services.Publisher
    VB: Unity.Reflect.ProjectServer.Services.Publisher
  qualifiedName:
    CSharp: Unity.Reflect.ProjectServer.Services.Publisher
    VB: Unity.Reflect.ProjectServer.Services.Publisher
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Unity.Reflect.ProjectServer.Services.Publisher.PublisherReflection
    commentId: T:Unity.Reflect.ProjectServer.Services.Publisher.PublisherReflection
    language: CSharp
    name:
      CSharp: PublisherReflection
      VB: PublisherReflection
    nameWithType:
      CSharp: PublisherReflection
      VB: PublisherReflection
    qualifiedName:
      CSharp: Unity.Reflect.ProjectServer.Services.Publisher.PublisherReflection
      VB: Unity.Reflect.ProjectServer.Services.Publisher.PublisherReflection
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect.ProjectServer.Services.Publisher
    source:
      id: PublisherReflection
      path: ''
      startLine: 14905
    summary: Holder for reflection information generated from ProjectServer/Publisher.proto
    example: []
    syntax:
      content:
        CSharp: public static class PublisherReflection
        VB: Public Module PublisherReflection
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: Unity.Reflect.ProjectServer.Services.Publisher.PublisherReflection.Descriptor
      commentId: P:Unity.Reflect.ProjectServer.Services.Publisher.PublisherReflection.Descriptor
      language: CSharp
      name:
        CSharp: Descriptor
        VB: Descriptor
      nameWithType:
        CSharp: PublisherReflection.Descriptor
        VB: PublisherReflection.Descriptor
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.PublisherReflection.Descriptor
        VB: Unity.Reflect.ProjectServer.Services.Publisher.PublisherReflection.Descriptor
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: Descriptor
        path: ''
        startLine: 14909
      summary: File descriptor for ProjectServer/Publisher.proto
      example: []
      syntax:
        content:
          CSharp: public static pbr.FileDescriptor Descriptor { get; }
          VB: Public Shared ReadOnly Property Descriptor As pbr.FileDescriptor
        parameters: []
        return:
          type: pbr.FileDescriptor
      overload: Unity.Reflect.ProjectServer.Services.Publisher.PublisherReflection.Descriptor*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
  - id: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse
    commentId: T:Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse
    language: CSharp
    name:
      CSharp: ListSyncServersResponse
      VB: ListSyncServersResponse
    nameWithType:
      CSharp: ListSyncServersResponse
      VB: ListSyncServersResponse
    qualifiedName:
      CSharp: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse
      VB: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect.ProjectServer.Services.Publisher
    source:
      id: ListSyncServersResponse
      path: ''
      startLine: 14949
    syntax:
      content:
        CSharp: 'public sealed class ListSyncServersResponse : pb.IMessage<ListSyncServersResponse>'
        VB: >-
          Public NotInheritable Class ListSyncServersResponse

              Inherits pb.IMessage(Of ListSyncServersResponse)
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - sealed
      - class
      VB:
      - Public
      - NotInheritable
      - Class
    items:
    - id: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.Parser
      commentId: P:Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.Parser
      language: CSharp
      name:
        CSharp: Parser
        VB: Parser
      nameWithType:
        CSharp: ListSyncServersResponse.Parser
        VB: ListSyncServersResponse.Parser
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.Parser
        VB: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.Parser
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: Parser
        path: ''
        startLine: 14952
      syntax:
        content:
          CSharp: public static pb.MessageParser<ListSyncServersResponse> Parser { get; }
          VB: Public Shared ReadOnly Property Parser As pb.MessageParser(Of ListSyncServersResponse)
        parameters: []
        return:
          type: pb.MessageParser{Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse}
      overload: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.Parser*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.Descriptor
      commentId: P:Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.Descriptor
      language: CSharp
      name:
        CSharp: Descriptor
        VB: Descriptor
      nameWithType:
        CSharp: ListSyncServersResponse.Descriptor
        VB: ListSyncServersResponse.Descriptor
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.Descriptor
        VB: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.Descriptor
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: Descriptor
        path: ''
        startLine: 14955
      syntax:
        content:
          CSharp: public static pbr.MessageDescriptor Descriptor { get; }
          VB: Public Shared ReadOnly Property Descriptor As pbr.MessageDescriptor
        parameters: []
        return:
          type: pbr.MessageDescriptor
      overload: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.Descriptor*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.#ctor
      commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.#ctor
      language: CSharp
      name:
        CSharp: ListSyncServersResponse()
        VB: ListSyncServersResponse()
      nameWithType:
        CSharp: ListSyncServersResponse.ListSyncServersResponse()
        VB: ListSyncServersResponse.ListSyncServersResponse()
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.ListSyncServersResponse()
        VB: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.ListSyncServersResponse()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: .ctor
        path: ''
        startLine: 14965
      syntax:
        content:
          CSharp: public ListSyncServersResponse()
          VB: Public Sub New
      overload: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.#ctor(Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse)
      commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.#ctor(Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse)
      language: CSharp
      name:
        CSharp: ListSyncServersResponse(ListSyncServersResponse)
        VB: ListSyncServersResponse(ListSyncServersResponse)
      nameWithType:
        CSharp: ListSyncServersResponse.ListSyncServersResponse(ListSyncServersResponse)
        VB: ListSyncServersResponse.ListSyncServersResponse(ListSyncServersResponse)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.ListSyncServersResponse(Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse)
        VB: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.ListSyncServersResponse(Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: .ctor
        path: ''
        startLine: 14972
      syntax:
        content:
          CSharp: public ListSyncServersResponse(ListSyncServersResponse other)
          VB: Public Sub New(other As ListSyncServersResponse)
        parameters:
        - id: other
          type: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse
      overload: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.Clone
      commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.Clone
      language: CSharp
      name:
        CSharp: Clone()
        VB: Clone()
      nameWithType:
        CSharp: ListSyncServersResponse.Clone()
        VB: ListSyncServersResponse.Clone()
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.Clone()
        VB: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.Clone()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: Clone
        path: ''
        startLine: 14978
      syntax:
        content:
          CSharp: public ListSyncServersResponse Clone()
          VB: Public Function Clone As ListSyncServersResponse
        return:
          type: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse
      overload: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.Clone*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.ServersFieldNumber
      commentId: F:Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.ServersFieldNumber
      language: CSharp
      name:
        CSharp: ServersFieldNumber
        VB: ServersFieldNumber
      nameWithType:
        CSharp: ListSyncServersResponse.ServersFieldNumber
        VB: ListSyncServersResponse.ServersFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.ServersFieldNumber
        VB: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.ServersFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: ServersFieldNumber
        path: ''
        startLine: 14984
      summary: Field number for the &quot;servers&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int ServersFieldNumber = 1
          VB: Public Const ServersFieldNumber As Integer = 1
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.Servers
      commentId: P:Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.Servers
      language: CSharp
      name:
        CSharp: Servers
        VB: Servers
      nameWithType:
        CSharp: ListSyncServersResponse.Servers
        VB: ListSyncServersResponse.Servers
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.Servers
        VB: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.Servers
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: Servers
        path: ''
        startLine: 14988
      syntax:
        content:
          CSharp: public pbc.RepeatedField<SyncServer> Servers { get; }
          VB: Public ReadOnly Property Servers As pbc.RepeatedField(Of SyncServer)
        parameters: []
        return:
          type: pbc.RepeatedField{Unity.Reflect.ProjectServer.Services.Publisher.SyncServer}
      overload: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.Servers*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.Equals(System.Object)
      commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.Equals(System.Object)
      language: CSharp
      name:
        CSharp: Equals(Object)
        VB: Equals(Object)
      nameWithType:
        CSharp: ListSyncServersResponse.Equals(Object)
        VB: ListSyncServersResponse.Equals(Object)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.Equals(System.Object)
        VB: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.Equals(System.Object)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: Equals
        path: ''
        startLine: 14993
      syntax:
        content:
          CSharp: public override bool Equals(object other)
          VB: Public Overrides Function Equals(other As Object) As Boolean
        parameters:
        - id: other
          type: System.Object
        return:
          type: System.Boolean
      overload: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.Equals*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.Equals(Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse)
      commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.Equals(Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse)
      language: CSharp
      name:
        CSharp: Equals(ListSyncServersResponse)
        VB: Equals(ListSyncServersResponse)
      nameWithType:
        CSharp: ListSyncServersResponse.Equals(ListSyncServersResponse)
        VB: ListSyncServersResponse.Equals(ListSyncServersResponse)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.Equals(Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse)
        VB: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.Equals(Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: Equals
        path: ''
        startLine: 14998
      syntax:
        content:
          CSharp: public bool Equals(ListSyncServersResponse other)
          VB: Public Function Equals(other As ListSyncServersResponse) As Boolean
        parameters:
        - id: other
          type: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse
        return:
          type: System.Boolean
      overload: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.Equals*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.GetHashCode
      commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.GetHashCode
      language: CSharp
      name:
        CSharp: GetHashCode()
        VB: GetHashCode()
      nameWithType:
        CSharp: ListSyncServersResponse.GetHashCode()
        VB: ListSyncServersResponse.GetHashCode()
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.GetHashCode()
        VB: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.GetHashCode()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: GetHashCode
        path: ''
        startLine: 15010
      syntax:
        content:
          CSharp: public override int GetHashCode()
          VB: Public Overrides Function GetHashCode As Integer
        return:
          type: System.Int32
      overload: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.GetHashCode*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.ToString
      commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.ToString
      language: CSharp
      name:
        CSharp: ToString()
        VB: ToString()
      nameWithType:
        CSharp: ListSyncServersResponse.ToString()
        VB: ListSyncServersResponse.ToString()
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.ToString()
        VB: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.ToString()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: ToString
        path: ''
        startLine: 15020
      syntax:
        content:
          CSharp: public override string ToString()
          VB: Public Overrides Function ToString As String
        return:
          type: System.String
      overload: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.ToString*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.WriteTo(pb.CodedOutputStream)
      commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.WriteTo(pb.CodedOutputStream)
      language: CSharp
      name:
        CSharp: WriteTo(pb.CodedOutputStream)
        VB: WriteTo(pb.CodedOutputStream)
      nameWithType:
        CSharp: ListSyncServersResponse.WriteTo(pb.CodedOutputStream)
        VB: ListSyncServersResponse.WriteTo(pb.CodedOutputStream)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.WriteTo(pb.CodedOutputStream)
        VB: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.WriteTo(pb.CodedOutputStream)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: WriteTo
        path: ''
        startLine: 15025
      syntax:
        content:
          CSharp: public void WriteTo(pb.CodedOutputStream output)
          VB: Public Sub WriteTo(output As pb.CodedOutputStream)
        parameters:
        - id: output
          type: pb.CodedOutputStream
      overload: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.WriteTo*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.CalculateSize
      commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.CalculateSize
      language: CSharp
      name:
        CSharp: CalculateSize()
        VB: CalculateSize()
      nameWithType:
        CSharp: ListSyncServersResponse.CalculateSize()
        VB: ListSyncServersResponse.CalculateSize()
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.CalculateSize()
        VB: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.CalculateSize()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: CalculateSize
        path: ''
        startLine: 15033
      syntax:
        content:
          CSharp: public int CalculateSize()
          VB: Public Function CalculateSize As Integer
        return:
          type: System.Int32
      overload: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.CalculateSize*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.MergeFrom(Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse)
      commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.MergeFrom(Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse)
      language: CSharp
      name:
        CSharp: MergeFrom(ListSyncServersResponse)
        VB: MergeFrom(ListSyncServersResponse)
      nameWithType:
        CSharp: ListSyncServersResponse.MergeFrom(ListSyncServersResponse)
        VB: ListSyncServersResponse.MergeFrom(ListSyncServersResponse)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.MergeFrom(Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse)
        VB: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.MergeFrom(Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: MergeFrom
        path: ''
        startLine: 15043
      syntax:
        content:
          CSharp: public void MergeFrom(ListSyncServersResponse other)
          VB: Public Sub MergeFrom(other As ListSyncServersResponse)
        parameters:
        - id: other
          type: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse
      overload: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.MergeFrom*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.MergeFrom(pb.CodedInputStream)
      commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.MergeFrom(pb.CodedInputStream)
      language: CSharp
      name:
        CSharp: MergeFrom(pb.CodedInputStream)
        VB: MergeFrom(pb.CodedInputStream)
      nameWithType:
        CSharp: ListSyncServersResponse.MergeFrom(pb.CodedInputStream)
        VB: ListSyncServersResponse.MergeFrom(pb.CodedInputStream)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.MergeFrom(pb.CodedInputStream)
        VB: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.MergeFrom(pb.CodedInputStream)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: MergeFrom
        path: ''
        startLine: 15052
      syntax:
        content:
          CSharp: public void MergeFrom(pb.CodedInputStream input)
          VB: Public Sub MergeFrom(input As pb.CodedInputStream)
        parameters:
        - id: input
          type: pb.CodedInputStream
      overload: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.MergeFrom*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer
    commentId: T:Unity.Reflect.ProjectServer.Services.Publisher.SyncServer
    language: CSharp
    name:
      CSharp: SyncServer
      VB: SyncServer
    nameWithType:
      CSharp: SyncServer
      VB: SyncServer
    qualifiedName:
      CSharp: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer
      VB: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect.ProjectServer.Services.Publisher
    source:
      id: SyncServer
      path: ''
      startLine: 15070
    syntax:
      content:
        CSharp: 'public sealed class SyncServer : pb.IMessage<SyncServer>'
        VB: >-
          Public NotInheritable Class SyncServer

              Inherits pb.IMessage(Of SyncServer)
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - sealed
      - class
      VB:
      - Public
      - NotInheritable
      - Class
    items:
    - id: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.Parser
      commentId: P:Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.Parser
      language: CSharp
      name:
        CSharp: Parser
        VB: Parser
      nameWithType:
        CSharp: SyncServer.Parser
        VB: SyncServer.Parser
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.Parser
        VB: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.Parser
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: Parser
        path: ''
        startLine: 15073
      syntax:
        content:
          CSharp: public static pb.MessageParser<SyncServer> Parser { get; }
          VB: Public Shared ReadOnly Property Parser As pb.MessageParser(Of SyncServer)
        parameters: []
        return:
          type: pb.MessageParser{Unity.Reflect.ProjectServer.Services.Publisher.SyncServer}
      overload: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.Parser*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.Descriptor
      commentId: P:Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.Descriptor
      language: CSharp
      name:
        CSharp: Descriptor
        VB: Descriptor
      nameWithType:
        CSharp: SyncServer.Descriptor
        VB: SyncServer.Descriptor
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.Descriptor
        VB: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.Descriptor
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: Descriptor
        path: ''
        startLine: 15076
      syntax:
        content:
          CSharp: public static pbr.MessageDescriptor Descriptor { get; }
          VB: Public Shared ReadOnly Property Descriptor As pbr.MessageDescriptor
        parameters: []
        return:
          type: pbr.MessageDescriptor
      overload: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.Descriptor*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.#ctor
      commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.#ctor
      language: CSharp
      name:
        CSharp: SyncServer()
        VB: SyncServer()
      nameWithType:
        CSharp: SyncServer.SyncServer()
        VB: SyncServer.SyncServer()
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.SyncServer()
        VB: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.SyncServer()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: .ctor
        path: ''
        startLine: 15086
      syntax:
        content:
          CSharp: public SyncServer()
          VB: Public Sub New
      overload: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.#ctor(Unity.Reflect.ProjectServer.Services.Publisher.SyncServer)
      commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.#ctor(Unity.Reflect.ProjectServer.Services.Publisher.SyncServer)
      language: CSharp
      name:
        CSharp: SyncServer(SyncServer)
        VB: SyncServer(SyncServer)
      nameWithType:
        CSharp: SyncServer.SyncServer(SyncServer)
        VB: SyncServer.SyncServer(SyncServer)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.SyncServer(Unity.Reflect.ProjectServer.Services.Publisher.SyncServer)
        VB: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.SyncServer(Unity.Reflect.ProjectServer.Services.Publisher.SyncServer)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: .ctor
        path: ''
        startLine: 15093
      syntax:
        content:
          CSharp: public SyncServer(SyncServer other)
          VB: Public Sub New(other As SyncServer)
        parameters:
        - id: other
          type: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer
      overload: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.Clone
      commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.Clone
      language: CSharp
      name:
        CSharp: Clone()
        VB: Clone()
      nameWithType:
        CSharp: SyncServer.Clone()
        VB: SyncServer.Clone()
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.Clone()
        VB: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.Clone()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: Clone
        path: ''
        startLine: 15102
      syntax:
        content:
          CSharp: public SyncServer Clone()
          VB: Public Function Clone As SyncServer
        return:
          type: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer
      overload: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.Clone*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.MachineNameFieldNumber
      commentId: F:Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.MachineNameFieldNumber
      language: CSharp
      name:
        CSharp: MachineNameFieldNumber
        VB: MachineNameFieldNumber
      nameWithType:
        CSharp: SyncServer.MachineNameFieldNumber
        VB: SyncServer.MachineNameFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.MachineNameFieldNumber
        VB: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.MachineNameFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: MachineNameFieldNumber
        path: ''
        startLine: 15108
      summary: Field number for the &quot;machineName&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int MachineNameFieldNumber = 1
          VB: Public Const MachineNameFieldNumber As Integer = 1
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.MachineName
      commentId: P:Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.MachineName
      language: CSharp
      name:
        CSharp: MachineName
        VB: MachineName
      nameWithType:
        CSharp: SyncServer.MachineName
        VB: SyncServer.MachineName
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.MachineName
        VB: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.MachineName
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: MachineName
        path: ''
        startLine: 15110
      syntax:
        content:
          CSharp: public string MachineName { get; set; }
          VB: Public Property MachineName As String
        parameters: []
        return:
          type: System.String
      overload: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.MachineName*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.EndpointAddressFieldNumber
      commentId: F:Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.EndpointAddressFieldNumber
      language: CSharp
      name:
        CSharp: EndpointAddressFieldNumber
        VB: EndpointAddressFieldNumber
      nameWithType:
        CSharp: SyncServer.EndpointAddressFieldNumber
        VB: SyncServer.EndpointAddressFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.EndpointAddressFieldNumber
        VB: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.EndpointAddressFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: EndpointAddressFieldNumber
        path: ''
        startLine: 15119
      summary: Field number for the &quot;endpointAddress&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int EndpointAddressFieldNumber = 2
          VB: Public Const EndpointAddressFieldNumber As Integer = 2
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.EndpointAddress
      commentId: P:Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.EndpointAddress
      language: CSharp
      name:
        CSharp: EndpointAddress
        VB: EndpointAddress
      nameWithType:
        CSharp: SyncServer.EndpointAddress
        VB: SyncServer.EndpointAddress
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.EndpointAddress
        VB: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.EndpointAddress
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: EndpointAddress
        path: ''
        startLine: 15121
      syntax:
        content:
          CSharp: public string EndpointAddress { get; set; }
          VB: Public Property EndpointAddress As String
        parameters: []
        return:
          type: System.String
      overload: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.EndpointAddress*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.UserNameFieldNumber
      commentId: F:Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.UserNameFieldNumber
      language: CSharp
      name:
        CSharp: UserNameFieldNumber
        VB: UserNameFieldNumber
      nameWithType:
        CSharp: SyncServer.UserNameFieldNumber
        VB: SyncServer.UserNameFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.UserNameFieldNumber
        VB: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.UserNameFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: UserNameFieldNumber
        path: ''
        startLine: 15130
      summary: Field number for the &quot;userName&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int UserNameFieldNumber = 3
          VB: Public Const UserNameFieldNumber As Integer = 3
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.UserName
      commentId: P:Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.UserName
      language: CSharp
      name:
        CSharp: UserName
        VB: UserName
      nameWithType:
        CSharp: SyncServer.UserName
        VB: SyncServer.UserName
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.UserName
        VB: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.UserName
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: UserName
        path: ''
        startLine: 15132
      syntax:
        content:
          CSharp: public string UserName { get; set; }
          VB: Public Property UserName As String
        parameters: []
        return:
          type: System.String
      overload: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.UserName*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.ProjectIdsFieldNumber
      commentId: F:Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.ProjectIdsFieldNumber
      language: CSharp
      name:
        CSharp: ProjectIdsFieldNumber
        VB: ProjectIdsFieldNumber
      nameWithType:
        CSharp: SyncServer.ProjectIdsFieldNumber
        VB: SyncServer.ProjectIdsFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.ProjectIdsFieldNumber
        VB: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.ProjectIdsFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: ProjectIdsFieldNumber
        path: ''
        startLine: 15141
      summary: Field number for the &quot;projectIds&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int ProjectIdsFieldNumber = 4
          VB: Public Const ProjectIdsFieldNumber As Integer = 4
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.ProjectIds
      commentId: P:Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.ProjectIds
      language: CSharp
      name:
        CSharp: ProjectIds
        VB: ProjectIds
      nameWithType:
        CSharp: SyncServer.ProjectIds
        VB: SyncServer.ProjectIds
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.ProjectIds
        VB: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.ProjectIds
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: ProjectIds
        path: ''
        startLine: 15145
      syntax:
        content:
          CSharp: public pbc.RepeatedField<string> ProjectIds { get; }
          VB: Public ReadOnly Property ProjectIds As pbc.RepeatedField(Of String)
        parameters: []
        return:
          type: pbc.RepeatedField{System.String}
      overload: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.ProjectIds*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.Equals(System.Object)
      commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.Equals(System.Object)
      language: CSharp
      name:
        CSharp: Equals(Object)
        VB: Equals(Object)
      nameWithType:
        CSharp: SyncServer.Equals(Object)
        VB: SyncServer.Equals(Object)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.Equals(System.Object)
        VB: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.Equals(System.Object)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: Equals
        path: ''
        startLine: 15150
      syntax:
        content:
          CSharp: public override bool Equals(object other)
          VB: Public Overrides Function Equals(other As Object) As Boolean
        parameters:
        - id: other
          type: System.Object
        return:
          type: System.Boolean
      overload: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.Equals*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.Equals(Unity.Reflect.ProjectServer.Services.Publisher.SyncServer)
      commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.Equals(Unity.Reflect.ProjectServer.Services.Publisher.SyncServer)
      language: CSharp
      name:
        CSharp: Equals(SyncServer)
        VB: Equals(SyncServer)
      nameWithType:
        CSharp: SyncServer.Equals(SyncServer)
        VB: SyncServer.Equals(SyncServer)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.Equals(Unity.Reflect.ProjectServer.Services.Publisher.SyncServer)
        VB: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.Equals(Unity.Reflect.ProjectServer.Services.Publisher.SyncServer)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: Equals
        path: ''
        startLine: 15155
      syntax:
        content:
          CSharp: public bool Equals(SyncServer other)
          VB: Public Function Equals(other As SyncServer) As Boolean
        parameters:
        - id: other
          type: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer
        return:
          type: System.Boolean
      overload: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.Equals*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.GetHashCode
      commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.GetHashCode
      language: CSharp
      name:
        CSharp: GetHashCode()
        VB: GetHashCode()
      nameWithType:
        CSharp: SyncServer.GetHashCode()
        VB: SyncServer.GetHashCode()
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.GetHashCode()
        VB: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.GetHashCode()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: GetHashCode
        path: ''
        startLine: 15170
      syntax:
        content:
          CSharp: public override int GetHashCode()
          VB: Public Overrides Function GetHashCode As Integer
        return:
          type: System.Int32
      overload: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.GetHashCode*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.ToString
      commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.ToString
      language: CSharp
      name:
        CSharp: ToString()
        VB: ToString()
      nameWithType:
        CSharp: SyncServer.ToString()
        VB: SyncServer.ToString()
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.ToString()
        VB: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.ToString()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: ToString
        path: ''
        startLine: 15183
      syntax:
        content:
          CSharp: public override string ToString()
          VB: Public Overrides Function ToString As String
        return:
          type: System.String
      overload: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.ToString*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.WriteTo(pb.CodedOutputStream)
      commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.WriteTo(pb.CodedOutputStream)
      language: CSharp
      name:
        CSharp: WriteTo(pb.CodedOutputStream)
        VB: WriteTo(pb.CodedOutputStream)
      nameWithType:
        CSharp: SyncServer.WriteTo(pb.CodedOutputStream)
        VB: SyncServer.WriteTo(pb.CodedOutputStream)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.WriteTo(pb.CodedOutputStream)
        VB: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.WriteTo(pb.CodedOutputStream)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: WriteTo
        path: ''
        startLine: 15188
      syntax:
        content:
          CSharp: public void WriteTo(pb.CodedOutputStream output)
          VB: Public Sub WriteTo(output As pb.CodedOutputStream)
        parameters:
        - id: output
          type: pb.CodedOutputStream
      overload: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.WriteTo*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.CalculateSize
      commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.CalculateSize
      language: CSharp
      name:
        CSharp: CalculateSize()
        VB: CalculateSize()
      nameWithType:
        CSharp: SyncServer.CalculateSize()
        VB: SyncServer.CalculateSize()
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.CalculateSize()
        VB: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.CalculateSize()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: CalculateSize
        path: ''
        startLine: 15208
      syntax:
        content:
          CSharp: public int CalculateSize()
          VB: Public Function CalculateSize As Integer
        return:
          type: System.Int32
      overload: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.CalculateSize*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.MergeFrom(Unity.Reflect.ProjectServer.Services.Publisher.SyncServer)
      commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.MergeFrom(Unity.Reflect.ProjectServer.Services.Publisher.SyncServer)
      language: CSharp
      name:
        CSharp: MergeFrom(SyncServer)
        VB: MergeFrom(SyncServer)
      nameWithType:
        CSharp: SyncServer.MergeFrom(SyncServer)
        VB: SyncServer.MergeFrom(SyncServer)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.MergeFrom(Unity.Reflect.ProjectServer.Services.Publisher.SyncServer)
        VB: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.MergeFrom(Unity.Reflect.ProjectServer.Services.Publisher.SyncServer)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: MergeFrom
        path: ''
        startLine: 15227
      syntax:
        content:
          CSharp: public void MergeFrom(SyncServer other)
          VB: Public Sub MergeFrom(other As SyncServer)
        parameters:
        - id: other
          type: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer
      overload: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.MergeFrom*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.MergeFrom(pb.CodedInputStream)
      commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.MergeFrom(pb.CodedInputStream)
      language: CSharp
      name:
        CSharp: MergeFrom(pb.CodedInputStream)
        VB: MergeFrom(pb.CodedInputStream)
      nameWithType:
        CSharp: SyncServer.MergeFrom(pb.CodedInputStream)
        VB: SyncServer.MergeFrom(pb.CodedInputStream)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.MergeFrom(pb.CodedInputStream)
        VB: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.MergeFrom(pb.CodedInputStream)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: MergeFrom
        path: ''
        startLine: 15245
      syntax:
        content:
          CSharp: public void MergeFrom(pb.CodedInputStream input)
          VB: Public Sub MergeFrom(input As pb.CodedInputStream)
        parameters:
        - id: input
          type: pb.CodedInputStream
      overload: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.MergeFrom*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse
    commentId: T:Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse
    language: CSharp
    name:
      CSharp: ListProjectsResponse
      VB: ListProjectsResponse
    nameWithType:
      CSharp: ListProjectsResponse
      VB: ListProjectsResponse
    qualifiedName:
      CSharp: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse
      VB: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect.ProjectServer.Services.Publisher
    source:
      id: ListProjectsResponse
      path: ''
      startLine: 15275
    syntax:
      content:
        CSharp: 'public sealed class ListProjectsResponse : pb.IMessage<ListProjectsResponse>'
        VB: >-
          Public NotInheritable Class ListProjectsResponse

              Inherits pb.IMessage(Of ListProjectsResponse)
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - sealed
      - class
      VB:
      - Public
      - NotInheritable
      - Class
    items:
    - id: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Parser
      commentId: P:Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Parser
      language: CSharp
      name:
        CSharp: Parser
        VB: Parser
      nameWithType:
        CSharp: ListProjectsResponse.Parser
        VB: ListProjectsResponse.Parser
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Parser
        VB: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Parser
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: Parser
        path: ''
        startLine: 15278
      syntax:
        content:
          CSharp: public static pb.MessageParser<ListProjectsResponse> Parser { get; }
          VB: Public Shared ReadOnly Property Parser As pb.MessageParser(Of ListProjectsResponse)
        parameters: []
        return:
          type: pb.MessageParser{Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse}
      overload: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Parser*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Descriptor
      commentId: P:Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Descriptor
      language: CSharp
      name:
        CSharp: Descriptor
        VB: Descriptor
      nameWithType:
        CSharp: ListProjectsResponse.Descriptor
        VB: ListProjectsResponse.Descriptor
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Descriptor
        VB: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Descriptor
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: Descriptor
        path: ''
        startLine: 15281
      syntax:
        content:
          CSharp: public static pbr.MessageDescriptor Descriptor { get; }
          VB: Public Shared ReadOnly Property Descriptor As pbr.MessageDescriptor
        parameters: []
        return:
          type: pbr.MessageDescriptor
      overload: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Descriptor*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.#ctor
      commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.#ctor
      language: CSharp
      name:
        CSharp: ListProjectsResponse()
        VB: ListProjectsResponse()
      nameWithType:
        CSharp: ListProjectsResponse.ListProjectsResponse()
        VB: ListProjectsResponse.ListProjectsResponse()
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.ListProjectsResponse()
        VB: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.ListProjectsResponse()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: .ctor
        path: ''
        startLine: 15291
      syntax:
        content:
          CSharp: public ListProjectsResponse()
          VB: Public Sub New
      overload: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.#ctor(Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse)
      commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.#ctor(Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse)
      language: CSharp
      name:
        CSharp: ListProjectsResponse(ListProjectsResponse)
        VB: ListProjectsResponse(ListProjectsResponse)
      nameWithType:
        CSharp: ListProjectsResponse.ListProjectsResponse(ListProjectsResponse)
        VB: ListProjectsResponse.ListProjectsResponse(ListProjectsResponse)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.ListProjectsResponse(Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse)
        VB: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.ListProjectsResponse(Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: .ctor
        path: ''
        startLine: 15298
      syntax:
        content:
          CSharp: public ListProjectsResponse(ListProjectsResponse other)
          VB: Public Sub New(other As ListProjectsResponse)
        parameters:
        - id: other
          type: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse
      overload: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Clone
      commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Clone
      language: CSharp
      name:
        CSharp: Clone()
        VB: Clone()
      nameWithType:
        CSharp: ListProjectsResponse.Clone()
        VB: ListProjectsResponse.Clone()
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Clone()
        VB: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Clone()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: Clone
        path: ''
        startLine: 15304
      syntax:
        content:
          CSharp: public ListProjectsResponse Clone()
          VB: Public Function Clone As ListProjectsResponse
        return:
          type: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse
      overload: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Clone*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.ProjectsFieldNumber
      commentId: F:Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.ProjectsFieldNumber
      language: CSharp
      name:
        CSharp: ProjectsFieldNumber
        VB: ProjectsFieldNumber
      nameWithType:
        CSharp: ListProjectsResponse.ProjectsFieldNumber
        VB: ListProjectsResponse.ProjectsFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.ProjectsFieldNumber
        VB: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.ProjectsFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: ProjectsFieldNumber
        path: ''
        startLine: 15310
      summary: Field number for the &quot;projects&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int ProjectsFieldNumber = 1
          VB: Public Const ProjectsFieldNumber As Integer = 1
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Projects
      commentId: P:Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Projects
      language: CSharp
      name:
        CSharp: Projects
        VB: Projects
      nameWithType:
        CSharp: ListProjectsResponse.Projects
        VB: ListProjectsResponse.Projects
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Projects
        VB: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Projects
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: Projects
        path: ''
        startLine: 15314
      syntax:
        content:
          CSharp: public pbc.RepeatedField<Project> Projects { get; }
          VB: Public ReadOnly Property Projects As pbc.RepeatedField(Of Project)
        parameters: []
        return:
          type: pbc.RepeatedField{Unity.Reflect.ProjectServer.Services.Publisher.Project}
      overload: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Projects*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Equals(System.Object)
      commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Equals(System.Object)
      language: CSharp
      name:
        CSharp: Equals(Object)
        VB: Equals(Object)
      nameWithType:
        CSharp: ListProjectsResponse.Equals(Object)
        VB: ListProjectsResponse.Equals(Object)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Equals(System.Object)
        VB: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Equals(System.Object)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: Equals
        path: ''
        startLine: 15319
      syntax:
        content:
          CSharp: public override bool Equals(object other)
          VB: Public Overrides Function Equals(other As Object) As Boolean
        parameters:
        - id: other
          type: System.Object
        return:
          type: System.Boolean
      overload: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Equals*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Equals(Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse)
      commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Equals(Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse)
      language: CSharp
      name:
        CSharp: Equals(ListProjectsResponse)
        VB: Equals(ListProjectsResponse)
      nameWithType:
        CSharp: ListProjectsResponse.Equals(ListProjectsResponse)
        VB: ListProjectsResponse.Equals(ListProjectsResponse)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Equals(Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse)
        VB: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Equals(Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: Equals
        path: ''
        startLine: 15324
      syntax:
        content:
          CSharp: public bool Equals(ListProjectsResponse other)
          VB: Public Function Equals(other As ListProjectsResponse) As Boolean
        parameters:
        - id: other
          type: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse
        return:
          type: System.Boolean
      overload: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Equals*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.GetHashCode
      commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.GetHashCode
      language: CSharp
      name:
        CSharp: GetHashCode()
        VB: GetHashCode()
      nameWithType:
        CSharp: ListProjectsResponse.GetHashCode()
        VB: ListProjectsResponse.GetHashCode()
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.GetHashCode()
        VB: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.GetHashCode()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: GetHashCode
        path: ''
        startLine: 15336
      syntax:
        content:
          CSharp: public override int GetHashCode()
          VB: Public Overrides Function GetHashCode As Integer
        return:
          type: System.Int32
      overload: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.GetHashCode*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.ToString
      commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.ToString
      language: CSharp
      name:
        CSharp: ToString()
        VB: ToString()
      nameWithType:
        CSharp: ListProjectsResponse.ToString()
        VB: ListProjectsResponse.ToString()
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.ToString()
        VB: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.ToString()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: ToString
        path: ''
        startLine: 15346
      syntax:
        content:
          CSharp: public override string ToString()
          VB: Public Overrides Function ToString As String
        return:
          type: System.String
      overload: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.ToString*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.WriteTo(pb.CodedOutputStream)
      commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.WriteTo(pb.CodedOutputStream)
      language: CSharp
      name:
        CSharp: WriteTo(pb.CodedOutputStream)
        VB: WriteTo(pb.CodedOutputStream)
      nameWithType:
        CSharp: ListProjectsResponse.WriteTo(pb.CodedOutputStream)
        VB: ListProjectsResponse.WriteTo(pb.CodedOutputStream)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.WriteTo(pb.CodedOutputStream)
        VB: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.WriteTo(pb.CodedOutputStream)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: WriteTo
        path: ''
        startLine: 15351
      syntax:
        content:
          CSharp: public void WriteTo(pb.CodedOutputStream output)
          VB: Public Sub WriteTo(output As pb.CodedOutputStream)
        parameters:
        - id: output
          type: pb.CodedOutputStream
      overload: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.WriteTo*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.CalculateSize
      commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.CalculateSize
      language: CSharp
      name:
        CSharp: CalculateSize()
        VB: CalculateSize()
      nameWithType:
        CSharp: ListProjectsResponse.CalculateSize()
        VB: ListProjectsResponse.CalculateSize()
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.CalculateSize()
        VB: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.CalculateSize()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: CalculateSize
        path: ''
        startLine: 15359
      syntax:
        content:
          CSharp: public int CalculateSize()
          VB: Public Function CalculateSize As Integer
        return:
          type: System.Int32
      overload: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.CalculateSize*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.MergeFrom(Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse)
      commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.MergeFrom(Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse)
      language: CSharp
      name:
        CSharp: MergeFrom(ListProjectsResponse)
        VB: MergeFrom(ListProjectsResponse)
      nameWithType:
        CSharp: ListProjectsResponse.MergeFrom(ListProjectsResponse)
        VB: ListProjectsResponse.MergeFrom(ListProjectsResponse)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.MergeFrom(Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse)
        VB: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.MergeFrom(Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: MergeFrom
        path: ''
        startLine: 15369
      syntax:
        content:
          CSharp: public void MergeFrom(ListProjectsResponse other)
          VB: Public Sub MergeFrom(other As ListProjectsResponse)
        parameters:
        - id: other
          type: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse
      overload: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.MergeFrom*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.MergeFrom(pb.CodedInputStream)
      commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.MergeFrom(pb.CodedInputStream)
      language: CSharp
      name:
        CSharp: MergeFrom(pb.CodedInputStream)
        VB: MergeFrom(pb.CodedInputStream)
      nameWithType:
        CSharp: ListProjectsResponse.MergeFrom(pb.CodedInputStream)
        VB: ListProjectsResponse.MergeFrom(pb.CodedInputStream)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.MergeFrom(pb.CodedInputStream)
        VB: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.MergeFrom(pb.CodedInputStream)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: MergeFrom
        path: ''
        startLine: 15378
      syntax:
        content:
          CSharp: public void MergeFrom(pb.CodedInputStream input)
          VB: Public Sub MergeFrom(input As pb.CodedInputStream)
        parameters:
        - id: input
          type: pb.CodedInputStream
      overload: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.MergeFrom*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Unity.Reflect.ProjectServer.Services.Publisher.Project
    commentId: T:Unity.Reflect.ProjectServer.Services.Publisher.Project
    language: CSharp
    name:
      CSharp: Project
      VB: Project
    nameWithType:
      CSharp: Project
      VB: Project
    qualifiedName:
      CSharp: Unity.Reflect.ProjectServer.Services.Publisher.Project
      VB: Unity.Reflect.ProjectServer.Services.Publisher.Project
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect.ProjectServer.Services.Publisher
    source:
      id: Project
      path: ''
      startLine: 15396
    syntax:
      content:
        CSharp: 'public sealed class Project : pb.IMessage<Project>'
        VB: >-
          Public NotInheritable Class Project

              Inherits pb.IMessage(Of Project)
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - sealed
      - class
      VB:
      - Public
      - NotInheritable
      - Class
    items:
    - id: Unity.Reflect.ProjectServer.Services.Publisher.Project.Parser
      commentId: P:Unity.Reflect.ProjectServer.Services.Publisher.Project.Parser
      language: CSharp
      name:
        CSharp: Parser
        VB: Parser
      nameWithType:
        CSharp: Project.Parser
        VB: Project.Parser
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.Project.Parser
        VB: Unity.Reflect.ProjectServer.Services.Publisher.Project.Parser
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: Parser
        path: ''
        startLine: 15399
      syntax:
        content:
          CSharp: public static pb.MessageParser<Project> Parser { get; }
          VB: Public Shared ReadOnly Property Parser As pb.MessageParser(Of Project)
        parameters: []
        return:
          type: pb.MessageParser{Unity.Reflect.ProjectServer.Services.Publisher.Project}
      overload: Unity.Reflect.ProjectServer.Services.Publisher.Project.Parser*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Unity.Reflect.ProjectServer.Services.Publisher.Project.Descriptor
      commentId: P:Unity.Reflect.ProjectServer.Services.Publisher.Project.Descriptor
      language: CSharp
      name:
        CSharp: Descriptor
        VB: Descriptor
      nameWithType:
        CSharp: Project.Descriptor
        VB: Project.Descriptor
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.Project.Descriptor
        VB: Unity.Reflect.ProjectServer.Services.Publisher.Project.Descriptor
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: Descriptor
        path: ''
        startLine: 15402
      syntax:
        content:
          CSharp: public static pbr.MessageDescriptor Descriptor { get; }
          VB: Public Shared ReadOnly Property Descriptor As pbr.MessageDescriptor
        parameters: []
        return:
          type: pbr.MessageDescriptor
      overload: Unity.Reflect.ProjectServer.Services.Publisher.Project.Descriptor*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Unity.Reflect.ProjectServer.Services.Publisher.Project.#ctor
      commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.Project.#ctor
      language: CSharp
      name:
        CSharp: Project()
        VB: Project()
      nameWithType:
        CSharp: Project.Project()
        VB: Project.Project()
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.Project.Project()
        VB: Unity.Reflect.ProjectServer.Services.Publisher.Project.Project()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: .ctor
        path: ''
        startLine: 15412
      syntax:
        content:
          CSharp: public Project()
          VB: Public Sub New
      overload: Unity.Reflect.ProjectServer.Services.Publisher.Project.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Publisher.Project.#ctor(Unity.Reflect.ProjectServer.Services.Publisher.Project)
      commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.Project.#ctor(Unity.Reflect.ProjectServer.Services.Publisher.Project)
      language: CSharp
      name:
        CSharp: Project(Project)
        VB: Project(Project)
      nameWithType:
        CSharp: Project.Project(Project)
        VB: Project.Project(Project)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.Project.Project(Unity.Reflect.ProjectServer.Services.Publisher.Project)
        VB: Unity.Reflect.ProjectServer.Services.Publisher.Project.Project(Unity.Reflect.ProjectServer.Services.Publisher.Project)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: .ctor
        path: ''
        startLine: 15419
      syntax:
        content:
          CSharp: public Project(Project other)
          VB: Public Sub New(other As Project)
        parameters:
        - id: other
          type: Unity.Reflect.ProjectServer.Services.Publisher.Project
      overload: Unity.Reflect.ProjectServer.Services.Publisher.Project.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Publisher.Project.Clone
      commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.Project.Clone
      language: CSharp
      name:
        CSharp: Clone()
        VB: Clone()
      nameWithType:
        CSharp: Project.Clone()
        VB: Project.Clone()
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.Project.Clone()
        VB: Unity.Reflect.ProjectServer.Services.Publisher.Project.Clone()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: Clone
        path: ''
        startLine: 15426
      syntax:
        content:
          CSharp: public Project Clone()
          VB: Public Function Clone As Project
        return:
          type: Unity.Reflect.ProjectServer.Services.Publisher.Project
      overload: Unity.Reflect.ProjectServer.Services.Publisher.Project.Clone*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Publisher.Project.IdFieldNumber
      commentId: F:Unity.Reflect.ProjectServer.Services.Publisher.Project.IdFieldNumber
      language: CSharp
      name:
        CSharp: IdFieldNumber
        VB: IdFieldNumber
      nameWithType:
        CSharp: Project.IdFieldNumber
        VB: Project.IdFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.Project.IdFieldNumber
        VB: Unity.Reflect.ProjectServer.Services.Publisher.Project.IdFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: IdFieldNumber
        path: ''
        startLine: 15432
      summary: Field number for the &quot;id&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int IdFieldNumber = 1
          VB: Public Const IdFieldNumber As Integer = 1
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.ProjectServer.Services.Publisher.Project.Id
      commentId: P:Unity.Reflect.ProjectServer.Services.Publisher.Project.Id
      language: CSharp
      name:
        CSharp: Id
        VB: Id
      nameWithType:
        CSharp: Project.Id
        VB: Project.Id
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.Project.Id
        VB: Unity.Reflect.ProjectServer.Services.Publisher.Project.Id
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: Id
        path: ''
        startLine: 15434
      syntax:
        content:
          CSharp: public string Id { get; set; }
          VB: Public Property Id As String
        parameters: []
        return:
          type: System.String
      overload: Unity.Reflect.ProjectServer.Services.Publisher.Project.Id*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Publisher.Project.NameFieldNumber
      commentId: F:Unity.Reflect.ProjectServer.Services.Publisher.Project.NameFieldNumber
      language: CSharp
      name:
        CSharp: NameFieldNumber
        VB: NameFieldNumber
      nameWithType:
        CSharp: Project.NameFieldNumber
        VB: Project.NameFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.Project.NameFieldNumber
        VB: Unity.Reflect.ProjectServer.Services.Publisher.Project.NameFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: NameFieldNumber
        path: ''
        startLine: 15443
      summary: Field number for the &quot;name&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int NameFieldNumber = 2
          VB: Public Const NameFieldNumber As Integer = 2
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.ProjectServer.Services.Publisher.Project.Name
      commentId: P:Unity.Reflect.ProjectServer.Services.Publisher.Project.Name
      language: CSharp
      name:
        CSharp: Name
        VB: Name
      nameWithType:
        CSharp: Project.Name
        VB: Project.Name
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.Project.Name
        VB: Unity.Reflect.ProjectServer.Services.Publisher.Project.Name
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: Name
        path: ''
        startLine: 15445
      syntax:
        content:
          CSharp: public string Name { get; set; }
          VB: Public Property Name As String
        parameters: []
        return:
          type: System.String
      overload: Unity.Reflect.ProjectServer.Services.Publisher.Project.Name*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Publisher.Project.Equals(System.Object)
      commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.Project.Equals(System.Object)
      language: CSharp
      name:
        CSharp: Equals(Object)
        VB: Equals(Object)
      nameWithType:
        CSharp: Project.Equals(Object)
        VB: Project.Equals(Object)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.Project.Equals(System.Object)
        VB: Unity.Reflect.ProjectServer.Services.Publisher.Project.Equals(System.Object)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: Equals
        path: ''
        startLine: 15453
      syntax:
        content:
          CSharp: public override bool Equals(object other)
          VB: Public Overrides Function Equals(other As Object) As Boolean
        parameters:
        - id: other
          type: System.Object
        return:
          type: System.Boolean
      overload: Unity.Reflect.ProjectServer.Services.Publisher.Project.Equals*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.ProjectServer.Services.Publisher.Project.Equals(Unity.Reflect.ProjectServer.Services.Publisher.Project)
      commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.Project.Equals(Unity.Reflect.ProjectServer.Services.Publisher.Project)
      language: CSharp
      name:
        CSharp: Equals(Project)
        VB: Equals(Project)
      nameWithType:
        CSharp: Project.Equals(Project)
        VB: Project.Equals(Project)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.Project.Equals(Unity.Reflect.ProjectServer.Services.Publisher.Project)
        VB: Unity.Reflect.ProjectServer.Services.Publisher.Project.Equals(Unity.Reflect.ProjectServer.Services.Publisher.Project)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: Equals
        path: ''
        startLine: 15458
      syntax:
        content:
          CSharp: public bool Equals(Project other)
          VB: Public Function Equals(other As Project) As Boolean
        parameters:
        - id: other
          type: Unity.Reflect.ProjectServer.Services.Publisher.Project
        return:
          type: System.Boolean
      overload: Unity.Reflect.ProjectServer.Services.Publisher.Project.Equals*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Publisher.Project.GetHashCode
      commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.Project.GetHashCode
      language: CSharp
      name:
        CSharp: GetHashCode()
        VB: GetHashCode()
      nameWithType:
        CSharp: Project.GetHashCode()
        VB: Project.GetHashCode()
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.Project.GetHashCode()
        VB: Unity.Reflect.ProjectServer.Services.Publisher.Project.GetHashCode()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: GetHashCode
        path: ''
        startLine: 15471
      syntax:
        content:
          CSharp: public override int GetHashCode()
          VB: Public Overrides Function GetHashCode As Integer
        return:
          type: System.Int32
      overload: Unity.Reflect.ProjectServer.Services.Publisher.Project.GetHashCode*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.ProjectServer.Services.Publisher.Project.ToString
      commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.Project.ToString
      language: CSharp
      name:
        CSharp: ToString()
        VB: ToString()
      nameWithType:
        CSharp: Project.ToString()
        VB: Project.ToString()
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.Project.ToString()
        VB: Unity.Reflect.ProjectServer.Services.Publisher.Project.ToString()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: ToString
        path: ''
        startLine: 15482
      syntax:
        content:
          CSharp: public override string ToString()
          VB: Public Overrides Function ToString As String
        return:
          type: System.String
      overload: Unity.Reflect.ProjectServer.Services.Publisher.Project.ToString*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.ProjectServer.Services.Publisher.Project.WriteTo(pb.CodedOutputStream)
      commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.Project.WriteTo(pb.CodedOutputStream)
      language: CSharp
      name:
        CSharp: WriteTo(pb.CodedOutputStream)
        VB: WriteTo(pb.CodedOutputStream)
      nameWithType:
        CSharp: Project.WriteTo(pb.CodedOutputStream)
        VB: Project.WriteTo(pb.CodedOutputStream)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.Project.WriteTo(pb.CodedOutputStream)
        VB: Unity.Reflect.ProjectServer.Services.Publisher.Project.WriteTo(pb.CodedOutputStream)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: WriteTo
        path: ''
        startLine: 15487
      syntax:
        content:
          CSharp: public void WriteTo(pb.CodedOutputStream output)
          VB: Public Sub WriteTo(output As pb.CodedOutputStream)
        parameters:
        - id: output
          type: pb.CodedOutputStream
      overload: Unity.Reflect.ProjectServer.Services.Publisher.Project.WriteTo*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Publisher.Project.CalculateSize
      commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.Project.CalculateSize
      language: CSharp
      name:
        CSharp: CalculateSize()
        VB: CalculateSize()
      nameWithType:
        CSharp: Project.CalculateSize()
        VB: Project.CalculateSize()
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.Project.CalculateSize()
        VB: Unity.Reflect.ProjectServer.Services.Publisher.Project.CalculateSize()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: CalculateSize
        path: ''
        startLine: 15502
      syntax:
        content:
          CSharp: public int CalculateSize()
          VB: Public Function CalculateSize As Integer
        return:
          type: System.Int32
      overload: Unity.Reflect.ProjectServer.Services.Publisher.Project.CalculateSize*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Publisher.Project.MergeFrom(Unity.Reflect.ProjectServer.Services.Publisher.Project)
      commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.Project.MergeFrom(Unity.Reflect.ProjectServer.Services.Publisher.Project)
      language: CSharp
      name:
        CSharp: MergeFrom(Project)
        VB: MergeFrom(Project)
      nameWithType:
        CSharp: Project.MergeFrom(Project)
        VB: Project.MergeFrom(Project)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.Project.MergeFrom(Unity.Reflect.ProjectServer.Services.Publisher.Project)
        VB: Unity.Reflect.ProjectServer.Services.Publisher.Project.MergeFrom(Unity.Reflect.ProjectServer.Services.Publisher.Project)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: MergeFrom
        path: ''
        startLine: 15517
      syntax:
        content:
          CSharp: public void MergeFrom(Project other)
          VB: Public Sub MergeFrom(other As Project)
        parameters:
        - id: other
          type: Unity.Reflect.ProjectServer.Services.Publisher.Project
      overload: Unity.Reflect.ProjectServer.Services.Publisher.Project.MergeFrom*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Publisher.Project.MergeFrom(pb.CodedInputStream)
      commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.Project.MergeFrom(pb.CodedInputStream)
      language: CSharp
      name:
        CSharp: MergeFrom(pb.CodedInputStream)
        VB: MergeFrom(pb.CodedInputStream)
      nameWithType:
        CSharp: Project.MergeFrom(pb.CodedInputStream)
        VB: Project.MergeFrom(pb.CodedInputStream)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.Project.MergeFrom(pb.CodedInputStream)
        VB: Unity.Reflect.ProjectServer.Services.Publisher.Project.MergeFrom(pb.CodedInputStream)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: MergeFrom
        path: ''
        startLine: 15531
      syntax:
        content:
          CSharp: public void MergeFrom(pb.CodedInputStream input)
          VB: Public Sub MergeFrom(input As pb.CodedInputStream)
        parameters:
        - id: input
          type: pb.CodedInputStream
      overload: Unity.Reflect.ProjectServer.Services.Publisher.Project.MergeFrom*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest
    commentId: T:Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest
    language: CSharp
    name:
      CSharp: CreateProjectRequest
      VB: CreateProjectRequest
    nameWithType:
      CSharp: CreateProjectRequest
      VB: CreateProjectRequest
    qualifiedName:
      CSharp: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest
      VB: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect.ProjectServer.Services.Publisher
    source:
      id: CreateProjectRequest
      path: ''
      startLine: 15553
    syntax:
      content:
        CSharp: 'public sealed class CreateProjectRequest : pb.IMessage<CreateProjectRequest>'
        VB: >-
          Public NotInheritable Class CreateProjectRequest

              Inherits pb.IMessage(Of CreateProjectRequest)
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - sealed
      - class
      VB:
      - Public
      - NotInheritable
      - Class
    items:
    - id: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.Parser
      commentId: P:Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.Parser
      language: CSharp
      name:
        CSharp: Parser
        VB: Parser
      nameWithType:
        CSharp: CreateProjectRequest.Parser
        VB: CreateProjectRequest.Parser
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.Parser
        VB: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.Parser
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: Parser
        path: ''
        startLine: 15556
      syntax:
        content:
          CSharp: public static pb.MessageParser<CreateProjectRequest> Parser { get; }
          VB: Public Shared ReadOnly Property Parser As pb.MessageParser(Of CreateProjectRequest)
        parameters: []
        return:
          type: pb.MessageParser{Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest}
      overload: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.Parser*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.Descriptor
      commentId: P:Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.Descriptor
      language: CSharp
      name:
        CSharp: Descriptor
        VB: Descriptor
      nameWithType:
        CSharp: CreateProjectRequest.Descriptor
        VB: CreateProjectRequest.Descriptor
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.Descriptor
        VB: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.Descriptor
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: Descriptor
        path: ''
        startLine: 15559
      syntax:
        content:
          CSharp: public static pbr.MessageDescriptor Descriptor { get; }
          VB: Public Shared ReadOnly Property Descriptor As pbr.MessageDescriptor
        parameters: []
        return:
          type: pbr.MessageDescriptor
      overload: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.Descriptor*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.#ctor
      commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.#ctor
      language: CSharp
      name:
        CSharp: CreateProjectRequest()
        VB: CreateProjectRequest()
      nameWithType:
        CSharp: CreateProjectRequest.CreateProjectRequest()
        VB: CreateProjectRequest.CreateProjectRequest()
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.CreateProjectRequest()
        VB: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.CreateProjectRequest()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: .ctor
        path: ''
        startLine: 15569
      syntax:
        content:
          CSharp: public CreateProjectRequest()
          VB: Public Sub New
      overload: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.#ctor(Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest)
      commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.#ctor(Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest)
      language: CSharp
      name:
        CSharp: CreateProjectRequest(CreateProjectRequest)
        VB: CreateProjectRequest(CreateProjectRequest)
      nameWithType:
        CSharp: CreateProjectRequest.CreateProjectRequest(CreateProjectRequest)
        VB: CreateProjectRequest.CreateProjectRequest(CreateProjectRequest)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.CreateProjectRequest(Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest)
        VB: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.CreateProjectRequest(Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: .ctor
        path: ''
        startLine: 15576
      syntax:
        content:
          CSharp: public CreateProjectRequest(CreateProjectRequest other)
          VB: Public Sub New(other As CreateProjectRequest)
        parameters:
        - id: other
          type: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest
      overload: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.Clone
      commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.Clone
      language: CSharp
      name:
        CSharp: Clone()
        VB: Clone()
      nameWithType:
        CSharp: CreateProjectRequest.Clone()
        VB: CreateProjectRequest.Clone()
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.Clone()
        VB: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.Clone()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: Clone
        path: ''
        startLine: 15583
      syntax:
        content:
          CSharp: public CreateProjectRequest Clone()
          VB: Public Function Clone As CreateProjectRequest
        return:
          type: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest
      overload: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.Clone*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.ProjectNameFieldNumber
      commentId: F:Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.ProjectNameFieldNumber
      language: CSharp
      name:
        CSharp: ProjectNameFieldNumber
        VB: ProjectNameFieldNumber
      nameWithType:
        CSharp: CreateProjectRequest.ProjectNameFieldNumber
        VB: CreateProjectRequest.ProjectNameFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.ProjectNameFieldNumber
        VB: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.ProjectNameFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: ProjectNameFieldNumber
        path: ''
        startLine: 15589
      summary: Field number for the &quot;projectName&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int ProjectNameFieldNumber = 1
          VB: Public Const ProjectNameFieldNumber As Integer = 1
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.ProjectName
      commentId: P:Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.ProjectName
      language: CSharp
      name:
        CSharp: ProjectName
        VB: ProjectName
      nameWithType:
        CSharp: CreateProjectRequest.ProjectName
        VB: CreateProjectRequest.ProjectName
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.ProjectName
        VB: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.ProjectName
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: ProjectName
        path: ''
        startLine: 15591
      syntax:
        content:
          CSharp: public string ProjectName { get; set; }
          VB: Public Property ProjectName As String
        parameters: []
        return:
          type: System.String
      overload: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.ProjectName*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.OrganizationNameFieldNumber
      commentId: F:Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.OrganizationNameFieldNumber
      language: CSharp
      name:
        CSharp: OrganizationNameFieldNumber
        VB: OrganizationNameFieldNumber
      nameWithType:
        CSharp: CreateProjectRequest.OrganizationNameFieldNumber
        VB: CreateProjectRequest.OrganizationNameFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.OrganizationNameFieldNumber
        VB: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.OrganizationNameFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: OrganizationNameFieldNumber
        path: ''
        startLine: 15600
      summary: Field number for the &quot;organizationName&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int OrganizationNameFieldNumber = 2
          VB: Public Const OrganizationNameFieldNumber As Integer = 2
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.OrganizationName
      commentId: P:Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.OrganizationName
      language: CSharp
      name:
        CSharp: OrganizationName
        VB: OrganizationName
      nameWithType:
        CSharp: CreateProjectRequest.OrganizationName
        VB: CreateProjectRequest.OrganizationName
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.OrganizationName
        VB: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.OrganizationName
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: OrganizationName
        path: ''
        startLine: 15602
      syntax:
        content:
          CSharp: public string OrganizationName { get; set; }
          VB: Public Property OrganizationName As String
        parameters: []
        return:
          type: System.String
      overload: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.OrganizationName*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.Equals(System.Object)
      commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.Equals(System.Object)
      language: CSharp
      name:
        CSharp: Equals(Object)
        VB: Equals(Object)
      nameWithType:
        CSharp: CreateProjectRequest.Equals(Object)
        VB: CreateProjectRequest.Equals(Object)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.Equals(System.Object)
        VB: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.Equals(System.Object)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: Equals
        path: ''
        startLine: 15610
      syntax:
        content:
          CSharp: public override bool Equals(object other)
          VB: Public Overrides Function Equals(other As Object) As Boolean
        parameters:
        - id: other
          type: System.Object
        return:
          type: System.Boolean
      overload: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.Equals*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.Equals(Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest)
      commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.Equals(Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest)
      language: CSharp
      name:
        CSharp: Equals(CreateProjectRequest)
        VB: Equals(CreateProjectRequest)
      nameWithType:
        CSharp: CreateProjectRequest.Equals(CreateProjectRequest)
        VB: CreateProjectRequest.Equals(CreateProjectRequest)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.Equals(Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest)
        VB: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.Equals(Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: Equals
        path: ''
        startLine: 15615
      syntax:
        content:
          CSharp: public bool Equals(CreateProjectRequest other)
          VB: Public Function Equals(other As CreateProjectRequest) As Boolean
        parameters:
        - id: other
          type: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest
        return:
          type: System.Boolean
      overload: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.Equals*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.GetHashCode
      commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.GetHashCode
      language: CSharp
      name:
        CSharp: GetHashCode()
        VB: GetHashCode()
      nameWithType:
        CSharp: CreateProjectRequest.GetHashCode()
        VB: CreateProjectRequest.GetHashCode()
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.GetHashCode()
        VB: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.GetHashCode()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: GetHashCode
        path: ''
        startLine: 15628
      syntax:
        content:
          CSharp: public override int GetHashCode()
          VB: Public Overrides Function GetHashCode As Integer
        return:
          type: System.Int32
      overload: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.GetHashCode*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.ToString
      commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.ToString
      language: CSharp
      name:
        CSharp: ToString()
        VB: ToString()
      nameWithType:
        CSharp: CreateProjectRequest.ToString()
        VB: CreateProjectRequest.ToString()
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.ToString()
        VB: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.ToString()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: ToString
        path: ''
        startLine: 15639
      syntax:
        content:
          CSharp: public override string ToString()
          VB: Public Overrides Function ToString As String
        return:
          type: System.String
      overload: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.ToString*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.WriteTo(pb.CodedOutputStream)
      commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.WriteTo(pb.CodedOutputStream)
      language: CSharp
      name:
        CSharp: WriteTo(pb.CodedOutputStream)
        VB: WriteTo(pb.CodedOutputStream)
      nameWithType:
        CSharp: CreateProjectRequest.WriteTo(pb.CodedOutputStream)
        VB: CreateProjectRequest.WriteTo(pb.CodedOutputStream)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.WriteTo(pb.CodedOutputStream)
        VB: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.WriteTo(pb.CodedOutputStream)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: WriteTo
        path: ''
        startLine: 15644
      syntax:
        content:
          CSharp: public void WriteTo(pb.CodedOutputStream output)
          VB: Public Sub WriteTo(output As pb.CodedOutputStream)
        parameters:
        - id: output
          type: pb.CodedOutputStream
      overload: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.WriteTo*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.CalculateSize
      commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.CalculateSize
      language: CSharp
      name:
        CSharp: CalculateSize()
        VB: CalculateSize()
      nameWithType:
        CSharp: CreateProjectRequest.CalculateSize()
        VB: CreateProjectRequest.CalculateSize()
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.CalculateSize()
        VB: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.CalculateSize()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: CalculateSize
        path: ''
        startLine: 15659
      syntax:
        content:
          CSharp: public int CalculateSize()
          VB: Public Function CalculateSize As Integer
        return:
          type: System.Int32
      overload: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.CalculateSize*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.MergeFrom(Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest)
      commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.MergeFrom(Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest)
      language: CSharp
      name:
        CSharp: MergeFrom(CreateProjectRequest)
        VB: MergeFrom(CreateProjectRequest)
      nameWithType:
        CSharp: CreateProjectRequest.MergeFrom(CreateProjectRequest)
        VB: CreateProjectRequest.MergeFrom(CreateProjectRequest)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.MergeFrom(Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest)
        VB: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.MergeFrom(Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: MergeFrom
        path: ''
        startLine: 15674
      syntax:
        content:
          CSharp: public void MergeFrom(CreateProjectRequest other)
          VB: Public Sub MergeFrom(other As CreateProjectRequest)
        parameters:
        - id: other
          type: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest
      overload: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.MergeFrom*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.MergeFrom(pb.CodedInputStream)
      commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.MergeFrom(pb.CodedInputStream)
      language: CSharp
      name:
        CSharp: MergeFrom(pb.CodedInputStream)
        VB: MergeFrom(pb.CodedInputStream)
      nameWithType:
        CSharp: CreateProjectRequest.MergeFrom(pb.CodedInputStream)
        VB: CreateProjectRequest.MergeFrom(pb.CodedInputStream)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.MergeFrom(pb.CodedInputStream)
        VB: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.MergeFrom(pb.CodedInputStream)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: MergeFrom
        path: ''
        startLine: 15688
      syntax:
        content:
          CSharp: public void MergeFrom(pb.CodedInputStream input)
          VB: Public Sub MergeFrom(input As pb.CodedInputStream)
        parameters:
        - id: input
          type: pb.CodedInputStream
      overload: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.MergeFrom*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService
    commentId: T:Unity.Reflect.ProjectServer.Services.Publisher.PublisherService
    language: CSharp
    name:
      CSharp: PublisherService
      VB: PublisherService
    nameWithType:
      CSharp: PublisherService
      VB: PublisherService
    qualifiedName:
      CSharp: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService
      VB: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect.ProjectServer.Services.Publisher
    source:
      id: PublisherService
      path: ''
      startLine: 15729
    summary: "\nThis service requires the client to be signed-in and have the Reflect entitlement\n"
    example: []
    syntax:
      content:
        CSharp: public static class PublisherService
        VB: Public Module PublisherService
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.Descriptor
      commentId: P:Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.Descriptor
      language: CSharp
      name:
        CSharp: Descriptor
        VB: Descriptor
      nameWithType:
        CSharp: PublisherService.Descriptor
        VB: PublisherService.Descriptor
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.Descriptor
        VB: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.Descriptor
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: Descriptor
        path: ''
        startLine: 15761
      summary: Service descriptor
      example: []
      syntax:
        content:
          CSharp: public static Google.Protobuf.Reflection.ServiceDescriptor Descriptor { get; }
          VB: Public Shared ReadOnly Property Descriptor As Google.Protobuf.Reflection.ServiceDescriptor
        parameters: []
        return:
          type: Google.Protobuf.Reflection.ServiceDescriptor
      overload: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.Descriptor*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.BindService(Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceBase)
      commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.BindService(Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceBase)
      language: CSharp
      name:
        CSharp: BindService(PublisherService.PublisherServiceBase)
        VB: BindService(PublisherService.PublisherServiceBase)
      nameWithType:
        CSharp: PublisherService.BindService(PublisherService.PublisherServiceBase)
        VB: PublisherService.BindService(PublisherService.PublisherServiceBase)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.BindService(Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceBase)
        VB: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.BindService(Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceBase)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: BindService
        path: ''
        startLine: 15867
      summary: Creates service definition that can be registered with a server
      example: []
      syntax:
        content:
          CSharp: public static grpc.ServerServiceDefinition BindService(PublisherService.PublisherServiceBase serviceImpl)
          VB: Public Shared Function BindService(serviceImpl As PublisherService.PublisherServiceBase) As grpc.ServerServiceDefinition
        parameters:
        - id: serviceImpl
          type: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceBase
          description: An object implementing the server-side handling logic.
        return:
          type: grpc.ServerServiceDefinition
      overload: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.BindService*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.BindService(grpc.ServiceBinderBase,Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceBase)
      commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.BindService(grpc.ServiceBinderBase,Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceBase)
      language: CSharp
      name:
        CSharp: BindService(grpc.ServiceBinderBase, PublisherService.PublisherServiceBase)
        VB: BindService(grpc.ServiceBinderBase, PublisherService.PublisherServiceBase)
      nameWithType:
        CSharp: PublisherService.BindService(grpc.ServiceBinderBase, PublisherService.PublisherServiceBase)
        VB: PublisherService.BindService(grpc.ServiceBinderBase, PublisherService.PublisherServiceBase)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.BindService(grpc.ServiceBinderBase, Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceBase)
        VB: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.BindService(grpc.ServiceBinderBase, Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceBase)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: BindService
        path: ''
        startLine: 15879
      summary: >-
        Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.

        Note: this method is part of an experimental API that can change or be removed without any prior notice.
      example: []
      syntax:
        content:
          CSharp: public static void BindService(grpc.ServiceBinderBase serviceBinder, PublisherService.PublisherServiceBase serviceImpl)
          VB: Public Shared Sub BindService(serviceBinder As grpc.ServiceBinderBase, serviceImpl As PublisherService.PublisherServiceBase)
        parameters:
        - id: serviceBinder
          type: grpc.ServiceBinderBase
          description: Service methods will be bound by calling <code>AddMethod</code> on this object.
        - id: serviceImpl
          type: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceBase
          description: An object implementing the server-side handling logic.
      overload: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.BindService*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceBase
    commentId: T:Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceBase
    language: CSharp
    name:
      CSharp: PublisherService.PublisherServiceBase
      VB: PublisherService.PublisherServiceBase
    nameWithType:
      CSharp: PublisherService.PublisherServiceBase
      VB: PublisherService.PublisherServiceBase
    qualifiedName:
      CSharp: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceBase
      VB: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceBase
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect.ProjectServer.Services.Publisher
    source:
      id: PublisherServiceBase
      path: ''
      startLine: 15767
    summary: Base class for server-side implementations of PublisherService
    example: []
    syntax:
      content:
        CSharp: public abstract class PublisherServiceBase
        VB: Public MustInherit Class PublisherServiceBase
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items:
    - id: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceBase.CreateProject(Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest,grpc.ServerCallContext)
      commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceBase.CreateProject(Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest,grpc.ServerCallContext)
      language: CSharp
      name:
        CSharp: CreateProject(CreateProjectRequest, grpc.ServerCallContext)
        VB: CreateProject(CreateProjectRequest, grpc.ServerCallContext)
      nameWithType:
        CSharp: PublisherService.PublisherServiceBase.CreateProject(CreateProjectRequest, grpc.ServerCallContext)
        VB: PublisherService.PublisherServiceBase.CreateProject(CreateProjectRequest, grpc.ServerCallContext)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceBase.CreateProject(Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest, grpc.ServerCallContext)
        VB: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceBase.CreateProject(Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest, grpc.ServerCallContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: CreateProject
        path: ''
        startLine: 15770
      syntax:
        content:
          CSharp: public virtual Task<Project> CreateProject(CreateProjectRequest request, grpc.ServerCallContext context)
          VB: Public Overridable Function CreateProject(request As CreateProjectRequest, context As grpc.ServerCallContext) As Task(Of Project)
        parameters:
        - id: request
          type: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest
        - id: context
          type: grpc.ServerCallContext
        return:
          type: System.Threading.Tasks.Task{Unity.Reflect.ProjectServer.Services.Publisher.Project}
      overload: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceBase.CreateProject*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceBase.ListProjects(Unity.Reflect.ProjectServer.Services.Empty,grpc.ServerCallContext)
      commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceBase.ListProjects(Unity.Reflect.ProjectServer.Services.Empty,grpc.ServerCallContext)
      language: CSharp
      name:
        CSharp: ListProjects(Empty, grpc.ServerCallContext)
        VB: ListProjects(Empty, grpc.ServerCallContext)
      nameWithType:
        CSharp: PublisherService.PublisherServiceBase.ListProjects(Empty, grpc.ServerCallContext)
        VB: PublisherService.PublisherServiceBase.ListProjects(Empty, grpc.ServerCallContext)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceBase.ListProjects(Unity.Reflect.ProjectServer.Services.Empty, grpc.ServerCallContext)
        VB: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceBase.ListProjects(Unity.Reflect.ProjectServer.Services.Empty, grpc.ServerCallContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: ListProjects
        path: ''
        startLine: 15775
      syntax:
        content:
          CSharp: public virtual Task<ListProjectsResponse> ListProjects(Empty request, grpc.ServerCallContext context)
          VB: Public Overridable Function ListProjects(request As Empty, context As grpc.ServerCallContext) As Task(Of ListProjectsResponse)
        parameters:
        - id: request
          type: Unity.Reflect.ProjectServer.Services.Empty
        - id: context
          type: grpc.ServerCallContext
        return:
          type: System.Threading.Tasks.Task{Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse}
      overload: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceBase.ListProjects*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceBase.ListSyncServers(Unity.Reflect.ProjectServer.Services.Empty,grpc.ServerCallContext)
      commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceBase.ListSyncServers(Unity.Reflect.ProjectServer.Services.Empty,grpc.ServerCallContext)
      language: CSharp
      name:
        CSharp: ListSyncServers(Empty, grpc.ServerCallContext)
        VB: ListSyncServers(Empty, grpc.ServerCallContext)
      nameWithType:
        CSharp: PublisherService.PublisherServiceBase.ListSyncServers(Empty, grpc.ServerCallContext)
        VB: PublisherService.PublisherServiceBase.ListSyncServers(Empty, grpc.ServerCallContext)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceBase.ListSyncServers(Unity.Reflect.ProjectServer.Services.Empty, grpc.ServerCallContext)
        VB: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceBase.ListSyncServers(Unity.Reflect.ProjectServer.Services.Empty, grpc.ServerCallContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: ListSyncServers
        path: ''
        startLine: 15780
      syntax:
        content:
          CSharp: public virtual Task<ListSyncServersResponse> ListSyncServers(Empty request, grpc.ServerCallContext context)
          VB: Public Overridable Function ListSyncServers(request As Empty, context As grpc.ServerCallContext) As Task(Of ListSyncServersResponse)
        parameters:
        - id: request
          type: Unity.Reflect.ProjectServer.Services.Empty
        - id: context
          type: grpc.ServerCallContext
        return:
          type: System.Threading.Tasks.Task{Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse}
      overload: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceBase.ListSyncServers*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
  - id: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient
    commentId: T:Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient
    language: CSharp
    name:
      CSharp: PublisherService.PublisherServiceClient
      VB: PublisherService.PublisherServiceClient
    nameWithType:
      CSharp: PublisherService.PublisherServiceClient
      VB: PublisherService.PublisherServiceClient
    qualifiedName:
      CSharp: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient
      VB: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect.ProjectServer.Services.Publisher
    source:
      id: PublisherServiceClient
      path: ''
      startLine: 15788
    summary: Client for PublisherService
    example: []
    syntax:
      content:
        CSharp: 'public class PublisherServiceClient : grpc.ClientBase<PublisherService.PublisherServiceClient>'
        VB: >-
          Public Class PublisherServiceClient

              Inherits grpc.ClientBase(Of PublisherService.PublisherServiceClient)
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.#ctor(grpc.Channel)
      commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.#ctor(grpc.Channel)
      language: CSharp
      name:
        CSharp: PublisherServiceClient(grpc.Channel)
        VB: PublisherServiceClient(grpc.Channel)
      nameWithType:
        CSharp: PublisherService.PublisherServiceClient.PublisherServiceClient(grpc.Channel)
        VB: PublisherService.PublisherServiceClient.PublisherServiceClient(grpc.Channel)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.PublisherServiceClient(grpc.Channel)
        VB: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.PublisherServiceClient(grpc.Channel)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: .ctor
        path: ''
        startLine: 15792
      summary: Creates a new client for PublisherService
      example: []
      syntax:
        content:
          CSharp: public PublisherServiceClient(grpc.Channel channel)
          VB: Public Sub New(channel As grpc.Channel)
        parameters:
        - id: channel
          type: grpc.Channel
          description: The channel to use to make remote calls.
      overload: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.#ctor(grpc.CallInvoker)
      commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.#ctor(grpc.CallInvoker)
      language: CSharp
      name:
        CSharp: PublisherServiceClient(grpc.CallInvoker)
        VB: PublisherServiceClient(grpc.CallInvoker)
      nameWithType:
        CSharp: PublisherService.PublisherServiceClient.PublisherServiceClient(grpc.CallInvoker)
        VB: PublisherService.PublisherServiceClient.PublisherServiceClient(grpc.CallInvoker)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.PublisherServiceClient(grpc.CallInvoker)
        VB: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.PublisherServiceClient(grpc.CallInvoker)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: .ctor
        path: ''
        startLine: 15797
      summary: Creates a new client for PublisherService that uses a custom <code>CallInvoker</code>.
      example: []
      syntax:
        content:
          CSharp: public PublisherServiceClient(grpc.CallInvoker callInvoker)
          VB: Public Sub New(callInvoker As grpc.CallInvoker)
        parameters:
        - id: callInvoker
          type: grpc.CallInvoker
          description: The callInvoker to use to make remote calls.
      overload: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.#ctor
      commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.#ctor
      language: CSharp
      name:
        CSharp: PublisherServiceClient()
        VB: PublisherServiceClient()
      nameWithType:
        CSharp: PublisherService.PublisherServiceClient.PublisherServiceClient()
        VB: PublisherService.PublisherServiceClient.PublisherServiceClient()
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.PublisherServiceClient()
        VB: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.PublisherServiceClient()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: .ctor
        path: ''
        startLine: 15801
      summary: Protected parameterless constructor to allow creation of test doubles.
      example: []
      syntax:
        content:
          CSharp: protected PublisherServiceClient()
          VB: Protected Sub New
      overload: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.#ctor*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.#ctor(ClientBaseConfiguration)
      commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.#ctor(ClientBaseConfiguration)
      language: CSharp
      name:
        CSharp: PublisherServiceClient(ClientBaseConfiguration)
        VB: PublisherServiceClient(ClientBaseConfiguration)
      nameWithType:
        CSharp: PublisherService.PublisherServiceClient.PublisherServiceClient(ClientBaseConfiguration)
        VB: PublisherService.PublisherServiceClient.PublisherServiceClient(ClientBaseConfiguration)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.PublisherServiceClient(ClientBaseConfiguration)
        VB: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.PublisherServiceClient(ClientBaseConfiguration)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: .ctor
        path: ''
        startLine: 15806
      summary: Protected constructor to allow creation of configured clients.
      example: []
      syntax:
        content:
          CSharp: protected PublisherServiceClient(ClientBaseConfiguration configuration)
          VB: Protected Sub New(configuration As ClientBaseConfiguration)
        parameters:
        - id: configuration
          type: ClientBaseConfiguration
          description: The client configuration.
      overload: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.#ctor*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.CreateProject(Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
      commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.CreateProject(Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
      language: CSharp
      name:
        CSharp: CreateProject(CreateProjectRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
        VB: CreateProject(CreateProjectRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
      nameWithType:
        CSharp: PublisherService.PublisherServiceClient.CreateProject(CreateProjectRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
        VB: PublisherService.PublisherServiceClient.CreateProject(CreateProjectRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.CreateProject(Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest, grpc.Metadata, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
        VB: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.CreateProject(Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest, grpc.Metadata, System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: CreateProject
        path: ''
        startLine: 15810
      syntax:
        content:
          CSharp: public virtual Project CreateProject(CreateProjectRequest request, grpc.Metadata headers = null, DateTime? deadline = default(DateTime? ), CancellationToken cancellationToken = default(CancellationToken))
          VB: Public Overridable Function CreateProject(request As CreateProjectRequest, headers As grpc.Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As Project
        parameters:
        - id: request
          type: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest
        - id: headers
          type: grpc.Metadata
        - id: deadline
          type: System.Nullable{System.DateTime}
        - id: cancellationToken
          type: System.Threading.CancellationToken
        return:
          type: Unity.Reflect.ProjectServer.Services.Publisher.Project
      overload: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.CreateProject*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.CreateProject(Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest,grpc.CallOptions)
      commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.CreateProject(Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest,grpc.CallOptions)
      language: CSharp
      name:
        CSharp: CreateProject(CreateProjectRequest, grpc.CallOptions)
        VB: CreateProject(CreateProjectRequest, grpc.CallOptions)
      nameWithType:
        CSharp: PublisherService.PublisherServiceClient.CreateProject(CreateProjectRequest, grpc.CallOptions)
        VB: PublisherService.PublisherServiceClient.CreateProject(CreateProjectRequest, grpc.CallOptions)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.CreateProject(Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest, grpc.CallOptions)
        VB: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.CreateProject(Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest, grpc.CallOptions)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: CreateProject
        path: ''
        startLine: 15814
      syntax:
        content:
          CSharp: public virtual Project CreateProject(CreateProjectRequest request, grpc.CallOptions options)
          VB: Public Overridable Function CreateProject(request As CreateProjectRequest, options As grpc.CallOptions) As Project
        parameters:
        - id: request
          type: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest
        - id: options
          type: grpc.CallOptions
        return:
          type: Unity.Reflect.ProjectServer.Services.Publisher.Project
      overload: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.CreateProject*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.CreateProjectAsync(Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
      commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.CreateProjectAsync(Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
      language: CSharp
      name:
        CSharp: CreateProjectAsync(CreateProjectRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
        VB: CreateProjectAsync(CreateProjectRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
      nameWithType:
        CSharp: PublisherService.PublisherServiceClient.CreateProjectAsync(CreateProjectRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
        VB: PublisherService.PublisherServiceClient.CreateProjectAsync(CreateProjectRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.CreateProjectAsync(Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest, grpc.Metadata, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
        VB: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.CreateProjectAsync(Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest, grpc.Metadata, System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: CreateProjectAsync
        path: ''
        startLine: 15818
      syntax:
        content:
          CSharp: public virtual grpc.AsyncUnaryCall<Project> CreateProjectAsync(CreateProjectRequest request, grpc.Metadata headers = null, DateTime? deadline = default(DateTime? ), CancellationToken cancellationToken = default(CancellationToken))
          VB: Public Overridable Function CreateProjectAsync(request As CreateProjectRequest, headers As grpc.Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As grpc.AsyncUnaryCall(Of Project)
        parameters:
        - id: request
          type: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest
        - id: headers
          type: grpc.Metadata
        - id: deadline
          type: System.Nullable{System.DateTime}
        - id: cancellationToken
          type: System.Threading.CancellationToken
        return:
          type: grpc.AsyncUnaryCall{Unity.Reflect.ProjectServer.Services.Publisher.Project}
      overload: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.CreateProjectAsync*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.CreateProjectAsync(Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest,grpc.CallOptions)
      commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.CreateProjectAsync(Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest,grpc.CallOptions)
      language: CSharp
      name:
        CSharp: CreateProjectAsync(CreateProjectRequest, grpc.CallOptions)
        VB: CreateProjectAsync(CreateProjectRequest, grpc.CallOptions)
      nameWithType:
        CSharp: PublisherService.PublisherServiceClient.CreateProjectAsync(CreateProjectRequest, grpc.CallOptions)
        VB: PublisherService.PublisherServiceClient.CreateProjectAsync(CreateProjectRequest, grpc.CallOptions)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.CreateProjectAsync(Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest, grpc.CallOptions)
        VB: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.CreateProjectAsync(Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest, grpc.CallOptions)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: CreateProjectAsync
        path: ''
        startLine: 15822
      syntax:
        content:
          CSharp: public virtual grpc.AsyncUnaryCall<Project> CreateProjectAsync(CreateProjectRequest request, grpc.CallOptions options)
          VB: Public Overridable Function CreateProjectAsync(request As CreateProjectRequest, options As grpc.CallOptions) As grpc.AsyncUnaryCall(Of Project)
        parameters:
        - id: request
          type: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest
        - id: options
          type: grpc.CallOptions
        return:
          type: grpc.AsyncUnaryCall{Unity.Reflect.ProjectServer.Services.Publisher.Project}
      overload: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.CreateProjectAsync*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListProjects(Unity.Reflect.ProjectServer.Services.Empty,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
      commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListProjects(Unity.Reflect.ProjectServer.Services.Empty,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
      language: CSharp
      name:
        CSharp: ListProjects(Empty, grpc.Metadata, Nullable<DateTime>, CancellationToken)
        VB: ListProjects(Empty, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
      nameWithType:
        CSharp: PublisherService.PublisherServiceClient.ListProjects(Empty, grpc.Metadata, Nullable<DateTime>, CancellationToken)
        VB: PublisherService.PublisherServiceClient.ListProjects(Empty, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListProjects(Unity.Reflect.ProjectServer.Services.Empty, grpc.Metadata, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
        VB: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListProjects(Unity.Reflect.ProjectServer.Services.Empty, grpc.Metadata, System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: ListProjects
        path: ''
        startLine: 15826
      syntax:
        content:
          CSharp: public virtual ListProjectsResponse ListProjects(Empty request, grpc.Metadata headers = null, DateTime? deadline = default(DateTime? ), CancellationToken cancellationToken = default(CancellationToken))
          VB: Public Overridable Function ListProjects(request As Empty, headers As grpc.Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As ListProjectsResponse
        parameters:
        - id: request
          type: Unity.Reflect.ProjectServer.Services.Empty
        - id: headers
          type: grpc.Metadata
        - id: deadline
          type: System.Nullable{System.DateTime}
        - id: cancellationToken
          type: System.Threading.CancellationToken
        return:
          type: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse
      overload: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListProjects*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListProjects(Unity.Reflect.ProjectServer.Services.Empty,grpc.CallOptions)
      commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListProjects(Unity.Reflect.ProjectServer.Services.Empty,grpc.CallOptions)
      language: CSharp
      name:
        CSharp: ListProjects(Empty, grpc.CallOptions)
        VB: ListProjects(Empty, grpc.CallOptions)
      nameWithType:
        CSharp: PublisherService.PublisherServiceClient.ListProjects(Empty, grpc.CallOptions)
        VB: PublisherService.PublisherServiceClient.ListProjects(Empty, grpc.CallOptions)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListProjects(Unity.Reflect.ProjectServer.Services.Empty, grpc.CallOptions)
        VB: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListProjects(Unity.Reflect.ProjectServer.Services.Empty, grpc.CallOptions)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: ListProjects
        path: ''
        startLine: 15830
      syntax:
        content:
          CSharp: public virtual ListProjectsResponse ListProjects(Empty request, grpc.CallOptions options)
          VB: Public Overridable Function ListProjects(request As Empty, options As grpc.CallOptions) As ListProjectsResponse
        parameters:
        - id: request
          type: Unity.Reflect.ProjectServer.Services.Empty
        - id: options
          type: grpc.CallOptions
        return:
          type: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse
      overload: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListProjects*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListProjectsAsync(Unity.Reflect.ProjectServer.Services.Empty,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
      commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListProjectsAsync(Unity.Reflect.ProjectServer.Services.Empty,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
      language: CSharp
      name:
        CSharp: ListProjectsAsync(Empty, grpc.Metadata, Nullable<DateTime>, CancellationToken)
        VB: ListProjectsAsync(Empty, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
      nameWithType:
        CSharp: PublisherService.PublisherServiceClient.ListProjectsAsync(Empty, grpc.Metadata, Nullable<DateTime>, CancellationToken)
        VB: PublisherService.PublisherServiceClient.ListProjectsAsync(Empty, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListProjectsAsync(Unity.Reflect.ProjectServer.Services.Empty, grpc.Metadata, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
        VB: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListProjectsAsync(Unity.Reflect.ProjectServer.Services.Empty, grpc.Metadata, System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: ListProjectsAsync
        path: ''
        startLine: 15834
      syntax:
        content:
          CSharp: public virtual grpc.AsyncUnaryCall<ListProjectsResponse> ListProjectsAsync(Empty request, grpc.Metadata headers = null, DateTime? deadline = default(DateTime? ), CancellationToken cancellationToken = default(CancellationToken))
          VB: Public Overridable Function ListProjectsAsync(request As Empty, headers As grpc.Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As grpc.AsyncUnaryCall(Of ListProjectsResponse)
        parameters:
        - id: request
          type: Unity.Reflect.ProjectServer.Services.Empty
        - id: headers
          type: grpc.Metadata
        - id: deadline
          type: System.Nullable{System.DateTime}
        - id: cancellationToken
          type: System.Threading.CancellationToken
        return:
          type: grpc.AsyncUnaryCall{Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse}
      overload: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListProjectsAsync*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListProjectsAsync(Unity.Reflect.ProjectServer.Services.Empty,grpc.CallOptions)
      commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListProjectsAsync(Unity.Reflect.ProjectServer.Services.Empty,grpc.CallOptions)
      language: CSharp
      name:
        CSharp: ListProjectsAsync(Empty, grpc.CallOptions)
        VB: ListProjectsAsync(Empty, grpc.CallOptions)
      nameWithType:
        CSharp: PublisherService.PublisherServiceClient.ListProjectsAsync(Empty, grpc.CallOptions)
        VB: PublisherService.PublisherServiceClient.ListProjectsAsync(Empty, grpc.CallOptions)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListProjectsAsync(Unity.Reflect.ProjectServer.Services.Empty, grpc.CallOptions)
        VB: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListProjectsAsync(Unity.Reflect.ProjectServer.Services.Empty, grpc.CallOptions)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: ListProjectsAsync
        path: ''
        startLine: 15838
      syntax:
        content:
          CSharp: public virtual grpc.AsyncUnaryCall<ListProjectsResponse> ListProjectsAsync(Empty request, grpc.CallOptions options)
          VB: Public Overridable Function ListProjectsAsync(request As Empty, options As grpc.CallOptions) As grpc.AsyncUnaryCall(Of ListProjectsResponse)
        parameters:
        - id: request
          type: Unity.Reflect.ProjectServer.Services.Empty
        - id: options
          type: grpc.CallOptions
        return:
          type: grpc.AsyncUnaryCall{Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse}
      overload: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListProjectsAsync*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListSyncServers(Unity.Reflect.ProjectServer.Services.Empty,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
      commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListSyncServers(Unity.Reflect.ProjectServer.Services.Empty,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
      language: CSharp
      name:
        CSharp: ListSyncServers(Empty, grpc.Metadata, Nullable<DateTime>, CancellationToken)
        VB: ListSyncServers(Empty, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
      nameWithType:
        CSharp: PublisherService.PublisherServiceClient.ListSyncServers(Empty, grpc.Metadata, Nullable<DateTime>, CancellationToken)
        VB: PublisherService.PublisherServiceClient.ListSyncServers(Empty, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListSyncServers(Unity.Reflect.ProjectServer.Services.Empty, grpc.Metadata, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
        VB: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListSyncServers(Unity.Reflect.ProjectServer.Services.Empty, grpc.Metadata, System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: ListSyncServers
        path: ''
        startLine: 15842
      syntax:
        content:
          CSharp: public virtual ListSyncServersResponse ListSyncServers(Empty request, grpc.Metadata headers = null, DateTime? deadline = default(DateTime? ), CancellationToken cancellationToken = default(CancellationToken))
          VB: Public Overridable Function ListSyncServers(request As Empty, headers As grpc.Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As ListSyncServersResponse
        parameters:
        - id: request
          type: Unity.Reflect.ProjectServer.Services.Empty
        - id: headers
          type: grpc.Metadata
        - id: deadline
          type: System.Nullable{System.DateTime}
        - id: cancellationToken
          type: System.Threading.CancellationToken
        return:
          type: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse
      overload: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListSyncServers*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListSyncServers(Unity.Reflect.ProjectServer.Services.Empty,grpc.CallOptions)
      commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListSyncServers(Unity.Reflect.ProjectServer.Services.Empty,grpc.CallOptions)
      language: CSharp
      name:
        CSharp: ListSyncServers(Empty, grpc.CallOptions)
        VB: ListSyncServers(Empty, grpc.CallOptions)
      nameWithType:
        CSharp: PublisherService.PublisherServiceClient.ListSyncServers(Empty, grpc.CallOptions)
        VB: PublisherService.PublisherServiceClient.ListSyncServers(Empty, grpc.CallOptions)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListSyncServers(Unity.Reflect.ProjectServer.Services.Empty, grpc.CallOptions)
        VB: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListSyncServers(Unity.Reflect.ProjectServer.Services.Empty, grpc.CallOptions)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: ListSyncServers
        path: ''
        startLine: 15846
      syntax:
        content:
          CSharp: public virtual ListSyncServersResponse ListSyncServers(Empty request, grpc.CallOptions options)
          VB: Public Overridable Function ListSyncServers(request As Empty, options As grpc.CallOptions) As ListSyncServersResponse
        parameters:
        - id: request
          type: Unity.Reflect.ProjectServer.Services.Empty
        - id: options
          type: grpc.CallOptions
        return:
          type: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse
      overload: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListSyncServers*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListSyncServersAsync(Unity.Reflect.ProjectServer.Services.Empty,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
      commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListSyncServersAsync(Unity.Reflect.ProjectServer.Services.Empty,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
      language: CSharp
      name:
        CSharp: ListSyncServersAsync(Empty, grpc.Metadata, Nullable<DateTime>, CancellationToken)
        VB: ListSyncServersAsync(Empty, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
      nameWithType:
        CSharp: PublisherService.PublisherServiceClient.ListSyncServersAsync(Empty, grpc.Metadata, Nullable<DateTime>, CancellationToken)
        VB: PublisherService.PublisherServiceClient.ListSyncServersAsync(Empty, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListSyncServersAsync(Unity.Reflect.ProjectServer.Services.Empty, grpc.Metadata, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
        VB: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListSyncServersAsync(Unity.Reflect.ProjectServer.Services.Empty, grpc.Metadata, System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: ListSyncServersAsync
        path: ''
        startLine: 15850
      syntax:
        content:
          CSharp: public virtual grpc.AsyncUnaryCall<ListSyncServersResponse> ListSyncServersAsync(Empty request, grpc.Metadata headers = null, DateTime? deadline = default(DateTime? ), CancellationToken cancellationToken = default(CancellationToken))
          VB: Public Overridable Function ListSyncServersAsync(request As Empty, headers As grpc.Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As grpc.AsyncUnaryCall(Of ListSyncServersResponse)
        parameters:
        - id: request
          type: Unity.Reflect.ProjectServer.Services.Empty
        - id: headers
          type: grpc.Metadata
        - id: deadline
          type: System.Nullable{System.DateTime}
        - id: cancellationToken
          type: System.Threading.CancellationToken
        return:
          type: grpc.AsyncUnaryCall{Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse}
      overload: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListSyncServersAsync*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListSyncServersAsync(Unity.Reflect.ProjectServer.Services.Empty,grpc.CallOptions)
      commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListSyncServersAsync(Unity.Reflect.ProjectServer.Services.Empty,grpc.CallOptions)
      language: CSharp
      name:
        CSharp: ListSyncServersAsync(Empty, grpc.CallOptions)
        VB: ListSyncServersAsync(Empty, grpc.CallOptions)
      nameWithType:
        CSharp: PublisherService.PublisherServiceClient.ListSyncServersAsync(Empty, grpc.CallOptions)
        VB: PublisherService.PublisherServiceClient.ListSyncServersAsync(Empty, grpc.CallOptions)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListSyncServersAsync(Unity.Reflect.ProjectServer.Services.Empty, grpc.CallOptions)
        VB: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListSyncServersAsync(Unity.Reflect.ProjectServer.Services.Empty, grpc.CallOptions)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: ListSyncServersAsync
        path: ''
        startLine: 15854
      syntax:
        content:
          CSharp: public virtual grpc.AsyncUnaryCall<ListSyncServersResponse> ListSyncServersAsync(Empty request, grpc.CallOptions options)
          VB: Public Overridable Function ListSyncServersAsync(request As Empty, options As grpc.CallOptions) As grpc.AsyncUnaryCall(Of ListSyncServersResponse)
        parameters:
        - id: request
          type: Unity.Reflect.ProjectServer.Services.Empty
        - id: options
          type: grpc.CallOptions
        return:
          type: grpc.AsyncUnaryCall{Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse}
      overload: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListSyncServersAsync*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.NewInstance(ClientBaseConfiguration)
      commentId: M:Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.NewInstance(ClientBaseConfiguration)
      language: CSharp
      name:
        CSharp: NewInstance(ClientBaseConfiguration)
        VB: NewInstance(ClientBaseConfiguration)
      nameWithType:
        CSharp: PublisherService.PublisherServiceClient.NewInstance(ClientBaseConfiguration)
        VB: PublisherService.PublisherServiceClient.NewInstance(ClientBaseConfiguration)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.NewInstance(ClientBaseConfiguration)
        VB: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.NewInstance(ClientBaseConfiguration)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Publisher
      source:
        id: NewInstance
        path: ''
        startLine: 15859
      summary: Creates a new instance of client from given <code>ClientBaseConfiguration</code>.
      example: []
      syntax:
        content:
          CSharp: protected override PublisherService.PublisherServiceClient NewInstance(ClientBaseConfiguration configuration)
          VB: Protected Overrides Function NewInstance(configuration As ClientBaseConfiguration) As PublisherService.PublisherServiceClient
        parameters:
        - id: configuration
          type: ClientBaseConfiguration
        return:
          type: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient
      overload: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.NewInstance*
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
- id: Unity.Reflect.ProjectServer.Services.SyncServer
  commentId: N:Unity.Reflect.ProjectServer.Services.SyncServer
  language: CSharp
  name:
    CSharp: Unity.Reflect.ProjectServer.Services.SyncServer
    VB: Unity.Reflect.ProjectServer.Services.SyncServer
  nameWithType:
    CSharp: Unity.Reflect.ProjectServer.Services.SyncServer
    VB: Unity.Reflect.ProjectServer.Services.SyncServer
  qualifiedName:
    CSharp: Unity.Reflect.ProjectServer.Services.SyncServer
    VB: Unity.Reflect.ProjectServer.Services.SyncServer
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Unity.Reflect.ProjectServer.Services.SyncServer.SyncServerReflection
    commentId: T:Unity.Reflect.ProjectServer.Services.SyncServer.SyncServerReflection
    language: CSharp
    name:
      CSharp: SyncServerReflection
      VB: SyncServerReflection
    nameWithType:
      CSharp: SyncServerReflection
      VB: SyncServerReflection
    qualifiedName:
      CSharp: Unity.Reflect.ProjectServer.Services.SyncServer.SyncServerReflection
      VB: Unity.Reflect.ProjectServer.Services.SyncServer.SyncServerReflection
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect.ProjectServer.Services.SyncServer
    source:
      id: SyncServerReflection
      path: ''
      startLine: 15904
    summary: Holder for reflection information generated from ProjectServer/SyncServer.proto
    example: []
    syntax:
      content:
        CSharp: public static class SyncServerReflection
        VB: Public Module SyncServerReflection
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: Unity.Reflect.ProjectServer.Services.SyncServer.SyncServerReflection.Descriptor
      commentId: P:Unity.Reflect.ProjectServer.Services.SyncServer.SyncServerReflection.Descriptor
      language: CSharp
      name:
        CSharp: Descriptor
        VB: Descriptor
      nameWithType:
        CSharp: SyncServerReflection.Descriptor
        VB: SyncServerReflection.Descriptor
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.SyncServer.SyncServerReflection.Descriptor
        VB: Unity.Reflect.ProjectServer.Services.SyncServer.SyncServerReflection.Descriptor
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.SyncServer
      source:
        id: Descriptor
        path: ''
        startLine: 15908
      summary: File descriptor for ProjectServer/SyncServer.proto
      example: []
      syntax:
        content:
          CSharp: public static pbr.FileDescriptor Descriptor { get; }
          VB: Public Shared ReadOnly Property Descriptor As pbr.FileDescriptor
        parameters: []
        return:
          type: pbr.FileDescriptor
      overload: Unity.Reflect.ProjectServer.Services.SyncServer.SyncServerReflection.Descriptor*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
  - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest
    commentId: T:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest
    language: CSharp
    name:
      CSharp: RegistrationRequest
      VB: RegistrationRequest
    nameWithType:
      CSharp: RegistrationRequest
      VB: RegistrationRequest
    qualifiedName:
      CSharp: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest
      VB: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect.ProjectServer.Services.SyncServer
    source:
      id: RegistrationRequest
      path: ''
      startLine: 15945
    syntax:
      content:
        CSharp: 'public sealed class RegistrationRequest : pb.IMessage<RegistrationRequest>'
        VB: >-
          Public NotInheritable Class RegistrationRequest

              Inherits pb.IMessage(Of RegistrationRequest)
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - sealed
      - class
      VB:
      - Public
      - NotInheritable
      - Class
    items:
    - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.Parser
      commentId: P:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.Parser
      language: CSharp
      name:
        CSharp: Parser
        VB: Parser
      nameWithType:
        CSharp: RegistrationRequest.Parser
        VB: RegistrationRequest.Parser
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.Parser
        VB: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.Parser
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.SyncServer
      source:
        id: Parser
        path: ''
        startLine: 15948
      syntax:
        content:
          CSharp: public static pb.MessageParser<RegistrationRequest> Parser { get; }
          VB: Public Shared ReadOnly Property Parser As pb.MessageParser(Of RegistrationRequest)
        parameters: []
        return:
          type: pb.MessageParser{Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest}
      overload: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.Parser*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.Descriptor
      commentId: P:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.Descriptor
      language: CSharp
      name:
        CSharp: Descriptor
        VB: Descriptor
      nameWithType:
        CSharp: RegistrationRequest.Descriptor
        VB: RegistrationRequest.Descriptor
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.Descriptor
        VB: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.Descriptor
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.SyncServer
      source:
        id: Descriptor
        path: ''
        startLine: 15951
      syntax:
        content:
          CSharp: public static pbr.MessageDescriptor Descriptor { get; }
          VB: Public Shared ReadOnly Property Descriptor As pbr.MessageDescriptor
        parameters: []
        return:
          type: pbr.MessageDescriptor
      overload: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.Descriptor*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.#ctor
      commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.#ctor
      language: CSharp
      name:
        CSharp: RegistrationRequest()
        VB: RegistrationRequest()
      nameWithType:
        CSharp: RegistrationRequest.RegistrationRequest()
        VB: RegistrationRequest.RegistrationRequest()
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.RegistrationRequest()
        VB: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.RegistrationRequest()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.SyncServer
      source:
        id: .ctor
        path: ''
        startLine: 15961
      syntax:
        content:
          CSharp: public RegistrationRequest()
          VB: Public Sub New
      overload: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.#ctor(Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest)
      commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.#ctor(Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest)
      language: CSharp
      name:
        CSharp: RegistrationRequest(RegistrationRequest)
        VB: RegistrationRequest(RegistrationRequest)
      nameWithType:
        CSharp: RegistrationRequest.RegistrationRequest(RegistrationRequest)
        VB: RegistrationRequest.RegistrationRequest(RegistrationRequest)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.RegistrationRequest(Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest)
        VB: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.RegistrationRequest(Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.SyncServer
      source:
        id: .ctor
        path: ''
        startLine: 15968
      syntax:
        content:
          CSharp: public RegistrationRequest(RegistrationRequest other)
          VB: Public Sub New(other As RegistrationRequest)
        parameters:
        - id: other
          type: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest
      overload: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.Clone
      commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.Clone
      language: CSharp
      name:
        CSharp: Clone()
        VB: Clone()
      nameWithType:
        CSharp: RegistrationRequest.Clone()
        VB: RegistrationRequest.Clone()
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.Clone()
        VB: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.Clone()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.SyncServer
      source:
        id: Clone
        path: ''
        startLine: 15976
      syntax:
        content:
          CSharp: public RegistrationRequest Clone()
          VB: Public Function Clone As RegistrationRequest
        return:
          type: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest
      overload: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.Clone*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.MachineNameFieldNumber
      commentId: F:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.MachineNameFieldNumber
      language: CSharp
      name:
        CSharp: MachineNameFieldNumber
        VB: MachineNameFieldNumber
      nameWithType:
        CSharp: RegistrationRequest.MachineNameFieldNumber
        VB: RegistrationRequest.MachineNameFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.MachineNameFieldNumber
        VB: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.MachineNameFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.SyncServer
      source:
        id: MachineNameFieldNumber
        path: ''
        startLine: 15982
      summary: Field number for the &quot;machineName&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int MachineNameFieldNumber = 1
          VB: Public Const MachineNameFieldNumber As Integer = 1
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.MachineName
      commentId: P:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.MachineName
      language: CSharp
      name:
        CSharp: MachineName
        VB: MachineName
      nameWithType:
        CSharp: RegistrationRequest.MachineName
        VB: RegistrationRequest.MachineName
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.MachineName
        VB: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.MachineName
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.SyncServer
      source:
        id: MachineName
        path: ''
        startLine: 15984
      syntax:
        content:
          CSharp: public string MachineName { get; set; }
          VB: Public Property MachineName As String
        parameters: []
        return:
          type: System.String
      overload: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.MachineName*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.EndpointAddressFieldNumber
      commentId: F:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.EndpointAddressFieldNumber
      language: CSharp
      name:
        CSharp: EndpointAddressFieldNumber
        VB: EndpointAddressFieldNumber
      nameWithType:
        CSharp: RegistrationRequest.EndpointAddressFieldNumber
        VB: RegistrationRequest.EndpointAddressFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.EndpointAddressFieldNumber
        VB: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.EndpointAddressFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.SyncServer
      source:
        id: EndpointAddressFieldNumber
        path: ''
        startLine: 15993
      summary: Field number for the &quot;endpointAddress&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int EndpointAddressFieldNumber = 2
          VB: Public Const EndpointAddressFieldNumber As Integer = 2
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.EndpointAddress
      commentId: P:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.EndpointAddress
      language: CSharp
      name:
        CSharp: EndpointAddress
        VB: EndpointAddress
      nameWithType:
        CSharp: RegistrationRequest.EndpointAddress
        VB: RegistrationRequest.EndpointAddress
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.EndpointAddress
        VB: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.EndpointAddress
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.SyncServer
      source:
        id: EndpointAddress
        path: ''
        startLine: 15995
      syntax:
        content:
          CSharp: public string EndpointAddress { get; set; }
          VB: Public Property EndpointAddress As String
        parameters: []
        return:
          type: System.String
      overload: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.EndpointAddress*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.ProjectIdListFieldNumber
      commentId: F:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.ProjectIdListFieldNumber
      language: CSharp
      name:
        CSharp: ProjectIdListFieldNumber
        VB: ProjectIdListFieldNumber
      nameWithType:
        CSharp: RegistrationRequest.ProjectIdListFieldNumber
        VB: RegistrationRequest.ProjectIdListFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.ProjectIdListFieldNumber
        VB: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.ProjectIdListFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.SyncServer
      source:
        id: ProjectIdListFieldNumber
        path: ''
        startLine: 16004
      summary: Field number for the &quot;projectIdList&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int ProjectIdListFieldNumber = 3
          VB: Public Const ProjectIdListFieldNumber As Integer = 3
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.ProjectIdList
      commentId: P:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.ProjectIdList
      language: CSharp
      name:
        CSharp: ProjectIdList
        VB: ProjectIdList
      nameWithType:
        CSharp: RegistrationRequest.ProjectIdList
        VB: RegistrationRequest.ProjectIdList
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.ProjectIdList
        VB: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.ProjectIdList
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.SyncServer
      source:
        id: ProjectIdList
        path: ''
        startLine: 16008
      syntax:
        content:
          CSharp: public pbc.RepeatedField<string> ProjectIdList { get; }
          VB: Public ReadOnly Property ProjectIdList As pbc.RepeatedField(Of String)
        parameters: []
        return:
          type: pbc.RepeatedField{System.String}
      overload: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.ProjectIdList*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.Equals(System.Object)
      commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.Equals(System.Object)
      language: CSharp
      name:
        CSharp: Equals(Object)
        VB: Equals(Object)
      nameWithType:
        CSharp: RegistrationRequest.Equals(Object)
        VB: RegistrationRequest.Equals(Object)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.Equals(System.Object)
        VB: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.Equals(System.Object)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.SyncServer
      source:
        id: Equals
        path: ''
        startLine: 16013
      syntax:
        content:
          CSharp: public override bool Equals(object other)
          VB: Public Overrides Function Equals(other As Object) As Boolean
        parameters:
        - id: other
          type: System.Object
        return:
          type: System.Boolean
      overload: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.Equals*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.Equals(Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest)
      commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.Equals(Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest)
      language: CSharp
      name:
        CSharp: Equals(RegistrationRequest)
        VB: Equals(RegistrationRequest)
      nameWithType:
        CSharp: RegistrationRequest.Equals(RegistrationRequest)
        VB: RegistrationRequest.Equals(RegistrationRequest)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.Equals(Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest)
        VB: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.Equals(Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.SyncServer
      source:
        id: Equals
        path: ''
        startLine: 16018
      syntax:
        content:
          CSharp: public bool Equals(RegistrationRequest other)
          VB: Public Function Equals(other As RegistrationRequest) As Boolean
        parameters:
        - id: other
          type: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest
        return:
          type: System.Boolean
      overload: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.Equals*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.GetHashCode
      commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.GetHashCode
      language: CSharp
      name:
        CSharp: GetHashCode()
        VB: GetHashCode()
      nameWithType:
        CSharp: RegistrationRequest.GetHashCode()
        VB: RegistrationRequest.GetHashCode()
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.GetHashCode()
        VB: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.GetHashCode()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.SyncServer
      source:
        id: GetHashCode
        path: ''
        startLine: 16032
      syntax:
        content:
          CSharp: public override int GetHashCode()
          VB: Public Overrides Function GetHashCode As Integer
        return:
          type: System.Int32
      overload: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.GetHashCode*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.ToString
      commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.ToString
      language: CSharp
      name:
        CSharp: ToString()
        VB: ToString()
      nameWithType:
        CSharp: RegistrationRequest.ToString()
        VB: RegistrationRequest.ToString()
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.ToString()
        VB: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.ToString()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.SyncServer
      source:
        id: ToString
        path: ''
        startLine: 16044
      syntax:
        content:
          CSharp: public override string ToString()
          VB: Public Overrides Function ToString As String
        return:
          type: System.String
      overload: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.ToString*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.WriteTo(pb.CodedOutputStream)
      commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.WriteTo(pb.CodedOutputStream)
      language: CSharp
      name:
        CSharp: WriteTo(pb.CodedOutputStream)
        VB: WriteTo(pb.CodedOutputStream)
      nameWithType:
        CSharp: RegistrationRequest.WriteTo(pb.CodedOutputStream)
        VB: RegistrationRequest.WriteTo(pb.CodedOutputStream)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.WriteTo(pb.CodedOutputStream)
        VB: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.WriteTo(pb.CodedOutputStream)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.SyncServer
      source:
        id: WriteTo
        path: ''
        startLine: 16049
      syntax:
        content:
          CSharp: public void WriteTo(pb.CodedOutputStream output)
          VB: Public Sub WriteTo(output As pb.CodedOutputStream)
        parameters:
        - id: output
          type: pb.CodedOutputStream
      overload: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.WriteTo*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.CalculateSize
      commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.CalculateSize
      language: CSharp
      name:
        CSharp: CalculateSize()
        VB: CalculateSize()
      nameWithType:
        CSharp: RegistrationRequest.CalculateSize()
        VB: RegistrationRequest.CalculateSize()
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.CalculateSize()
        VB: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.CalculateSize()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.SyncServer
      source:
        id: CalculateSize
        path: ''
        startLine: 16065
      syntax:
        content:
          CSharp: public int CalculateSize()
          VB: Public Function CalculateSize As Integer
        return:
          type: System.Int32
      overload: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.CalculateSize*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.MergeFrom(Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest)
      commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.MergeFrom(Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest)
      language: CSharp
      name:
        CSharp: MergeFrom(RegistrationRequest)
        VB: MergeFrom(RegistrationRequest)
      nameWithType:
        CSharp: RegistrationRequest.MergeFrom(RegistrationRequest)
        VB: RegistrationRequest.MergeFrom(RegistrationRequest)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.MergeFrom(Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest)
        VB: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.MergeFrom(Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.SyncServer
      source:
        id: MergeFrom
        path: ''
        startLine: 16081
      syntax:
        content:
          CSharp: public void MergeFrom(RegistrationRequest other)
          VB: Public Sub MergeFrom(other As RegistrationRequest)
        parameters:
        - id: other
          type: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest
      overload: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.MergeFrom*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.MergeFrom(pb.CodedInputStream)
      commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.MergeFrom(pb.CodedInputStream)
      language: CSharp
      name:
        CSharp: MergeFrom(pb.CodedInputStream)
        VB: MergeFrom(pb.CodedInputStream)
      nameWithType:
        CSharp: RegistrationRequest.MergeFrom(pb.CodedInputStream)
        VB: RegistrationRequest.MergeFrom(pb.CodedInputStream)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.MergeFrom(pb.CodedInputStream)
        VB: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.MergeFrom(pb.CodedInputStream)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.SyncServer
      source:
        id: MergeFrom
        path: ''
        startLine: 16096
      syntax:
        content:
          CSharp: public void MergeFrom(pb.CodedInputStream input)
          VB: Public Sub MergeFrom(input As pb.CodedInputStream)
        parameters:
        - id: input
          type: pb.CodedInputStream
      overload: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.MergeFrom*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest
    commentId: T:Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest
    language: CSharp
    name:
      CSharp: KeepAliveRequest
      VB: KeepAliveRequest
    nameWithType:
      CSharp: KeepAliveRequest
      VB: KeepAliveRequest
    qualifiedName:
      CSharp: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest
      VB: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect.ProjectServer.Services.SyncServer
    source:
      id: KeepAliveRequest
      path: ''
      startLine: 16122
    syntax:
      content:
        CSharp: 'public sealed class KeepAliveRequest : pb.IMessage<KeepAliveRequest>'
        VB: >-
          Public NotInheritable Class KeepAliveRequest

              Inherits pb.IMessage(Of KeepAliveRequest)
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - sealed
      - class
      VB:
      - Public
      - NotInheritable
      - Class
    items:
    - id: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.Parser
      commentId: P:Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.Parser
      language: CSharp
      name:
        CSharp: Parser
        VB: Parser
      nameWithType:
        CSharp: KeepAliveRequest.Parser
        VB: KeepAliveRequest.Parser
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.Parser
        VB: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.Parser
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.SyncServer
      source:
        id: Parser
        path: ''
        startLine: 16125
      syntax:
        content:
          CSharp: public static pb.MessageParser<KeepAliveRequest> Parser { get; }
          VB: Public Shared ReadOnly Property Parser As pb.MessageParser(Of KeepAliveRequest)
        parameters: []
        return:
          type: pb.MessageParser{Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest}
      overload: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.Parser*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.Descriptor
      commentId: P:Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.Descriptor
      language: CSharp
      name:
        CSharp: Descriptor
        VB: Descriptor
      nameWithType:
        CSharp: KeepAliveRequest.Descriptor
        VB: KeepAliveRequest.Descriptor
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.Descriptor
        VB: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.Descriptor
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.SyncServer
      source:
        id: Descriptor
        path: ''
        startLine: 16128
      syntax:
        content:
          CSharp: public static pbr.MessageDescriptor Descriptor { get; }
          VB: Public Shared ReadOnly Property Descriptor As pbr.MessageDescriptor
        parameters: []
        return:
          type: pbr.MessageDescriptor
      overload: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.Descriptor*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.#ctor
      commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.#ctor
      language: CSharp
      name:
        CSharp: KeepAliveRequest()
        VB: KeepAliveRequest()
      nameWithType:
        CSharp: KeepAliveRequest.KeepAliveRequest()
        VB: KeepAliveRequest.KeepAliveRequest()
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.KeepAliveRequest()
        VB: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.KeepAliveRequest()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.SyncServer
      source:
        id: .ctor
        path: ''
        startLine: 16138
      syntax:
        content:
          CSharp: public KeepAliveRequest()
          VB: Public Sub New
      overload: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.#ctor(Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest)
      commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.#ctor(Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest)
      language: CSharp
      name:
        CSharp: KeepAliveRequest(KeepAliveRequest)
        VB: KeepAliveRequest(KeepAliveRequest)
      nameWithType:
        CSharp: KeepAliveRequest.KeepAliveRequest(KeepAliveRequest)
        VB: KeepAliveRequest.KeepAliveRequest(KeepAliveRequest)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.KeepAliveRequest(Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest)
        VB: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.KeepAliveRequest(Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.SyncServer
      source:
        id: .ctor
        path: ''
        startLine: 16145
      syntax:
        content:
          CSharp: public KeepAliveRequest(KeepAliveRequest other)
          VB: Public Sub New(other As KeepAliveRequest)
        parameters:
        - id: other
          type: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest
      overload: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.Clone
      commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.Clone
      language: CSharp
      name:
        CSharp: Clone()
        VB: Clone()
      nameWithType:
        CSharp: KeepAliveRequest.Clone()
        VB: KeepAliveRequest.Clone()
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.Clone()
        VB: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.Clone()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.SyncServer
      source:
        id: Clone
        path: ''
        startLine: 16151
      syntax:
        content:
          CSharp: public KeepAliveRequest Clone()
          VB: Public Function Clone As KeepAliveRequest
        return:
          type: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest
      overload: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.Clone*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.EndpointAddressFieldNumber
      commentId: F:Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.EndpointAddressFieldNumber
      language: CSharp
      name:
        CSharp: EndpointAddressFieldNumber
        VB: EndpointAddressFieldNumber
      nameWithType:
        CSharp: KeepAliveRequest.EndpointAddressFieldNumber
        VB: KeepAliveRequest.EndpointAddressFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.EndpointAddressFieldNumber
        VB: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.EndpointAddressFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.SyncServer
      source:
        id: EndpointAddressFieldNumber
        path: ''
        startLine: 16157
      summary: Field number for the &quot;endpointAddress&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int EndpointAddressFieldNumber = 1
          VB: Public Const EndpointAddressFieldNumber As Integer = 1
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.EndpointAddress
      commentId: P:Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.EndpointAddress
      language: CSharp
      name:
        CSharp: EndpointAddress
        VB: EndpointAddress
      nameWithType:
        CSharp: KeepAliveRequest.EndpointAddress
        VB: KeepAliveRequest.EndpointAddress
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.EndpointAddress
        VB: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.EndpointAddress
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.SyncServer
      source:
        id: EndpointAddress
        path: ''
        startLine: 16159
      syntax:
        content:
          CSharp: public string EndpointAddress { get; set; }
          VB: Public Property EndpointAddress As String
        parameters: []
        return:
          type: System.String
      overload: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.EndpointAddress*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.Equals(System.Object)
      commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.Equals(System.Object)
      language: CSharp
      name:
        CSharp: Equals(Object)
        VB: Equals(Object)
      nameWithType:
        CSharp: KeepAliveRequest.Equals(Object)
        VB: KeepAliveRequest.Equals(Object)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.Equals(System.Object)
        VB: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.Equals(System.Object)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.SyncServer
      source:
        id: Equals
        path: ''
        startLine: 16167
      syntax:
        content:
          CSharp: public override bool Equals(object other)
          VB: Public Overrides Function Equals(other As Object) As Boolean
        parameters:
        - id: other
          type: System.Object
        return:
          type: System.Boolean
      overload: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.Equals*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.Equals(Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest)
      commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.Equals(Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest)
      language: CSharp
      name:
        CSharp: Equals(KeepAliveRequest)
        VB: Equals(KeepAliveRequest)
      nameWithType:
        CSharp: KeepAliveRequest.Equals(KeepAliveRequest)
        VB: KeepAliveRequest.Equals(KeepAliveRequest)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.Equals(Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest)
        VB: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.Equals(Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.SyncServer
      source:
        id: Equals
        path: ''
        startLine: 16172
      syntax:
        content:
          CSharp: public bool Equals(KeepAliveRequest other)
          VB: Public Function Equals(other As KeepAliveRequest) As Boolean
        parameters:
        - id: other
          type: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest
        return:
          type: System.Boolean
      overload: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.Equals*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.GetHashCode
      commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.GetHashCode
      language: CSharp
      name:
        CSharp: GetHashCode()
        VB: GetHashCode()
      nameWithType:
        CSharp: KeepAliveRequest.GetHashCode()
        VB: KeepAliveRequest.GetHashCode()
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.GetHashCode()
        VB: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.GetHashCode()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.SyncServer
      source:
        id: GetHashCode
        path: ''
        startLine: 16184
      syntax:
        content:
          CSharp: public override int GetHashCode()
          VB: Public Overrides Function GetHashCode As Integer
        return:
          type: System.Int32
      overload: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.GetHashCode*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.ToString
      commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.ToString
      language: CSharp
      name:
        CSharp: ToString()
        VB: ToString()
      nameWithType:
        CSharp: KeepAliveRequest.ToString()
        VB: KeepAliveRequest.ToString()
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.ToString()
        VB: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.ToString()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.SyncServer
      source:
        id: ToString
        path: ''
        startLine: 16194
      syntax:
        content:
          CSharp: public override string ToString()
          VB: Public Overrides Function ToString As String
        return:
          type: System.String
      overload: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.ToString*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.WriteTo(pb.CodedOutputStream)
      commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.WriteTo(pb.CodedOutputStream)
      language: CSharp
      name:
        CSharp: WriteTo(pb.CodedOutputStream)
        VB: WriteTo(pb.CodedOutputStream)
      nameWithType:
        CSharp: KeepAliveRequest.WriteTo(pb.CodedOutputStream)
        VB: KeepAliveRequest.WriteTo(pb.CodedOutputStream)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.WriteTo(pb.CodedOutputStream)
        VB: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.WriteTo(pb.CodedOutputStream)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.SyncServer
      source:
        id: WriteTo
        path: ''
        startLine: 16199
      syntax:
        content:
          CSharp: public void WriteTo(pb.CodedOutputStream output)
          VB: Public Sub WriteTo(output As pb.CodedOutputStream)
        parameters:
        - id: output
          type: pb.CodedOutputStream
      overload: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.WriteTo*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.CalculateSize
      commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.CalculateSize
      language: CSharp
      name:
        CSharp: CalculateSize()
        VB: CalculateSize()
      nameWithType:
        CSharp: KeepAliveRequest.CalculateSize()
        VB: KeepAliveRequest.CalculateSize()
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.CalculateSize()
        VB: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.CalculateSize()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.SyncServer
      source:
        id: CalculateSize
        path: ''
        startLine: 16210
      syntax:
        content:
          CSharp: public int CalculateSize()
          VB: Public Function CalculateSize As Integer
        return:
          type: System.Int32
      overload: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.CalculateSize*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.MergeFrom(Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest)
      commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.MergeFrom(Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest)
      language: CSharp
      name:
        CSharp: MergeFrom(KeepAliveRequest)
        VB: MergeFrom(KeepAliveRequest)
      nameWithType:
        CSharp: KeepAliveRequest.MergeFrom(KeepAliveRequest)
        VB: KeepAliveRequest.MergeFrom(KeepAliveRequest)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.MergeFrom(Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest)
        VB: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.MergeFrom(Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.SyncServer
      source:
        id: MergeFrom
        path: ''
        startLine: 16222
      syntax:
        content:
          CSharp: public void MergeFrom(KeepAliveRequest other)
          VB: Public Sub MergeFrom(other As KeepAliveRequest)
        parameters:
        - id: other
          type: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest
      overload: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.MergeFrom*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.MergeFrom(pb.CodedInputStream)
      commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.MergeFrom(pb.CodedInputStream)
      language: CSharp
      name:
        CSharp: MergeFrom(pb.CodedInputStream)
        VB: MergeFrom(pb.CodedInputStream)
      nameWithType:
        CSharp: KeepAliveRequest.MergeFrom(pb.CodedInputStream)
        VB: KeepAliveRequest.MergeFrom(pb.CodedInputStream)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.MergeFrom(pb.CodedInputStream)
        VB: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.MergeFrom(pb.CodedInputStream)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.SyncServer
      source:
        id: MergeFrom
        path: ''
        startLine: 16233
      syntax:
        content:
          CSharp: public void MergeFrom(pb.CodedInputStream input)
          VB: Public Sub MergeFrom(input As pb.CodedInputStream)
        parameters:
        - id: input
          type: pb.CodedInputStream
      overload: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.MergeFrom*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse
    commentId: T:Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse
    language: CSharp
    name:
      CSharp: KeepAliveResponse
      VB: KeepAliveResponse
    nameWithType:
      CSharp: KeepAliveResponse
      VB: KeepAliveResponse
    qualifiedName:
      CSharp: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse
      VB: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect.ProjectServer.Services.SyncServer
    source:
      id: KeepAliveResponse
      path: ''
      startLine: 16251
    syntax:
      content:
        CSharp: 'public sealed class KeepAliveResponse : pb.IMessage<KeepAliveResponse>'
        VB: >-
          Public NotInheritable Class KeepAliveResponse

              Inherits pb.IMessage(Of KeepAliveResponse)
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - sealed
      - class
      VB:
      - Public
      - NotInheritable
      - Class
    items:
    - id: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.Parser
      commentId: P:Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.Parser
      language: CSharp
      name:
        CSharp: Parser
        VB: Parser
      nameWithType:
        CSharp: KeepAliveResponse.Parser
        VB: KeepAliveResponse.Parser
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.Parser
        VB: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.Parser
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.SyncServer
      source:
        id: Parser
        path: ''
        startLine: 16254
      syntax:
        content:
          CSharp: public static pb.MessageParser<KeepAliveResponse> Parser { get; }
          VB: Public Shared ReadOnly Property Parser As pb.MessageParser(Of KeepAliveResponse)
        parameters: []
        return:
          type: pb.MessageParser{Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse}
      overload: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.Parser*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.Descriptor
      commentId: P:Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.Descriptor
      language: CSharp
      name:
        CSharp: Descriptor
        VB: Descriptor
      nameWithType:
        CSharp: KeepAliveResponse.Descriptor
        VB: KeepAliveResponse.Descriptor
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.Descriptor
        VB: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.Descriptor
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.SyncServer
      source:
        id: Descriptor
        path: ''
        startLine: 16257
      syntax:
        content:
          CSharp: public static pbr.MessageDescriptor Descriptor { get; }
          VB: Public Shared ReadOnly Property Descriptor As pbr.MessageDescriptor
        parameters: []
        return:
          type: pbr.MessageDescriptor
      overload: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.Descriptor*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.#ctor
      commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.#ctor
      language: CSharp
      name:
        CSharp: KeepAliveResponse()
        VB: KeepAliveResponse()
      nameWithType:
        CSharp: KeepAliveResponse.KeepAliveResponse()
        VB: KeepAliveResponse.KeepAliveResponse()
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.KeepAliveResponse()
        VB: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.KeepAliveResponse()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.SyncServer
      source:
        id: .ctor
        path: ''
        startLine: 16267
      syntax:
        content:
          CSharp: public KeepAliveResponse()
          VB: Public Sub New
      overload: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.#ctor(Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse)
      commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.#ctor(Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse)
      language: CSharp
      name:
        CSharp: KeepAliveResponse(KeepAliveResponse)
        VB: KeepAliveResponse(KeepAliveResponse)
      nameWithType:
        CSharp: KeepAliveResponse.KeepAliveResponse(KeepAliveResponse)
        VB: KeepAliveResponse.KeepAliveResponse(KeepAliveResponse)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.KeepAliveResponse(Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse)
        VB: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.KeepAliveResponse(Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.SyncServer
      source:
        id: .ctor
        path: ''
        startLine: 16274
      syntax:
        content:
          CSharp: public KeepAliveResponse(KeepAliveResponse other)
          VB: Public Sub New(other As KeepAliveResponse)
        parameters:
        - id: other
          type: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse
      overload: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.Clone
      commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.Clone
      language: CSharp
      name:
        CSharp: Clone()
        VB: Clone()
      nameWithType:
        CSharp: KeepAliveResponse.Clone()
        VB: KeepAliveResponse.Clone()
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.Clone()
        VB: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.Clone()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.SyncServer
      source:
        id: Clone
        path: ''
        startLine: 16280
      syntax:
        content:
          CSharp: public KeepAliveResponse Clone()
          VB: Public Function Clone As KeepAliveResponse
        return:
          type: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse
      overload: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.Clone*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.SecondsToNextKeepAliveFieldNumber
      commentId: F:Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.SecondsToNextKeepAliveFieldNumber
      language: CSharp
      name:
        CSharp: SecondsToNextKeepAliveFieldNumber
        VB: SecondsToNextKeepAliveFieldNumber
      nameWithType:
        CSharp: KeepAliveResponse.SecondsToNextKeepAliveFieldNumber
        VB: KeepAliveResponse.SecondsToNextKeepAliveFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.SecondsToNextKeepAliveFieldNumber
        VB: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.SecondsToNextKeepAliveFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.SyncServer
      source:
        id: SecondsToNextKeepAliveFieldNumber
        path: ''
        startLine: 16286
      summary: Field number for the &quot;secondsToNextKeepAlive&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int SecondsToNextKeepAliveFieldNumber = 1
          VB: Public Const SecondsToNextKeepAliveFieldNumber As Integer = 1
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.SecondsToNextKeepAlive
      commentId: P:Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.SecondsToNextKeepAlive
      language: CSharp
      name:
        CSharp: SecondsToNextKeepAlive
        VB: SecondsToNextKeepAlive
      nameWithType:
        CSharp: KeepAliveResponse.SecondsToNextKeepAlive
        VB: KeepAliveResponse.SecondsToNextKeepAlive
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.SecondsToNextKeepAlive
        VB: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.SecondsToNextKeepAlive
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.SyncServer
      source:
        id: SecondsToNextKeepAlive
        path: ''
        startLine: 16288
      syntax:
        content:
          CSharp: public int SecondsToNextKeepAlive { get; set; }
          VB: Public Property SecondsToNextKeepAlive As Integer
        parameters: []
        return:
          type: System.Int32
      overload: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.SecondsToNextKeepAlive*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.Equals(System.Object)
      commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.Equals(System.Object)
      language: CSharp
      name:
        CSharp: Equals(Object)
        VB: Equals(Object)
      nameWithType:
        CSharp: KeepAliveResponse.Equals(Object)
        VB: KeepAliveResponse.Equals(Object)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.Equals(System.Object)
        VB: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.Equals(System.Object)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.SyncServer
      source:
        id: Equals
        path: ''
        startLine: 16296
      syntax:
        content:
          CSharp: public override bool Equals(object other)
          VB: Public Overrides Function Equals(other As Object) As Boolean
        parameters:
        - id: other
          type: System.Object
        return:
          type: System.Boolean
      overload: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.Equals*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.Equals(Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse)
      commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.Equals(Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse)
      language: CSharp
      name:
        CSharp: Equals(KeepAliveResponse)
        VB: Equals(KeepAliveResponse)
      nameWithType:
        CSharp: KeepAliveResponse.Equals(KeepAliveResponse)
        VB: KeepAliveResponse.Equals(KeepAliveResponse)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.Equals(Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse)
        VB: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.Equals(Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.SyncServer
      source:
        id: Equals
        path: ''
        startLine: 16301
      syntax:
        content:
          CSharp: public bool Equals(KeepAliveResponse other)
          VB: Public Function Equals(other As KeepAliveResponse) As Boolean
        parameters:
        - id: other
          type: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse
        return:
          type: System.Boolean
      overload: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.Equals*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.GetHashCode
      commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.GetHashCode
      language: CSharp
      name:
        CSharp: GetHashCode()
        VB: GetHashCode()
      nameWithType:
        CSharp: KeepAliveResponse.GetHashCode()
        VB: KeepAliveResponse.GetHashCode()
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.GetHashCode()
        VB: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.GetHashCode()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.SyncServer
      source:
        id: GetHashCode
        path: ''
        startLine: 16313
      syntax:
        content:
          CSharp: public override int GetHashCode()
          VB: Public Overrides Function GetHashCode As Integer
        return:
          type: System.Int32
      overload: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.GetHashCode*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.ToString
      commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.ToString
      language: CSharp
      name:
        CSharp: ToString()
        VB: ToString()
      nameWithType:
        CSharp: KeepAliveResponse.ToString()
        VB: KeepAliveResponse.ToString()
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.ToString()
        VB: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.ToString()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.SyncServer
      source:
        id: ToString
        path: ''
        startLine: 16323
      syntax:
        content:
          CSharp: public override string ToString()
          VB: Public Overrides Function ToString As String
        return:
          type: System.String
      overload: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.ToString*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.WriteTo(pb.CodedOutputStream)
      commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.WriteTo(pb.CodedOutputStream)
      language: CSharp
      name:
        CSharp: WriteTo(pb.CodedOutputStream)
        VB: WriteTo(pb.CodedOutputStream)
      nameWithType:
        CSharp: KeepAliveResponse.WriteTo(pb.CodedOutputStream)
        VB: KeepAliveResponse.WriteTo(pb.CodedOutputStream)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.WriteTo(pb.CodedOutputStream)
        VB: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.WriteTo(pb.CodedOutputStream)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.SyncServer
      source:
        id: WriteTo
        path: ''
        startLine: 16328
      syntax:
        content:
          CSharp: public void WriteTo(pb.CodedOutputStream output)
          VB: Public Sub WriteTo(output As pb.CodedOutputStream)
        parameters:
        - id: output
          type: pb.CodedOutputStream
      overload: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.WriteTo*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.CalculateSize
      commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.CalculateSize
      language: CSharp
      name:
        CSharp: CalculateSize()
        VB: CalculateSize()
      nameWithType:
        CSharp: KeepAliveResponse.CalculateSize()
        VB: KeepAliveResponse.CalculateSize()
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.CalculateSize()
        VB: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.CalculateSize()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.SyncServer
      source:
        id: CalculateSize
        path: ''
        startLine: 16339
      syntax:
        content:
          CSharp: public int CalculateSize()
          VB: Public Function CalculateSize As Integer
        return:
          type: System.Int32
      overload: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.CalculateSize*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.MergeFrom(Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse)
      commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.MergeFrom(Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse)
      language: CSharp
      name:
        CSharp: MergeFrom(KeepAliveResponse)
        VB: MergeFrom(KeepAliveResponse)
      nameWithType:
        CSharp: KeepAliveResponse.MergeFrom(KeepAliveResponse)
        VB: KeepAliveResponse.MergeFrom(KeepAliveResponse)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.MergeFrom(Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse)
        VB: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.MergeFrom(Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.SyncServer
      source:
        id: MergeFrom
        path: ''
        startLine: 16351
      syntax:
        content:
          CSharp: public void MergeFrom(KeepAliveResponse other)
          VB: Public Sub MergeFrom(other As KeepAliveResponse)
        parameters:
        - id: other
          type: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse
      overload: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.MergeFrom*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.MergeFrom(pb.CodedInputStream)
      commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.MergeFrom(pb.CodedInputStream)
      language: CSharp
      name:
        CSharp: MergeFrom(pb.CodedInputStream)
        VB: MergeFrom(pb.CodedInputStream)
      nameWithType:
        CSharp: KeepAliveResponse.MergeFrom(pb.CodedInputStream)
        VB: KeepAliveResponse.MergeFrom(pb.CodedInputStream)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.MergeFrom(pb.CodedInputStream)
        VB: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.MergeFrom(pb.CodedInputStream)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.SyncServer
      source:
        id: MergeFrom
        path: ''
        startLine: 16362
      syntax:
        content:
          CSharp: public void MergeFrom(pb.CodedInputStream input)
          VB: Public Sub MergeFrom(input As pb.CodedInputStream)
        parameters:
        - id: input
          type: pb.CodedInputStream
      overload: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.MergeFrom*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest
    commentId: T:Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest
    language: CSharp
    name:
      CSharp: UnregisterRequest
      VB: UnregisterRequest
    nameWithType:
      CSharp: UnregisterRequest
      VB: UnregisterRequest
    qualifiedName:
      CSharp: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest
      VB: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect.ProjectServer.Services.SyncServer
    source:
      id: UnregisterRequest
      path: ''
      startLine: 16380
    syntax:
      content:
        CSharp: 'public sealed class UnregisterRequest : pb.IMessage<UnregisterRequest>'
        VB: >-
          Public NotInheritable Class UnregisterRequest

              Inherits pb.IMessage(Of UnregisterRequest)
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - sealed
      - class
      VB:
      - Public
      - NotInheritable
      - Class
    items:
    - id: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.Parser
      commentId: P:Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.Parser
      language: CSharp
      name:
        CSharp: Parser
        VB: Parser
      nameWithType:
        CSharp: UnregisterRequest.Parser
        VB: UnregisterRequest.Parser
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.Parser
        VB: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.Parser
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.SyncServer
      source:
        id: Parser
        path: ''
        startLine: 16383
      syntax:
        content:
          CSharp: public static pb.MessageParser<UnregisterRequest> Parser { get; }
          VB: Public Shared ReadOnly Property Parser As pb.MessageParser(Of UnregisterRequest)
        parameters: []
        return:
          type: pb.MessageParser{Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest}
      overload: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.Parser*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.Descriptor
      commentId: P:Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.Descriptor
      language: CSharp
      name:
        CSharp: Descriptor
        VB: Descriptor
      nameWithType:
        CSharp: UnregisterRequest.Descriptor
        VB: UnregisterRequest.Descriptor
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.Descriptor
        VB: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.Descriptor
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.SyncServer
      source:
        id: Descriptor
        path: ''
        startLine: 16386
      syntax:
        content:
          CSharp: public static pbr.MessageDescriptor Descriptor { get; }
          VB: Public Shared ReadOnly Property Descriptor As pbr.MessageDescriptor
        parameters: []
        return:
          type: pbr.MessageDescriptor
      overload: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.Descriptor*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.#ctor
      commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.#ctor
      language: CSharp
      name:
        CSharp: UnregisterRequest()
        VB: UnregisterRequest()
      nameWithType:
        CSharp: UnregisterRequest.UnregisterRequest()
        VB: UnregisterRequest.UnregisterRequest()
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.UnregisterRequest()
        VB: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.UnregisterRequest()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.SyncServer
      source:
        id: .ctor
        path: ''
        startLine: 16396
      syntax:
        content:
          CSharp: public UnregisterRequest()
          VB: Public Sub New
      overload: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.#ctor(Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest)
      commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.#ctor(Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest)
      language: CSharp
      name:
        CSharp: UnregisterRequest(UnregisterRequest)
        VB: UnregisterRequest(UnregisterRequest)
      nameWithType:
        CSharp: UnregisterRequest.UnregisterRequest(UnregisterRequest)
        VB: UnregisterRequest.UnregisterRequest(UnregisterRequest)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.UnregisterRequest(Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest)
        VB: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.UnregisterRequest(Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.SyncServer
      source:
        id: .ctor
        path: ''
        startLine: 16403
      syntax:
        content:
          CSharp: public UnregisterRequest(UnregisterRequest other)
          VB: Public Sub New(other As UnregisterRequest)
        parameters:
        - id: other
          type: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest
      overload: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.Clone
      commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.Clone
      language: CSharp
      name:
        CSharp: Clone()
        VB: Clone()
      nameWithType:
        CSharp: UnregisterRequest.Clone()
        VB: UnregisterRequest.Clone()
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.Clone()
        VB: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.Clone()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.SyncServer
      source:
        id: Clone
        path: ''
        startLine: 16409
      syntax:
        content:
          CSharp: public UnregisterRequest Clone()
          VB: Public Function Clone As UnregisterRequest
        return:
          type: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest
      overload: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.Clone*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.EndpointAddressFieldNumber
      commentId: F:Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.EndpointAddressFieldNumber
      language: CSharp
      name:
        CSharp: EndpointAddressFieldNumber
        VB: EndpointAddressFieldNumber
      nameWithType:
        CSharp: UnregisterRequest.EndpointAddressFieldNumber
        VB: UnregisterRequest.EndpointAddressFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.EndpointAddressFieldNumber
        VB: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.EndpointAddressFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.SyncServer
      source:
        id: EndpointAddressFieldNumber
        path: ''
        startLine: 16415
      summary: Field number for the &quot;endpointAddress&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int EndpointAddressFieldNumber = 1
          VB: Public Const EndpointAddressFieldNumber As Integer = 1
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.EndpointAddress
      commentId: P:Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.EndpointAddress
      language: CSharp
      name:
        CSharp: EndpointAddress
        VB: EndpointAddress
      nameWithType:
        CSharp: UnregisterRequest.EndpointAddress
        VB: UnregisterRequest.EndpointAddress
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.EndpointAddress
        VB: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.EndpointAddress
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.SyncServer
      source:
        id: EndpointAddress
        path: ''
        startLine: 16417
      syntax:
        content:
          CSharp: public string EndpointAddress { get; set; }
          VB: Public Property EndpointAddress As String
        parameters: []
        return:
          type: System.String
      overload: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.EndpointAddress*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.Equals(System.Object)
      commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.Equals(System.Object)
      language: CSharp
      name:
        CSharp: Equals(Object)
        VB: Equals(Object)
      nameWithType:
        CSharp: UnregisterRequest.Equals(Object)
        VB: UnregisterRequest.Equals(Object)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.Equals(System.Object)
        VB: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.Equals(System.Object)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.SyncServer
      source:
        id: Equals
        path: ''
        startLine: 16425
      syntax:
        content:
          CSharp: public override bool Equals(object other)
          VB: Public Overrides Function Equals(other As Object) As Boolean
        parameters:
        - id: other
          type: System.Object
        return:
          type: System.Boolean
      overload: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.Equals*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.Equals(Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest)
      commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.Equals(Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest)
      language: CSharp
      name:
        CSharp: Equals(UnregisterRequest)
        VB: Equals(UnregisterRequest)
      nameWithType:
        CSharp: UnregisterRequest.Equals(UnregisterRequest)
        VB: UnregisterRequest.Equals(UnregisterRequest)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.Equals(Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest)
        VB: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.Equals(Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.SyncServer
      source:
        id: Equals
        path: ''
        startLine: 16430
      syntax:
        content:
          CSharp: public bool Equals(UnregisterRequest other)
          VB: Public Function Equals(other As UnregisterRequest) As Boolean
        parameters:
        - id: other
          type: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest
        return:
          type: System.Boolean
      overload: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.Equals*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.GetHashCode
      commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.GetHashCode
      language: CSharp
      name:
        CSharp: GetHashCode()
        VB: GetHashCode()
      nameWithType:
        CSharp: UnregisterRequest.GetHashCode()
        VB: UnregisterRequest.GetHashCode()
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.GetHashCode()
        VB: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.GetHashCode()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.SyncServer
      source:
        id: GetHashCode
        path: ''
        startLine: 16442
      syntax:
        content:
          CSharp: public override int GetHashCode()
          VB: Public Overrides Function GetHashCode As Integer
        return:
          type: System.Int32
      overload: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.GetHashCode*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.ToString
      commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.ToString
      language: CSharp
      name:
        CSharp: ToString()
        VB: ToString()
      nameWithType:
        CSharp: UnregisterRequest.ToString()
        VB: UnregisterRequest.ToString()
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.ToString()
        VB: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.ToString()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.SyncServer
      source:
        id: ToString
        path: ''
        startLine: 16452
      syntax:
        content:
          CSharp: public override string ToString()
          VB: Public Overrides Function ToString As String
        return:
          type: System.String
      overload: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.ToString*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.WriteTo(pb.CodedOutputStream)
      commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.WriteTo(pb.CodedOutputStream)
      language: CSharp
      name:
        CSharp: WriteTo(pb.CodedOutputStream)
        VB: WriteTo(pb.CodedOutputStream)
      nameWithType:
        CSharp: UnregisterRequest.WriteTo(pb.CodedOutputStream)
        VB: UnregisterRequest.WriteTo(pb.CodedOutputStream)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.WriteTo(pb.CodedOutputStream)
        VB: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.WriteTo(pb.CodedOutputStream)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.SyncServer
      source:
        id: WriteTo
        path: ''
        startLine: 16457
      syntax:
        content:
          CSharp: public void WriteTo(pb.CodedOutputStream output)
          VB: Public Sub WriteTo(output As pb.CodedOutputStream)
        parameters:
        - id: output
          type: pb.CodedOutputStream
      overload: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.WriteTo*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.CalculateSize
      commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.CalculateSize
      language: CSharp
      name:
        CSharp: CalculateSize()
        VB: CalculateSize()
      nameWithType:
        CSharp: UnregisterRequest.CalculateSize()
        VB: UnregisterRequest.CalculateSize()
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.CalculateSize()
        VB: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.CalculateSize()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.SyncServer
      source:
        id: CalculateSize
        path: ''
        startLine: 16468
      syntax:
        content:
          CSharp: public int CalculateSize()
          VB: Public Function CalculateSize As Integer
        return:
          type: System.Int32
      overload: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.CalculateSize*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.MergeFrom(Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest)
      commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.MergeFrom(Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest)
      language: CSharp
      name:
        CSharp: MergeFrom(UnregisterRequest)
        VB: MergeFrom(UnregisterRequest)
      nameWithType:
        CSharp: UnregisterRequest.MergeFrom(UnregisterRequest)
        VB: UnregisterRequest.MergeFrom(UnregisterRequest)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.MergeFrom(Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest)
        VB: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.MergeFrom(Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.SyncServer
      source:
        id: MergeFrom
        path: ''
        startLine: 16480
      syntax:
        content:
          CSharp: public void MergeFrom(UnregisterRequest other)
          VB: Public Sub MergeFrom(other As UnregisterRequest)
        parameters:
        - id: other
          type: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest
      overload: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.MergeFrom*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.MergeFrom(pb.CodedInputStream)
      commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.MergeFrom(pb.CodedInputStream)
      language: CSharp
      name:
        CSharp: MergeFrom(pb.CodedInputStream)
        VB: MergeFrom(pb.CodedInputStream)
      nameWithType:
        CSharp: UnregisterRequest.MergeFrom(pb.CodedInputStream)
        VB: UnregisterRequest.MergeFrom(pb.CodedInputStream)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.MergeFrom(pb.CodedInputStream)
        VB: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.MergeFrom(pb.CodedInputStream)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.SyncServer
      source:
        id: MergeFrom
        path: ''
        startLine: 16491
      syntax:
        content:
          CSharp: public void MergeFrom(pb.CodedInputStream input)
          VB: Public Sub MergeFrom(input As pb.CodedInputStream)
        parameters:
        - id: input
          type: pb.CodedInputStream
      overload: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.MergeFrom*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService
    commentId: T:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService
    language: CSharp
    name:
      CSharp: RegistrationService
      VB: RegistrationService
    nameWithType:
      CSharp: RegistrationService
      VB: RegistrationService
    qualifiedName:
      CSharp: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService
      VB: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect.ProjectServer.Services.SyncServer
    source:
      id: RegistrationService
      path: ''
      startLine: 16528
    summary: "\nThis service requires the client to be signed-in and have the Reflect entitlement\n"
    example: []
    syntax:
      content:
        CSharp: public static class RegistrationService
        VB: Public Module RegistrationService
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.Descriptor
      commentId: P:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.Descriptor
      language: CSharp
      name:
        CSharp: Descriptor
        VB: Descriptor
      nameWithType:
        CSharp: RegistrationService.Descriptor
        VB: RegistrationService.Descriptor
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.Descriptor
        VB: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.Descriptor
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.SyncServer
      source:
        id: Descriptor
        path: ''
        startLine: 16560
      summary: Service descriptor
      example: []
      syntax:
        content:
          CSharp: public static Google.Protobuf.Reflection.ServiceDescriptor Descriptor { get; }
          VB: Public Shared ReadOnly Property Descriptor As Google.Protobuf.Reflection.ServiceDescriptor
        parameters: []
        return:
          type: Google.Protobuf.Reflection.ServiceDescriptor
      overload: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.Descriptor*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.BindService(Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceBase)
      commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.BindService(Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceBase)
      language: CSharp
      name:
        CSharp: BindService(RegistrationService.RegistrationServiceBase)
        VB: BindService(RegistrationService.RegistrationServiceBase)
      nameWithType:
        CSharp: RegistrationService.BindService(RegistrationService.RegistrationServiceBase)
        VB: RegistrationService.BindService(RegistrationService.RegistrationServiceBase)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.BindService(Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceBase)
        VB: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.BindService(Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceBase)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.SyncServer
      source:
        id: BindService
        path: ''
        startLine: 16666
      summary: Creates service definition that can be registered with a server
      example: []
      syntax:
        content:
          CSharp: public static grpc.ServerServiceDefinition BindService(RegistrationService.RegistrationServiceBase serviceImpl)
          VB: Public Shared Function BindService(serviceImpl As RegistrationService.RegistrationServiceBase) As grpc.ServerServiceDefinition
        parameters:
        - id: serviceImpl
          type: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceBase
          description: An object implementing the server-side handling logic.
        return:
          type: grpc.ServerServiceDefinition
      overload: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.BindService*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.BindService(grpc.ServiceBinderBase,Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceBase)
      commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.BindService(grpc.ServiceBinderBase,Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceBase)
      language: CSharp
      name:
        CSharp: BindService(grpc.ServiceBinderBase, RegistrationService.RegistrationServiceBase)
        VB: BindService(grpc.ServiceBinderBase, RegistrationService.RegistrationServiceBase)
      nameWithType:
        CSharp: RegistrationService.BindService(grpc.ServiceBinderBase, RegistrationService.RegistrationServiceBase)
        VB: RegistrationService.BindService(grpc.ServiceBinderBase, RegistrationService.RegistrationServiceBase)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.BindService(grpc.ServiceBinderBase, Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceBase)
        VB: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.BindService(grpc.ServiceBinderBase, Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceBase)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.SyncServer
      source:
        id: BindService
        path: ''
        startLine: 16678
      summary: >-
        Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.

        Note: this method is part of an experimental API that can change or be removed without any prior notice.
      example: []
      syntax:
        content:
          CSharp: public static void BindService(grpc.ServiceBinderBase serviceBinder, RegistrationService.RegistrationServiceBase serviceImpl)
          VB: Public Shared Sub BindService(serviceBinder As grpc.ServiceBinderBase, serviceImpl As RegistrationService.RegistrationServiceBase)
        parameters:
        - id: serviceBinder
          type: grpc.ServiceBinderBase
          description: Service methods will be bound by calling <code>AddMethod</code> on this object.
        - id: serviceImpl
          type: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceBase
          description: An object implementing the server-side handling logic.
      overload: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.BindService*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceBase
    commentId: T:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceBase
    language: CSharp
    name:
      CSharp: RegistrationService.RegistrationServiceBase
      VB: RegistrationService.RegistrationServiceBase
    nameWithType:
      CSharp: RegistrationService.RegistrationServiceBase
      VB: RegistrationService.RegistrationServiceBase
    qualifiedName:
      CSharp: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceBase
      VB: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceBase
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect.ProjectServer.Services.SyncServer
    source:
      id: RegistrationServiceBase
      path: ''
      startLine: 16566
    summary: Base class for server-side implementations of RegistrationService
    example: []
    syntax:
      content:
        CSharp: public abstract class RegistrationServiceBase
        VB: Public MustInherit Class RegistrationServiceBase
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items:
    - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceBase.Register(Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest,grpc.ServerCallContext)
      commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceBase.Register(Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest,grpc.ServerCallContext)
      language: CSharp
      name:
        CSharp: Register(RegistrationRequest, grpc.ServerCallContext)
        VB: Register(RegistrationRequest, grpc.ServerCallContext)
      nameWithType:
        CSharp: RegistrationService.RegistrationServiceBase.Register(RegistrationRequest, grpc.ServerCallContext)
        VB: RegistrationService.RegistrationServiceBase.Register(RegistrationRequest, grpc.ServerCallContext)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceBase.Register(Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest, grpc.ServerCallContext)
        VB: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceBase.Register(Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest, grpc.ServerCallContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.SyncServer
      source:
        id: Register
        path: ''
        startLine: 16569
      syntax:
        content:
          CSharp: public virtual Task<KeepAliveResponse> Register(RegistrationRequest request, grpc.ServerCallContext context)
          VB: Public Overridable Function Register(request As RegistrationRequest, context As grpc.ServerCallContext) As Task(Of KeepAliveResponse)
        parameters:
        - id: request
          type: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest
        - id: context
          type: grpc.ServerCallContext
        return:
          type: System.Threading.Tasks.Task{Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse}
      overload: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceBase.Register*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceBase.KeepAlive(Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest,grpc.ServerCallContext)
      commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceBase.KeepAlive(Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest,grpc.ServerCallContext)
      language: CSharp
      name:
        CSharp: KeepAlive(KeepAliveRequest, grpc.ServerCallContext)
        VB: KeepAlive(KeepAliveRequest, grpc.ServerCallContext)
      nameWithType:
        CSharp: RegistrationService.RegistrationServiceBase.KeepAlive(KeepAliveRequest, grpc.ServerCallContext)
        VB: RegistrationService.RegistrationServiceBase.KeepAlive(KeepAliveRequest, grpc.ServerCallContext)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceBase.KeepAlive(Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest, grpc.ServerCallContext)
        VB: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceBase.KeepAlive(Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest, grpc.ServerCallContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.SyncServer
      source:
        id: KeepAlive
        path: ''
        startLine: 16574
      syntax:
        content:
          CSharp: public virtual Task<KeepAliveResponse> KeepAlive(KeepAliveRequest request, grpc.ServerCallContext context)
          VB: Public Overridable Function KeepAlive(request As KeepAliveRequest, context As grpc.ServerCallContext) As Task(Of KeepAliveResponse)
        parameters:
        - id: request
          type: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest
        - id: context
          type: grpc.ServerCallContext
        return:
          type: System.Threading.Tasks.Task{Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse}
      overload: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceBase.KeepAlive*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceBase.Unregister(Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest,grpc.ServerCallContext)
      commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceBase.Unregister(Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest,grpc.ServerCallContext)
      language: CSharp
      name:
        CSharp: Unregister(UnregisterRequest, grpc.ServerCallContext)
        VB: Unregister(UnregisterRequest, grpc.ServerCallContext)
      nameWithType:
        CSharp: RegistrationService.RegistrationServiceBase.Unregister(UnregisterRequest, grpc.ServerCallContext)
        VB: RegistrationService.RegistrationServiceBase.Unregister(UnregisterRequest, grpc.ServerCallContext)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceBase.Unregister(Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest, grpc.ServerCallContext)
        VB: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceBase.Unregister(Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest, grpc.ServerCallContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.SyncServer
      source:
        id: Unregister
        path: ''
        startLine: 16579
      syntax:
        content:
          CSharp: public virtual Task<Empty> Unregister(UnregisterRequest request, grpc.ServerCallContext context)
          VB: Public Overridable Function Unregister(request As UnregisterRequest, context As grpc.ServerCallContext) As Task(Of Empty)
        parameters:
        - id: request
          type: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest
        - id: context
          type: grpc.ServerCallContext
        return:
          type: System.Threading.Tasks.Task{Unity.Reflect.ProjectServer.Services.Empty}
      overload: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceBase.Unregister*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
  - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient
    commentId: T:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient
    language: CSharp
    name:
      CSharp: RegistrationService.RegistrationServiceClient
      VB: RegistrationService.RegistrationServiceClient
    nameWithType:
      CSharp: RegistrationService.RegistrationServiceClient
      VB: RegistrationService.RegistrationServiceClient
    qualifiedName:
      CSharp: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient
      VB: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect.ProjectServer.Services.SyncServer
    source:
      id: RegistrationServiceClient
      path: ''
      startLine: 16587
    summary: Client for RegistrationService
    example: []
    syntax:
      content:
        CSharp: 'public class RegistrationServiceClient : grpc.ClientBase<RegistrationService.RegistrationServiceClient>'
        VB: >-
          Public Class RegistrationServiceClient

              Inherits grpc.ClientBase(Of RegistrationService.RegistrationServiceClient)
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.#ctor(grpc.Channel)
      commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.#ctor(grpc.Channel)
      language: CSharp
      name:
        CSharp: RegistrationServiceClient(grpc.Channel)
        VB: RegistrationServiceClient(grpc.Channel)
      nameWithType:
        CSharp: RegistrationService.RegistrationServiceClient.RegistrationServiceClient(grpc.Channel)
        VB: RegistrationService.RegistrationServiceClient.RegistrationServiceClient(grpc.Channel)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.RegistrationServiceClient(grpc.Channel)
        VB: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.RegistrationServiceClient(grpc.Channel)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.SyncServer
      source:
        id: .ctor
        path: ''
        startLine: 16591
      summary: Creates a new client for RegistrationService
      example: []
      syntax:
        content:
          CSharp: public RegistrationServiceClient(grpc.Channel channel)
          VB: Public Sub New(channel As grpc.Channel)
        parameters:
        - id: channel
          type: grpc.Channel
          description: The channel to use to make remote calls.
      overload: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.#ctor(grpc.CallInvoker)
      commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.#ctor(grpc.CallInvoker)
      language: CSharp
      name:
        CSharp: RegistrationServiceClient(grpc.CallInvoker)
        VB: RegistrationServiceClient(grpc.CallInvoker)
      nameWithType:
        CSharp: RegistrationService.RegistrationServiceClient.RegistrationServiceClient(grpc.CallInvoker)
        VB: RegistrationService.RegistrationServiceClient.RegistrationServiceClient(grpc.CallInvoker)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.RegistrationServiceClient(grpc.CallInvoker)
        VB: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.RegistrationServiceClient(grpc.CallInvoker)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.SyncServer
      source:
        id: .ctor
        path: ''
        startLine: 16596
      summary: Creates a new client for RegistrationService that uses a custom <code>CallInvoker</code>.
      example: []
      syntax:
        content:
          CSharp: public RegistrationServiceClient(grpc.CallInvoker callInvoker)
          VB: Public Sub New(callInvoker As grpc.CallInvoker)
        parameters:
        - id: callInvoker
          type: grpc.CallInvoker
          description: The callInvoker to use to make remote calls.
      overload: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.#ctor
      commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.#ctor
      language: CSharp
      name:
        CSharp: RegistrationServiceClient()
        VB: RegistrationServiceClient()
      nameWithType:
        CSharp: RegistrationService.RegistrationServiceClient.RegistrationServiceClient()
        VB: RegistrationService.RegistrationServiceClient.RegistrationServiceClient()
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.RegistrationServiceClient()
        VB: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.RegistrationServiceClient()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.SyncServer
      source:
        id: .ctor
        path: ''
        startLine: 16600
      summary: Protected parameterless constructor to allow creation of test doubles.
      example: []
      syntax:
        content:
          CSharp: protected RegistrationServiceClient()
          VB: Protected Sub New
      overload: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.#ctor*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.#ctor(ClientBaseConfiguration)
      commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.#ctor(ClientBaseConfiguration)
      language: CSharp
      name:
        CSharp: RegistrationServiceClient(ClientBaseConfiguration)
        VB: RegistrationServiceClient(ClientBaseConfiguration)
      nameWithType:
        CSharp: RegistrationService.RegistrationServiceClient.RegistrationServiceClient(ClientBaseConfiguration)
        VB: RegistrationService.RegistrationServiceClient.RegistrationServiceClient(ClientBaseConfiguration)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.RegistrationServiceClient(ClientBaseConfiguration)
        VB: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.RegistrationServiceClient(ClientBaseConfiguration)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.SyncServer
      source:
        id: .ctor
        path: ''
        startLine: 16605
      summary: Protected constructor to allow creation of configured clients.
      example: []
      syntax:
        content:
          CSharp: protected RegistrationServiceClient(ClientBaseConfiguration configuration)
          VB: Protected Sub New(configuration As ClientBaseConfiguration)
        parameters:
        - id: configuration
          type: ClientBaseConfiguration
          description: The client configuration.
      overload: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.#ctor*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.Register(Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
      commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.Register(Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
      language: CSharp
      name:
        CSharp: Register(RegistrationRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
        VB: Register(RegistrationRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
      nameWithType:
        CSharp: RegistrationService.RegistrationServiceClient.Register(RegistrationRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
        VB: RegistrationService.RegistrationServiceClient.Register(RegistrationRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.Register(Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest, grpc.Metadata, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
        VB: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.Register(Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest, grpc.Metadata, System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.SyncServer
      source:
        id: Register
        path: ''
        startLine: 16609
      syntax:
        content:
          CSharp: public virtual KeepAliveResponse Register(RegistrationRequest request, grpc.Metadata headers = null, DateTime? deadline = default(DateTime? ), CancellationToken cancellationToken = default(CancellationToken))
          VB: Public Overridable Function Register(request As RegistrationRequest, headers As grpc.Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As KeepAliveResponse
        parameters:
        - id: request
          type: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest
        - id: headers
          type: grpc.Metadata
        - id: deadline
          type: System.Nullable{System.DateTime}
        - id: cancellationToken
          type: System.Threading.CancellationToken
        return:
          type: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse
      overload: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.Register*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.Register(Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest,grpc.CallOptions)
      commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.Register(Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest,grpc.CallOptions)
      language: CSharp
      name:
        CSharp: Register(RegistrationRequest, grpc.CallOptions)
        VB: Register(RegistrationRequest, grpc.CallOptions)
      nameWithType:
        CSharp: RegistrationService.RegistrationServiceClient.Register(RegistrationRequest, grpc.CallOptions)
        VB: RegistrationService.RegistrationServiceClient.Register(RegistrationRequest, grpc.CallOptions)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.Register(Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest, grpc.CallOptions)
        VB: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.Register(Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest, grpc.CallOptions)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.SyncServer
      source:
        id: Register
        path: ''
        startLine: 16613
      syntax:
        content:
          CSharp: public virtual KeepAliveResponse Register(RegistrationRequest request, grpc.CallOptions options)
          VB: Public Overridable Function Register(request As RegistrationRequest, options As grpc.CallOptions) As KeepAliveResponse
        parameters:
        - id: request
          type: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest
        - id: options
          type: grpc.CallOptions
        return:
          type: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse
      overload: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.Register*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.RegisterAsync(Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
      commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.RegisterAsync(Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
      language: CSharp
      name:
        CSharp: RegisterAsync(RegistrationRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
        VB: RegisterAsync(RegistrationRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
      nameWithType:
        CSharp: RegistrationService.RegistrationServiceClient.RegisterAsync(RegistrationRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
        VB: RegistrationService.RegistrationServiceClient.RegisterAsync(RegistrationRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.RegisterAsync(Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest, grpc.Metadata, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
        VB: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.RegisterAsync(Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest, grpc.Metadata, System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.SyncServer
      source:
        id: RegisterAsync
        path: ''
        startLine: 16617
      syntax:
        content:
          CSharp: public virtual grpc.AsyncUnaryCall<KeepAliveResponse> RegisterAsync(RegistrationRequest request, grpc.Metadata headers = null, DateTime? deadline = default(DateTime? ), CancellationToken cancellationToken = default(CancellationToken))
          VB: Public Overridable Function RegisterAsync(request As RegistrationRequest, headers As grpc.Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As grpc.AsyncUnaryCall(Of KeepAliveResponse)
        parameters:
        - id: request
          type: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest
        - id: headers
          type: grpc.Metadata
        - id: deadline
          type: System.Nullable{System.DateTime}
        - id: cancellationToken
          type: System.Threading.CancellationToken
        return:
          type: grpc.AsyncUnaryCall{Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse}
      overload: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.RegisterAsync*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.RegisterAsync(Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest,grpc.CallOptions)
      commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.RegisterAsync(Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest,grpc.CallOptions)
      language: CSharp
      name:
        CSharp: RegisterAsync(RegistrationRequest, grpc.CallOptions)
        VB: RegisterAsync(RegistrationRequest, grpc.CallOptions)
      nameWithType:
        CSharp: RegistrationService.RegistrationServiceClient.RegisterAsync(RegistrationRequest, grpc.CallOptions)
        VB: RegistrationService.RegistrationServiceClient.RegisterAsync(RegistrationRequest, grpc.CallOptions)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.RegisterAsync(Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest, grpc.CallOptions)
        VB: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.RegisterAsync(Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest, grpc.CallOptions)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.SyncServer
      source:
        id: RegisterAsync
        path: ''
        startLine: 16621
      syntax:
        content:
          CSharp: public virtual grpc.AsyncUnaryCall<KeepAliveResponse> RegisterAsync(RegistrationRequest request, grpc.CallOptions options)
          VB: Public Overridable Function RegisterAsync(request As RegistrationRequest, options As grpc.CallOptions) As grpc.AsyncUnaryCall(Of KeepAliveResponse)
        parameters:
        - id: request
          type: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest
        - id: options
          type: grpc.CallOptions
        return:
          type: grpc.AsyncUnaryCall{Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse}
      overload: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.RegisterAsync*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.KeepAlive(Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
      commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.KeepAlive(Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
      language: CSharp
      name:
        CSharp: KeepAlive(KeepAliveRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
        VB: KeepAlive(KeepAliveRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
      nameWithType:
        CSharp: RegistrationService.RegistrationServiceClient.KeepAlive(KeepAliveRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
        VB: RegistrationService.RegistrationServiceClient.KeepAlive(KeepAliveRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.KeepAlive(Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest, grpc.Metadata, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
        VB: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.KeepAlive(Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest, grpc.Metadata, System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.SyncServer
      source:
        id: KeepAlive
        path: ''
        startLine: 16625
      syntax:
        content:
          CSharp: public virtual KeepAliveResponse KeepAlive(KeepAliveRequest request, grpc.Metadata headers = null, DateTime? deadline = default(DateTime? ), CancellationToken cancellationToken = default(CancellationToken))
          VB: Public Overridable Function KeepAlive(request As KeepAliveRequest, headers As grpc.Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As KeepAliveResponse
        parameters:
        - id: request
          type: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest
        - id: headers
          type: grpc.Metadata
        - id: deadline
          type: System.Nullable{System.DateTime}
        - id: cancellationToken
          type: System.Threading.CancellationToken
        return:
          type: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse
      overload: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.KeepAlive*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.KeepAlive(Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest,grpc.CallOptions)
      commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.KeepAlive(Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest,grpc.CallOptions)
      language: CSharp
      name:
        CSharp: KeepAlive(KeepAliveRequest, grpc.CallOptions)
        VB: KeepAlive(KeepAliveRequest, grpc.CallOptions)
      nameWithType:
        CSharp: RegistrationService.RegistrationServiceClient.KeepAlive(KeepAliveRequest, grpc.CallOptions)
        VB: RegistrationService.RegistrationServiceClient.KeepAlive(KeepAliveRequest, grpc.CallOptions)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.KeepAlive(Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest, grpc.CallOptions)
        VB: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.KeepAlive(Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest, grpc.CallOptions)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.SyncServer
      source:
        id: KeepAlive
        path: ''
        startLine: 16629
      syntax:
        content:
          CSharp: public virtual KeepAliveResponse KeepAlive(KeepAliveRequest request, grpc.CallOptions options)
          VB: Public Overridable Function KeepAlive(request As KeepAliveRequest, options As grpc.CallOptions) As KeepAliveResponse
        parameters:
        - id: request
          type: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest
        - id: options
          type: grpc.CallOptions
        return:
          type: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse
      overload: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.KeepAlive*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.KeepAliveAsync(Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
      commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.KeepAliveAsync(Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
      language: CSharp
      name:
        CSharp: KeepAliveAsync(KeepAliveRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
        VB: KeepAliveAsync(KeepAliveRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
      nameWithType:
        CSharp: RegistrationService.RegistrationServiceClient.KeepAliveAsync(KeepAliveRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
        VB: RegistrationService.RegistrationServiceClient.KeepAliveAsync(KeepAliveRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.KeepAliveAsync(Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest, grpc.Metadata, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
        VB: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.KeepAliveAsync(Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest, grpc.Metadata, System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.SyncServer
      source:
        id: KeepAliveAsync
        path: ''
        startLine: 16633
      syntax:
        content:
          CSharp: public virtual grpc.AsyncUnaryCall<KeepAliveResponse> KeepAliveAsync(KeepAliveRequest request, grpc.Metadata headers = null, DateTime? deadline = default(DateTime? ), CancellationToken cancellationToken = default(CancellationToken))
          VB: Public Overridable Function KeepAliveAsync(request As KeepAliveRequest, headers As grpc.Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As grpc.AsyncUnaryCall(Of KeepAliveResponse)
        parameters:
        - id: request
          type: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest
        - id: headers
          type: grpc.Metadata
        - id: deadline
          type: System.Nullable{System.DateTime}
        - id: cancellationToken
          type: System.Threading.CancellationToken
        return:
          type: grpc.AsyncUnaryCall{Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse}
      overload: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.KeepAliveAsync*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.KeepAliveAsync(Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest,grpc.CallOptions)
      commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.KeepAliveAsync(Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest,grpc.CallOptions)
      language: CSharp
      name:
        CSharp: KeepAliveAsync(KeepAliveRequest, grpc.CallOptions)
        VB: KeepAliveAsync(KeepAliveRequest, grpc.CallOptions)
      nameWithType:
        CSharp: RegistrationService.RegistrationServiceClient.KeepAliveAsync(KeepAliveRequest, grpc.CallOptions)
        VB: RegistrationService.RegistrationServiceClient.KeepAliveAsync(KeepAliveRequest, grpc.CallOptions)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.KeepAliveAsync(Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest, grpc.CallOptions)
        VB: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.KeepAliveAsync(Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest, grpc.CallOptions)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.SyncServer
      source:
        id: KeepAliveAsync
        path: ''
        startLine: 16637
      syntax:
        content:
          CSharp: public virtual grpc.AsyncUnaryCall<KeepAliveResponse> KeepAliveAsync(KeepAliveRequest request, grpc.CallOptions options)
          VB: Public Overridable Function KeepAliveAsync(request As KeepAliveRequest, options As grpc.CallOptions) As grpc.AsyncUnaryCall(Of KeepAliveResponse)
        parameters:
        - id: request
          type: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest
        - id: options
          type: grpc.CallOptions
        return:
          type: grpc.AsyncUnaryCall{Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse}
      overload: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.KeepAliveAsync*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.Unregister(Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
      commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.Unregister(Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
      language: CSharp
      name:
        CSharp: Unregister(UnregisterRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
        VB: Unregister(UnregisterRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
      nameWithType:
        CSharp: RegistrationService.RegistrationServiceClient.Unregister(UnregisterRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
        VB: RegistrationService.RegistrationServiceClient.Unregister(UnregisterRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.Unregister(Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest, grpc.Metadata, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
        VB: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.Unregister(Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest, grpc.Metadata, System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.SyncServer
      source:
        id: Unregister
        path: ''
        startLine: 16641
      syntax:
        content:
          CSharp: public virtual Empty Unregister(UnregisterRequest request, grpc.Metadata headers = null, DateTime? deadline = default(DateTime? ), CancellationToken cancellationToken = default(CancellationToken))
          VB: Public Overridable Function Unregister(request As UnregisterRequest, headers As grpc.Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As Empty
        parameters:
        - id: request
          type: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest
        - id: headers
          type: grpc.Metadata
        - id: deadline
          type: System.Nullable{System.DateTime}
        - id: cancellationToken
          type: System.Threading.CancellationToken
        return:
          type: Unity.Reflect.ProjectServer.Services.Empty
      overload: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.Unregister*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.Unregister(Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest,grpc.CallOptions)
      commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.Unregister(Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest,grpc.CallOptions)
      language: CSharp
      name:
        CSharp: Unregister(UnregisterRequest, grpc.CallOptions)
        VB: Unregister(UnregisterRequest, grpc.CallOptions)
      nameWithType:
        CSharp: RegistrationService.RegistrationServiceClient.Unregister(UnregisterRequest, grpc.CallOptions)
        VB: RegistrationService.RegistrationServiceClient.Unregister(UnregisterRequest, grpc.CallOptions)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.Unregister(Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest, grpc.CallOptions)
        VB: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.Unregister(Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest, grpc.CallOptions)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.SyncServer
      source:
        id: Unregister
        path: ''
        startLine: 16645
      syntax:
        content:
          CSharp: public virtual Empty Unregister(UnregisterRequest request, grpc.CallOptions options)
          VB: Public Overridable Function Unregister(request As UnregisterRequest, options As grpc.CallOptions) As Empty
        parameters:
        - id: request
          type: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest
        - id: options
          type: grpc.CallOptions
        return:
          type: Unity.Reflect.ProjectServer.Services.Empty
      overload: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.Unregister*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.UnregisterAsync(Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
      commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.UnregisterAsync(Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
      language: CSharp
      name:
        CSharp: UnregisterAsync(UnregisterRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
        VB: UnregisterAsync(UnregisterRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
      nameWithType:
        CSharp: RegistrationService.RegistrationServiceClient.UnregisterAsync(UnregisterRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
        VB: RegistrationService.RegistrationServiceClient.UnregisterAsync(UnregisterRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.UnregisterAsync(Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest, grpc.Metadata, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
        VB: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.UnregisterAsync(Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest, grpc.Metadata, System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.SyncServer
      source:
        id: UnregisterAsync
        path: ''
        startLine: 16649
      syntax:
        content:
          CSharp: public virtual grpc.AsyncUnaryCall<Empty> UnregisterAsync(UnregisterRequest request, grpc.Metadata headers = null, DateTime? deadline = default(DateTime? ), CancellationToken cancellationToken = default(CancellationToken))
          VB: Public Overridable Function UnregisterAsync(request As UnregisterRequest, headers As grpc.Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As grpc.AsyncUnaryCall(Of Empty)
        parameters:
        - id: request
          type: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest
        - id: headers
          type: grpc.Metadata
        - id: deadline
          type: System.Nullable{System.DateTime}
        - id: cancellationToken
          type: System.Threading.CancellationToken
        return:
          type: grpc.AsyncUnaryCall{Unity.Reflect.ProjectServer.Services.Empty}
      overload: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.UnregisterAsync*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.UnregisterAsync(Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest,grpc.CallOptions)
      commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.UnregisterAsync(Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest,grpc.CallOptions)
      language: CSharp
      name:
        CSharp: UnregisterAsync(UnregisterRequest, grpc.CallOptions)
        VB: UnregisterAsync(UnregisterRequest, grpc.CallOptions)
      nameWithType:
        CSharp: RegistrationService.RegistrationServiceClient.UnregisterAsync(UnregisterRequest, grpc.CallOptions)
        VB: RegistrationService.RegistrationServiceClient.UnregisterAsync(UnregisterRequest, grpc.CallOptions)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.UnregisterAsync(Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest, grpc.CallOptions)
        VB: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.UnregisterAsync(Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest, grpc.CallOptions)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.SyncServer
      source:
        id: UnregisterAsync
        path: ''
        startLine: 16653
      syntax:
        content:
          CSharp: public virtual grpc.AsyncUnaryCall<Empty> UnregisterAsync(UnregisterRequest request, grpc.CallOptions options)
          VB: Public Overridable Function UnregisterAsync(request As UnregisterRequest, options As grpc.CallOptions) As grpc.AsyncUnaryCall(Of Empty)
        parameters:
        - id: request
          type: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest
        - id: options
          type: grpc.CallOptions
        return:
          type: grpc.AsyncUnaryCall{Unity.Reflect.ProjectServer.Services.Empty}
      overload: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.UnregisterAsync*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.NewInstance(ClientBaseConfiguration)
      commentId: M:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.NewInstance(ClientBaseConfiguration)
      language: CSharp
      name:
        CSharp: NewInstance(ClientBaseConfiguration)
        VB: NewInstance(ClientBaseConfiguration)
      nameWithType:
        CSharp: RegistrationService.RegistrationServiceClient.NewInstance(ClientBaseConfiguration)
        VB: RegistrationService.RegistrationServiceClient.NewInstance(ClientBaseConfiguration)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.NewInstance(ClientBaseConfiguration)
        VB: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.NewInstance(ClientBaseConfiguration)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.SyncServer
      source:
        id: NewInstance
        path: ''
        startLine: 16658
      summary: Creates a new instance of client from given <code>ClientBaseConfiguration</code>.
      example: []
      syntax:
        content:
          CSharp: protected override RegistrationService.RegistrationServiceClient NewInstance(ClientBaseConfiguration configuration)
          VB: Protected Overrides Function NewInstance(configuration As ClientBaseConfiguration) As RegistrationService.RegistrationServiceClient
        parameters:
        - id: configuration
          type: ClientBaseConfiguration
        return:
          type: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient
      overload: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.NewInstance*
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
- id: Unity.Reflect.ProjectServer.Services.Viewer
  commentId: N:Unity.Reflect.ProjectServer.Services.Viewer
  language: CSharp
  name:
    CSharp: Unity.Reflect.ProjectServer.Services.Viewer
    VB: Unity.Reflect.ProjectServer.Services.Viewer
  nameWithType:
    CSharp: Unity.Reflect.ProjectServer.Services.Viewer
    VB: Unity.Reflect.ProjectServer.Services.Viewer
  qualifiedName:
    CSharp: Unity.Reflect.ProjectServer.Services.Viewer
    VB: Unity.Reflect.ProjectServer.Services.Viewer
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Unity.Reflect.ProjectServer.Services.Viewer.ViewerReflection
    commentId: T:Unity.Reflect.ProjectServer.Services.Viewer.ViewerReflection
    language: CSharp
    name:
      CSharp: ViewerReflection
      VB: ViewerReflection
    nameWithType:
      CSharp: ViewerReflection
      VB: ViewerReflection
    qualifiedName:
      CSharp: Unity.Reflect.ProjectServer.Services.Viewer.ViewerReflection
      VB: Unity.Reflect.ProjectServer.Services.Viewer.ViewerReflection
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect.ProjectServer.Services.Viewer
    source:
      id: ViewerReflection
      path: ''
      startLine: 16703
    summary: Holder for reflection information generated from ProjectServer/Viewer.proto
    example: []
    syntax:
      content:
        CSharp: public static class ViewerReflection
        VB: Public Module ViewerReflection
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: Unity.Reflect.ProjectServer.Services.Viewer.ViewerReflection.Descriptor
      commentId: P:Unity.Reflect.ProjectServer.Services.Viewer.ViewerReflection.Descriptor
      language: CSharp
      name:
        CSharp: Descriptor
        VB: Descriptor
      nameWithType:
        CSharp: ViewerReflection.Descriptor
        VB: ViewerReflection.Descriptor
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Viewer.ViewerReflection.Descriptor
        VB: Unity.Reflect.ProjectServer.Services.Viewer.ViewerReflection.Descriptor
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Viewer
      source:
        id: Descriptor
        path: ''
        startLine: 16707
      summary: File descriptor for ProjectServer/Viewer.proto
      example: []
      syntax:
        content:
          CSharp: public static pbr.FileDescriptor Descriptor { get; }
          VB: Public Shared ReadOnly Property Descriptor As pbr.FileDescriptor
        parameters: []
        return:
          type: pbr.FileDescriptor
      overload: Unity.Reflect.ProjectServer.Services.Viewer.ViewerReflection.Descriptor*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
  - id: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse
    commentId: T:Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse
    language: CSharp
    name:
      CSharp: ListProjectsResponse
      VB: ListProjectsResponse
    nameWithType:
      CSharp: ListProjectsResponse
      VB: ListProjectsResponse
    qualifiedName:
      CSharp: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse
      VB: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect.ProjectServer.Services.Viewer
    source:
      id: ListProjectsResponse
      path: ''
      startLine: 16738
    syntax:
      content:
        CSharp: 'public sealed class ListProjectsResponse : pb.IMessage<ListProjectsResponse>'
        VB: >-
          Public NotInheritable Class ListProjectsResponse

              Inherits pb.IMessage(Of ListProjectsResponse)
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - sealed
      - class
      VB:
      - Public
      - NotInheritable
      - Class
    items:
    - id: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.Parser
      commentId: P:Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.Parser
      language: CSharp
      name:
        CSharp: Parser
        VB: Parser
      nameWithType:
        CSharp: ListProjectsResponse.Parser
        VB: ListProjectsResponse.Parser
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.Parser
        VB: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.Parser
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Viewer
      source:
        id: Parser
        path: ''
        startLine: 16741
      syntax:
        content:
          CSharp: public static pb.MessageParser<ListProjectsResponse> Parser { get; }
          VB: Public Shared ReadOnly Property Parser As pb.MessageParser(Of ListProjectsResponse)
        parameters: []
        return:
          type: pb.MessageParser{Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse}
      overload: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.Parser*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.Descriptor
      commentId: P:Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.Descriptor
      language: CSharp
      name:
        CSharp: Descriptor
        VB: Descriptor
      nameWithType:
        CSharp: ListProjectsResponse.Descriptor
        VB: ListProjectsResponse.Descriptor
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.Descriptor
        VB: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.Descriptor
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Viewer
      source:
        id: Descriptor
        path: ''
        startLine: 16744
      syntax:
        content:
          CSharp: public static pbr.MessageDescriptor Descriptor { get; }
          VB: Public Shared ReadOnly Property Descriptor As pbr.MessageDescriptor
        parameters: []
        return:
          type: pbr.MessageDescriptor
      overload: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.Descriptor*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.#ctor
      commentId: M:Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.#ctor
      language: CSharp
      name:
        CSharp: ListProjectsResponse()
        VB: ListProjectsResponse()
      nameWithType:
        CSharp: ListProjectsResponse.ListProjectsResponse()
        VB: ListProjectsResponse.ListProjectsResponse()
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.ListProjectsResponse()
        VB: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.ListProjectsResponse()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Viewer
      source:
        id: .ctor
        path: ''
        startLine: 16754
      syntax:
        content:
          CSharp: public ListProjectsResponse()
          VB: Public Sub New
      overload: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.#ctor(Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse)
      commentId: M:Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.#ctor(Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse)
      language: CSharp
      name:
        CSharp: ListProjectsResponse(ListProjectsResponse)
        VB: ListProjectsResponse(ListProjectsResponse)
      nameWithType:
        CSharp: ListProjectsResponse.ListProjectsResponse(ListProjectsResponse)
        VB: ListProjectsResponse.ListProjectsResponse(ListProjectsResponse)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.ListProjectsResponse(Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse)
        VB: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.ListProjectsResponse(Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Viewer
      source:
        id: .ctor
        path: ''
        startLine: 16761
      syntax:
        content:
          CSharp: public ListProjectsResponse(ListProjectsResponse other)
          VB: Public Sub New(other As ListProjectsResponse)
        parameters:
        - id: other
          type: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse
      overload: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.Clone
      commentId: M:Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.Clone
      language: CSharp
      name:
        CSharp: Clone()
        VB: Clone()
      nameWithType:
        CSharp: ListProjectsResponse.Clone()
        VB: ListProjectsResponse.Clone()
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.Clone()
        VB: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.Clone()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Viewer
      source:
        id: Clone
        path: ''
        startLine: 16767
      syntax:
        content:
          CSharp: public ListProjectsResponse Clone()
          VB: Public Function Clone As ListProjectsResponse
        return:
          type: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse
      overload: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.Clone*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.ProjectsFieldNumber
      commentId: F:Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.ProjectsFieldNumber
      language: CSharp
      name:
        CSharp: ProjectsFieldNumber
        VB: ProjectsFieldNumber
      nameWithType:
        CSharp: ListProjectsResponse.ProjectsFieldNumber
        VB: ListProjectsResponse.ProjectsFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.ProjectsFieldNumber
        VB: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.ProjectsFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Viewer
      source:
        id: ProjectsFieldNumber
        path: ''
        startLine: 16773
      summary: Field number for the &quot;projects&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int ProjectsFieldNumber = 1
          VB: Public Const ProjectsFieldNumber As Integer = 1
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.Projects
      commentId: P:Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.Projects
      language: CSharp
      name:
        CSharp: Projects
        VB: Projects
      nameWithType:
        CSharp: ListProjectsResponse.Projects
        VB: ListProjectsResponse.Projects
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.Projects
        VB: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.Projects
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Viewer
      source:
        id: Projects
        path: ''
        startLine: 16777
      syntax:
        content:
          CSharp: public pbc.RepeatedField<Project> Projects { get; }
          VB: Public ReadOnly Property Projects As pbc.RepeatedField(Of Project)
        parameters: []
        return:
          type: pbc.RepeatedField{Unity.Reflect.ProjectServer.Services.Viewer.Project}
      overload: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.Projects*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.Equals(System.Object)
      commentId: M:Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.Equals(System.Object)
      language: CSharp
      name:
        CSharp: Equals(Object)
        VB: Equals(Object)
      nameWithType:
        CSharp: ListProjectsResponse.Equals(Object)
        VB: ListProjectsResponse.Equals(Object)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.Equals(System.Object)
        VB: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.Equals(System.Object)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Viewer
      source:
        id: Equals
        path: ''
        startLine: 16782
      syntax:
        content:
          CSharp: public override bool Equals(object other)
          VB: Public Overrides Function Equals(other As Object) As Boolean
        parameters:
        - id: other
          type: System.Object
        return:
          type: System.Boolean
      overload: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.Equals*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.Equals(Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse)
      commentId: M:Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.Equals(Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse)
      language: CSharp
      name:
        CSharp: Equals(ListProjectsResponse)
        VB: Equals(ListProjectsResponse)
      nameWithType:
        CSharp: ListProjectsResponse.Equals(ListProjectsResponse)
        VB: ListProjectsResponse.Equals(ListProjectsResponse)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.Equals(Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse)
        VB: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.Equals(Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Viewer
      source:
        id: Equals
        path: ''
        startLine: 16787
      syntax:
        content:
          CSharp: public bool Equals(ListProjectsResponse other)
          VB: Public Function Equals(other As ListProjectsResponse) As Boolean
        parameters:
        - id: other
          type: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse
        return:
          type: System.Boolean
      overload: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.Equals*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.GetHashCode
      commentId: M:Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.GetHashCode
      language: CSharp
      name:
        CSharp: GetHashCode()
        VB: GetHashCode()
      nameWithType:
        CSharp: ListProjectsResponse.GetHashCode()
        VB: ListProjectsResponse.GetHashCode()
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.GetHashCode()
        VB: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.GetHashCode()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Viewer
      source:
        id: GetHashCode
        path: ''
        startLine: 16799
      syntax:
        content:
          CSharp: public override int GetHashCode()
          VB: Public Overrides Function GetHashCode As Integer
        return:
          type: System.Int32
      overload: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.GetHashCode*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.ToString
      commentId: M:Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.ToString
      language: CSharp
      name:
        CSharp: ToString()
        VB: ToString()
      nameWithType:
        CSharp: ListProjectsResponse.ToString()
        VB: ListProjectsResponse.ToString()
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.ToString()
        VB: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.ToString()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Viewer
      source:
        id: ToString
        path: ''
        startLine: 16809
      syntax:
        content:
          CSharp: public override string ToString()
          VB: Public Overrides Function ToString As String
        return:
          type: System.String
      overload: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.ToString*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.WriteTo(pb.CodedOutputStream)
      commentId: M:Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.WriteTo(pb.CodedOutputStream)
      language: CSharp
      name:
        CSharp: WriteTo(pb.CodedOutputStream)
        VB: WriteTo(pb.CodedOutputStream)
      nameWithType:
        CSharp: ListProjectsResponse.WriteTo(pb.CodedOutputStream)
        VB: ListProjectsResponse.WriteTo(pb.CodedOutputStream)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.WriteTo(pb.CodedOutputStream)
        VB: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.WriteTo(pb.CodedOutputStream)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Viewer
      source:
        id: WriteTo
        path: ''
        startLine: 16814
      syntax:
        content:
          CSharp: public void WriteTo(pb.CodedOutputStream output)
          VB: Public Sub WriteTo(output As pb.CodedOutputStream)
        parameters:
        - id: output
          type: pb.CodedOutputStream
      overload: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.WriteTo*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.CalculateSize
      commentId: M:Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.CalculateSize
      language: CSharp
      name:
        CSharp: CalculateSize()
        VB: CalculateSize()
      nameWithType:
        CSharp: ListProjectsResponse.CalculateSize()
        VB: ListProjectsResponse.CalculateSize()
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.CalculateSize()
        VB: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.CalculateSize()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Viewer
      source:
        id: CalculateSize
        path: ''
        startLine: 16822
      syntax:
        content:
          CSharp: public int CalculateSize()
          VB: Public Function CalculateSize As Integer
        return:
          type: System.Int32
      overload: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.CalculateSize*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.MergeFrom(Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse)
      commentId: M:Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.MergeFrom(Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse)
      language: CSharp
      name:
        CSharp: MergeFrom(ListProjectsResponse)
        VB: MergeFrom(ListProjectsResponse)
      nameWithType:
        CSharp: ListProjectsResponse.MergeFrom(ListProjectsResponse)
        VB: ListProjectsResponse.MergeFrom(ListProjectsResponse)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.MergeFrom(Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse)
        VB: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.MergeFrom(Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Viewer
      source:
        id: MergeFrom
        path: ''
        startLine: 16832
      syntax:
        content:
          CSharp: public void MergeFrom(ListProjectsResponse other)
          VB: Public Sub MergeFrom(other As ListProjectsResponse)
        parameters:
        - id: other
          type: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse
      overload: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.MergeFrom*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.MergeFrom(pb.CodedInputStream)
      commentId: M:Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.MergeFrom(pb.CodedInputStream)
      language: CSharp
      name:
        CSharp: MergeFrom(pb.CodedInputStream)
        VB: MergeFrom(pb.CodedInputStream)
      nameWithType:
        CSharp: ListProjectsResponse.MergeFrom(pb.CodedInputStream)
        VB: ListProjectsResponse.MergeFrom(pb.CodedInputStream)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.MergeFrom(pb.CodedInputStream)
        VB: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.MergeFrom(pb.CodedInputStream)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Viewer
      source:
        id: MergeFrom
        path: ''
        startLine: 16841
      syntax:
        content:
          CSharp: public void MergeFrom(pb.CodedInputStream input)
          VB: Public Sub MergeFrom(input As pb.CodedInputStream)
        parameters:
        - id: input
          type: pb.CodedInputStream
      overload: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.MergeFrom*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Unity.Reflect.ProjectServer.Services.Viewer.Project
    commentId: T:Unity.Reflect.ProjectServer.Services.Viewer.Project
    language: CSharp
    name:
      CSharp: Project
      VB: Project
    nameWithType:
      CSharp: Project
      VB: Project
    qualifiedName:
      CSharp: Unity.Reflect.ProjectServer.Services.Viewer.Project
      VB: Unity.Reflect.ProjectServer.Services.Viewer.Project
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect.ProjectServer.Services.Viewer
    source:
      id: Project
      path: ''
      startLine: 16859
    syntax:
      content:
        CSharp: 'public sealed class Project : pb.IMessage<Project>'
        VB: >-
          Public NotInheritable Class Project

              Inherits pb.IMessage(Of Project)
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - sealed
      - class
      VB:
      - Public
      - NotInheritable
      - Class
    items:
    - id: Unity.Reflect.ProjectServer.Services.Viewer.Project.Parser
      commentId: P:Unity.Reflect.ProjectServer.Services.Viewer.Project.Parser
      language: CSharp
      name:
        CSharp: Parser
        VB: Parser
      nameWithType:
        CSharp: Project.Parser
        VB: Project.Parser
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Viewer.Project.Parser
        VB: Unity.Reflect.ProjectServer.Services.Viewer.Project.Parser
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Viewer
      source:
        id: Parser
        path: ''
        startLine: 16862
      syntax:
        content:
          CSharp: public static pb.MessageParser<Project> Parser { get; }
          VB: Public Shared ReadOnly Property Parser As pb.MessageParser(Of Project)
        parameters: []
        return:
          type: pb.MessageParser{Unity.Reflect.ProjectServer.Services.Viewer.Project}
      overload: Unity.Reflect.ProjectServer.Services.Viewer.Project.Parser*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Unity.Reflect.ProjectServer.Services.Viewer.Project.Descriptor
      commentId: P:Unity.Reflect.ProjectServer.Services.Viewer.Project.Descriptor
      language: CSharp
      name:
        CSharp: Descriptor
        VB: Descriptor
      nameWithType:
        CSharp: Project.Descriptor
        VB: Project.Descriptor
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Viewer.Project.Descriptor
        VB: Unity.Reflect.ProjectServer.Services.Viewer.Project.Descriptor
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Viewer
      source:
        id: Descriptor
        path: ''
        startLine: 16865
      syntax:
        content:
          CSharp: public static pbr.MessageDescriptor Descriptor { get; }
          VB: Public Shared ReadOnly Property Descriptor As pbr.MessageDescriptor
        parameters: []
        return:
          type: pbr.MessageDescriptor
      overload: Unity.Reflect.ProjectServer.Services.Viewer.Project.Descriptor*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Unity.Reflect.ProjectServer.Services.Viewer.Project.#ctor
      commentId: M:Unity.Reflect.ProjectServer.Services.Viewer.Project.#ctor
      language: CSharp
      name:
        CSharp: Project()
        VB: Project()
      nameWithType:
        CSharp: Project.Project()
        VB: Project.Project()
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Viewer.Project.Project()
        VB: Unity.Reflect.ProjectServer.Services.Viewer.Project.Project()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Viewer
      source:
        id: .ctor
        path: ''
        startLine: 16875
      syntax:
        content:
          CSharp: public Project()
          VB: Public Sub New
      overload: Unity.Reflect.ProjectServer.Services.Viewer.Project.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Viewer.Project.#ctor(Unity.Reflect.ProjectServer.Services.Viewer.Project)
      commentId: M:Unity.Reflect.ProjectServer.Services.Viewer.Project.#ctor(Unity.Reflect.ProjectServer.Services.Viewer.Project)
      language: CSharp
      name:
        CSharp: Project(Project)
        VB: Project(Project)
      nameWithType:
        CSharp: Project.Project(Project)
        VB: Project.Project(Project)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Viewer.Project.Project(Unity.Reflect.ProjectServer.Services.Viewer.Project)
        VB: Unity.Reflect.ProjectServer.Services.Viewer.Project.Project(Unity.Reflect.ProjectServer.Services.Viewer.Project)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Viewer
      source:
        id: .ctor
        path: ''
        startLine: 16882
      syntax:
        content:
          CSharp: public Project(Project other)
          VB: Public Sub New(other As Project)
        parameters:
        - id: other
          type: Unity.Reflect.ProjectServer.Services.Viewer.Project
      overload: Unity.Reflect.ProjectServer.Services.Viewer.Project.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Viewer.Project.Clone
      commentId: M:Unity.Reflect.ProjectServer.Services.Viewer.Project.Clone
      language: CSharp
      name:
        CSharp: Clone()
        VB: Clone()
      nameWithType:
        CSharp: Project.Clone()
        VB: Project.Clone()
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Viewer.Project.Clone()
        VB: Unity.Reflect.ProjectServer.Services.Viewer.Project.Clone()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Viewer
      source:
        id: Clone
        path: ''
        startLine: 16890
      syntax:
        content:
          CSharp: public Project Clone()
          VB: Public Function Clone As Project
        return:
          type: Unity.Reflect.ProjectServer.Services.Viewer.Project
      overload: Unity.Reflect.ProjectServer.Services.Viewer.Project.Clone*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Viewer.Project.IdFieldNumber
      commentId: F:Unity.Reflect.ProjectServer.Services.Viewer.Project.IdFieldNumber
      language: CSharp
      name:
        CSharp: IdFieldNumber
        VB: IdFieldNumber
      nameWithType:
        CSharp: Project.IdFieldNumber
        VB: Project.IdFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Viewer.Project.IdFieldNumber
        VB: Unity.Reflect.ProjectServer.Services.Viewer.Project.IdFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Viewer
      source:
        id: IdFieldNumber
        path: ''
        startLine: 16896
      summary: Field number for the &quot;id&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int IdFieldNumber = 1
          VB: Public Const IdFieldNumber As Integer = 1
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.ProjectServer.Services.Viewer.Project.Id
      commentId: P:Unity.Reflect.ProjectServer.Services.Viewer.Project.Id
      language: CSharp
      name:
        CSharp: Id
        VB: Id
      nameWithType:
        CSharp: Project.Id
        VB: Project.Id
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Viewer.Project.Id
        VB: Unity.Reflect.ProjectServer.Services.Viewer.Project.Id
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Viewer
      source:
        id: Id
        path: ''
        startLine: 16898
      syntax:
        content:
          CSharp: public string Id { get; set; }
          VB: Public Property Id As String
        parameters: []
        return:
          type: System.String
      overload: Unity.Reflect.ProjectServer.Services.Viewer.Project.Id*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Viewer.Project.NameFieldNumber
      commentId: F:Unity.Reflect.ProjectServer.Services.Viewer.Project.NameFieldNumber
      language: CSharp
      name:
        CSharp: NameFieldNumber
        VB: NameFieldNumber
      nameWithType:
        CSharp: Project.NameFieldNumber
        VB: Project.NameFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Viewer.Project.NameFieldNumber
        VB: Unity.Reflect.ProjectServer.Services.Viewer.Project.NameFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Viewer
      source:
        id: NameFieldNumber
        path: ''
        startLine: 16907
      summary: Field number for the &quot;name&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int NameFieldNumber = 2
          VB: Public Const NameFieldNumber As Integer = 2
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.ProjectServer.Services.Viewer.Project.Name
      commentId: P:Unity.Reflect.ProjectServer.Services.Viewer.Project.Name
      language: CSharp
      name:
        CSharp: Name
        VB: Name
      nameWithType:
        CSharp: Project.Name
        VB: Project.Name
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Viewer.Project.Name
        VB: Unity.Reflect.ProjectServer.Services.Viewer.Project.Name
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Viewer
      source:
        id: Name
        path: ''
        startLine: 16909
      syntax:
        content:
          CSharp: public string Name { get; set; }
          VB: Public Property Name As String
        parameters: []
        return:
          type: System.String
      overload: Unity.Reflect.ProjectServer.Services.Viewer.Project.Name*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Viewer.Project.HostFieldNumber
      commentId: F:Unity.Reflect.ProjectServer.Services.Viewer.Project.HostFieldNumber
      language: CSharp
      name:
        CSharp: HostFieldNumber
        VB: HostFieldNumber
      nameWithType:
        CSharp: Project.HostFieldNumber
        VB: Project.HostFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Viewer.Project.HostFieldNumber
        VB: Unity.Reflect.ProjectServer.Services.Viewer.Project.HostFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Viewer
      source:
        id: HostFieldNumber
        path: ''
        startLine: 16918
      summary: Field number for the &quot;host&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int HostFieldNumber = 3
          VB: Public Const HostFieldNumber As Integer = 3
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.ProjectServer.Services.Viewer.Project.Host
      commentId: P:Unity.Reflect.ProjectServer.Services.Viewer.Project.Host
      language: CSharp
      name:
        CSharp: Host
        VB: Host
      nameWithType:
        CSharp: Project.Host
        VB: Project.Host
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Viewer.Project.Host
        VB: Unity.Reflect.ProjectServer.Services.Viewer.Project.Host
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Viewer
      source:
        id: Host
        path: ''
        startLine: 16920
      syntax:
        content:
          CSharp: public ProjectHost Host { get; set; }
          VB: Public Property Host As ProjectHost
        parameters: []
        return:
          type: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost
      overload: Unity.Reflect.ProjectServer.Services.Viewer.Project.Host*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Viewer.Project.Equals(System.Object)
      commentId: M:Unity.Reflect.ProjectServer.Services.Viewer.Project.Equals(System.Object)
      language: CSharp
      name:
        CSharp: Equals(Object)
        VB: Equals(Object)
      nameWithType:
        CSharp: Project.Equals(Object)
        VB: Project.Equals(Object)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Viewer.Project.Equals(System.Object)
        VB: Unity.Reflect.ProjectServer.Services.Viewer.Project.Equals(System.Object)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Viewer
      source:
        id: Equals
        path: ''
        startLine: 16928
      syntax:
        content:
          CSharp: public override bool Equals(object other)
          VB: Public Overrides Function Equals(other As Object) As Boolean
        parameters:
        - id: other
          type: System.Object
        return:
          type: System.Boolean
      overload: Unity.Reflect.ProjectServer.Services.Viewer.Project.Equals*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.ProjectServer.Services.Viewer.Project.Equals(Unity.Reflect.ProjectServer.Services.Viewer.Project)
      commentId: M:Unity.Reflect.ProjectServer.Services.Viewer.Project.Equals(Unity.Reflect.ProjectServer.Services.Viewer.Project)
      language: CSharp
      name:
        CSharp: Equals(Project)
        VB: Equals(Project)
      nameWithType:
        CSharp: Project.Equals(Project)
        VB: Project.Equals(Project)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Viewer.Project.Equals(Unity.Reflect.ProjectServer.Services.Viewer.Project)
        VB: Unity.Reflect.ProjectServer.Services.Viewer.Project.Equals(Unity.Reflect.ProjectServer.Services.Viewer.Project)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Viewer
      source:
        id: Equals
        path: ''
        startLine: 16933
      syntax:
        content:
          CSharp: public bool Equals(Project other)
          VB: Public Function Equals(other As Project) As Boolean
        parameters:
        - id: other
          type: Unity.Reflect.ProjectServer.Services.Viewer.Project
        return:
          type: System.Boolean
      overload: Unity.Reflect.ProjectServer.Services.Viewer.Project.Equals*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Viewer.Project.GetHashCode
      commentId: M:Unity.Reflect.ProjectServer.Services.Viewer.Project.GetHashCode
      language: CSharp
      name:
        CSharp: GetHashCode()
        VB: GetHashCode()
      nameWithType:
        CSharp: Project.GetHashCode()
        VB: Project.GetHashCode()
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Viewer.Project.GetHashCode()
        VB: Unity.Reflect.ProjectServer.Services.Viewer.Project.GetHashCode()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Viewer
      source:
        id: GetHashCode
        path: ''
        startLine: 16947
      syntax:
        content:
          CSharp: public override int GetHashCode()
          VB: Public Overrides Function GetHashCode As Integer
        return:
          type: System.Int32
      overload: Unity.Reflect.ProjectServer.Services.Viewer.Project.GetHashCode*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.ProjectServer.Services.Viewer.Project.ToString
      commentId: M:Unity.Reflect.ProjectServer.Services.Viewer.Project.ToString
      language: CSharp
      name:
        CSharp: ToString()
        VB: ToString()
      nameWithType:
        CSharp: Project.ToString()
        VB: Project.ToString()
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Viewer.Project.ToString()
        VB: Unity.Reflect.ProjectServer.Services.Viewer.Project.ToString()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Viewer
      source:
        id: ToString
        path: ''
        startLine: 16959
      syntax:
        content:
          CSharp: public override string ToString()
          VB: Public Overrides Function ToString As String
        return:
          type: System.String
      overload: Unity.Reflect.ProjectServer.Services.Viewer.Project.ToString*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.ProjectServer.Services.Viewer.Project.WriteTo(pb.CodedOutputStream)
      commentId: M:Unity.Reflect.ProjectServer.Services.Viewer.Project.WriteTo(pb.CodedOutputStream)
      language: CSharp
      name:
        CSharp: WriteTo(pb.CodedOutputStream)
        VB: WriteTo(pb.CodedOutputStream)
      nameWithType:
        CSharp: Project.WriteTo(pb.CodedOutputStream)
        VB: Project.WriteTo(pb.CodedOutputStream)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Viewer.Project.WriteTo(pb.CodedOutputStream)
        VB: Unity.Reflect.ProjectServer.Services.Viewer.Project.WriteTo(pb.CodedOutputStream)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Viewer
      source:
        id: WriteTo
        path: ''
        startLine: 16964
      syntax:
        content:
          CSharp: public void WriteTo(pb.CodedOutputStream output)
          VB: Public Sub WriteTo(output As pb.CodedOutputStream)
        parameters:
        - id: output
          type: pb.CodedOutputStream
      overload: Unity.Reflect.ProjectServer.Services.Viewer.Project.WriteTo*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Viewer.Project.CalculateSize
      commentId: M:Unity.Reflect.ProjectServer.Services.Viewer.Project.CalculateSize
      language: CSharp
      name:
        CSharp: CalculateSize()
        VB: CalculateSize()
      nameWithType:
        CSharp: Project.CalculateSize()
        VB: Project.CalculateSize()
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Viewer.Project.CalculateSize()
        VB: Unity.Reflect.ProjectServer.Services.Viewer.Project.CalculateSize()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Viewer
      source:
        id: CalculateSize
        path: ''
        startLine: 16983
      syntax:
        content:
          CSharp: public int CalculateSize()
          VB: Public Function CalculateSize As Integer
        return:
          type: System.Int32
      overload: Unity.Reflect.ProjectServer.Services.Viewer.Project.CalculateSize*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Viewer.Project.MergeFrom(Unity.Reflect.ProjectServer.Services.Viewer.Project)
      commentId: M:Unity.Reflect.ProjectServer.Services.Viewer.Project.MergeFrom(Unity.Reflect.ProjectServer.Services.Viewer.Project)
      language: CSharp
      name:
        CSharp: MergeFrom(Project)
        VB: MergeFrom(Project)
      nameWithType:
        CSharp: Project.MergeFrom(Project)
        VB: Project.MergeFrom(Project)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Viewer.Project.MergeFrom(Unity.Reflect.ProjectServer.Services.Viewer.Project)
        VB: Unity.Reflect.ProjectServer.Services.Viewer.Project.MergeFrom(Unity.Reflect.ProjectServer.Services.Viewer.Project)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Viewer
      source:
        id: MergeFrom
        path: ''
        startLine: 17001
      syntax:
        content:
          CSharp: public void MergeFrom(Project other)
          VB: Public Sub MergeFrom(other As Project)
        parameters:
        - id: other
          type: Unity.Reflect.ProjectServer.Services.Viewer.Project
      overload: Unity.Reflect.ProjectServer.Services.Viewer.Project.MergeFrom*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Viewer.Project.MergeFrom(pb.CodedInputStream)
      commentId: M:Unity.Reflect.ProjectServer.Services.Viewer.Project.MergeFrom(pb.CodedInputStream)
      language: CSharp
      name:
        CSharp: MergeFrom(pb.CodedInputStream)
        VB: MergeFrom(pb.CodedInputStream)
      nameWithType:
        CSharp: Project.MergeFrom(pb.CodedInputStream)
        VB: Project.MergeFrom(pb.CodedInputStream)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Viewer.Project.MergeFrom(pb.CodedInputStream)
        VB: Unity.Reflect.ProjectServer.Services.Viewer.Project.MergeFrom(pb.CodedInputStream)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Viewer
      source:
        id: MergeFrom
        path: ''
        startLine: 17021
      syntax:
        content:
          CSharp: public void MergeFrom(pb.CodedInputStream input)
          VB: Public Sub MergeFrom(input As pb.CodedInputStream)
        parameters:
        - id: input
          type: pb.CodedInputStream
      overload: Unity.Reflect.ProjectServer.Services.Viewer.Project.MergeFrom*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost
    commentId: T:Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost
    language: CSharp
    name:
      CSharp: ProjectHost
      VB: ProjectHost
    nameWithType:
      CSharp: ProjectHost
      VB: ProjectHost
    qualifiedName:
      CSharp: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost
      VB: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect.ProjectServer.Services.Viewer
    source:
      id: ProjectHost
      path: ''
      startLine: 17050
    syntax:
      content:
        CSharp: 'public sealed class ProjectHost : pb.IMessage<ProjectHost>'
        VB: >-
          Public NotInheritable Class ProjectHost

              Inherits pb.IMessage(Of ProjectHost)
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - sealed
      - class
      VB:
      - Public
      - NotInheritable
      - Class
    items:
    - id: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.Parser
      commentId: P:Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.Parser
      language: CSharp
      name:
        CSharp: Parser
        VB: Parser
      nameWithType:
        CSharp: ProjectHost.Parser
        VB: ProjectHost.Parser
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.Parser
        VB: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.Parser
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Viewer
      source:
        id: Parser
        path: ''
        startLine: 17053
      syntax:
        content:
          CSharp: public static pb.MessageParser<ProjectHost> Parser { get; }
          VB: Public Shared ReadOnly Property Parser As pb.MessageParser(Of ProjectHost)
        parameters: []
        return:
          type: pb.MessageParser{Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost}
      overload: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.Parser*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.Descriptor
      commentId: P:Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.Descriptor
      language: CSharp
      name:
        CSharp: Descriptor
        VB: Descriptor
      nameWithType:
        CSharp: ProjectHost.Descriptor
        VB: ProjectHost.Descriptor
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.Descriptor
        VB: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.Descriptor
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Viewer
      source:
        id: Descriptor
        path: ''
        startLine: 17056
      syntax:
        content:
          CSharp: public static pbr.MessageDescriptor Descriptor { get; }
          VB: Public Shared ReadOnly Property Descriptor As pbr.MessageDescriptor
        parameters: []
        return:
          type: pbr.MessageDescriptor
      overload: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.Descriptor*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.#ctor
      commentId: M:Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.#ctor
      language: CSharp
      name:
        CSharp: ProjectHost()
        VB: ProjectHost()
      nameWithType:
        CSharp: ProjectHost.ProjectHost()
        VB: ProjectHost.ProjectHost()
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.ProjectHost()
        VB: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.ProjectHost()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Viewer
      source:
        id: .ctor
        path: ''
        startLine: 17066
      syntax:
        content:
          CSharp: public ProjectHost()
          VB: Public Sub New
      overload: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.#ctor(Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost)
      commentId: M:Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.#ctor(Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost)
      language: CSharp
      name:
        CSharp: ProjectHost(ProjectHost)
        VB: ProjectHost(ProjectHost)
      nameWithType:
        CSharp: ProjectHost.ProjectHost(ProjectHost)
        VB: ProjectHost.ProjectHost(ProjectHost)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.ProjectHost(Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost)
        VB: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.ProjectHost(Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Viewer
      source:
        id: .ctor
        path: ''
        startLine: 17073
      syntax:
        content:
          CSharp: public ProjectHost(ProjectHost other)
          VB: Public Sub New(other As ProjectHost)
        parameters:
        - id: other
          type: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost
      overload: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.Clone
      commentId: M:Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.Clone
      language: CSharp
      name:
        CSharp: Clone()
        VB: Clone()
      nameWithType:
        CSharp: ProjectHost.Clone()
        VB: ProjectHost.Clone()
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.Clone()
        VB: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.Clone()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Viewer
      source:
        id: Clone
        path: ''
        startLine: 17081
      syntax:
        content:
          CSharp: public ProjectHost Clone()
          VB: Public Function Clone As ProjectHost
        return:
          type: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost
      overload: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.Clone*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.NameFieldNumber
      commentId: F:Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.NameFieldNumber
      language: CSharp
      name:
        CSharp: NameFieldNumber
        VB: NameFieldNumber
      nameWithType:
        CSharp: ProjectHost.NameFieldNumber
        VB: ProjectHost.NameFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.NameFieldNumber
        VB: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.NameFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Viewer
      source:
        id: NameFieldNumber
        path: ''
        startLine: 17087
      summary: Field number for the &quot;name&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int NameFieldNumber = 1
          VB: Public Const NameFieldNumber As Integer = 1
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.Name
      commentId: P:Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.Name
      language: CSharp
      name:
        CSharp: Name
        VB: Name
      nameWithType:
        CSharp: ProjectHost.Name
        VB: ProjectHost.Name
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.Name
        VB: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.Name
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Viewer
      source:
        id: Name
        path: ''
        startLine: 17089
      syntax:
        content:
          CSharp: public string Name { get; set; }
          VB: Public Property Name As String
        parameters: []
        return:
          type: System.String
      overload: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.Name*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.AddressFieldNumber
      commentId: F:Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.AddressFieldNumber
      language: CSharp
      name:
        CSharp: AddressFieldNumber
        VB: AddressFieldNumber
      nameWithType:
        CSharp: ProjectHost.AddressFieldNumber
        VB: ProjectHost.AddressFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.AddressFieldNumber
        VB: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.AddressFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Viewer
      source:
        id: AddressFieldNumber
        path: ''
        startLine: 17098
      summary: Field number for the &quot;address&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int AddressFieldNumber = 2
          VB: Public Const AddressFieldNumber As Integer = 2
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.Address
      commentId: P:Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.Address
      language: CSharp
      name:
        CSharp: Address
        VB: Address
      nameWithType:
        CSharp: ProjectHost.Address
        VB: ProjectHost.Address
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.Address
        VB: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.Address
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Viewer
      source:
        id: Address
        path: ''
        startLine: 17100
      syntax:
        content:
          CSharp: public string Address { get; set; }
          VB: Public Property Address As String
        parameters: []
        return:
          type: System.String
      overload: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.Address*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.UserNameFieldNumber
      commentId: F:Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.UserNameFieldNumber
      language: CSharp
      name:
        CSharp: UserNameFieldNumber
        VB: UserNameFieldNumber
      nameWithType:
        CSharp: ProjectHost.UserNameFieldNumber
        VB: ProjectHost.UserNameFieldNumber
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.UserNameFieldNumber
        VB: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.UserNameFieldNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Viewer
      source:
        id: UserNameFieldNumber
        path: ''
        startLine: 17109
      summary: Field number for the &quot;userName&quot; field.
      example: []
      syntax:
        content:
          CSharp: public const int UserNameFieldNumber = 3
          VB: Public Const UserNameFieldNumber As Integer = 3
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.UserName
      commentId: P:Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.UserName
      language: CSharp
      name:
        CSharp: UserName
        VB: UserName
      nameWithType:
        CSharp: ProjectHost.UserName
        VB: ProjectHost.UserName
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.UserName
        VB: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.UserName
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Viewer
      source:
        id: UserName
        path: ''
        startLine: 17111
      syntax:
        content:
          CSharp: public string UserName { get; set; }
          VB: Public Property UserName As String
        parameters: []
        return:
          type: System.String
      overload: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.UserName*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.Equals(System.Object)
      commentId: M:Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.Equals(System.Object)
      language: CSharp
      name:
        CSharp: Equals(Object)
        VB: Equals(Object)
      nameWithType:
        CSharp: ProjectHost.Equals(Object)
        VB: ProjectHost.Equals(Object)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.Equals(System.Object)
        VB: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.Equals(System.Object)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Viewer
      source:
        id: Equals
        path: ''
        startLine: 17119
      syntax:
        content:
          CSharp: public override bool Equals(object other)
          VB: Public Overrides Function Equals(other As Object) As Boolean
        parameters:
        - id: other
          type: System.Object
        return:
          type: System.Boolean
      overload: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.Equals*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.Equals(Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost)
      commentId: M:Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.Equals(Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost)
      language: CSharp
      name:
        CSharp: Equals(ProjectHost)
        VB: Equals(ProjectHost)
      nameWithType:
        CSharp: ProjectHost.Equals(ProjectHost)
        VB: ProjectHost.Equals(ProjectHost)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.Equals(Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost)
        VB: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.Equals(Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Viewer
      source:
        id: Equals
        path: ''
        startLine: 17124
      syntax:
        content:
          CSharp: public bool Equals(ProjectHost other)
          VB: Public Function Equals(other As ProjectHost) As Boolean
        parameters:
        - id: other
          type: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost
        return:
          type: System.Boolean
      overload: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.Equals*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.GetHashCode
      commentId: M:Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.GetHashCode
      language: CSharp
      name:
        CSharp: GetHashCode()
        VB: GetHashCode()
      nameWithType:
        CSharp: ProjectHost.GetHashCode()
        VB: ProjectHost.GetHashCode()
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.GetHashCode()
        VB: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.GetHashCode()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Viewer
      source:
        id: GetHashCode
        path: ''
        startLine: 17138
      syntax:
        content:
          CSharp: public override int GetHashCode()
          VB: Public Overrides Function GetHashCode As Integer
        return:
          type: System.Int32
      overload: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.GetHashCode*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.ToString
      commentId: M:Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.ToString
      language: CSharp
      name:
        CSharp: ToString()
        VB: ToString()
      nameWithType:
        CSharp: ProjectHost.ToString()
        VB: ProjectHost.ToString()
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.ToString()
        VB: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.ToString()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Viewer
      source:
        id: ToString
        path: ''
        startLine: 17150
      syntax:
        content:
          CSharp: public override string ToString()
          VB: Public Overrides Function ToString As String
        return:
          type: System.String
      overload: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.ToString*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.WriteTo(pb.CodedOutputStream)
      commentId: M:Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.WriteTo(pb.CodedOutputStream)
      language: CSharp
      name:
        CSharp: WriteTo(pb.CodedOutputStream)
        VB: WriteTo(pb.CodedOutputStream)
      nameWithType:
        CSharp: ProjectHost.WriteTo(pb.CodedOutputStream)
        VB: ProjectHost.WriteTo(pb.CodedOutputStream)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.WriteTo(pb.CodedOutputStream)
        VB: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.WriteTo(pb.CodedOutputStream)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Viewer
      source:
        id: WriteTo
        path: ''
        startLine: 17155
      syntax:
        content:
          CSharp: public void WriteTo(pb.CodedOutputStream output)
          VB: Public Sub WriteTo(output As pb.CodedOutputStream)
        parameters:
        - id: output
          type: pb.CodedOutputStream
      overload: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.WriteTo*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.CalculateSize
      commentId: M:Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.CalculateSize
      language: CSharp
      name:
        CSharp: CalculateSize()
        VB: CalculateSize()
      nameWithType:
        CSharp: ProjectHost.CalculateSize()
        VB: ProjectHost.CalculateSize()
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.CalculateSize()
        VB: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.CalculateSize()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Viewer
      source:
        id: CalculateSize
        path: ''
        startLine: 17174
      syntax:
        content:
          CSharp: public int CalculateSize()
          VB: Public Function CalculateSize As Integer
        return:
          type: System.Int32
      overload: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.CalculateSize*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.MergeFrom(Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost)
      commentId: M:Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.MergeFrom(Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost)
      language: CSharp
      name:
        CSharp: MergeFrom(ProjectHost)
        VB: MergeFrom(ProjectHost)
      nameWithType:
        CSharp: ProjectHost.MergeFrom(ProjectHost)
        VB: ProjectHost.MergeFrom(ProjectHost)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.MergeFrom(Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost)
        VB: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.MergeFrom(Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Viewer
      source:
        id: MergeFrom
        path: ''
        startLine: 17192
      syntax:
        content:
          CSharp: public void MergeFrom(ProjectHost other)
          VB: Public Sub MergeFrom(other As ProjectHost)
        parameters:
        - id: other
          type: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost
      overload: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.MergeFrom*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.MergeFrom(pb.CodedInputStream)
      commentId: M:Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.MergeFrom(pb.CodedInputStream)
      language: CSharp
      name:
        CSharp: MergeFrom(pb.CodedInputStream)
        VB: MergeFrom(pb.CodedInputStream)
      nameWithType:
        CSharp: ProjectHost.MergeFrom(pb.CodedInputStream)
        VB: ProjectHost.MergeFrom(pb.CodedInputStream)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.MergeFrom(pb.CodedInputStream)
        VB: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.MergeFrom(pb.CodedInputStream)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Viewer
      source:
        id: MergeFrom
        path: ''
        startLine: 17209
      syntax:
        content:
          CSharp: public void MergeFrom(pb.CodedInputStream input)
          VB: Public Sub MergeFrom(input As pb.CodedInputStream)
        parameters:
        - id: input
          type: pb.CodedInputStream
      overload: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.MergeFrom*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService
    commentId: T:Unity.Reflect.ProjectServer.Services.Viewer.ViewerService
    language: CSharp
    name:
      CSharp: ViewerService
      VB: ViewerService
    nameWithType:
      CSharp: ViewerService
      VB: ViewerService
    qualifiedName:
      CSharp: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService
      VB: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect.ProjectServer.Services.Viewer
    source:
      id: ViewerService
      path: ''
      startLine: 17256
    summary: "\nThis service requires the client to provide an valid ID token. The client\nis not required to &quot;AuthenticationService.Signin()&quot; and does not need\nthe Reflect entitlement\n"
    example: []
    syntax:
      content:
        CSharp: public static class ViewerService
        VB: Public Module ViewerService
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.Descriptor
      commentId: P:Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.Descriptor
      language: CSharp
      name:
        CSharp: Descriptor
        VB: Descriptor
      nameWithType:
        CSharp: ViewerService.Descriptor
        VB: ViewerService.Descriptor
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.Descriptor
        VB: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.Descriptor
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Viewer
      source:
        id: Descriptor
        path: ''
        startLine: 17271
      summary: Service descriptor
      example: []
      syntax:
        content:
          CSharp: public static Google.Protobuf.Reflection.ServiceDescriptor Descriptor { get; }
          VB: Public Shared ReadOnly Property Descriptor As Google.Protobuf.Reflection.ServiceDescriptor
        parameters: []
        return:
          type: Google.Protobuf.Reflection.ServiceDescriptor
      overload: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.Descriptor*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.BindService(Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceBase)
      commentId: M:Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.BindService(Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceBase)
      language: CSharp
      name:
        CSharp: BindService(ViewerService.ViewerServiceBase)
        VB: BindService(ViewerService.ViewerServiceBase)
      nameWithType:
        CSharp: ViewerService.BindService(ViewerService.ViewerServiceBase)
        VB: ViewerService.BindService(ViewerService.ViewerServiceBase)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.BindService(Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceBase)
        VB: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.BindService(Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceBase)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Viewer
      source:
        id: BindService
        path: ''
        startLine: 17335
      summary: Creates service definition that can be registered with a server
      example: []
      syntax:
        content:
          CSharp: public static grpc.ServerServiceDefinition BindService(ViewerService.ViewerServiceBase serviceImpl)
          VB: Public Shared Function BindService(serviceImpl As ViewerService.ViewerServiceBase) As grpc.ServerServiceDefinition
        parameters:
        - id: serviceImpl
          type: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceBase
          description: An object implementing the server-side handling logic.
        return:
          type: grpc.ServerServiceDefinition
      overload: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.BindService*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.BindService(grpc.ServiceBinderBase,Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceBase)
      commentId: M:Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.BindService(grpc.ServiceBinderBase,Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceBase)
      language: CSharp
      name:
        CSharp: BindService(grpc.ServiceBinderBase, ViewerService.ViewerServiceBase)
        VB: BindService(grpc.ServiceBinderBase, ViewerService.ViewerServiceBase)
      nameWithType:
        CSharp: ViewerService.BindService(grpc.ServiceBinderBase, ViewerService.ViewerServiceBase)
        VB: ViewerService.BindService(grpc.ServiceBinderBase, ViewerService.ViewerServiceBase)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.BindService(grpc.ServiceBinderBase, Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceBase)
        VB: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.BindService(grpc.ServiceBinderBase, Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceBase)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Viewer
      source:
        id: BindService
        path: ''
        startLine: 17345
      summary: >-
        Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.

        Note: this method is part of an experimental API that can change or be removed without any prior notice.
      example: []
      syntax:
        content:
          CSharp: public static void BindService(grpc.ServiceBinderBase serviceBinder, ViewerService.ViewerServiceBase serviceImpl)
          VB: Public Shared Sub BindService(serviceBinder As grpc.ServiceBinderBase, serviceImpl As ViewerService.ViewerServiceBase)
        parameters:
        - id: serviceBinder
          type: grpc.ServiceBinderBase
          description: Service methods will be bound by calling <code>AddMethod</code> on this object.
        - id: serviceImpl
          type: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceBase
          description: An object implementing the server-side handling logic.
      overload: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.BindService*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceBase
    commentId: T:Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceBase
    language: CSharp
    name:
      CSharp: ViewerService.ViewerServiceBase
      VB: ViewerService.ViewerServiceBase
    nameWithType:
      CSharp: ViewerService.ViewerServiceBase
      VB: ViewerService.ViewerServiceBase
    qualifiedName:
      CSharp: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceBase
      VB: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceBase
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect.ProjectServer.Services.Viewer
    source:
      id: ViewerServiceBase
      path: ''
      startLine: 17277
    summary: Base class for server-side implementations of ViewerService
    example: []
    syntax:
      content:
        CSharp: public abstract class ViewerServiceBase
        VB: Public MustInherit Class ViewerServiceBase
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items:
    - id: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceBase.ListProjects(Unity.Reflect.ProjectServer.Services.Empty,grpc.ServerCallContext)
      commentId: M:Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceBase.ListProjects(Unity.Reflect.ProjectServer.Services.Empty,grpc.ServerCallContext)
      language: CSharp
      name:
        CSharp: ListProjects(Empty, grpc.ServerCallContext)
        VB: ListProjects(Empty, grpc.ServerCallContext)
      nameWithType:
        CSharp: ViewerService.ViewerServiceBase.ListProjects(Empty, grpc.ServerCallContext)
        VB: ViewerService.ViewerServiceBase.ListProjects(Empty, grpc.ServerCallContext)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceBase.ListProjects(Unity.Reflect.ProjectServer.Services.Empty, grpc.ServerCallContext)
        VB: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceBase.ListProjects(Unity.Reflect.ProjectServer.Services.Empty, grpc.ServerCallContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Viewer
      source:
        id: ListProjects
        path: ''
        startLine: 17280
      syntax:
        content:
          CSharp: public virtual Task<ListProjectsResponse> ListProjects(Empty request, grpc.ServerCallContext context)
          VB: Public Overridable Function ListProjects(request As Empty, context As grpc.ServerCallContext) As Task(Of ListProjectsResponse)
        parameters:
        - id: request
          type: Unity.Reflect.ProjectServer.Services.Empty
        - id: context
          type: grpc.ServerCallContext
        return:
          type: System.Threading.Tasks.Task{Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse}
      overload: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceBase.ListProjects*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
  - id: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceClient
    commentId: T:Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceClient
    language: CSharp
    name:
      CSharp: ViewerService.ViewerServiceClient
      VB: ViewerService.ViewerServiceClient
    nameWithType:
      CSharp: ViewerService.ViewerServiceClient
      VB: ViewerService.ViewerServiceClient
    qualifiedName:
      CSharp: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceClient
      VB: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceClient
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect.ProjectServer.Services.Viewer
    source:
      id: ViewerServiceClient
      path: ''
      startLine: 17288
    summary: Client for ViewerService
    example: []
    syntax:
      content:
        CSharp: 'public class ViewerServiceClient : grpc.ClientBase<ViewerService.ViewerServiceClient>'
        VB: >-
          Public Class ViewerServiceClient

              Inherits grpc.ClientBase(Of ViewerService.ViewerServiceClient)
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceClient.#ctor(grpc.Channel)
      commentId: M:Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceClient.#ctor(grpc.Channel)
      language: CSharp
      name:
        CSharp: ViewerServiceClient(grpc.Channel)
        VB: ViewerServiceClient(grpc.Channel)
      nameWithType:
        CSharp: ViewerService.ViewerServiceClient.ViewerServiceClient(grpc.Channel)
        VB: ViewerService.ViewerServiceClient.ViewerServiceClient(grpc.Channel)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceClient.ViewerServiceClient(grpc.Channel)
        VB: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceClient.ViewerServiceClient(grpc.Channel)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Viewer
      source:
        id: .ctor
        path: ''
        startLine: 17292
      summary: Creates a new client for ViewerService
      example: []
      syntax:
        content:
          CSharp: public ViewerServiceClient(grpc.Channel channel)
          VB: Public Sub New(channel As grpc.Channel)
        parameters:
        - id: channel
          type: grpc.Channel
          description: The channel to use to make remote calls.
      overload: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceClient.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceClient.#ctor(grpc.CallInvoker)
      commentId: M:Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceClient.#ctor(grpc.CallInvoker)
      language: CSharp
      name:
        CSharp: ViewerServiceClient(grpc.CallInvoker)
        VB: ViewerServiceClient(grpc.CallInvoker)
      nameWithType:
        CSharp: ViewerService.ViewerServiceClient.ViewerServiceClient(grpc.CallInvoker)
        VB: ViewerService.ViewerServiceClient.ViewerServiceClient(grpc.CallInvoker)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceClient.ViewerServiceClient(grpc.CallInvoker)
        VB: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceClient.ViewerServiceClient(grpc.CallInvoker)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Viewer
      source:
        id: .ctor
        path: ''
        startLine: 17297
      summary: Creates a new client for ViewerService that uses a custom <code>CallInvoker</code>.
      example: []
      syntax:
        content:
          CSharp: public ViewerServiceClient(grpc.CallInvoker callInvoker)
          VB: Public Sub New(callInvoker As grpc.CallInvoker)
        parameters:
        - id: callInvoker
          type: grpc.CallInvoker
          description: The callInvoker to use to make remote calls.
      overload: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceClient.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceClient.#ctor
      commentId: M:Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceClient.#ctor
      language: CSharp
      name:
        CSharp: ViewerServiceClient()
        VB: ViewerServiceClient()
      nameWithType:
        CSharp: ViewerService.ViewerServiceClient.ViewerServiceClient()
        VB: ViewerService.ViewerServiceClient.ViewerServiceClient()
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceClient.ViewerServiceClient()
        VB: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceClient.ViewerServiceClient()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Viewer
      source:
        id: .ctor
        path: ''
        startLine: 17301
      summary: Protected parameterless constructor to allow creation of test doubles.
      example: []
      syntax:
        content:
          CSharp: protected ViewerServiceClient()
          VB: Protected Sub New
      overload: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceClient.#ctor*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceClient.#ctor(ClientBaseConfiguration)
      commentId: M:Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceClient.#ctor(ClientBaseConfiguration)
      language: CSharp
      name:
        CSharp: ViewerServiceClient(ClientBaseConfiguration)
        VB: ViewerServiceClient(ClientBaseConfiguration)
      nameWithType:
        CSharp: ViewerService.ViewerServiceClient.ViewerServiceClient(ClientBaseConfiguration)
        VB: ViewerService.ViewerServiceClient.ViewerServiceClient(ClientBaseConfiguration)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceClient.ViewerServiceClient(ClientBaseConfiguration)
        VB: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceClient.ViewerServiceClient(ClientBaseConfiguration)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Viewer
      source:
        id: .ctor
        path: ''
        startLine: 17306
      summary: Protected constructor to allow creation of configured clients.
      example: []
      syntax:
        content:
          CSharp: protected ViewerServiceClient(ClientBaseConfiguration configuration)
          VB: Protected Sub New(configuration As ClientBaseConfiguration)
        parameters:
        - id: configuration
          type: ClientBaseConfiguration
          description: The client configuration.
      overload: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceClient.#ctor*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceClient.ListProjects(Unity.Reflect.ProjectServer.Services.Empty,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
      commentId: M:Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceClient.ListProjects(Unity.Reflect.ProjectServer.Services.Empty,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
      language: CSharp
      name:
        CSharp: ListProjects(Empty, grpc.Metadata, Nullable<DateTime>, CancellationToken)
        VB: ListProjects(Empty, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
      nameWithType:
        CSharp: ViewerService.ViewerServiceClient.ListProjects(Empty, grpc.Metadata, Nullable<DateTime>, CancellationToken)
        VB: ViewerService.ViewerServiceClient.ListProjects(Empty, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceClient.ListProjects(Unity.Reflect.ProjectServer.Services.Empty, grpc.Metadata, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
        VB: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceClient.ListProjects(Unity.Reflect.ProjectServer.Services.Empty, grpc.Metadata, System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Viewer
      source:
        id: ListProjects
        path: ''
        startLine: 17310
      syntax:
        content:
          CSharp: public virtual ListProjectsResponse ListProjects(Empty request, grpc.Metadata headers = null, DateTime? deadline = default(DateTime? ), CancellationToken cancellationToken = default(CancellationToken))
          VB: Public Overridable Function ListProjects(request As Empty, headers As grpc.Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As ListProjectsResponse
        parameters:
        - id: request
          type: Unity.Reflect.ProjectServer.Services.Empty
        - id: headers
          type: grpc.Metadata
        - id: deadline
          type: System.Nullable{System.DateTime}
        - id: cancellationToken
          type: System.Threading.CancellationToken
        return:
          type: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse
      overload: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceClient.ListProjects*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceClient.ListProjects(Unity.Reflect.ProjectServer.Services.Empty,grpc.CallOptions)
      commentId: M:Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceClient.ListProjects(Unity.Reflect.ProjectServer.Services.Empty,grpc.CallOptions)
      language: CSharp
      name:
        CSharp: ListProjects(Empty, grpc.CallOptions)
        VB: ListProjects(Empty, grpc.CallOptions)
      nameWithType:
        CSharp: ViewerService.ViewerServiceClient.ListProjects(Empty, grpc.CallOptions)
        VB: ViewerService.ViewerServiceClient.ListProjects(Empty, grpc.CallOptions)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceClient.ListProjects(Unity.Reflect.ProjectServer.Services.Empty, grpc.CallOptions)
        VB: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceClient.ListProjects(Unity.Reflect.ProjectServer.Services.Empty, grpc.CallOptions)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Viewer
      source:
        id: ListProjects
        path: ''
        startLine: 17314
      syntax:
        content:
          CSharp: public virtual ListProjectsResponse ListProjects(Empty request, grpc.CallOptions options)
          VB: Public Overridable Function ListProjects(request As Empty, options As grpc.CallOptions) As ListProjectsResponse
        parameters:
        - id: request
          type: Unity.Reflect.ProjectServer.Services.Empty
        - id: options
          type: grpc.CallOptions
        return:
          type: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse
      overload: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceClient.ListProjects*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceClient.ListProjectsAsync(Unity.Reflect.ProjectServer.Services.Empty,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
      commentId: M:Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceClient.ListProjectsAsync(Unity.Reflect.ProjectServer.Services.Empty,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
      language: CSharp
      name:
        CSharp: ListProjectsAsync(Empty, grpc.Metadata, Nullable<DateTime>, CancellationToken)
        VB: ListProjectsAsync(Empty, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
      nameWithType:
        CSharp: ViewerService.ViewerServiceClient.ListProjectsAsync(Empty, grpc.Metadata, Nullable<DateTime>, CancellationToken)
        VB: ViewerService.ViewerServiceClient.ListProjectsAsync(Empty, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceClient.ListProjectsAsync(Unity.Reflect.ProjectServer.Services.Empty, grpc.Metadata, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
        VB: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceClient.ListProjectsAsync(Unity.Reflect.ProjectServer.Services.Empty, grpc.Metadata, System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Viewer
      source:
        id: ListProjectsAsync
        path: ''
        startLine: 17318
      syntax:
        content:
          CSharp: public virtual grpc.AsyncUnaryCall<ListProjectsResponse> ListProjectsAsync(Empty request, grpc.Metadata headers = null, DateTime? deadline = default(DateTime? ), CancellationToken cancellationToken = default(CancellationToken))
          VB: Public Overridable Function ListProjectsAsync(request As Empty, headers As grpc.Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As grpc.AsyncUnaryCall(Of ListProjectsResponse)
        parameters:
        - id: request
          type: Unity.Reflect.ProjectServer.Services.Empty
        - id: headers
          type: grpc.Metadata
        - id: deadline
          type: System.Nullable{System.DateTime}
        - id: cancellationToken
          type: System.Threading.CancellationToken
        return:
          type: grpc.AsyncUnaryCall{Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse}
      overload: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceClient.ListProjectsAsync*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceClient.ListProjectsAsync(Unity.Reflect.ProjectServer.Services.Empty,grpc.CallOptions)
      commentId: M:Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceClient.ListProjectsAsync(Unity.Reflect.ProjectServer.Services.Empty,grpc.CallOptions)
      language: CSharp
      name:
        CSharp: ListProjectsAsync(Empty, grpc.CallOptions)
        VB: ListProjectsAsync(Empty, grpc.CallOptions)
      nameWithType:
        CSharp: ViewerService.ViewerServiceClient.ListProjectsAsync(Empty, grpc.CallOptions)
        VB: ViewerService.ViewerServiceClient.ListProjectsAsync(Empty, grpc.CallOptions)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceClient.ListProjectsAsync(Unity.Reflect.ProjectServer.Services.Empty, grpc.CallOptions)
        VB: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceClient.ListProjectsAsync(Unity.Reflect.ProjectServer.Services.Empty, grpc.CallOptions)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Viewer
      source:
        id: ListProjectsAsync
        path: ''
        startLine: 17322
      syntax:
        content:
          CSharp: public virtual grpc.AsyncUnaryCall<ListProjectsResponse> ListProjectsAsync(Empty request, grpc.CallOptions options)
          VB: Public Overridable Function ListProjectsAsync(request As Empty, options As grpc.CallOptions) As grpc.AsyncUnaryCall(Of ListProjectsResponse)
        parameters:
        - id: request
          type: Unity.Reflect.ProjectServer.Services.Empty
        - id: options
          type: grpc.CallOptions
        return:
          type: grpc.AsyncUnaryCall{Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse}
      overload: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceClient.ListProjectsAsync*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceClient.NewInstance(ClientBaseConfiguration)
      commentId: M:Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceClient.NewInstance(ClientBaseConfiguration)
      language: CSharp
      name:
        CSharp: NewInstance(ClientBaseConfiguration)
        VB: NewInstance(ClientBaseConfiguration)
      nameWithType:
        CSharp: ViewerService.ViewerServiceClient.NewInstance(ClientBaseConfiguration)
        VB: ViewerService.ViewerServiceClient.NewInstance(ClientBaseConfiguration)
      qualifiedName:
        CSharp: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceClient.NewInstance(ClientBaseConfiguration)
        VB: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceClient.NewInstance(ClientBaseConfiguration)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.ProjectServer.Services.Viewer
      source:
        id: NewInstance
        path: ''
        startLine: 17327
      summary: Creates a new instance of client from given <code>ClientBaseConfiguration</code>.
      example: []
      syntax:
        content:
          CSharp: protected override ViewerService.ViewerServiceClient NewInstance(ClientBaseConfiguration configuration)
          VB: Protected Overrides Function NewInstance(configuration As ClientBaseConfiguration) As ViewerService.ViewerServiceClient
        parameters:
        - id: configuration
          type: ClientBaseConfiguration
        return:
          type: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceClient
      overload: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceClient.NewInstance*
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
- id: Unity.Reflect.Utils
  commentId: N:Unity.Reflect.Utils
  language: CSharp
  name:
    CSharp: Unity.Reflect.Utils
    VB: Unity.Reflect.Utils
  nameWithType:
    CSharp: Unity.Reflect.Utils
    VB: Unity.Reflect.Utils
  qualifiedName:
    CSharp: Unity.Reflect.Utils
    VB: Unity.Reflect.Utils
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Unity.Reflect.Utils.FileUtils
    commentId: T:Unity.Reflect.Utils.FileUtils
    language: CSharp
    name:
      CSharp: FileUtils
      VB: FileUtils
    nameWithType:
      CSharp: FileUtils
      VB: FileUtils
    qualifiedName:
      CSharp: Unity.Reflect.Utils.FileUtils
      VB: Unity.Reflect.Utils.FileUtils
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect.Utils
    source:
      id: FileUtils
      path: ''
      startLine: 20172
    summary: "\nThis class provides some utility methods for file handling.\n"
    example: []
    syntax:
      content:
        CSharp: public static class FileUtils
        VB: Public Module FileUtils
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: Unity.Reflect.Utils.FileUtils.SanitizeName(System.String,System.Int32,System.Int32)
      commentId: M:Unity.Reflect.Utils.FileUtils.SanitizeName(System.String,System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: SanitizeName(String, Int32, Int32)
        VB: SanitizeName(String, Int32, Int32)
      nameWithType:
        CSharp: FileUtils.SanitizeName(String, Int32, Int32)
        VB: FileUtils.SanitizeName(String, Int32, Int32)
      qualifiedName:
        CSharp: Unity.Reflect.Utils.FileUtils.SanitizeName(System.String, System.Int32, System.Int32)
        VB: Unity.Reflect.Utils.FileUtils.SanitizeName(System.String, System.Int32, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Utils
      source:
        id: SanitizeName
        path: ''
        startLine: 20183
      summary: "\nMakes a &quot;dirty name&quot; sanitized for any file system.\n"
      example: []
      syntax:
        content:
          CSharp: public static string SanitizeName(string dirtyName, int maxLength = 50, int maxLengthTolerance = 6)
          VB: Public Shared Function SanitizeName(dirtyName As String, maxLength As Integer = 50, maxLengthTolerance As Integer = 6) As String
        parameters:
        - id: dirtyName
          type: System.String
          description: The file name that you want to sanitize (without extension)
        - id: maxLength
          type: System.Int32
          description: The maximum length of the sanitized string
        - id: maxLengthTolerance
          type: System.Int32
          description: The sanitization process starts truncating if the string size exceeds maxLength + maxLengthTolerance
        return:
          type: System.String
          description: A sanitized name
      overload: Unity.Reflect.Utils.FileUtils.SanitizeName*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: Unity.Reflect.Utils.Logger
    commentId: T:Unity.Reflect.Utils.Logger
    language: CSharp
    name:
      CSharp: Logger
      VB: Logger
    nameWithType:
      CSharp: Logger
      VB: Logger
    qualifiedName:
      CSharp: Unity.Reflect.Utils.Logger
      VB: Unity.Reflect.Utils.Logger
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect.Utils
    source:
      id: Logger
      path: ''
      startLine: 20262
    summary: "\nUse this class to write and read logs.\n"
    example: []
    syntax:
      content:
        CSharp: public static class Logger
        VB: Public Module Logger
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: Unity.Reflect.Utils.Logger.OnLog
      commentId: E:Unity.Reflect.Utils.Logger.OnLog
      language: CSharp
      name:
        CSharp: OnLog
        VB: OnLog
      nameWithType:
        CSharp: Logger.OnLog
        VB: Logger.OnLog
      qualifiedName:
        CSharp: Unity.Reflect.Utils.Logger.OnLog
        VB: Unity.Reflect.Utils.Logger.OnLog
      type: Event
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Utils
      source:
        id: OnLog
        path: ''
        startLine: 20278
      summary: "\nThis event is triggered whenever a log request is made. Use this event to display the log at your convenience.\n"
      example: []
      syntax:
        content:
          CSharp: public static event Logger.LogReceiver OnLog
          VB: Public Shared Event OnLog As Logger.LogReceiver
        return:
          type: Unity.Reflect.Utils.Logger.LogReceiver
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Unity.Reflect.Utils.Logger.minLevel
      commentId: F:Unity.Reflect.Utils.Logger.minLevel
      language: CSharp
      name:
        CSharp: minLevel
        VB: minLevel
      nameWithType:
        CSharp: Logger.minLevel
        VB: Logger.minLevel
      qualifiedName:
        CSharp: Unity.Reflect.Utils.Logger.minLevel
        VB: Unity.Reflect.Utils.Logger.minLevel
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Utils
      source:
        id: minLevel
        path: ''
        startLine: 20283
      summary: "\nThis value indicates which minimum level of log triggers the OnLog event.\n"
      example: []
      syntax:
        content:
          CSharp: public static Logger.Level minLevel
          VB: Public Shared minLevel As Logger.Level
        return:
          type: Unity.Reflect.Utils.Logger.Level
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Unity.Reflect.Utils.Logger.Info(System.String)
      commentId: M:Unity.Reflect.Utils.Logger.Info(System.String)
      language: CSharp
      name:
        CSharp: Info(String)
        VB: Info(String)
      nameWithType:
        CSharp: Logger.Info(String)
        VB: Logger.Info(String)
      qualifiedName:
        CSharp: Unity.Reflect.Utils.Logger.Info(System.String)
        VB: Unity.Reflect.Utils.Logger.Info(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Utils
      source:
        id: Info
        path: ''
        startLine: 20289
      summary: "\nLogs a message at Info level.\n"
      example: []
      syntax:
        content:
          CSharp: public static void Info(string msg)
          VB: Public Shared Sub Info(msg As String)
        parameters:
        - id: msg
          type: System.String
          description: ''
      overload: Unity.Reflect.Utils.Logger.Info*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Unity.Reflect.Utils.Logger.Error(System.String)
      commentId: M:Unity.Reflect.Utils.Logger.Error(System.String)
      language: CSharp
      name:
        CSharp: Error(String)
        VB: Error(String)
      nameWithType:
        CSharp: Logger.Error(String)
        VB: Logger.Error(String)
      qualifiedName:
        CSharp: Unity.Reflect.Utils.Logger.Error(System.String)
        VB: Unity.Reflect.Utils.Logger.Error(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Utils
      source:
        id: Error
        path: ''
        startLine: 20298
      summary: "\nLogs a message at Error level.\n"
      example: []
      syntax:
        content:
          CSharp: public static void Error(string msg)
          VB: Public Shared Sub Error(msg As String)
        parameters:
        - id: msg
          type: System.String
          description: ''
      overload: Unity.Reflect.Utils.Logger.Error*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Unity.Reflect.Utils.Logger.Warn(System.String)
      commentId: M:Unity.Reflect.Utils.Logger.Warn(System.String)
      language: CSharp
      name:
        CSharp: Warn(String)
        VB: Warn(String)
      nameWithType:
        CSharp: Logger.Warn(String)
        VB: Logger.Warn(String)
      qualifiedName:
        CSharp: Unity.Reflect.Utils.Logger.Warn(System.String)
        VB: Unity.Reflect.Utils.Logger.Warn(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Utils
      source:
        id: Warn
        path: ''
        startLine: 20307
      summary: "\nLogs a message at Warn level.\n"
      example: []
      syntax:
        content:
          CSharp: public static void Warn(string msg)
          VB: Public Shared Sub Warn(msg As String)
        parameters:
        - id: msg
          type: System.String
          description: ''
      overload: Unity.Reflect.Utils.Logger.Warn*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Unity.Reflect.Utils.Logger.Fatal(System.String)
      commentId: M:Unity.Reflect.Utils.Logger.Fatal(System.String)
      language: CSharp
      name:
        CSharp: Fatal(String)
        VB: Fatal(String)
      nameWithType:
        CSharp: Logger.Fatal(String)
        VB: Logger.Fatal(String)
      qualifiedName:
        CSharp: Unity.Reflect.Utils.Logger.Fatal(System.String)
        VB: Unity.Reflect.Utils.Logger.Fatal(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Utils
      source:
        id: Fatal
        path: ''
        startLine: 20316
      summary: "\nLogs a message at Fatal level.\n"
      example: []
      syntax:
        content:
          CSharp: public static void Fatal(string msg)
          VB: Public Shared Sub Fatal(msg As String)
        parameters:
        - id: msg
          type: System.String
          description: ''
      overload: Unity.Reflect.Utils.Logger.Fatal*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Unity.Reflect.Utils.Logger.Debug(System.String)
      commentId: M:Unity.Reflect.Utils.Logger.Debug(System.String)
      language: CSharp
      name:
        CSharp: Debug(String)
        VB: Debug(String)
      nameWithType:
        CSharp: Logger.Debug(String)
        VB: Logger.Debug(String)
      qualifiedName:
        CSharp: Unity.Reflect.Utils.Logger.Debug(System.String)
        VB: Unity.Reflect.Utils.Logger.Debug(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Utils
      source:
        id: Debug
        path: ''
        startLine: 20325
      summary: "\nLogs a message at Debug level.\n"
      example: []
      syntax:
        content:
          CSharp: public static void Debug(string msg)
          VB: Public Shared Sub Debug(msg As String)
        parameters:
        - id: msg
          type: System.String
          description: ''
      overload: Unity.Reflect.Utils.Logger.Debug*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: Unity.Reflect.Utils.Logger.Level
    commentId: T:Unity.Reflect.Utils.Logger.Level
    language: CSharp
    name:
      CSharp: Logger.Level
      VB: Logger.Level
    nameWithType:
      CSharp: Logger.Level
      VB: Logger.Level
    qualifiedName:
      CSharp: Unity.Reflect.Utils.Logger.Level
      VB: Unity.Reflect.Utils.Logger.Level
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect.Utils
    source:
      id: Level
      path: ''
      startLine: 20264
    syntax:
      content:
        CSharp: public enum Level
        VB: Public Enum Level
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Unity.Reflect.Utils.Logger.Level.Debug
      commentId: F:Unity.Reflect.Utils.Logger.Level.Debug
      language: CSharp
      name:
        CSharp: Debug
        VB: Debug
      nameWithType:
        CSharp: Logger.Level.Debug
        VB: Logger.Level.Debug
      qualifiedName:
        CSharp: Unity.Reflect.Utils.Logger.Level.Debug
        VB: Unity.Reflect.Utils.Logger.Level.Debug
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Utils
      source:
        id: Debug
        path: ''
        startLine: 20266
      syntax:
        content:
          CSharp: Debug = 0
          VB: Debug = 0
        return:
          type: Unity.Reflect.Utils.Logger.Level
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Utils.Logger.Level.Info
      commentId: F:Unity.Reflect.Utils.Logger.Level.Info
      language: CSharp
      name:
        CSharp: Info
        VB: Info
      nameWithType:
        CSharp: Logger.Level.Info
        VB: Logger.Level.Info
      qualifiedName:
        CSharp: Unity.Reflect.Utils.Logger.Level.Info
        VB: Unity.Reflect.Utils.Logger.Level.Info
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Utils
      source:
        id: Info
        path: ''
        startLine: 20267
      syntax:
        content:
          CSharp: Info = 1
          VB: Info = 1
        return:
          type: Unity.Reflect.Utils.Logger.Level
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Utils.Logger.Level.Warn
      commentId: F:Unity.Reflect.Utils.Logger.Level.Warn
      language: CSharp
      name:
        CSharp: Warn
        VB: Warn
      nameWithType:
        CSharp: Logger.Level.Warn
        VB: Logger.Level.Warn
      qualifiedName:
        CSharp: Unity.Reflect.Utils.Logger.Level.Warn
        VB: Unity.Reflect.Utils.Logger.Level.Warn
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Utils
      source:
        id: Warn
        path: ''
        startLine: 20268
      syntax:
        content:
          CSharp: Warn = 2
          VB: Warn = 2
        return:
          type: Unity.Reflect.Utils.Logger.Level
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Utils.Logger.Level.Error
      commentId: F:Unity.Reflect.Utils.Logger.Level.Error
      language: CSharp
      name:
        CSharp: Error
        VB: Error
      nameWithType:
        CSharp: Logger.Level.Error
        VB: Logger.Level.Error
      qualifiedName:
        CSharp: Unity.Reflect.Utils.Logger.Level.Error
        VB: Unity.Reflect.Utils.Logger.Level.Error
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Utils
      source:
        id: Error
        path: ''
        startLine: 20269
      syntax:
        content:
          CSharp: Error = 3
          VB: Error = 3
        return:
          type: Unity.Reflect.Utils.Logger.Level
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Unity.Reflect.Utils.Logger.Level.Fatal
      commentId: F:Unity.Reflect.Utils.Logger.Level.Fatal
      language: CSharp
      name:
        CSharp: Fatal
        VB: Fatal
      nameWithType:
        CSharp: Logger.Level.Fatal
        VB: Logger.Level.Fatal
      qualifiedName:
        CSharp: Unity.Reflect.Utils.Logger.Level.Fatal
        VB: Unity.Reflect.Utils.Logger.Level.Fatal
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Unity.Reflect.Utils
      source:
        id: Fatal
        path: ''
        startLine: 20270
      syntax:
        content:
          CSharp: Fatal = 4
          VB: Fatal = 4
        return:
          type: Unity.Reflect.Utils.Logger.Level
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Unity.Reflect.Utils.Logger.LogReceiver
    commentId: T:Unity.Reflect.Utils.Logger.LogReceiver
    language: CSharp
    name:
      CSharp: Logger.LogReceiver
      VB: Logger.LogReceiver
    nameWithType:
      CSharp: Logger.LogReceiver
      VB: Logger.LogReceiver
    qualifiedName:
      CSharp: Unity.Reflect.Utils.Logger.LogReceiver
      VB: Unity.Reflect.Utils.Logger.LogReceiver
    type: Delegate
    assemblies:
    - cs.temp.dll
    namespace: Unity.Reflect.Utils
    source:
      id: LogReceiver
      path: ''
      startLine: 20273
    syntax:
      content:
        CSharp: public delegate void LogReceiver(Logger.Level level, string msg);
        VB: Public Delegate Sub LogReceiver(level As Logger.Level, msg As String)
      parameters:
      - id: level
        type: Unity.Reflect.Utils.Logger.Level
      - id: msg
        type: System.String
    modifiers:
      CSharp:
      - public
      - delegate
      VB:
      - Public
      - Delegate
    items: []
references:
  Unity.Reflect.IPlayerClient:
    name:
      CSharp:
      - id: Unity.Reflect.IPlayerClient
        name: IPlayerClient
        nameWithType: IPlayerClient
        qualifiedName: Unity.Reflect.IPlayerClient
      VB:
      - id: Unity.Reflect.IPlayerClient
        name: IPlayerClient
        nameWithType: IPlayerClient
        qualifiedName: Unity.Reflect.IPlayerClient
    isDefinition: true
    parent: Unity.Reflect
    commentId: T:Unity.Reflect.IPlayerClient
  System:
    name:
      CSharp:
      - name: System
        nameWithType: System
        qualifiedName: System
        isExternal: true
      VB:
      - name: System
        nameWithType: System
        qualifiedName: System
    isDefinition: true
    commentId: N:System
  System.Object:
    name:
      CSharp:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      VB:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Object
  System.Object.ToString:
    name:
      CSharp:
      - id: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        qualifiedName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        qualifiedName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.ToString
  System.Object.Equals(System.Object):
    name:
      CSharp:
      - id: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.Equals(System.Object)
  System.Object.Equals(System.Object,System.Object):
    name:
      CSharp:
      - id: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.Equals(System.Object,System.Object)
  System.Object.ReferenceEquals(System.Object,System.Object):
    name:
      CSharp:
      - id: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        qualifiedName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        qualifiedName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  System.Object.GetHashCode:
    name:
      CSharp:
      - id: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        qualifiedName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        qualifiedName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.GetHashCode
  System.Object.GetType:
    name:
      CSharp:
      - id: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        qualifiedName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        qualifiedName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.GetType
  System.Object.MemberwiseClone:
    name:
      CSharp:
      - id: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        qualifiedName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        qualifiedName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.MemberwiseClone
  Unity.Reflect.ConnectionException:
    name:
      CSharp:
      - id: Unity.Reflect.ConnectionException
        name: ConnectionException
        nameWithType: ConnectionException
        qualifiedName: Unity.Reflect.ConnectionException
      VB:
      - id: Unity.Reflect.ConnectionException
        name: ConnectionException
        nameWithType: ConnectionException
        qualifiedName: Unity.Reflect.ConnectionException
    isDefinition: true
    commentId: T:Unity.Reflect.ConnectionException
  Unity.Reflect:
    name:
      CSharp:
      - name: Unity.Reflect
        nameWithType: Unity.Reflect
        qualifiedName: Unity.Reflect
      VB:
      - name: Unity.Reflect
        nameWithType: Unity.Reflect
        qualifiedName: Unity.Reflect
    isDefinition: true
    commentId: N:Unity.Reflect
  System.String:
    name:
      CSharp:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      VB:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.String
  Unity.Reflect.Player.CreateClient*:
    name:
      CSharp:
      - id: Unity.Reflect.Player.CreateClient*
        name: CreateClient
        nameWithType: Player.CreateClient
        qualifiedName: Unity.Reflect.Player.CreateClient
      VB:
      - id: Unity.Reflect.Player.CreateClient*
        name: CreateClient
        nameWithType: Player.CreateClient
        qualifiedName: Unity.Reflect.Player.CreateClient
    isDefinition: true
    commentId: Overload:Unity.Reflect.Player.CreateClient
  System.ArgumentException:
    commentId: T:System.ArgumentException
  Unity.Reflect.TargetChannel:
    name:
      CSharp:
      - id: Unity.Reflect.TargetChannel
        name: TargetChannel
        nameWithType: TargetChannel
        qualifiedName: Unity.Reflect.TargetChannel
      VB:
      - id: Unity.Reflect.TargetChannel
        name: TargetChannel
        nameWithType: TargetChannel
        qualifiedName: Unity.Reflect.TargetChannel
    isDefinition: true
    parent: Unity.Reflect
    commentId: T:Unity.Reflect.TargetChannel
  Unity.Reflect.Player:
    name:
      CSharp:
      - id: Unity.Reflect.Player
        name: Player
        nameWithType: Player
        qualifiedName: Unity.Reflect.Player
      VB:
      - id: Unity.Reflect.Player
        name: Player
        nameWithType: Player
        qualifiedName: Unity.Reflect.Player
    isDefinition: true
    commentId: T:Unity.Reflect.Player
  Unity.Reflect.IPublisherClient:
    name:
      CSharp:
      - id: Unity.Reflect.IPublisherClient
        name: IPublisherClient
        nameWithType: IPublisherClient
        qualifiedName: Unity.Reflect.IPublisherClient
      VB:
      - id: Unity.Reflect.IPublisherClient
        name: IPublisherClient
        nameWithType: IPublisherClient
        qualifiedName: Unity.Reflect.IPublisherClient
    isDefinition: true
    parent: Unity.Reflect
    commentId: T:Unity.Reflect.IPublisherClient
  Unity.Reflect.PublisherSettings:
    name:
      CSharp:
      - id: Unity.Reflect.PublisherSettings
        name: PublisherSettings
        nameWithType: PublisherSettings
        qualifiedName: Unity.Reflect.PublisherSettings
      VB:
      - id: Unity.Reflect.PublisherSettings
        name: PublisherSettings
        nameWithType: PublisherSettings
        qualifiedName: Unity.Reflect.PublisherSettings
    isDefinition: true
    parent: Unity.Reflect
    commentId: T:Unity.Reflect.PublisherSettings
  Unity.Reflect.Publisher.OpenClient*:
    name:
      CSharp:
      - id: Unity.Reflect.Publisher.OpenClient*
        name: OpenClient
        nameWithType: Publisher.OpenClient
        qualifiedName: Unity.Reflect.Publisher.OpenClient
      VB:
      - id: Unity.Reflect.Publisher.OpenClient*
        name: OpenClient
        nameWithType: Publisher.OpenClient
        qualifiedName: Unity.Reflect.Publisher.OpenClient
    isDefinition: true
    commentId: Overload:Unity.Reflect.Publisher.OpenClient
  System.Int32:
    name:
      CSharp:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      VB:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Int32
  Unity.Reflect.Publisher.OpenAsyncClient*:
    name:
      CSharp:
      - id: Unity.Reflect.Publisher.OpenAsyncClient*
        name: OpenAsyncClient
        nameWithType: Publisher.OpenAsyncClient
        qualifiedName: Unity.Reflect.Publisher.OpenAsyncClient
      VB:
      - id: Unity.Reflect.Publisher.OpenAsyncClient*
        name: OpenAsyncClient
        nameWithType: Publisher.OpenAsyncClient
        qualifiedName: Unity.Reflect.Publisher.OpenAsyncClient
    isDefinition: true
    commentId: Overload:Unity.Reflect.Publisher.OpenAsyncClient
  Unity.Reflect.Publisher:
    name:
      CSharp:
      - id: Unity.Reflect.Publisher
        name: Publisher
        nameWithType: Publisher
        qualifiedName: Unity.Reflect.Publisher
      VB:
      - id: Unity.Reflect.Publisher
        name: Publisher
        nameWithType: Publisher
        qualifiedName: Unity.Reflect.Publisher
    isDefinition: true
    commentId: T:Unity.Reflect.Publisher
  Unity.Reflect.IClient:
    name:
      CSharp:
      - id: Unity.Reflect.IClient
        name: IClient
        nameWithType: IClient
        qualifiedName: Unity.Reflect.IClient
      VB:
      - id: Unity.Reflect.IClient
        name: IClient
        nameWithType: IClient
        qualifiedName: Unity.Reflect.IClient
    isDefinition: true
    parent: Unity.Reflect
    commentId: T:Unity.Reflect.IClient
  System.Boolean:
    name:
      CSharp:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      VB:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Boolean
  Unity.Reflect.BaseClient.CreateClient*:
    name:
      CSharp:
      - id: Unity.Reflect.BaseClient.CreateClient*
        name: CreateClient
        nameWithType: BaseClient.CreateClient
        qualifiedName: Unity.Reflect.BaseClient.CreateClient
      VB:
      - id: Unity.Reflect.BaseClient.CreateClient*
        name: CreateClient
        nameWithType: BaseClient.CreateClient
        qualifiedName: Unity.Reflect.BaseClient.CreateClient
    isDefinition: true
    commentId: Overload:Unity.Reflect.BaseClient.CreateClient
  Unity.Reflect.BaseClient:
    name:
      CSharp:
      - id: Unity.Reflect.BaseClient
        name: BaseClient
        nameWithType: BaseClient
        qualifiedName: Unity.Reflect.BaseClient
      VB:
      - id: Unity.Reflect.BaseClient
        name: BaseClient
        nameWithType: BaseClient
        qualifiedName: Unity.Reflect.BaseClient
    isDefinition: true
    commentId: T:Unity.Reflect.BaseClient
  Unity.Reflect.TargetChannel.Target*:
    name:
      CSharp:
      - id: Unity.Reflect.TargetChannel.Target*
        name: Target
        nameWithType: TargetChannel.Target
        qualifiedName: Unity.Reflect.TargetChannel.Target
      VB:
      - id: Unity.Reflect.TargetChannel.Target*
        name: Target
        nameWithType: TargetChannel.Target
        qualifiedName: Unity.Reflect.TargetChannel.Target
    isDefinition: true
    commentId: Overload:Unity.Reflect.TargetChannel.Target
  System.Action`2:
    name:
      CSharp:
      - id: System.Action`2
        name: Action
        nameWithType: Action
        qualifiedName: System.Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T1
        nameWithType: T1
        qualifiedName: T1
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T2
        nameWithType: T2
        qualifiedName: T2
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Action`2
        name: Action
        nameWithType: Action
        qualifiedName: System.Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T1
        nameWithType: T1
        qualifiedName: T1
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T2
        nameWithType: T2
        qualifiedName: T2
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Action`2
  System.Action{Unity.Reflect.ConnectionStatus,System.String}:
    name:
      CSharp:
      - id: System.Action`2
        name: Action
        nameWithType: Action
        qualifiedName: System.Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Unity.Reflect.ConnectionStatus
        name: ConnectionStatus
        nameWithType: ConnectionStatus
        qualifiedName: Unity.Reflect.ConnectionStatus
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Action`2
        name: Action
        nameWithType: Action
        qualifiedName: System.Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Unity.Reflect.ConnectionStatus
        name: ConnectionStatus
        nameWithType: ConnectionStatus
        qualifiedName: Unity.Reflect.ConnectionStatus
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Action`2
    parent: System
    commentId: T:System.Action{Unity.Reflect.ConnectionStatus,System.String}
  Unity.Reflect.IClient.ObserveUnityProjectListUpdate:
    name:
      CSharp:
      - id: Unity.Reflect.IClient.ObserveUnityProjectListUpdate
        name: ObserveUnityProjectListUpdate
        nameWithType: IClient.ObserveUnityProjectListUpdate
        qualifiedName: Unity.Reflect.IClient.ObserveUnityProjectListUpdate
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Unity.Reflect.IClient.ObserveUnityProjectListUpdate
        name: ObserveUnityProjectListUpdate
        nameWithType: IClient.ObserveUnityProjectListUpdate
        qualifiedName: Unity.Reflect.IClient.ObserveUnityProjectListUpdate
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Unity.Reflect.IClient
    commentId: M:Unity.Reflect.IClient.ObserveUnityProjectListUpdate
  System.Action:
    name:
      CSharp:
      - id: System.Action
        name: Action
        nameWithType: Action
        qualifiedName: System.Action
        isExternal: true
      VB:
      - id: System.Action
        name: Action
        nameWithType: Action
        qualifiedName: System.Action
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Action
  Unity.Reflect.IClient.ObserveUserUpdate:
    name:
      CSharp:
      - id: Unity.Reflect.IClient.ObserveUserUpdate
        name: ObserveUserUpdate
        nameWithType: IClient.ObserveUserUpdate
        qualifiedName: Unity.Reflect.IClient.ObserveUserUpdate
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Unity.Reflect.IClient.ObserveUserUpdate
        name: ObserveUserUpdate
        nameWithType: IClient.ObserveUserUpdate
        qualifiedName: Unity.Reflect.IClient.ObserveUserUpdate
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Unity.Reflect.IClient
    commentId: M:Unity.Reflect.IClient.ObserveUserUpdate
  Unity.Reflect.IClient.ObserveSessionBegin(System.String[]):
    name:
      CSharp:
      - id: Unity.Reflect.IClient.ObserveSessionBegin(System.String[])
        name: ObserveSessionBegin
        nameWithType: IClient.ObserveSessionBegin
        qualifiedName: Unity.Reflect.IClient.ObserveSessionBegin
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Unity.Reflect.IClient.ObserveSessionBegin(System.String[])
        name: ObserveSessionBegin
        nameWithType: IClient.ObserveSessionBegin
        qualifiedName: Unity.Reflect.IClient.ObserveSessionBegin
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Unity.Reflect.IClient
    commentId: M:Unity.Reflect.IClient.ObserveSessionBegin(System.String[])
  System.Action`1:
    name:
      CSharp:
      - id: System.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: System.Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: System.Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Action`1
  System.Action{System.String}:
    name:
      CSharp:
      - id: System.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: System.Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: System.Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Action`1
    parent: System
    commentId: T:System.Action{System.String}
  Unity.Reflect.IClient.ObserveSessionEnd(System.String[]):
    name:
      CSharp:
      - id: Unity.Reflect.IClient.ObserveSessionEnd(System.String[])
        name: ObserveSessionEnd
        nameWithType: IClient.ObserveSessionEnd
        qualifiedName: Unity.Reflect.IClient.ObserveSessionEnd
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Unity.Reflect.IClient.ObserveSessionEnd(System.String[])
        name: ObserveSessionEnd
        nameWithType: IClient.ObserveSessionEnd
        qualifiedName: Unity.Reflect.IClient.ObserveSessionEnd
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Unity.Reflect.IClient
    commentId: M:Unity.Reflect.IClient.ObserveSessionEnd(System.String[])
  Unity.Reflect.IClient.ObserveManifestUpdate(System.String[]):
    name:
      CSharp:
      - id: Unity.Reflect.IClient.ObserveManifestUpdate(System.String[])
        name: ObserveManifestUpdate
        nameWithType: IClient.ObserveManifestUpdate
        qualifiedName: Unity.Reflect.IClient.ObserveManifestUpdate
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Unity.Reflect.IClient.ObserveManifestUpdate(System.String[])
        name: ObserveManifestUpdate
        nameWithType: IClient.ObserveManifestUpdate
        qualifiedName: Unity.Reflect.IClient.ObserveManifestUpdate
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Unity.Reflect.IClient
    commentId: M:Unity.Reflect.IClient.ObserveManifestUpdate(System.String[])
  Unity.Reflect.IClient.OnUnityProjectListUpdate:
    name:
      CSharp:
      - id: Unity.Reflect.IClient.OnUnityProjectListUpdate
        name: OnUnityProjectListUpdate
        nameWithType: IClient.OnUnityProjectListUpdate
        qualifiedName: Unity.Reflect.IClient.OnUnityProjectListUpdate
      VB:
      - id: Unity.Reflect.IClient.OnUnityProjectListUpdate
        name: OnUnityProjectListUpdate
        nameWithType: IClient.OnUnityProjectListUpdate
        qualifiedName: Unity.Reflect.IClient.OnUnityProjectListUpdate
    isDefinition: true
    parent: Unity.Reflect.IClient
    commentId: E:Unity.Reflect.IClient.OnUnityProjectListUpdate
  Unity.Reflect.IClient.ObserveUnityProjectListUpdate*:
    name:
      CSharp:
      - id: Unity.Reflect.IClient.ObserveUnityProjectListUpdate*
        name: ObserveUnityProjectListUpdate
        nameWithType: IClient.ObserveUnityProjectListUpdate
        qualifiedName: Unity.Reflect.IClient.ObserveUnityProjectListUpdate
      VB:
      - id: Unity.Reflect.IClient.ObserveUnityProjectListUpdate*
        name: ObserveUnityProjectListUpdate
        nameWithType: IClient.ObserveUnityProjectListUpdate
        qualifiedName: Unity.Reflect.IClient.ObserveUnityProjectListUpdate
    isDefinition: true
    commentId: Overload:Unity.Reflect.IClient.ObserveUnityProjectListUpdate
  Unity.Reflect.IClient.OnUserUpdate:
    name:
      CSharp:
      - id: Unity.Reflect.IClient.OnUserUpdate
        name: OnUserUpdate
        nameWithType: IClient.OnUserUpdate
        qualifiedName: Unity.Reflect.IClient.OnUserUpdate
      VB:
      - id: Unity.Reflect.IClient.OnUserUpdate
        name: OnUserUpdate
        nameWithType: IClient.OnUserUpdate
        qualifiedName: Unity.Reflect.IClient.OnUserUpdate
    isDefinition: true
    parent: Unity.Reflect.IClient
    commentId: E:Unity.Reflect.IClient.OnUserUpdate
  Unity.Reflect.IClient.ObserveUserUpdate*:
    name:
      CSharp:
      - id: Unity.Reflect.IClient.ObserveUserUpdate*
        name: ObserveUserUpdate
        nameWithType: IClient.ObserveUserUpdate
        qualifiedName: Unity.Reflect.IClient.ObserveUserUpdate
      VB:
      - id: Unity.Reflect.IClient.ObserveUserUpdate*
        name: ObserveUserUpdate
        nameWithType: IClient.ObserveUserUpdate
        qualifiedName: Unity.Reflect.IClient.ObserveUserUpdate
    isDefinition: true
    commentId: Overload:Unity.Reflect.IClient.ObserveUserUpdate
  Unity.Reflect.IClient.OnSessionBegin:
    name:
      CSharp:
      - id: Unity.Reflect.IClient.OnSessionBegin
        name: OnSessionBegin
        nameWithType: IClient.OnSessionBegin
        qualifiedName: Unity.Reflect.IClient.OnSessionBegin
      VB:
      - id: Unity.Reflect.IClient.OnSessionBegin
        name: OnSessionBegin
        nameWithType: IClient.OnSessionBegin
        qualifiedName: Unity.Reflect.IClient.OnSessionBegin
    isDefinition: true
    parent: Unity.Reflect.IClient
    commentId: E:Unity.Reflect.IClient.OnSessionBegin
  System.String[]:
    name:
      CSharp:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  Unity.Reflect.IClient.ObserveSessionBegin*:
    name:
      CSharp:
      - id: Unity.Reflect.IClient.ObserveSessionBegin*
        name: ObserveSessionBegin
        nameWithType: IClient.ObserveSessionBegin
        qualifiedName: Unity.Reflect.IClient.ObserveSessionBegin
      VB:
      - id: Unity.Reflect.IClient.ObserveSessionBegin*
        name: ObserveSessionBegin
        nameWithType: IClient.ObserveSessionBegin
        qualifiedName: Unity.Reflect.IClient.ObserveSessionBegin
    isDefinition: true
    commentId: Overload:Unity.Reflect.IClient.ObserveSessionBegin
  Unity.Reflect.IClient.OnSessionEnd:
    name:
      CSharp:
      - id: Unity.Reflect.IClient.OnSessionEnd
        name: OnSessionEnd
        nameWithType: IClient.OnSessionEnd
        qualifiedName: Unity.Reflect.IClient.OnSessionEnd
      VB:
      - id: Unity.Reflect.IClient.OnSessionEnd
        name: OnSessionEnd
        nameWithType: IClient.OnSessionEnd
        qualifiedName: Unity.Reflect.IClient.OnSessionEnd
    isDefinition: true
    parent: Unity.Reflect.IClient
    commentId: E:Unity.Reflect.IClient.OnSessionEnd
  Unity.Reflect.IClient.ObserveSessionEnd*:
    name:
      CSharp:
      - id: Unity.Reflect.IClient.ObserveSessionEnd*
        name: ObserveSessionEnd
        nameWithType: IClient.ObserveSessionEnd
        qualifiedName: Unity.Reflect.IClient.ObserveSessionEnd
      VB:
      - id: Unity.Reflect.IClient.ObserveSessionEnd*
        name: ObserveSessionEnd
        nameWithType: IClient.ObserveSessionEnd
        qualifiedName: Unity.Reflect.IClient.ObserveSessionEnd
    isDefinition: true
    commentId: Overload:Unity.Reflect.IClient.ObserveSessionEnd
  Unity.Reflect.IClient.OnManifestUpdate:
    name:
      CSharp:
      - id: Unity.Reflect.IClient.OnManifestUpdate
        name: OnManifestUpdate
        nameWithType: IClient.OnManifestUpdate
        qualifiedName: Unity.Reflect.IClient.OnManifestUpdate
      VB:
      - id: Unity.Reflect.IClient.OnManifestUpdate
        name: OnManifestUpdate
        nameWithType: IClient.OnManifestUpdate
        qualifiedName: Unity.Reflect.IClient.OnManifestUpdate
    isDefinition: true
    parent: Unity.Reflect.IClient
    commentId: E:Unity.Reflect.IClient.OnManifestUpdate
  Unity.Reflect.IClient.ObserveManifestUpdate*:
    name:
      CSharp:
      - id: Unity.Reflect.IClient.ObserveManifestUpdate*
        name: ObserveManifestUpdate
        nameWithType: IClient.ObserveManifestUpdate
        qualifiedName: Unity.Reflect.IClient.ObserveManifestUpdate
      VB:
      - id: Unity.Reflect.IClient.ObserveManifestUpdate*
        name: ObserveManifestUpdate
        nameWithType: IClient.ObserveManifestUpdate
        qualifiedName: Unity.Reflect.IClient.ObserveManifestUpdate
    isDefinition: true
    commentId: Overload:Unity.Reflect.IClient.ObserveManifestUpdate
  Unity.Reflect.IClient.ReleaseUnityProjectListUpdate*:
    name:
      CSharp:
      - id: Unity.Reflect.IClient.ReleaseUnityProjectListUpdate*
        name: ReleaseUnityProjectListUpdate
        nameWithType: IClient.ReleaseUnityProjectListUpdate
        qualifiedName: Unity.Reflect.IClient.ReleaseUnityProjectListUpdate
      VB:
      - id: Unity.Reflect.IClient.ReleaseUnityProjectListUpdate*
        name: ReleaseUnityProjectListUpdate
        nameWithType: IClient.ReleaseUnityProjectListUpdate
        qualifiedName: Unity.Reflect.IClient.ReleaseUnityProjectListUpdate
    isDefinition: true
    commentId: Overload:Unity.Reflect.IClient.ReleaseUnityProjectListUpdate
  Unity.Reflect.IClient.ReleaseUserUpdate*:
    name:
      CSharp:
      - id: Unity.Reflect.IClient.ReleaseUserUpdate*
        name: ReleaseUserUpdate
        nameWithType: IClient.ReleaseUserUpdate
        qualifiedName: Unity.Reflect.IClient.ReleaseUserUpdate
      VB:
      - id: Unity.Reflect.IClient.ReleaseUserUpdate*
        name: ReleaseUserUpdate
        nameWithType: IClient.ReleaseUserUpdate
        qualifiedName: Unity.Reflect.IClient.ReleaseUserUpdate
    isDefinition: true
    commentId: Overload:Unity.Reflect.IClient.ReleaseUserUpdate
  Unity.Reflect.IClient.ReleaseSessionBegin*:
    name:
      CSharp:
      - id: Unity.Reflect.IClient.ReleaseSessionBegin*
        name: ReleaseSessionBegin
        nameWithType: IClient.ReleaseSessionBegin
        qualifiedName: Unity.Reflect.IClient.ReleaseSessionBegin
      VB:
      - id: Unity.Reflect.IClient.ReleaseSessionBegin*
        name: ReleaseSessionBegin
        nameWithType: IClient.ReleaseSessionBegin
        qualifiedName: Unity.Reflect.IClient.ReleaseSessionBegin
    isDefinition: true
    commentId: Overload:Unity.Reflect.IClient.ReleaseSessionBegin
  Unity.Reflect.IClient.ReleaseSessionEnd*:
    name:
      CSharp:
      - id: Unity.Reflect.IClient.ReleaseSessionEnd*
        name: ReleaseSessionEnd
        nameWithType: IClient.ReleaseSessionEnd
        qualifiedName: Unity.Reflect.IClient.ReleaseSessionEnd
      VB:
      - id: Unity.Reflect.IClient.ReleaseSessionEnd*
        name: ReleaseSessionEnd
        nameWithType: IClient.ReleaseSessionEnd
        qualifiedName: Unity.Reflect.IClient.ReleaseSessionEnd
    isDefinition: true
    commentId: Overload:Unity.Reflect.IClient.ReleaseSessionEnd
  Unity.Reflect.IClient.ReleaseManifestUpdate*:
    name:
      CSharp:
      - id: Unity.Reflect.IClient.ReleaseManifestUpdate*
        name: ReleaseManifestUpdate
        nameWithType: IClient.ReleaseManifestUpdate
        qualifiedName: Unity.Reflect.IClient.ReleaseManifestUpdate
      VB:
      - id: Unity.Reflect.IClient.ReleaseManifestUpdate*
        name: ReleaseManifestUpdate
        nameWithType: IClient.ReleaseManifestUpdate
        qualifiedName: Unity.Reflect.IClient.ReleaseManifestUpdate
    isDefinition: true
    commentId: Overload:Unity.Reflect.IClient.ReleaseManifestUpdate
  Unity.Reflect.IClient.Connected*:
    name:
      CSharp:
      - id: Unity.Reflect.IClient.Connected*
        name: Connected
        nameWithType: IClient.Connected
        qualifiedName: Unity.Reflect.IClient.Connected
      VB:
      - id: Unity.Reflect.IClient.Connected*
        name: Connected
        nameWithType: IClient.Connected
        qualifiedName: Unity.Reflect.IClient.Connected
    isDefinition: true
    commentId: Overload:Unity.Reflect.IClient.Connected
  Unity.Reflect.IClient.Connect*:
    name:
      CSharp:
      - id: Unity.Reflect.IClient.Connect*
        name: Connect
        nameWithType: IClient.Connect
        qualifiedName: Unity.Reflect.IClient.Connect
      VB:
      - id: Unity.Reflect.IClient.Connect*
        name: Connect
        nameWithType: IClient.Connect
        qualifiedName: Unity.Reflect.IClient.Connect
    isDefinition: true
    commentId: Overload:Unity.Reflect.IClient.Connect
  Unity.Reflect.IClient.Disconnect*:
    name:
      CSharp:
      - id: Unity.Reflect.IClient.Disconnect*
        name: Disconnect
        nameWithType: IClient.Disconnect
        qualifiedName: Unity.Reflect.IClient.Disconnect
      VB:
      - id: Unity.Reflect.IClient.Disconnect*
        name: Disconnect
        nameWithType: IClient.Disconnect
        qualifiedName: Unity.Reflect.IClient.Disconnect
    isDefinition: true
    commentId: Overload:Unity.Reflect.IClient.Disconnect
  Unity.Reflect.IClient.OnConnectionStatusChanged:
    name:
      CSharp:
      - id: Unity.Reflect.IClient.OnConnectionStatusChanged
        name: OnConnectionStatusChanged
        nameWithType: IClient.OnConnectionStatusChanged
        qualifiedName: Unity.Reflect.IClient.OnConnectionStatusChanged
      VB:
      - id: Unity.Reflect.IClient.OnConnectionStatusChanged
        name: OnConnectionStatusChanged
        nameWithType: IClient.OnConnectionStatusChanged
        qualifiedName: Unity.Reflect.IClient.OnConnectionStatusChanged
    isDefinition: true
    parent: Unity.Reflect.IClient
    commentId: E:Unity.Reflect.IClient.OnConnectionStatusChanged
  Unity.Reflect.ConnectionStatus:
    name:
      CSharp:
      - id: Unity.Reflect.ConnectionStatus
        name: ConnectionStatus
        nameWithType: ConnectionStatus
        qualifiedName: Unity.Reflect.ConnectionStatus
      VB:
      - id: Unity.Reflect.ConnectionStatus
        name: ConnectionStatus
        nameWithType: ConnectionStatus
        qualifiedName: Unity.Reflect.ConnectionStatus
    isDefinition: true
    parent: Unity.Reflect
    commentId: T:Unity.Reflect.ConnectionStatus
  System.ValueType:
    name:
      CSharp:
      - id: System.ValueType
        name: ValueType
        nameWithType: ValueType
        qualifiedName: System.ValueType
        isExternal: true
      VB:
      - id: System.ValueType
        name: ValueType
        nameWithType: ValueType
        qualifiedName: System.ValueType
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.ValueType
  System.ValueType.Equals(System.Object):
    name:
      CSharp:
      - id: System.ValueType.Equals(System.Object)
        name: Equals
        nameWithType: ValueType.Equals
        qualifiedName: System.ValueType.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.ValueType.Equals(System.Object)
        name: Equals
        nameWithType: ValueType.Equals
        qualifiedName: System.ValueType.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.ValueType
    commentId: M:System.ValueType.Equals(System.Object)
  System.ValueType.GetHashCode:
    name:
      CSharp:
      - id: System.ValueType.GetHashCode
        name: GetHashCode
        nameWithType: ValueType.GetHashCode
        qualifiedName: System.ValueType.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.ValueType.GetHashCode
        name: GetHashCode
        nameWithType: ValueType.GetHashCode
        qualifiedName: System.ValueType.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.ValueType
    commentId: M:System.ValueType.GetHashCode
  System.ValueType.ToString:
    name:
      CSharp:
      - id: System.ValueType.ToString
        name: ToString
        nameWithType: ValueType.ToString
        qualifiedName: System.ValueType.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.ValueType.ToString
        name: ToString
        nameWithType: ValueType.ToString
        qualifiedName: System.ValueType.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.ValueType
    commentId: M:System.ValueType.ToString
  Unity.Reflect.UnityProject.#ctor*:
    name:
      CSharp:
      - id: Unity.Reflect.UnityProject.#ctor*
        name: UnityProject
        nameWithType: UnityProject.UnityProject
        qualifiedName: Unity.Reflect.UnityProject.UnityProject
      VB:
      - id: Unity.Reflect.UnityProject.#ctor*
        name: UnityProject
        nameWithType: UnityProject.UnityProject
        qualifiedName: Unity.Reflect.UnityProject.UnityProject
    isDefinition: true
    commentId: Overload:Unity.Reflect.UnityProject.#ctor
  Unity.Reflect.UnityProject:
    name:
      CSharp:
      - id: Unity.Reflect.UnityProject
        name: UnityProject
        nameWithType: UnityProject
        qualifiedName: Unity.Reflect.UnityProject
      VB:
      - id: Unity.Reflect.UnityProject
        name: UnityProject
        nameWithType: UnityProject
        qualifiedName: Unity.Reflect.UnityProject
    isDefinition: true
    commentId: T:Unity.Reflect.UnityProject
  Unity.Reflect.UnityUser.#ctor*:
    name:
      CSharp:
      - id: Unity.Reflect.UnityUser.#ctor*
        name: UnityUser
        nameWithType: UnityUser.UnityUser
        qualifiedName: Unity.Reflect.UnityUser.UnityUser
      VB:
      - id: Unity.Reflect.UnityUser.#ctor*
        name: UnityUser
        nameWithType: UnityUser.UnityUser
        qualifiedName: Unity.Reflect.UnityUser.UnityUser
    isDefinition: true
    commentId: Overload:Unity.Reflect.UnityUser.#ctor
  Unity.Reflect.UnityUser:
    name:
      CSharp:
      - id: Unity.Reflect.UnityUser
        name: UnityUser
        nameWithType: UnityUser
        qualifiedName: Unity.Reflect.UnityUser
      VB:
      - id: Unity.Reflect.UnityUser
        name: UnityUser
        nameWithType: UnityUser
        qualifiedName: Unity.Reflect.UnityUser
    isDefinition: true
    commentId: T:Unity.Reflect.UnityUser
  Unity.Reflect.IClient.Connect:
    name:
      CSharp:
      - id: Unity.Reflect.IClient.Connect
        name: Connect
        nameWithType: IClient.Connect
        qualifiedName: Unity.Reflect.IClient.Connect
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Unity.Reflect.IClient.Connect
        name: Connect
        nameWithType: IClient.Connect
        qualifiedName: Unity.Reflect.IClient.Connect
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Unity.Reflect.IClient
    commentId: M:Unity.Reflect.IClient.Connect
  System.Exception:
    name:
      CSharp:
      - id: System.Exception
        name: Exception
        nameWithType: Exception
        qualifiedName: System.Exception
        isExternal: true
      VB:
      - id: System.Exception
        name: Exception
        nameWithType: Exception
        qualifiedName: System.Exception
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Exception
  System.Exception.GetBaseException:
    name:
      CSharp:
      - id: System.Exception.GetBaseException
        name: GetBaseException
        nameWithType: Exception.GetBaseException
        qualifiedName: System.Exception.GetBaseException
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Exception.GetBaseException
        name: GetBaseException
        nameWithType: Exception.GetBaseException
        qualifiedName: System.Exception.GetBaseException
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Exception
    commentId: M:System.Exception.GetBaseException
  System.Exception.ToString:
    name:
      CSharp:
      - id: System.Exception.ToString
        name: ToString
        nameWithType: Exception.ToString
        qualifiedName: System.Exception.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Exception.ToString
        name: ToString
        nameWithType: Exception.ToString
        qualifiedName: System.Exception.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Exception
    commentId: M:System.Exception.ToString
  System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext):
    name:
      CSharp:
      - id: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
        name: GetObjectData
        nameWithType: Exception.GetObjectData
        qualifiedName: System.Exception.GetObjectData
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Runtime.Serialization.SerializationInfo
        name: SerializationInfo
        nameWithType: SerializationInfo
        qualifiedName: System.Runtime.Serialization.SerializationInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Runtime.Serialization.StreamingContext
        name: StreamingContext
        nameWithType: StreamingContext
        qualifiedName: System.Runtime.Serialization.StreamingContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
        name: GetObjectData
        nameWithType: Exception.GetObjectData
        qualifiedName: System.Exception.GetObjectData
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Runtime.Serialization.SerializationInfo
        name: SerializationInfo
        nameWithType: SerializationInfo
        qualifiedName: System.Runtime.Serialization.SerializationInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Runtime.Serialization.StreamingContext
        name: StreamingContext
        nameWithType: StreamingContext
        qualifiedName: System.Runtime.Serialization.StreamingContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Exception
    commentId: M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  System.Exception.GetType:
    name:
      CSharp:
      - id: System.Exception.GetType
        name: GetType
        nameWithType: Exception.GetType
        qualifiedName: System.Exception.GetType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Exception.GetType
        name: GetType
        nameWithType: Exception.GetType
        qualifiedName: System.Exception.GetType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Exception
    commentId: M:System.Exception.GetType
  System.Exception.Message:
    name:
      CSharp:
      - id: System.Exception.Message
        name: Message
        nameWithType: Exception.Message
        qualifiedName: System.Exception.Message
        isExternal: true
      VB:
      - id: System.Exception.Message
        name: Message
        nameWithType: Exception.Message
        qualifiedName: System.Exception.Message
        isExternal: true
    isDefinition: true
    parent: System.Exception
    commentId: P:System.Exception.Message
  System.Exception.Data:
    name:
      CSharp:
      - id: System.Exception.Data
        name: Data
        nameWithType: Exception.Data
        qualifiedName: System.Exception.Data
        isExternal: true
      VB:
      - id: System.Exception.Data
        name: Data
        nameWithType: Exception.Data
        qualifiedName: System.Exception.Data
        isExternal: true
    isDefinition: true
    parent: System.Exception
    commentId: P:System.Exception.Data
  System.Exception.InnerException:
    name:
      CSharp:
      - id: System.Exception.InnerException
        name: InnerException
        nameWithType: Exception.InnerException
        qualifiedName: System.Exception.InnerException
        isExternal: true
      VB:
      - id: System.Exception.InnerException
        name: InnerException
        nameWithType: Exception.InnerException
        qualifiedName: System.Exception.InnerException
        isExternal: true
    isDefinition: true
    parent: System.Exception
    commentId: P:System.Exception.InnerException
  System.Exception.TargetSite:
    name:
      CSharp:
      - id: System.Exception.TargetSite
        name: TargetSite
        nameWithType: Exception.TargetSite
        qualifiedName: System.Exception.TargetSite
        isExternal: true
      VB:
      - id: System.Exception.TargetSite
        name: TargetSite
        nameWithType: Exception.TargetSite
        qualifiedName: System.Exception.TargetSite
        isExternal: true
    isDefinition: true
    parent: System.Exception
    commentId: P:System.Exception.TargetSite
  System.Exception.StackTrace:
    name:
      CSharp:
      - id: System.Exception.StackTrace
        name: StackTrace
        nameWithType: Exception.StackTrace
        qualifiedName: System.Exception.StackTrace
        isExternal: true
      VB:
      - id: System.Exception.StackTrace
        name: StackTrace
        nameWithType: Exception.StackTrace
        qualifiedName: System.Exception.StackTrace
        isExternal: true
    isDefinition: true
    parent: System.Exception
    commentId: P:System.Exception.StackTrace
  System.Exception.HelpLink:
    name:
      CSharp:
      - id: System.Exception.HelpLink
        name: HelpLink
        nameWithType: Exception.HelpLink
        qualifiedName: System.Exception.HelpLink
        isExternal: true
      VB:
      - id: System.Exception.HelpLink
        name: HelpLink
        nameWithType: Exception.HelpLink
        qualifiedName: System.Exception.HelpLink
        isExternal: true
    isDefinition: true
    parent: System.Exception
    commentId: P:System.Exception.HelpLink
  System.Exception.Source:
    name:
      CSharp:
      - id: System.Exception.Source
        name: Source
        nameWithType: Exception.Source
        qualifiedName: System.Exception.Source
        isExternal: true
      VB:
      - id: System.Exception.Source
        name: Source
        nameWithType: Exception.Source
        qualifiedName: System.Exception.Source
        isExternal: true
    isDefinition: true
    parent: System.Exception
    commentId: P:System.Exception.Source
  System.Exception.HResult:
    name:
      CSharp:
      - id: System.Exception.HResult
        name: HResult
        nameWithType: Exception.HResult
        qualifiedName: System.Exception.HResult
        isExternal: true
      VB:
      - id: System.Exception.HResult
        name: HResult
        nameWithType: Exception.HResult
        qualifiedName: System.Exception.HResult
        isExternal: true
    isDefinition: true
    parent: System.Exception
    commentId: P:System.Exception.HResult
  System.Exception.SerializeObjectState:
    name:
      CSharp:
      - id: System.Exception.SerializeObjectState
        name: SerializeObjectState
        nameWithType: Exception.SerializeObjectState
        qualifiedName: System.Exception.SerializeObjectState
        isExternal: true
      VB:
      - id: System.Exception.SerializeObjectState
        name: SerializeObjectState
        nameWithType: Exception.SerializeObjectState
        qualifiedName: System.Exception.SerializeObjectState
        isExternal: true
    isDefinition: true
    parent: System.Exception
    commentId: E:System.Exception.SerializeObjectState
  System.Runtime.Serialization:
    name:
      CSharp:
      - name: System.Runtime.Serialization
        nameWithType: System.Runtime.Serialization
        qualifiedName: System.Runtime.Serialization
        isExternal: true
      VB:
      - name: System.Runtime.Serialization
        nameWithType: System.Runtime.Serialization
        qualifiedName: System.Runtime.Serialization
    isDefinition: true
    commentId: N:System.Runtime.Serialization
  System.Runtime.Serialization.ISerializable:
    name:
      CSharp:
      - id: System.Runtime.Serialization.ISerializable
        name: ISerializable
        nameWithType: ISerializable
        qualifiedName: System.Runtime.Serialization.ISerializable
        isExternal: true
      VB:
      - id: System.Runtime.Serialization.ISerializable
        name: ISerializable
        nameWithType: ISerializable
        qualifiedName: System.Runtime.Serialization.ISerializable
        isExternal: true
    isDefinition: true
    parent: System.Runtime.Serialization
    commentId: T:System.Runtime.Serialization.ISerializable
  System.Runtime.InteropServices:
    name:
      CSharp:
      - name: System.Runtime.InteropServices
        nameWithType: System.Runtime.InteropServices
        qualifiedName: System.Runtime.InteropServices
        isExternal: true
      VB:
      - name: System.Runtime.InteropServices
        nameWithType: System.Runtime.InteropServices
        qualifiedName: System.Runtime.InteropServices
    isDefinition: true
    commentId: N:System.Runtime.InteropServices
  System.Runtime.InteropServices._Exception:
    name:
      CSharp:
      - id: System.Runtime.InteropServices._Exception
        name: _Exception
        nameWithType: _Exception
        qualifiedName: System.Runtime.InteropServices._Exception
        isExternal: true
      VB:
      - id: System.Runtime.InteropServices._Exception
        name: _Exception
        nameWithType: _Exception
        qualifiedName: System.Runtime.InteropServices._Exception
        isExternal: true
    isDefinition: true
    parent: System.Runtime.InteropServices
    commentId: T:System.Runtime.InteropServices._Exception
  Unity.Reflect.IClient.ReleaseUnityProjectListUpdate:
    name:
      CSharp:
      - id: Unity.Reflect.IClient.ReleaseUnityProjectListUpdate
        name: ReleaseUnityProjectListUpdate
        nameWithType: IClient.ReleaseUnityProjectListUpdate
        qualifiedName: Unity.Reflect.IClient.ReleaseUnityProjectListUpdate
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Unity.Reflect.IClient.ReleaseUnityProjectListUpdate
        name: ReleaseUnityProjectListUpdate
        nameWithType: IClient.ReleaseUnityProjectListUpdate
        qualifiedName: Unity.Reflect.IClient.ReleaseUnityProjectListUpdate
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Unity.Reflect.IClient
    commentId: M:Unity.Reflect.IClient.ReleaseUnityProjectListUpdate
  Unity.Reflect.IClient.ReleaseUserUpdate:
    name:
      CSharp:
      - id: Unity.Reflect.IClient.ReleaseUserUpdate
        name: ReleaseUserUpdate
        nameWithType: IClient.ReleaseUserUpdate
        qualifiedName: Unity.Reflect.IClient.ReleaseUserUpdate
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Unity.Reflect.IClient.ReleaseUserUpdate
        name: ReleaseUserUpdate
        nameWithType: IClient.ReleaseUserUpdate
        qualifiedName: Unity.Reflect.IClient.ReleaseUserUpdate
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Unity.Reflect.IClient
    commentId: M:Unity.Reflect.IClient.ReleaseUserUpdate
  Unity.Reflect.IClient.ReleaseSessionBegin(System.String[]):
    name:
      CSharp:
      - id: Unity.Reflect.IClient.ReleaseSessionBegin(System.String[])
        name: ReleaseSessionBegin
        nameWithType: IClient.ReleaseSessionBegin
        qualifiedName: Unity.Reflect.IClient.ReleaseSessionBegin
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Unity.Reflect.IClient.ReleaseSessionBegin(System.String[])
        name: ReleaseSessionBegin
        nameWithType: IClient.ReleaseSessionBegin
        qualifiedName: Unity.Reflect.IClient.ReleaseSessionBegin
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Unity.Reflect.IClient
    commentId: M:Unity.Reflect.IClient.ReleaseSessionBegin(System.String[])
  Unity.Reflect.IClient.ReleaseSessionEnd(System.String[]):
    name:
      CSharp:
      - id: Unity.Reflect.IClient.ReleaseSessionEnd(System.String[])
        name: ReleaseSessionEnd
        nameWithType: IClient.ReleaseSessionEnd
        qualifiedName: Unity.Reflect.IClient.ReleaseSessionEnd
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Unity.Reflect.IClient.ReleaseSessionEnd(System.String[])
        name: ReleaseSessionEnd
        nameWithType: IClient.ReleaseSessionEnd
        qualifiedName: Unity.Reflect.IClient.ReleaseSessionEnd
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Unity.Reflect.IClient
    commentId: M:Unity.Reflect.IClient.ReleaseSessionEnd(System.String[])
  Unity.Reflect.IClient.ReleaseManifestUpdate(System.String[]):
    name:
      CSharp:
      - id: Unity.Reflect.IClient.ReleaseManifestUpdate(System.String[])
        name: ReleaseManifestUpdate
        nameWithType: IClient.ReleaseManifestUpdate
        qualifiedName: Unity.Reflect.IClient.ReleaseManifestUpdate
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Unity.Reflect.IClient.ReleaseManifestUpdate(System.String[])
        name: ReleaseManifestUpdate
        nameWithType: IClient.ReleaseManifestUpdate
        qualifiedName: Unity.Reflect.IClient.ReleaseManifestUpdate
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Unity.Reflect.IClient
    commentId: M:Unity.Reflect.IClient.ReleaseManifestUpdate(System.String[])
  Unity.Reflect.IClient.Connected:
    name:
      CSharp:
      - id: Unity.Reflect.IClient.Connected
        name: Connected
        nameWithType: IClient.Connected
        qualifiedName: Unity.Reflect.IClient.Connected
      VB:
      - id: Unity.Reflect.IClient.Connected
        name: Connected
        nameWithType: IClient.Connected
        qualifiedName: Unity.Reflect.IClient.Connected
    isDefinition: true
    parent: Unity.Reflect.IClient
    commentId: P:Unity.Reflect.IClient.Connected
  Unity.Reflect.IClient.Disconnect(System.Boolean):
    name:
      CSharp:
      - id: Unity.Reflect.IClient.Disconnect(System.Boolean)
        name: Disconnect
        nameWithType: IClient.Disconnect
        qualifiedName: Unity.Reflect.IClient.Disconnect
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Unity.Reflect.IClient.Disconnect(System.Boolean)
        name: Disconnect
        nameWithType: IClient.Disconnect
        qualifiedName: Unity.Reflect.IClient.Disconnect
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Unity.Reflect.IClient
    commentId: M:Unity.Reflect.IClient.Disconnect(System.Boolean)
  IEnumerable`1:
    name:
      CSharp:
      - id: IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
  IEnumerable{Unity.Reflect.ManifestAsset}:
    name:
      CSharp:
      - id: IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Unity.Reflect.ManifestAsset
        name: ManifestAsset
        nameWithType: ManifestAsset
        qualifiedName: Unity.Reflect.ManifestAsset
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Unity.Reflect.ManifestAsset
        name: ManifestAsset
        nameWithType: ManifestAsset
        qualifiedName: Unity.Reflect.ManifestAsset
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: IEnumerable`1
    commentId: '!:IEnumerable{Unity.Reflect.ManifestAsset}'
  Unity.Reflect.IPlayerClient.GetManifests*:
    name:
      CSharp:
      - id: Unity.Reflect.IPlayerClient.GetManifests*
        name: GetManifests
        nameWithType: IPlayerClient.GetManifests
        qualifiedName: Unity.Reflect.IPlayerClient.GetManifests
      VB:
      - id: Unity.Reflect.IPlayerClient.GetManifests*
        name: GetManifests
        nameWithType: IPlayerClient.GetManifests
        qualifiedName: Unity.Reflect.IPlayerClient.GetManifests
    isDefinition: true
    commentId: Overload:Unity.Reflect.IPlayerClient.GetManifests
  SyncManifest:
    name:
      CSharp:
      - id: SyncManifest
        name: SyncManifest
        nameWithType: SyncManifest
        qualifiedName: SyncManifest
        isExternal: true
      VB:
      - id: SyncManifest
        name: SyncManifest
        nameWithType: SyncManifest
        qualifiedName: SyncManifest
        isExternal: true
    isDefinition: true
  Unity.Reflect.IPlayerClient.GetManifest*:
    name:
      CSharp:
      - id: Unity.Reflect.IPlayerClient.GetManifest*
        name: GetManifest
        nameWithType: IPlayerClient.GetManifest
        qualifiedName: Unity.Reflect.IPlayerClient.GetManifest
      VB:
      - id: Unity.Reflect.IPlayerClient.GetManifest*
        name: GetManifest
        nameWithType: IPlayerClient.GetManifest
        qualifiedName: Unity.Reflect.IPlayerClient.GetManifest
    isDefinition: true
    commentId: Overload:Unity.Reflect.IPlayerClient.GetManifest
  ISyncModel:
    name:
      CSharp:
      - id: ISyncModel
        name: ISyncModel
        nameWithType: ISyncModel
        qualifiedName: ISyncModel
        isExternal: true
      VB:
      - id: ISyncModel
        name: ISyncModel
        nameWithType: ISyncModel
        qualifiedName: ISyncModel
        isExternal: true
    isDefinition: true
  Unity.Reflect.IPlayerClient.GetSyncModel*:
    name:
      CSharp:
      - id: Unity.Reflect.IPlayerClient.GetSyncModel*
        name: GetSyncModel
        nameWithType: IPlayerClient.GetSyncModel
        qualifiedName: Unity.Reflect.IPlayerClient.GetSyncModel
      VB:
      - id: Unity.Reflect.IPlayerClient.GetSyncModel*
        name: GetSyncModel
        nameWithType: IPlayerClient.GetSyncModel
        qualifiedName: Unity.Reflect.IPlayerClient.GetSyncModel
    isDefinition: true
    commentId: Overload:Unity.Reflect.IPlayerClient.GetSyncModel
  Unity.Reflect.ManifestAsset.#ctor*:
    name:
      CSharp:
      - id: Unity.Reflect.ManifestAsset.#ctor*
        name: ManifestAsset
        nameWithType: ManifestAsset.ManifestAsset
        qualifiedName: Unity.Reflect.ManifestAsset.ManifestAsset
      VB:
      - id: Unity.Reflect.ManifestAsset.#ctor*
        name: ManifestAsset
        nameWithType: ManifestAsset.ManifestAsset
        qualifiedName: Unity.Reflect.ManifestAsset.ManifestAsset
    isDefinition: true
    commentId: Overload:Unity.Reflect.ManifestAsset.#ctor
  Unity.Reflect.ManifestAsset:
    name:
      CSharp:
      - id: Unity.Reflect.ManifestAsset
        name: ManifestAsset
        nameWithType: ManifestAsset
        qualifiedName: Unity.Reflect.ManifestAsset
      VB:
      - id: Unity.Reflect.ManifestAsset
        name: ManifestAsset
        nameWithType: ManifestAsset
        qualifiedName: Unity.Reflect.ManifestAsset
    isDefinition: true
    commentId: T:Unity.Reflect.ManifestAsset
  Unity.Reflect.TransactionAlreadyPendingException:
    name:
      CSharp:
      - id: Unity.Reflect.TransactionAlreadyPendingException
        name: TransactionAlreadyPendingException
        nameWithType: TransactionAlreadyPendingException
        qualifiedName: Unity.Reflect.TransactionAlreadyPendingException
      VB:
      - id: Unity.Reflect.TransactionAlreadyPendingException
        name: TransactionAlreadyPendingException
        nameWithType: TransactionAlreadyPendingException
        qualifiedName: Unity.Reflect.TransactionAlreadyPendingException
    isDefinition: true
    commentId: T:Unity.Reflect.TransactionAlreadyPendingException
  Unity.Reflect.SessionClosedException:
    name:
      CSharp:
      - id: Unity.Reflect.SessionClosedException
        name: SessionClosedException
        nameWithType: SessionClosedException
        qualifiedName: Unity.Reflect.SessionClosedException
      VB:
      - id: Unity.Reflect.SessionClosedException
        name: SessionClosedException
        nameWithType: SessionClosedException
        qualifiedName: Unity.Reflect.SessionClosedException
    isDefinition: true
    commentId: T:Unity.Reflect.SessionClosedException
  Unity.Reflect.IPublisherClient.StartTransaction*:
    name:
      CSharp:
      - id: Unity.Reflect.IPublisherClient.StartTransaction*
        name: StartTransaction
        nameWithType: IPublisherClient.StartTransaction
        qualifiedName: Unity.Reflect.IPublisherClient.StartTransaction
      VB:
      - id: Unity.Reflect.IPublisherClient.StartTransaction*
        name: StartTransaction
        nameWithType: IPublisherClient.StartTransaction
        qualifiedName: Unity.Reflect.IPublisherClient.StartTransaction
    isDefinition: true
    commentId: Overload:Unity.Reflect.IPublisherClient.StartTransaction
  Unity.Reflect.NoTransactionPendingException:
    name:
      CSharp:
      - id: Unity.Reflect.NoTransactionPendingException
        name: NoTransactionPendingException
        nameWithType: NoTransactionPendingException
        qualifiedName: Unity.Reflect.NoTransactionPendingException
      VB:
      - id: Unity.Reflect.NoTransactionPendingException
        name: NoTransactionPendingException
        nameWithType: NoTransactionPendingException
        qualifiedName: Unity.Reflect.NoTransactionPendingException
    isDefinition: true
    commentId: T:Unity.Reflect.NoTransactionPendingException
  Unity.Reflect.IPublisherClient.CommitTransaction*:
    name:
      CSharp:
      - id: Unity.Reflect.IPublisherClient.CommitTransaction*
        name: CommitTransaction
        nameWithType: IPublisherClient.CommitTransaction
        qualifiedName: Unity.Reflect.IPublisherClient.CommitTransaction
      VB:
      - id: Unity.Reflect.IPublisherClient.CommitTransaction*
        name: CommitTransaction
        nameWithType: IPublisherClient.CommitTransaction
        qualifiedName: Unity.Reflect.IPublisherClient.CommitTransaction
    isDefinition: true
    commentId: Overload:Unity.Reflect.IPublisherClient.CommitTransaction
  Task:
    name:
      CSharp:
      - id: Task
        name: Task
        nameWithType: Task
        qualifiedName: Task
        isExternal: true
      VB:
      - id: Task
        name: Task
        nameWithType: Task
        qualifiedName: Task
        isExternal: true
    isDefinition: true
  Unity.Reflect.IPublisherClient.Send*:
    name:
      CSharp:
      - id: Unity.Reflect.IPublisherClient.Send*
        name: Send
        nameWithType: IPublisherClient.Send
        qualifiedName: Unity.Reflect.IPublisherClient.Send
      VB:
      - id: Unity.Reflect.IPublisherClient.Send*
        name: Send
        nameWithType: IPublisherClient.Send
        qualifiedName: Unity.Reflect.IPublisherClient.Send
    isDefinition: true
    commentId: Overload:Unity.Reflect.IPublisherClient.Send
  Unity.Reflect.IPublisherClient.RemoveObjectInstance*:
    name:
      CSharp:
      - id: Unity.Reflect.IPublisherClient.RemoveObjectInstance*
        name: RemoveObjectInstance
        nameWithType: IPublisherClient.RemoveObjectInstance
        qualifiedName: Unity.Reflect.IPublisherClient.RemoveObjectInstance
      VB:
      - id: Unity.Reflect.IPublisherClient.RemoveObjectInstance*
        name: RemoveObjectInstance
        nameWithType: IPublisherClient.RemoveObjectInstance
        qualifiedName: Unity.Reflect.IPublisherClient.RemoveObjectInstance
    isDefinition: true
    commentId: Overload:Unity.Reflect.IPublisherClient.RemoveObjectInstance
  Unity.Reflect.IPublisherClient.CloseAndWait*:
    name:
      CSharp:
      - id: Unity.Reflect.IPublisherClient.CloseAndWait*
        name: CloseAndWait
        nameWithType: IPublisherClient.CloseAndWait
        qualifiedName: Unity.Reflect.IPublisherClient.CloseAndWait
      VB:
      - id: Unity.Reflect.IPublisherClient.CloseAndWait*
        name: CloseAndWait
        nameWithType: IPublisherClient.CloseAndWait
        qualifiedName: Unity.Reflect.IPublisherClient.CloseAndWait
    isDefinition: true
    commentId: Overload:Unity.Reflect.IPublisherClient.CloseAndWait
  Unity.Reflect.IPublisherClient.Abort*:
    name:
      CSharp:
      - id: Unity.Reflect.IPublisherClient.Abort*
        name: Abort
        nameWithType: IPublisherClient.Abort
        qualifiedName: Unity.Reflect.IPublisherClient.Abort
      VB:
      - id: Unity.Reflect.IPublisherClient.Abort*
        name: Abort
        nameWithType: IPublisherClient.Abort
        qualifiedName: Unity.Reflect.IPublisherClient.Abort
    isDefinition: true
    commentId: Overload:Unity.Reflect.IPublisherClient.Abort
  Unity.Reflect.LengthUnit:
    name:
      CSharp:
      - id: Unity.Reflect.LengthUnit
        name: LengthUnit
        nameWithType: LengthUnit
        qualifiedName: Unity.Reflect.LengthUnit
      VB:
      - id: Unity.Reflect.LengthUnit
        name: LengthUnit
        nameWithType: LengthUnit
        qualifiedName: Unity.Reflect.LengthUnit
    isDefinition: true
    parent: Unity.Reflect
    commentId: T:Unity.Reflect.LengthUnit
  Unity.Reflect.AxisInversion:
    name:
      CSharp:
      - id: Unity.Reflect.AxisInversion
        name: AxisInversion
        nameWithType: AxisInversion
        qualifiedName: Unity.Reflect.AxisInversion
      VB:
      - id: Unity.Reflect.AxisInversion
        name: AxisInversion
        nameWithType: AxisInversion
        qualifiedName: Unity.Reflect.AxisInversion
    isDefinition: true
    parent: Unity.Reflect
    commentId: T:Unity.Reflect.AxisInversion
  Unity.Reflect.PublisherSettings.#ctor*:
    name:
      CSharp:
      - id: Unity.Reflect.PublisherSettings.#ctor*
        name: PublisherSettings
        nameWithType: PublisherSettings.PublisherSettings
        qualifiedName: Unity.Reflect.PublisherSettings.PublisherSettings
      VB:
      - id: Unity.Reflect.PublisherSettings.#ctor*
        name: PublisherSettings
        nameWithType: PublisherSettings.PublisherSettings
        qualifiedName: Unity.Reflect.PublisherSettings.PublisherSettings
    isDefinition: true
    commentId: Overload:Unity.Reflect.PublisherSettings.#ctor
  Unity.Reflect.IPublisherClient.StartTransaction:
    commentId: M:Unity.Reflect.IPublisherClient.StartTransaction
  Unity.Reflect.IO.File.Save*:
    name:
      CSharp:
      - id: Unity.Reflect.IO.File.Save*
        name: Save
        nameWithType: File.Save
        qualifiedName: Unity.Reflect.IO.File.Save
      VB:
      - id: Unity.Reflect.IO.File.Save*
        name: Save
        nameWithType: File.Save
        qualifiedName: Unity.Reflect.IO.File.Save
    isDefinition: true
    commentId: Overload:Unity.Reflect.IO.File.Save
  Unity.Reflect.IO.File.SaveAsync*:
    name:
      CSharp:
      - id: Unity.Reflect.IO.File.SaveAsync*
        name: SaveAsync
        nameWithType: File.SaveAsync
        qualifiedName: Unity.Reflect.IO.File.SaveAsync
      VB:
      - id: Unity.Reflect.IO.File.SaveAsync*
        name: SaveAsync
        nameWithType: File.SaveAsync
        qualifiedName: Unity.Reflect.IO.File.SaveAsync
    isDefinition: true
    commentId: Overload:Unity.Reflect.IO.File.SaveAsync
  T:
    name:
      CSharp:
      - name: T
        nameWithType: T
        qualifiedName: T
      VB:
      - name: T
        nameWithType: T
        qualifiedName: T
    isDefinition: true
  '{T}':
    name:
      CSharp:
      - name: T
        nameWithType: T
        qualifiedName: T
      VB:
      - name: T
        nameWithType: T
        qualifiedName: T
    isDefinition: false
    definition: T
    commentId: '!:T'
  Unity.Reflect.IO.File.Load*:
    name:
      CSharp:
      - id: Unity.Reflect.IO.File.Load*
        name: Load
        nameWithType: File.Load
        qualifiedName: Unity.Reflect.IO.File.Load
      VB:
      - id: Unity.Reflect.IO.File.Load*
        name: Load
        nameWithType: File.Load
        qualifiedName: Unity.Reflect.IO.File.Load
    isDefinition: true
    commentId: Overload:Unity.Reflect.IO.File.Load
  Unity.Reflect.IO.File:
    name:
      CSharp:
      - id: Unity.Reflect.IO.File
        name: File
        nameWithType: File
        qualifiedName: Unity.Reflect.IO.File
      VB:
      - id: Unity.Reflect.IO.File
        name: File
        nameWithType: File
        qualifiedName: Unity.Reflect.IO.File
    isDefinition: true
    commentId: T:Unity.Reflect.IO.File
  Unity.Reflect.IO.SourceProject:
    name:
      CSharp:
      - id: Unity.Reflect.IO.SourceProject
        name: SourceProject
        nameWithType: SourceProject
        qualifiedName: Unity.Reflect.IO.SourceProject
      VB:
      - id: Unity.Reflect.IO.SourceProject
        name: SourceProject
        nameWithType: SourceProject
        qualifiedName: Unity.Reflect.IO.SourceProject
    isDefinition: true
    commentId: T:Unity.Reflect.IO.SourceProject
  Unity.Reflect.IO.LocalStorage.#ctor*:
    name:
      CSharp:
      - id: Unity.Reflect.IO.LocalStorage.#ctor*
        name: LocalStorage
        nameWithType: LocalStorage.LocalStorage
        qualifiedName: Unity.Reflect.IO.LocalStorage.LocalStorage
      VB:
      - id: Unity.Reflect.IO.LocalStorage.#ctor*
        name: LocalStorage
        nameWithType: LocalStorage.LocalStorage
        qualifiedName: Unity.Reflect.IO.LocalStorage.LocalStorage
    isDefinition: true
    commentId: Overload:Unity.Reflect.IO.LocalStorage.#ctor
  Unity.Reflect.IO.LocalStorage.OpenOrCreateManifest*:
    name:
      CSharp:
      - id: Unity.Reflect.IO.LocalStorage.OpenOrCreateManifest*
        name: OpenOrCreateManifest
        nameWithType: LocalStorage.OpenOrCreateManifest
        qualifiedName: Unity.Reflect.IO.LocalStorage.OpenOrCreateManifest
      VB:
      - id: Unity.Reflect.IO.LocalStorage.OpenOrCreateManifest*
        name: OpenOrCreateManifest
        nameWithType: LocalStorage.OpenOrCreateManifest
        qualifiedName: Unity.Reflect.IO.LocalStorage.OpenOrCreateManifest
    isDefinition: true
    commentId: Overload:Unity.Reflect.IO.LocalStorage.OpenOrCreateManifest
  Unity.Reflect.IO.LocalStorage.SaveManifest*:
    name:
      CSharp:
      - id: Unity.Reflect.IO.LocalStorage.SaveManifest*
        name: SaveManifest
        nameWithType: LocalStorage.SaveManifest
        qualifiedName: Unity.Reflect.IO.LocalStorage.SaveManifest
      VB:
      - id: Unity.Reflect.IO.LocalStorage.SaveManifest*
        name: SaveManifest
        nameWithType: LocalStorage.SaveManifest
        qualifiedName: Unity.Reflect.IO.LocalStorage.SaveManifest
    isDefinition: true
    commentId: Overload:Unity.Reflect.IO.LocalStorage.SaveManifest
  IEnumerable{Unity.Reflect.IO.SourceProject}:
    name:
      CSharp:
      - id: IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Unity.Reflect.IO.SourceProject
        name: SourceProject
        nameWithType: SourceProject
        qualifiedName: Unity.Reflect.IO.SourceProject
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Unity.Reflect.IO.SourceProject
        name: SourceProject
        nameWithType: SourceProject
        qualifiedName: Unity.Reflect.IO.SourceProject
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: IEnumerable`1
    commentId: '!:IEnumerable{Unity.Reflect.IO.SourceProject}'
  Unity.Reflect.IO.LocalStorage.LoadProjectManifests*:
    name:
      CSharp:
      - id: Unity.Reflect.IO.LocalStorage.LoadProjectManifests*
        name: LoadProjectManifests
        nameWithType: LocalStorage.LoadProjectManifests
        qualifiedName: Unity.Reflect.IO.LocalStorage.LoadProjectManifests
      VB:
      - id: Unity.Reflect.IO.LocalStorage.LoadProjectManifests*
        name: LoadProjectManifests
        nameWithType: LocalStorage.LoadProjectManifests
        qualifiedName: Unity.Reflect.IO.LocalStorage.LoadProjectManifests
    isDefinition: true
    commentId: Overload:Unity.Reflect.IO.LocalStorage.LoadProjectManifests
  Unity.Reflect.IO.LocalStorage.GetLocalSourceProjectIds*:
    name:
      CSharp:
      - id: Unity.Reflect.IO.LocalStorage.GetLocalSourceProjectIds*
        name: GetLocalSourceProjectIds
        nameWithType: LocalStorage.GetLocalSourceProjectIds
        qualifiedName: Unity.Reflect.IO.LocalStorage.GetLocalSourceProjectIds
      VB:
      - id: Unity.Reflect.IO.LocalStorage.GetLocalSourceProjectIds*
        name: GetLocalSourceProjectIds
        nameWithType: LocalStorage.GetLocalSourceProjectIds
        qualifiedName: Unity.Reflect.IO.LocalStorage.GetLocalSourceProjectIds
    isDefinition: true
    commentId: Overload:Unity.Reflect.IO.LocalStorage.GetLocalSourceProjectIds
  Unity.Reflect.IO.LocalStorage.LoadManifest*:
    name:
      CSharp:
      - id: Unity.Reflect.IO.LocalStorage.LoadManifest*
        name: LoadManifest
        nameWithType: LocalStorage.LoadManifest
        qualifiedName: Unity.Reflect.IO.LocalStorage.LoadManifest
      VB:
      - id: Unity.Reflect.IO.LocalStorage.LoadManifest*
        name: LoadManifest
        nameWithType: LocalStorage.LoadManifest
        qualifiedName: Unity.Reflect.IO.LocalStorage.LoadManifest
    isDefinition: true
    commentId: Overload:Unity.Reflect.IO.LocalStorage.LoadManifest
  Unity.Reflect.IO.LocalStorage.Sanitize*:
    name:
      CSharp:
      - id: Unity.Reflect.IO.LocalStorage.Sanitize*
        name: Sanitize
        nameWithType: LocalStorage.Sanitize
        qualifiedName: Unity.Reflect.IO.LocalStorage.Sanitize
      VB:
      - id: Unity.Reflect.IO.LocalStorage.Sanitize*
        name: Sanitize
        nameWithType: LocalStorage.Sanitize
        qualifiedName: Unity.Reflect.IO.LocalStorage.Sanitize
    isDefinition: true
    commentId: Overload:Unity.Reflect.IO.LocalStorage.Sanitize
  Unity.Reflect.IO.LocalStorage.Store*:
    name:
      CSharp:
      - id: Unity.Reflect.IO.LocalStorage.Store*
        name: Store
        nameWithType: LocalStorage.Store
        qualifiedName: Unity.Reflect.IO.LocalStorage.Store
      VB:
      - id: Unity.Reflect.IO.LocalStorage.Store*
        name: Store
        nameWithType: LocalStorage.Store
        qualifiedName: Unity.Reflect.IO.LocalStorage.Store
    isDefinition: true
    commentId: Overload:Unity.Reflect.IO.LocalStorage.Store
  Unity.Reflect.IO.LocalStorage.Load*:
    name:
      CSharp:
      - id: Unity.Reflect.IO.LocalStorage.Load*
        name: Load
        nameWithType: LocalStorage.Load
        qualifiedName: Unity.Reflect.IO.LocalStorage.Load
      VB:
      - id: Unity.Reflect.IO.LocalStorage.Load*
        name: Load
        nameWithType: LocalStorage.Load
        qualifiedName: Unity.Reflect.IO.LocalStorage.Load
    isDefinition: true
    commentId: Overload:Unity.Reflect.IO.LocalStorage.Load
  Unity.Reflect.IO.LocalStorage.GetProjectFolder*:
    name:
      CSharp:
      - id: Unity.Reflect.IO.LocalStorage.GetProjectFolder*
        name: GetProjectFolder
        nameWithType: LocalStorage.GetProjectFolder
        qualifiedName: Unity.Reflect.IO.LocalStorage.GetProjectFolder
      VB:
      - id: Unity.Reflect.IO.LocalStorage.GetProjectFolder*
        name: GetProjectFolder
        nameWithType: LocalStorage.GetProjectFolder
        qualifiedName: Unity.Reflect.IO.LocalStorage.GetProjectFolder
    isDefinition: true
    commentId: Overload:Unity.Reflect.IO.LocalStorage.GetProjectFolder
  Unity.Reflect.IO.LocalStorage.GetSourceProjectFolder*:
    name:
      CSharp:
      - id: Unity.Reflect.IO.LocalStorage.GetSourceProjectFolder*
        name: GetSourceProjectFolder
        nameWithType: LocalStorage.GetSourceProjectFolder
        qualifiedName: Unity.Reflect.IO.LocalStorage.GetSourceProjectFolder
      VB:
      - id: Unity.Reflect.IO.LocalStorage.GetSourceProjectFolder*
        name: GetSourceProjectFolder
        nameWithType: LocalStorage.GetSourceProjectFolder
        qualifiedName: Unity.Reflect.IO.LocalStorage.GetSourceProjectFolder
    isDefinition: true
    commentId: Overload:Unity.Reflect.IO.LocalStorage.GetSourceProjectFolder
  Unity.Reflect.IO.LocalStorage.HasLocalData*:
    name:
      CSharp:
      - id: Unity.Reflect.IO.LocalStorage.HasLocalData*
        name: HasLocalData
        nameWithType: LocalStorage.HasLocalData
        qualifiedName: Unity.Reflect.IO.LocalStorage.HasLocalData
      VB:
      - id: Unity.Reflect.IO.LocalStorage.HasLocalData*
        name: HasLocalData
        nameWithType: LocalStorage.HasLocalData
        qualifiedName: Unity.Reflect.IO.LocalStorage.HasLocalData
    isDefinition: true
    commentId: Overload:Unity.Reflect.IO.LocalStorage.HasLocalData
  Unity.Reflect.IO.LocalStorage:
    name:
      CSharp:
      - id: Unity.Reflect.IO.LocalStorage
        name: LocalStorage
        nameWithType: LocalStorage
        qualifiedName: Unity.Reflect.IO.LocalStorage
      VB:
      - id: Unity.Reflect.IO.LocalStorage
        name: LocalStorage
        nameWithType: LocalStorage
        qualifiedName: Unity.Reflect.IO.LocalStorage
    isDefinition: true
    commentId: T:Unity.Reflect.IO.LocalStorage
  Unity.Reflect.IO:
    name:
      CSharp:
      - name: Unity.Reflect.IO
        nameWithType: Unity.Reflect.IO
        qualifiedName: Unity.Reflect.IO
      VB:
      - name: Unity.Reflect.IO
        nameWithType: Unity.Reflect.IO
        qualifiedName: Unity.Reflect.IO
    isDefinition: true
    commentId: N:Unity.Reflect.IO
  Unity.Reflect.Model:
    name:
      CSharp:
      - name: Unity.Reflect.Model
        nameWithType: Unity.Reflect.Model
        qualifiedName: Unity.Reflect.Model
      VB:
      - name: Unity.Reflect.Model
        nameWithType: Unity.Reflect.Model
        qualifiedName: Unity.Reflect.Model
    isDefinition: true
    commentId: N:Unity.Reflect.Model
  Unity.Reflect.Model.SyncCamera:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncCamera
        name: SyncCamera
        nameWithType: SyncCamera
        qualifiedName: Unity.Reflect.Model.SyncCamera
      VB:
      - id: Unity.Reflect.Model.SyncCamera
        name: SyncCamera
        nameWithType: SyncCamera
        qualifiedName: Unity.Reflect.Model.SyncCamera
    isDefinition: true
    parent: Unity.Reflect.Model
    commentId: T:Unity.Reflect.Model.SyncCamera
  Unity.Reflect.Model.SyncTransform:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncTransform
        name: SyncTransform
        nameWithType: SyncTransform
        qualifiedName: Unity.Reflect.Model.SyncTransform
      VB:
      - id: Unity.Reflect.Model.SyncTransform
        name: SyncTransform
        nameWithType: SyncTransform
        qualifiedName: Unity.Reflect.Model.SyncTransform
    isDefinition: true
    parent: Unity.Reflect.Model
    commentId: T:Unity.Reflect.Model.SyncTransform
  System.Single:
    name:
      CSharp:
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      VB:
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Single
  Unity.Reflect.Model.SyncCamera.FromOrthographic*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncCamera.FromOrthographic*
        name: FromOrthographic
        nameWithType: SyncCamera.FromOrthographic
        qualifiedName: Unity.Reflect.Model.SyncCamera.FromOrthographic
      VB:
      - id: Unity.Reflect.Model.SyncCamera.FromOrthographic*
        name: FromOrthographic
        nameWithType: SyncCamera.FromOrthographic
        qualifiedName: Unity.Reflect.Model.SyncCamera.FromOrthographic
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncCamera.FromOrthographic
  Unity.Reflect.Model.SyncCamera.FromPerspective*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncCamera.FromPerspective*
        name: FromPerspective
        nameWithType: SyncCamera.FromPerspective
        qualifiedName: Unity.Reflect.Model.SyncCamera.FromPerspective
      VB:
      - id: Unity.Reflect.Model.SyncCamera.FromPerspective*
        name: FromPerspective
        nameWithType: SyncCamera.FromPerspective
        qualifiedName: Unity.Reflect.Model.SyncCamera.FromPerspective
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncCamera.FromPerspective
  Unity.Reflect.Model.SyncCamera.FromOrthographicFrustum*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncCamera.FromOrthographicFrustum*
        name: FromOrthographicFrustum
        nameWithType: SyncCamera.FromOrthographicFrustum
        qualifiedName: Unity.Reflect.Model.SyncCamera.FromOrthographicFrustum
      VB:
      - id: Unity.Reflect.Model.SyncCamera.FromOrthographicFrustum*
        name: FromOrthographicFrustum
        nameWithType: SyncCamera.FromOrthographicFrustum
        qualifiedName: Unity.Reflect.Model.SyncCamera.FromOrthographicFrustum
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncCamera.FromOrthographicFrustum
  Unity.Reflect.Model.SyncCamera.FromPerspectiveFrustum*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncCamera.FromPerspectiveFrustum*
        name: FromPerspectiveFrustum
        nameWithType: SyncCamera.FromPerspectiveFrustum
        qualifiedName: Unity.Reflect.Model.SyncCamera.FromPerspectiveFrustum
      VB:
      - id: Unity.Reflect.Model.SyncCamera.FromPerspectiveFrustum*
        name: FromPerspectiveFrustum
        nameWithType: SyncCamera.FromPerspectiveFrustum
        qualifiedName: Unity.Reflect.Model.SyncCamera.FromPerspectiveFrustum
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncCamera.FromPerspectiveFrustum
  pb.MessageParser`1:
    name:
      CSharp:
      - id: pb.MessageParser`1
        name: pb.MessageParser
        nameWithType: pb.MessageParser
        qualifiedName: pb.MessageParser
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: pb.MessageParser`1
        name: pb.MessageParser
        nameWithType: pb.MessageParser
        qualifiedName: pb.MessageParser
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
  pb.MessageParser{Unity.Reflect.Model.SyncCamera}:
    name:
      CSharp:
      - id: pb.MessageParser`1
        name: pb.MessageParser
        nameWithType: pb.MessageParser
        qualifiedName: pb.MessageParser
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Unity.Reflect.Model.SyncCamera
        name: SyncCamera
        nameWithType: SyncCamera
        qualifiedName: Unity.Reflect.Model.SyncCamera
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: pb.MessageParser`1
        name: pb.MessageParser
        nameWithType: pb.MessageParser
        qualifiedName: pb.MessageParser
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Unity.Reflect.Model.SyncCamera
        name: SyncCamera
        nameWithType: SyncCamera
        qualifiedName: Unity.Reflect.Model.SyncCamera
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: pb.MessageParser`1
    commentId: '!:pb.MessageParser{Unity.Reflect.Model.SyncCamera}'
  Unity.Reflect.Model.SyncCamera.Parser*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncCamera.Parser*
        name: Parser
        nameWithType: SyncCamera.Parser
        qualifiedName: Unity.Reflect.Model.SyncCamera.Parser
      VB:
      - id: Unity.Reflect.Model.SyncCamera.Parser*
        name: Parser
        nameWithType: SyncCamera.Parser
        qualifiedName: Unity.Reflect.Model.SyncCamera.Parser
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncCamera.Parser
  pbr.MessageDescriptor:
    name:
      CSharp:
      - id: pbr.MessageDescriptor
        name: pbr.MessageDescriptor
        nameWithType: pbr.MessageDescriptor
        qualifiedName: pbr.MessageDescriptor
        isExternal: true
      VB:
      - id: pbr.MessageDescriptor
        name: pbr.MessageDescriptor
        nameWithType: pbr.MessageDescriptor
        qualifiedName: pbr.MessageDescriptor
        isExternal: true
    isDefinition: true
  Unity.Reflect.Model.SyncCamera.Descriptor*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncCamera.Descriptor*
        name: Descriptor
        nameWithType: SyncCamera.Descriptor
        qualifiedName: Unity.Reflect.Model.SyncCamera.Descriptor
      VB:
      - id: Unity.Reflect.Model.SyncCamera.Descriptor*
        name: Descriptor
        nameWithType: SyncCamera.Descriptor
        qualifiedName: Unity.Reflect.Model.SyncCamera.Descriptor
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncCamera.Descriptor
  Unity.Reflect.Model.SyncCamera.#ctor*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncCamera.#ctor*
        name: SyncCamera
        nameWithType: SyncCamera.SyncCamera
        qualifiedName: Unity.Reflect.Model.SyncCamera.SyncCamera
      VB:
      - id: Unity.Reflect.Model.SyncCamera.#ctor*
        name: SyncCamera
        nameWithType: SyncCamera.SyncCamera
        qualifiedName: Unity.Reflect.Model.SyncCamera.SyncCamera
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncCamera.#ctor
  Unity.Reflect.Model.SyncCamera.Clone*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncCamera.Clone*
        name: Clone
        nameWithType: SyncCamera.Clone
        qualifiedName: Unity.Reflect.Model.SyncCamera.Clone
      VB:
      - id: Unity.Reflect.Model.SyncCamera.Clone*
        name: Clone
        nameWithType: SyncCamera.Clone
        qualifiedName: Unity.Reflect.Model.SyncCamera.Clone
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncCamera.Clone
  Unity.Reflect.Model.SyncCamera.Name*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncCamera.Name*
        name: Name
        nameWithType: SyncCamera.Name
        qualifiedName: Unity.Reflect.Model.SyncCamera.Name
      VB:
      - id: Unity.Reflect.Model.SyncCamera.Name*
        name: Name
        nameWithType: SyncCamera.Name
        qualifiedName: Unity.Reflect.Model.SyncCamera.Name
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncCamera.Name
  Unity.Reflect.Model.SyncCamera.Transform*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncCamera.Transform*
        name: Transform
        nameWithType: SyncCamera.Transform
        qualifiedName: Unity.Reflect.Model.SyncCamera.Transform
      VB:
      - id: Unity.Reflect.Model.SyncCamera.Transform*
        name: Transform
        nameWithType: SyncCamera.Transform
        qualifiedName: Unity.Reflect.Model.SyncCamera.Transform
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncCamera.Transform
  Unity.Reflect.Model.SyncCamera.Orthographic*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncCamera.Orthographic*
        name: Orthographic
        nameWithType: SyncCamera.Orthographic
        qualifiedName: Unity.Reflect.Model.SyncCamera.Orthographic
      VB:
      - id: Unity.Reflect.Model.SyncCamera.Orthographic*
        name: Orthographic
        nameWithType: SyncCamera.Orthographic
        qualifiedName: Unity.Reflect.Model.SyncCamera.Orthographic
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncCamera.Orthographic
  Unity.Reflect.Model.SyncCamera.Near*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncCamera.Near*
        name: Near
        nameWithType: SyncCamera.Near
        qualifiedName: Unity.Reflect.Model.SyncCamera.Near
      VB:
      - id: Unity.Reflect.Model.SyncCamera.Near*
        name: Near
        nameWithType: SyncCamera.Near
        qualifiedName: Unity.Reflect.Model.SyncCamera.Near
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncCamera.Near
  Unity.Reflect.Model.SyncCamera.Far*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncCamera.Far*
        name: Far
        nameWithType: SyncCamera.Far
        qualifiedName: Unity.Reflect.Model.SyncCamera.Far
      VB:
      - id: Unity.Reflect.Model.SyncCamera.Far*
        name: Far
        nameWithType: SyncCamera.Far
        qualifiedName: Unity.Reflect.Model.SyncCamera.Far
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncCamera.Far
  Unity.Reflect.Model.SyncCamera.Left*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncCamera.Left*
        name: Left
        nameWithType: SyncCamera.Left
        qualifiedName: Unity.Reflect.Model.SyncCamera.Left
      VB:
      - id: Unity.Reflect.Model.SyncCamera.Left*
        name: Left
        nameWithType: SyncCamera.Left
        qualifiedName: Unity.Reflect.Model.SyncCamera.Left
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncCamera.Left
  Unity.Reflect.Model.SyncCamera.Right*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncCamera.Right*
        name: Right
        nameWithType: SyncCamera.Right
        qualifiedName: Unity.Reflect.Model.SyncCamera.Right
      VB:
      - id: Unity.Reflect.Model.SyncCamera.Right*
        name: Right
        nameWithType: SyncCamera.Right
        qualifiedName: Unity.Reflect.Model.SyncCamera.Right
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncCamera.Right
  Unity.Reflect.Model.SyncCamera.Bottom*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncCamera.Bottom*
        name: Bottom
        nameWithType: SyncCamera.Bottom
        qualifiedName: Unity.Reflect.Model.SyncCamera.Bottom
      VB:
      - id: Unity.Reflect.Model.SyncCamera.Bottom*
        name: Bottom
        nameWithType: SyncCamera.Bottom
        qualifiedName: Unity.Reflect.Model.SyncCamera.Bottom
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncCamera.Bottom
  Unity.Reflect.Model.SyncCamera.Top*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncCamera.Top*
        name: Top
        nameWithType: SyncCamera.Top
        qualifiedName: Unity.Reflect.Model.SyncCamera.Top
      VB:
      - id: Unity.Reflect.Model.SyncCamera.Top*
        name: Top
        nameWithType: SyncCamera.Top
        qualifiedName: Unity.Reflect.Model.SyncCamera.Top
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncCamera.Top
  Unity.Reflect.Model.SyncCamera.Aspect*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncCamera.Aspect*
        name: Aspect
        nameWithType: SyncCamera.Aspect
        qualifiedName: Unity.Reflect.Model.SyncCamera.Aspect
      VB:
      - id: Unity.Reflect.Model.SyncCamera.Aspect*
        name: Aspect
        nameWithType: SyncCamera.Aspect
        qualifiedName: Unity.Reflect.Model.SyncCamera.Aspect
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncCamera.Aspect
  Unity.Reflect.Model.SyncCamera.Size*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncCamera.Size*
        name: Size
        nameWithType: SyncCamera.Size
        qualifiedName: Unity.Reflect.Model.SyncCamera.Size
      VB:
      - id: Unity.Reflect.Model.SyncCamera.Size*
        name: Size
        nameWithType: SyncCamera.Size
        qualifiedName: Unity.Reflect.Model.SyncCamera.Size
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncCamera.Size
  Unity.Reflect.Model.SyncCamera.Fov*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncCamera.Fov*
        name: Fov
        nameWithType: SyncCamera.Fov
        qualifiedName: Unity.Reflect.Model.SyncCamera.Fov
      VB:
      - id: Unity.Reflect.Model.SyncCamera.Fov*
        name: Fov
        nameWithType: SyncCamera.Fov
        qualifiedName: Unity.Reflect.Model.SyncCamera.Fov
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncCamera.Fov
  Unity.Reflect.Model.SyncCamera.Equals*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncCamera.Equals*
        name: Equals
        nameWithType: SyncCamera.Equals
        qualifiedName: Unity.Reflect.Model.SyncCamera.Equals
      VB:
      - id: Unity.Reflect.Model.SyncCamera.Equals*
        name: Equals
        nameWithType: SyncCamera.Equals
        qualifiedName: Unity.Reflect.Model.SyncCamera.Equals
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncCamera.Equals
  Unity.Reflect.Model.SyncCamera.GetHashCode*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncCamera.GetHashCode*
        name: GetHashCode
        nameWithType: SyncCamera.GetHashCode
        qualifiedName: Unity.Reflect.Model.SyncCamera.GetHashCode
      VB:
      - id: Unity.Reflect.Model.SyncCamera.GetHashCode*
        name: GetHashCode
        nameWithType: SyncCamera.GetHashCode
        qualifiedName: Unity.Reflect.Model.SyncCamera.GetHashCode
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncCamera.GetHashCode
  Unity.Reflect.Model.SyncCamera.ToString*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncCamera.ToString*
        name: ToString
        nameWithType: SyncCamera.ToString
        qualifiedName: Unity.Reflect.Model.SyncCamera.ToString
      VB:
      - id: Unity.Reflect.Model.SyncCamera.ToString*
        name: ToString
        nameWithType: SyncCamera.ToString
        qualifiedName: Unity.Reflect.Model.SyncCamera.ToString
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncCamera.ToString
  pb.CodedOutputStream:
    name:
      CSharp:
      - id: pb.CodedOutputStream
        name: pb.CodedOutputStream
        nameWithType: pb.CodedOutputStream
        qualifiedName: pb.CodedOutputStream
        isExternal: true
      VB:
      - id: pb.CodedOutputStream
        name: pb.CodedOutputStream
        nameWithType: pb.CodedOutputStream
        qualifiedName: pb.CodedOutputStream
        isExternal: true
    isDefinition: true
  Unity.Reflect.Model.SyncCamera.WriteTo*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncCamera.WriteTo*
        name: WriteTo
        nameWithType: SyncCamera.WriteTo
        qualifiedName: Unity.Reflect.Model.SyncCamera.WriteTo
      VB:
      - id: Unity.Reflect.Model.SyncCamera.WriteTo*
        name: WriteTo
        nameWithType: SyncCamera.WriteTo
        qualifiedName: Unity.Reflect.Model.SyncCamera.WriteTo
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncCamera.WriteTo
  Unity.Reflect.Model.SyncCamera.CalculateSize*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncCamera.CalculateSize*
        name: CalculateSize
        nameWithType: SyncCamera.CalculateSize
        qualifiedName: Unity.Reflect.Model.SyncCamera.CalculateSize
      VB:
      - id: Unity.Reflect.Model.SyncCamera.CalculateSize*
        name: CalculateSize
        nameWithType: SyncCamera.CalculateSize
        qualifiedName: Unity.Reflect.Model.SyncCamera.CalculateSize
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncCamera.CalculateSize
  Unity.Reflect.Model.SyncCamera.MergeFrom*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncCamera.MergeFrom*
        name: MergeFrom
        nameWithType: SyncCamera.MergeFrom
        qualifiedName: Unity.Reflect.Model.SyncCamera.MergeFrom
      VB:
      - id: Unity.Reflect.Model.SyncCamera.MergeFrom*
        name: MergeFrom
        nameWithType: SyncCamera.MergeFrom
        qualifiedName: Unity.Reflect.Model.SyncCamera.MergeFrom
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncCamera.MergeFrom
  pb.CodedInputStream:
    name:
      CSharp:
      - id: pb.CodedInputStream
        name: pb.CodedInputStream
        nameWithType: pb.CodedInputStream
        qualifiedName: pb.CodedInputStream
        isExternal: true
      VB:
      - id: pb.CodedInputStream
        name: pb.CodedInputStream
        nameWithType: pb.CodedInputStream
        qualifiedName: pb.CodedInputStream
        isExternal: true
    isDefinition: true
  Unity.Reflect.Model.SyncColor:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncColor
        name: SyncColor
        nameWithType: SyncColor
        qualifiedName: Unity.Reflect.Model.SyncColor
      VB:
      - id: Unity.Reflect.Model.SyncColor
        name: SyncColor
        nameWithType: SyncColor
        qualifiedName: Unity.Reflect.Model.SyncColor
    isDefinition: true
    parent: Unity.Reflect.Model
    commentId: T:Unity.Reflect.Model.SyncColor
  Unity.Reflect.Model.SyncColor.Black*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncColor.Black*
        name: Black
        nameWithType: SyncColor.Black
        qualifiedName: Unity.Reflect.Model.SyncColor.Black
      VB:
      - id: Unity.Reflect.Model.SyncColor.Black*
        name: Black
        nameWithType: SyncColor.Black
        qualifiedName: Unity.Reflect.Model.SyncColor.Black
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncColor.Black
  Unity.Reflect.Model.SyncColor.White*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncColor.White*
        name: White
        nameWithType: SyncColor.White
        qualifiedName: Unity.Reflect.Model.SyncColor.White
      VB:
      - id: Unity.Reflect.Model.SyncColor.White*
        name: White
        nameWithType: SyncColor.White
        qualifiedName: Unity.Reflect.Model.SyncColor.White
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncColor.White
  Unity.Reflect.Model.SyncColor.#ctor*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncColor.#ctor*
        name: SyncColor
        nameWithType: SyncColor.SyncColor
        qualifiedName: Unity.Reflect.Model.SyncColor.SyncColor
      VB:
      - id: Unity.Reflect.Model.SyncColor.#ctor*
        name: SyncColor
        nameWithType: SyncColor.SyncColor
        qualifiedName: Unity.Reflect.Model.SyncColor.SyncColor
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncColor.#ctor
  Unity.Reflect.Model.SyncColor.From256*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncColor.From256*
        name: From256
        nameWithType: SyncColor.From256
        qualifiedName: Unity.Reflect.Model.SyncColor.From256
      VB:
      - id: Unity.Reflect.Model.SyncColor.From256*
        name: From256
        nameWithType: SyncColor.From256
        qualifiedName: Unity.Reflect.Model.SyncColor.From256
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncColor.From256
  Unity.Reflect.Model.SyncColor.op_Multiply*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncColor.op_Multiply*
        name: Multiply
        nameWithType: SyncColor.Multiply
        qualifiedName: Unity.Reflect.Model.SyncColor.Multiply
      VB:
      - id: Unity.Reflect.Model.SyncColor.op_Multiply*
        name: Multiply
        nameWithType: SyncColor.Multiply
        qualifiedName: Unity.Reflect.Model.SyncColor.Multiply
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncColor.op_Multiply
  Unity.Reflect.Model.SyncColor.op_Addition*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncColor.op_Addition*
        name: Addition
        nameWithType: SyncColor.Addition
        qualifiedName: Unity.Reflect.Model.SyncColor.Addition
      VB:
      - id: Unity.Reflect.Model.SyncColor.op_Addition*
        name: Addition
        nameWithType: SyncColor.Addition
        qualifiedName: Unity.Reflect.Model.SyncColor.Addition
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncColor.op_Addition
  Unity.Reflect.Model.SyncColor.Lerp*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncColor.Lerp*
        name: Lerp
        nameWithType: SyncColor.Lerp
        qualifiedName: Unity.Reflect.Model.SyncColor.Lerp
      VB:
      - id: Unity.Reflect.Model.SyncColor.Lerp*
        name: Lerp
        nameWithType: SyncColor.Lerp
        qualifiedName: Unity.Reflect.Model.SyncColor.Lerp
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncColor.Lerp
  Unity.Reflect.Model.SyncColor.op_Equality*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncColor.op_Equality*
        name: Equality
        nameWithType: SyncColor.Equality
        qualifiedName: Unity.Reflect.Model.SyncColor.Equality
      VB:
      - id: Unity.Reflect.Model.SyncColor.op_Equality*
        name: Equality
        nameWithType: SyncColor.Equality
        qualifiedName: Unity.Reflect.Model.SyncColor.Equality
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncColor.op_Equality
  Unity.Reflect.Model.SyncColor.op_Inequality*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncColor.op_Inequality*
        name: Inequality
        nameWithType: SyncColor.Inequality
        qualifiedName: Unity.Reflect.Model.SyncColor.Inequality
      VB:
      - id: Unity.Reflect.Model.SyncColor.op_Inequality*
        name: Inequality
        nameWithType: SyncColor.Inequality
        qualifiedName: Unity.Reflect.Model.SyncColor.Inequality
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncColor.op_Inequality
  pb.MessageParser{Unity.Reflect.Model.SyncColor}:
    name:
      CSharp:
      - id: pb.MessageParser`1
        name: pb.MessageParser
        nameWithType: pb.MessageParser
        qualifiedName: pb.MessageParser
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Unity.Reflect.Model.SyncColor
        name: SyncColor
        nameWithType: SyncColor
        qualifiedName: Unity.Reflect.Model.SyncColor
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: pb.MessageParser`1
        name: pb.MessageParser
        nameWithType: pb.MessageParser
        qualifiedName: pb.MessageParser
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Unity.Reflect.Model.SyncColor
        name: SyncColor
        nameWithType: SyncColor
        qualifiedName: Unity.Reflect.Model.SyncColor
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: pb.MessageParser`1
    commentId: '!:pb.MessageParser{Unity.Reflect.Model.SyncColor}'
  Unity.Reflect.Model.SyncColor.Parser*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncColor.Parser*
        name: Parser
        nameWithType: SyncColor.Parser
        qualifiedName: Unity.Reflect.Model.SyncColor.Parser
      VB:
      - id: Unity.Reflect.Model.SyncColor.Parser*
        name: Parser
        nameWithType: SyncColor.Parser
        qualifiedName: Unity.Reflect.Model.SyncColor.Parser
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncColor.Parser
  Unity.Reflect.Model.SyncColor.Descriptor*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncColor.Descriptor*
        name: Descriptor
        nameWithType: SyncColor.Descriptor
        qualifiedName: Unity.Reflect.Model.SyncColor.Descriptor
      VB:
      - id: Unity.Reflect.Model.SyncColor.Descriptor*
        name: Descriptor
        nameWithType: SyncColor.Descriptor
        qualifiedName: Unity.Reflect.Model.SyncColor.Descriptor
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncColor.Descriptor
  Unity.Reflect.Model.SyncColor.Clone*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncColor.Clone*
        name: Clone
        nameWithType: SyncColor.Clone
        qualifiedName: Unity.Reflect.Model.SyncColor.Clone
      VB:
      - id: Unity.Reflect.Model.SyncColor.Clone*
        name: Clone
        nameWithType: SyncColor.Clone
        qualifiedName: Unity.Reflect.Model.SyncColor.Clone
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncColor.Clone
  Unity.Reflect.Model.SyncColor.R*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncColor.R*
        name: R
        nameWithType: SyncColor.R
        qualifiedName: Unity.Reflect.Model.SyncColor.R
      VB:
      - id: Unity.Reflect.Model.SyncColor.R*
        name: R
        nameWithType: SyncColor.R
        qualifiedName: Unity.Reflect.Model.SyncColor.R
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncColor.R
  Unity.Reflect.Model.SyncColor.G*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncColor.G*
        name: G
        nameWithType: SyncColor.G
        qualifiedName: Unity.Reflect.Model.SyncColor.G
      VB:
      - id: Unity.Reflect.Model.SyncColor.G*
        name: G
        nameWithType: SyncColor.G
        qualifiedName: Unity.Reflect.Model.SyncColor.G
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncColor.G
  Unity.Reflect.Model.SyncColor.B*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncColor.B*
        name: B
        nameWithType: SyncColor.B
        qualifiedName: Unity.Reflect.Model.SyncColor.B
      VB:
      - id: Unity.Reflect.Model.SyncColor.B*
        name: B
        nameWithType: SyncColor.B
        qualifiedName: Unity.Reflect.Model.SyncColor.B
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncColor.B
  Unity.Reflect.Model.SyncColor.A*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncColor.A*
        name: A
        nameWithType: SyncColor.A
        qualifiedName: Unity.Reflect.Model.SyncColor.A
      VB:
      - id: Unity.Reflect.Model.SyncColor.A*
        name: A
        nameWithType: SyncColor.A
        qualifiedName: Unity.Reflect.Model.SyncColor.A
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncColor.A
  Unity.Reflect.Model.SyncColor.Equals*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncColor.Equals*
        name: Equals
        nameWithType: SyncColor.Equals
        qualifiedName: Unity.Reflect.Model.SyncColor.Equals
      VB:
      - id: Unity.Reflect.Model.SyncColor.Equals*
        name: Equals
        nameWithType: SyncColor.Equals
        qualifiedName: Unity.Reflect.Model.SyncColor.Equals
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncColor.Equals
  Unity.Reflect.Model.SyncColor.GetHashCode*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncColor.GetHashCode*
        name: GetHashCode
        nameWithType: SyncColor.GetHashCode
        qualifiedName: Unity.Reflect.Model.SyncColor.GetHashCode
      VB:
      - id: Unity.Reflect.Model.SyncColor.GetHashCode*
        name: GetHashCode
        nameWithType: SyncColor.GetHashCode
        qualifiedName: Unity.Reflect.Model.SyncColor.GetHashCode
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncColor.GetHashCode
  Unity.Reflect.Model.SyncColor.ToString*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncColor.ToString*
        name: ToString
        nameWithType: SyncColor.ToString
        qualifiedName: Unity.Reflect.Model.SyncColor.ToString
      VB:
      - id: Unity.Reflect.Model.SyncColor.ToString*
        name: ToString
        nameWithType: SyncColor.ToString
        qualifiedName: Unity.Reflect.Model.SyncColor.ToString
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncColor.ToString
  Unity.Reflect.Model.SyncColor.WriteTo*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncColor.WriteTo*
        name: WriteTo
        nameWithType: SyncColor.WriteTo
        qualifiedName: Unity.Reflect.Model.SyncColor.WriteTo
      VB:
      - id: Unity.Reflect.Model.SyncColor.WriteTo*
        name: WriteTo
        nameWithType: SyncColor.WriteTo
        qualifiedName: Unity.Reflect.Model.SyncColor.WriteTo
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncColor.WriteTo
  Unity.Reflect.Model.SyncColor.CalculateSize*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncColor.CalculateSize*
        name: CalculateSize
        nameWithType: SyncColor.CalculateSize
        qualifiedName: Unity.Reflect.Model.SyncColor.CalculateSize
      VB:
      - id: Unity.Reflect.Model.SyncColor.CalculateSize*
        name: CalculateSize
        nameWithType: SyncColor.CalculateSize
        qualifiedName: Unity.Reflect.Model.SyncColor.CalculateSize
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncColor.CalculateSize
  Unity.Reflect.Model.SyncColor.MergeFrom*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncColor.MergeFrom*
        name: MergeFrom
        nameWithType: SyncColor.MergeFrom
        qualifiedName: Unity.Reflect.Model.SyncColor.MergeFrom
      VB:
      - id: Unity.Reflect.Model.SyncColor.MergeFrom*
        name: MergeFrom
        nameWithType: SyncColor.MergeFrom
        qualifiedName: Unity.Reflect.Model.SyncColor.MergeFrom
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncColor.MergeFrom
  Unity.Reflect.Model.SyncLight.Types.Type:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncLight.Types.Type
        name: SyncLight.Types.Type
        nameWithType: SyncLight.Types.Type
        qualifiedName: Unity.Reflect.Model.SyncLight.Types.Type
      VB:
      - id: Unity.Reflect.Model.SyncLight.Types.Type
        name: SyncLight.Types.Type
        nameWithType: SyncLight.Types.Type
        qualifiedName: Unity.Reflect.Model.SyncLight.Types.Type
    isDefinition: true
    parent: Unity.Reflect.Model
    commentId: T:Unity.Reflect.Model.SyncLight.Types.Type
  Unity.Reflect.Model.SyncLight.Types.IntensityUnit:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncLight.Types.IntensityUnit
        name: SyncLight.Types.IntensityUnit
        nameWithType: SyncLight.Types.IntensityUnit
        qualifiedName: Unity.Reflect.Model.SyncLight.Types.IntensityUnit
      VB:
      - id: Unity.Reflect.Model.SyncLight.Types.IntensityUnit
        name: SyncLight.Types.IntensityUnit
        nameWithType: SyncLight.Types.IntensityUnit
        qualifiedName: Unity.Reflect.Model.SyncLight.Types.IntensityUnit
    isDefinition: true
    parent: Unity.Reflect.Model
    commentId: T:Unity.Reflect.Model.SyncLight.Types.IntensityUnit
  Unity.Reflect.Model.SyncLight.Types.Shape:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncLight.Types.Shape
        name: SyncLight.Types.Shape
        nameWithType: SyncLight.Types.Shape
        qualifiedName: Unity.Reflect.Model.SyncLight.Types.Shape
      VB:
      - id: Unity.Reflect.Model.SyncLight.Types.Shape
        name: SyncLight.Types.Shape
        nameWithType: SyncLight.Types.Shape
        qualifiedName: Unity.Reflect.Model.SyncLight.Types.Shape
    isDefinition: true
    parent: Unity.Reflect.Model
    commentId: T:Unity.Reflect.Model.SyncLight.Types.Shape
  Unity.Reflect.Model.SyncLight.#ctor*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncLight.#ctor*
        name: SyncLight
        nameWithType: SyncLight.SyncLight
        qualifiedName: Unity.Reflect.Model.SyncLight.SyncLight
      VB:
      - id: Unity.Reflect.Model.SyncLight.#ctor*
        name: SyncLight
        nameWithType: SyncLight.SyncLight
        qualifiedName: Unity.Reflect.Model.SyncLight.SyncLight
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncLight.#ctor
  pb.MessageParser{Unity.Reflect.Model.SyncLight}:
    name:
      CSharp:
      - id: pb.MessageParser`1
        name: pb.MessageParser
        nameWithType: pb.MessageParser
        qualifiedName: pb.MessageParser
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Unity.Reflect.Model.SyncLight
        name: SyncLight
        nameWithType: SyncLight
        qualifiedName: Unity.Reflect.Model.SyncLight
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: pb.MessageParser`1
        name: pb.MessageParser
        nameWithType: pb.MessageParser
        qualifiedName: pb.MessageParser
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Unity.Reflect.Model.SyncLight
        name: SyncLight
        nameWithType: SyncLight
        qualifiedName: Unity.Reflect.Model.SyncLight
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: pb.MessageParser`1
    commentId: '!:pb.MessageParser{Unity.Reflect.Model.SyncLight}'
  Unity.Reflect.Model.SyncLight.Parser*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncLight.Parser*
        name: Parser
        nameWithType: SyncLight.Parser
        qualifiedName: Unity.Reflect.Model.SyncLight.Parser
      VB:
      - id: Unity.Reflect.Model.SyncLight.Parser*
        name: Parser
        nameWithType: SyncLight.Parser
        qualifiedName: Unity.Reflect.Model.SyncLight.Parser
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncLight.Parser
  Unity.Reflect.Model.SyncLight.Descriptor*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncLight.Descriptor*
        name: Descriptor
        nameWithType: SyncLight.Descriptor
        qualifiedName: Unity.Reflect.Model.SyncLight.Descriptor
      VB:
      - id: Unity.Reflect.Model.SyncLight.Descriptor*
        name: Descriptor
        nameWithType: SyncLight.Descriptor
        qualifiedName: Unity.Reflect.Model.SyncLight.Descriptor
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncLight.Descriptor
  Unity.Reflect.Model.SyncLight:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncLight
        name: SyncLight
        nameWithType: SyncLight
        qualifiedName: Unity.Reflect.Model.SyncLight
      VB:
      - id: Unity.Reflect.Model.SyncLight
        name: SyncLight
        nameWithType: SyncLight
        qualifiedName: Unity.Reflect.Model.SyncLight
    isDefinition: true
    parent: Unity.Reflect.Model
    commentId: T:Unity.Reflect.Model.SyncLight
  Unity.Reflect.Model.SyncLight.Clone*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncLight.Clone*
        name: Clone
        nameWithType: SyncLight.Clone
        qualifiedName: Unity.Reflect.Model.SyncLight.Clone
      VB:
      - id: Unity.Reflect.Model.SyncLight.Clone*
        name: Clone
        nameWithType: SyncLight.Clone
        qualifiedName: Unity.Reflect.Model.SyncLight.Clone
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncLight.Clone
  Unity.Reflect.Model.SyncLight.Name*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncLight.Name*
        name: Name
        nameWithType: SyncLight.Name
        qualifiedName: Unity.Reflect.Model.SyncLight.Name
      VB:
      - id: Unity.Reflect.Model.SyncLight.Name*
        name: Name
        nameWithType: SyncLight.Name
        qualifiedName: Unity.Reflect.Model.SyncLight.Name
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncLight.Name
  Unity.Reflect.Model.SyncLight.Transform*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncLight.Transform*
        name: Transform
        nameWithType: SyncLight.Transform
        qualifiedName: Unity.Reflect.Model.SyncLight.Transform
      VB:
      - id: Unity.Reflect.Model.SyncLight.Transform*
        name: Transform
        nameWithType: SyncLight.Transform
        qualifiedName: Unity.Reflect.Model.SyncLight.Transform
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncLight.Transform
  Unity.Reflect.Model.SyncLight.Type*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncLight.Type*
        name: Type
        nameWithType: SyncLight.Type
        qualifiedName: Unity.Reflect.Model.SyncLight.Type
      VB:
      - id: Unity.Reflect.Model.SyncLight.Type*
        name: Type
        nameWithType: SyncLight.Type
        qualifiedName: Unity.Reflect.Model.SyncLight.Type
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncLight.Type
  Unity.Reflect.Model.SyncLight.Color*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncLight.Color*
        name: Color
        nameWithType: SyncLight.Color
        qualifiedName: Unity.Reflect.Model.SyncLight.Color
      VB:
      - id: Unity.Reflect.Model.SyncLight.Color*
        name: Color
        nameWithType: SyncLight.Color
        qualifiedName: Unity.Reflect.Model.SyncLight.Color
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncLight.Color
  Unity.Reflect.Model.SyncLight.Temperature*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncLight.Temperature*
        name: Temperature
        nameWithType: SyncLight.Temperature
        qualifiedName: Unity.Reflect.Model.SyncLight.Temperature
      VB:
      - id: Unity.Reflect.Model.SyncLight.Temperature*
        name: Temperature
        nameWithType: SyncLight.Temperature
        qualifiedName: Unity.Reflect.Model.SyncLight.Temperature
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncLight.Temperature
  Unity.Reflect.Model.SyncLight.Intensity*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncLight.Intensity*
        name: Intensity
        nameWithType: SyncLight.Intensity
        qualifiedName: Unity.Reflect.Model.SyncLight.Intensity
      VB:
      - id: Unity.Reflect.Model.SyncLight.Intensity*
        name: Intensity
        nameWithType: SyncLight.Intensity
        qualifiedName: Unity.Reflect.Model.SyncLight.Intensity
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncLight.Intensity
  Unity.Reflect.Model.SyncLight.IntensityUnit*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncLight.IntensityUnit*
        name: IntensityUnit
        nameWithType: SyncLight.IntensityUnit
        qualifiedName: Unity.Reflect.Model.SyncLight.IntensityUnit
      VB:
      - id: Unity.Reflect.Model.SyncLight.IntensityUnit*
        name: IntensityUnit
        nameWithType: SyncLight.IntensityUnit
        qualifiedName: Unity.Reflect.Model.SyncLight.IntensityUnit
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncLight.IntensityUnit
  Unity.Reflect.Model.SyncLight.Range*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncLight.Range*
        name: Range
        nameWithType: SyncLight.Range
        qualifiedName: Unity.Reflect.Model.SyncLight.Range
      VB:
      - id: Unity.Reflect.Model.SyncLight.Range*
        name: Range
        nameWithType: SyncLight.Range
        qualifiedName: Unity.Reflect.Model.SyncLight.Range
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncLight.Range
  Unity.Reflect.Model.SyncLight.Shape*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncLight.Shape*
        name: Shape
        nameWithType: SyncLight.Shape
        qualifiedName: Unity.Reflect.Model.SyncLight.Shape
      VB:
      - id: Unity.Reflect.Model.SyncLight.Shape*
        name: Shape
        nameWithType: SyncLight.Shape
        qualifiedName: Unity.Reflect.Model.SyncLight.Shape
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncLight.Shape
  Unity.Reflect.Model.SyncLight.ShapeDiameter*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncLight.ShapeDiameter*
        name: ShapeDiameter
        nameWithType: SyncLight.ShapeDiameter
        qualifiedName: Unity.Reflect.Model.SyncLight.ShapeDiameter
      VB:
      - id: Unity.Reflect.Model.SyncLight.ShapeDiameter*
        name: ShapeDiameter
        nameWithType: SyncLight.ShapeDiameter
        qualifiedName: Unity.Reflect.Model.SyncLight.ShapeDiameter
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncLight.ShapeDiameter
  Unity.Reflect.Model.SyncLight.ShapeWidth*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncLight.ShapeWidth*
        name: ShapeWidth
        nameWithType: SyncLight.ShapeWidth
        qualifiedName: Unity.Reflect.Model.SyncLight.ShapeWidth
      VB:
      - id: Unity.Reflect.Model.SyncLight.ShapeWidth*
        name: ShapeWidth
        nameWithType: SyncLight.ShapeWidth
        qualifiedName: Unity.Reflect.Model.SyncLight.ShapeWidth
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncLight.ShapeWidth
  Unity.Reflect.Model.SyncLight.ShapeLength*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncLight.ShapeLength*
        name: ShapeLength
        nameWithType: SyncLight.ShapeLength
        qualifiedName: Unity.Reflect.Model.SyncLight.ShapeLength
      VB:
      - id: Unity.Reflect.Model.SyncLight.ShapeLength*
        name: ShapeLength
        nameWithType: SyncLight.ShapeLength
        qualifiedName: Unity.Reflect.Model.SyncLight.ShapeLength
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncLight.ShapeLength
  Unity.Reflect.Model.SyncLight.ShapeVisible*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncLight.ShapeVisible*
        name: ShapeVisible
        nameWithType: SyncLight.ShapeVisible
        qualifiedName: Unity.Reflect.Model.SyncLight.ShapeVisible
      VB:
      - id: Unity.Reflect.Model.SyncLight.ShapeVisible*
        name: ShapeVisible
        nameWithType: SyncLight.ShapeVisible
        qualifiedName: Unity.Reflect.Model.SyncLight.ShapeVisible
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncLight.ShapeVisible
  Unity.Reflect.Model.SyncLight.SpotAngle*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncLight.SpotAngle*
        name: SpotAngle
        nameWithType: SyncLight.SpotAngle
        qualifiedName: Unity.Reflect.Model.SyncLight.SpotAngle
      VB:
      - id: Unity.Reflect.Model.SyncLight.SpotAngle*
        name: SpotAngle
        nameWithType: SyncLight.SpotAngle
        qualifiedName: Unity.Reflect.Model.SyncLight.SpotAngle
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncLight.SpotAngle
  Unity.Reflect.Model.SyncLight.BeamAngle*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncLight.BeamAngle*
        name: BeamAngle
        nameWithType: SyncLight.BeamAngle
        qualifiedName: Unity.Reflect.Model.SyncLight.BeamAngle
      VB:
      - id: Unity.Reflect.Model.SyncLight.BeamAngle*
        name: BeamAngle
        nameWithType: SyncLight.BeamAngle
        qualifiedName: Unity.Reflect.Model.SyncLight.BeamAngle
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncLight.BeamAngle
  Unity.Reflect.Model.SyncLight.IesProfile*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncLight.IesProfile*
        name: IesProfile
        nameWithType: SyncLight.IesProfile
        qualifiedName: Unity.Reflect.Model.SyncLight.IesProfile
      VB:
      - id: Unity.Reflect.Model.SyncLight.IesProfile*
        name: IesProfile
        nameWithType: SyncLight.IesProfile
        qualifiedName: Unity.Reflect.Model.SyncLight.IesProfile
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncLight.IesProfile
  Unity.Reflect.Model.SyncLight.Equals*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncLight.Equals*
        name: Equals
        nameWithType: SyncLight.Equals
        qualifiedName: Unity.Reflect.Model.SyncLight.Equals
      VB:
      - id: Unity.Reflect.Model.SyncLight.Equals*
        name: Equals
        nameWithType: SyncLight.Equals
        qualifiedName: Unity.Reflect.Model.SyncLight.Equals
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncLight.Equals
  Unity.Reflect.Model.SyncLight.GetHashCode*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncLight.GetHashCode*
        name: GetHashCode
        nameWithType: SyncLight.GetHashCode
        qualifiedName: Unity.Reflect.Model.SyncLight.GetHashCode
      VB:
      - id: Unity.Reflect.Model.SyncLight.GetHashCode*
        name: GetHashCode
        nameWithType: SyncLight.GetHashCode
        qualifiedName: Unity.Reflect.Model.SyncLight.GetHashCode
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncLight.GetHashCode
  Unity.Reflect.Model.SyncLight.ToString*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncLight.ToString*
        name: ToString
        nameWithType: SyncLight.ToString
        qualifiedName: Unity.Reflect.Model.SyncLight.ToString
      VB:
      - id: Unity.Reflect.Model.SyncLight.ToString*
        name: ToString
        nameWithType: SyncLight.ToString
        qualifiedName: Unity.Reflect.Model.SyncLight.ToString
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncLight.ToString
  Unity.Reflect.Model.SyncLight.WriteTo*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncLight.WriteTo*
        name: WriteTo
        nameWithType: SyncLight.WriteTo
        qualifiedName: Unity.Reflect.Model.SyncLight.WriteTo
      VB:
      - id: Unity.Reflect.Model.SyncLight.WriteTo*
        name: WriteTo
        nameWithType: SyncLight.WriteTo
        qualifiedName: Unity.Reflect.Model.SyncLight.WriteTo
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncLight.WriteTo
  Unity.Reflect.Model.SyncLight.CalculateSize*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncLight.CalculateSize*
        name: CalculateSize
        nameWithType: SyncLight.CalculateSize
        qualifiedName: Unity.Reflect.Model.SyncLight.CalculateSize
      VB:
      - id: Unity.Reflect.Model.SyncLight.CalculateSize*
        name: CalculateSize
        nameWithType: SyncLight.CalculateSize
        qualifiedName: Unity.Reflect.Model.SyncLight.CalculateSize
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncLight.CalculateSize
  Unity.Reflect.Model.SyncLight.MergeFrom*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncLight.MergeFrom*
        name: MergeFrom
        nameWithType: SyncLight.MergeFrom
        qualifiedName: Unity.Reflect.Model.SyncLight.MergeFrom
      VB:
      - id: Unity.Reflect.Model.SyncLight.MergeFrom*
        name: MergeFrom
        nameWithType: SyncLight.MergeFrom
        qualifiedName: Unity.Reflect.Model.SyncLight.MergeFrom
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncLight.MergeFrom
  Unity.Reflect.Model.SyncLight.Types:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncLight.Types
        name: SyncLight.Types
        nameWithType: SyncLight.Types
        qualifiedName: Unity.Reflect.Model.SyncLight.Types
      VB:
      - id: Unity.Reflect.Model.SyncLight.Types
        name: SyncLight.Types
        nameWithType: SyncLight.Types
        qualifiedName: Unity.Reflect.Model.SyncLight.Types
    isDefinition: true
    commentId: T:Unity.Reflect.Model.SyncLight.Types
  Unity.Reflect.Model.ISyncModel:
    name:
      CSharp:
      - id: Unity.Reflect.Model.ISyncModel
        name: ISyncModel
        nameWithType: ISyncModel
        qualifiedName: Unity.Reflect.Model.ISyncModel
      VB:
      - id: Unity.Reflect.Model.ISyncModel
        name: ISyncModel
        nameWithType: ISyncModel
        qualifiedName: Unity.Reflect.Model.ISyncModel
    isDefinition: true
    parent: Unity.Reflect.Model
    commentId: T:Unity.Reflect.Model.ISyncModel
  Unity.Reflect.Model.SyncMaterial:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncMaterial
        name: SyncMaterial
        nameWithType: SyncMaterial
        qualifiedName: Unity.Reflect.Model.SyncMaterial
      VB:
      - id: Unity.Reflect.Model.SyncMaterial
        name: SyncMaterial
        nameWithType: SyncMaterial
        qualifiedName: Unity.Reflect.Model.SyncMaterial
    isDefinition: true
    parent: Unity.Reflect.Model
    commentId: T:Unity.Reflect.Model.SyncMaterial
  Unity.Reflect.Model.SyncMaterial.Default*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncMaterial.Default*
        name: Default
        nameWithType: SyncMaterial.Default
        qualifiedName: Unity.Reflect.Model.SyncMaterial.Default
      VB:
      - id: Unity.Reflect.Model.SyncMaterial.Default*
        name: Default
        nameWithType: SyncMaterial.Default
        qualifiedName: Unity.Reflect.Model.SyncMaterial.Default
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncMaterial.Default
  Unity.Reflect.Model.SyncMap:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncMap
        name: SyncMap
        nameWithType: SyncMap
        qualifiedName: Unity.Reflect.Model.SyncMap
      VB:
      - id: Unity.Reflect.Model.SyncMap
        name: SyncMap
        nameWithType: SyncMap
        qualifiedName: Unity.Reflect.Model.SyncMap
    isDefinition: true
    parent: Unity.Reflect.Model
    commentId: T:Unity.Reflect.Model.SyncMap
  Unity.Reflect.Model.SyncMaterial.#ctor*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncMaterial.#ctor*
        name: SyncMaterial
        nameWithType: SyncMaterial.SyncMaterial
        qualifiedName: Unity.Reflect.Model.SyncMaterial.SyncMaterial
      VB:
      - id: Unity.Reflect.Model.SyncMaterial.#ctor*
        name: SyncMaterial
        nameWithType: SyncMaterial.SyncMaterial
        qualifiedName: Unity.Reflect.Model.SyncMaterial.SyncMaterial
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncMaterial.#ctor
  pb.MessageParser{Unity.Reflect.Model.SyncMaterial}:
    name:
      CSharp:
      - id: pb.MessageParser`1
        name: pb.MessageParser
        nameWithType: pb.MessageParser
        qualifiedName: pb.MessageParser
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Unity.Reflect.Model.SyncMaterial
        name: SyncMaterial
        nameWithType: SyncMaterial
        qualifiedName: Unity.Reflect.Model.SyncMaterial
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: pb.MessageParser`1
        name: pb.MessageParser
        nameWithType: pb.MessageParser
        qualifiedName: pb.MessageParser
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Unity.Reflect.Model.SyncMaterial
        name: SyncMaterial
        nameWithType: SyncMaterial
        qualifiedName: Unity.Reflect.Model.SyncMaterial
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: pb.MessageParser`1
    commentId: '!:pb.MessageParser{Unity.Reflect.Model.SyncMaterial}'
  Unity.Reflect.Model.SyncMaterial.Parser*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncMaterial.Parser*
        name: Parser
        nameWithType: SyncMaterial.Parser
        qualifiedName: Unity.Reflect.Model.SyncMaterial.Parser
      VB:
      - id: Unity.Reflect.Model.SyncMaterial.Parser*
        name: Parser
        nameWithType: SyncMaterial.Parser
        qualifiedName: Unity.Reflect.Model.SyncMaterial.Parser
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncMaterial.Parser
  Unity.Reflect.Model.SyncMaterial.Descriptor*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncMaterial.Descriptor*
        name: Descriptor
        nameWithType: SyncMaterial.Descriptor
        qualifiedName: Unity.Reflect.Model.SyncMaterial.Descriptor
      VB:
      - id: Unity.Reflect.Model.SyncMaterial.Descriptor*
        name: Descriptor
        nameWithType: SyncMaterial.Descriptor
        qualifiedName: Unity.Reflect.Model.SyncMaterial.Descriptor
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncMaterial.Descriptor
  Unity.Reflect.Model.SyncMaterial.Clone*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncMaterial.Clone*
        name: Clone
        nameWithType: SyncMaterial.Clone
        qualifiedName: Unity.Reflect.Model.SyncMaterial.Clone
      VB:
      - id: Unity.Reflect.Model.SyncMaterial.Clone*
        name: Clone
        nameWithType: SyncMaterial.Clone
        qualifiedName: Unity.Reflect.Model.SyncMaterial.Clone
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncMaterial.Clone
  Unity.Reflect.Model.SyncMaterial.Name*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncMaterial.Name*
        name: Name
        nameWithType: SyncMaterial.Name
        qualifiedName: Unity.Reflect.Model.SyncMaterial.Name
      VB:
      - id: Unity.Reflect.Model.SyncMaterial.Name*
        name: Name
        nameWithType: SyncMaterial.Name
        qualifiedName: Unity.Reflect.Model.SyncMaterial.Name
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncMaterial.Name
  Unity.Reflect.Model.ISyncModel.Name:
    name:
      CSharp:
      - id: Unity.Reflect.Model.ISyncModel.Name
        name: Name
        nameWithType: ISyncModel.Name
        qualifiedName: Unity.Reflect.Model.ISyncModel.Name
      VB:
      - id: Unity.Reflect.Model.ISyncModel.Name
        name: Name
        nameWithType: ISyncModel.Name
        qualifiedName: Unity.Reflect.Model.ISyncModel.Name
    isDefinition: true
    parent: Unity.Reflect.Model.ISyncModel
    commentId: P:Unity.Reflect.Model.ISyncModel.Name
  Unity.Reflect.Model.SyncMaterial.Tint*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncMaterial.Tint*
        name: Tint
        nameWithType: SyncMaterial.Tint
        qualifiedName: Unity.Reflect.Model.SyncMaterial.Tint
      VB:
      - id: Unity.Reflect.Model.SyncMaterial.Tint*
        name: Tint
        nameWithType: SyncMaterial.Tint
        qualifiedName: Unity.Reflect.Model.SyncMaterial.Tint
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncMaterial.Tint
  Unity.Reflect.Model.SyncMaterial.AlbedoColor*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncMaterial.AlbedoColor*
        name: AlbedoColor
        nameWithType: SyncMaterial.AlbedoColor
        qualifiedName: Unity.Reflect.Model.SyncMaterial.AlbedoColor
      VB:
      - id: Unity.Reflect.Model.SyncMaterial.AlbedoColor*
        name: AlbedoColor
        nameWithType: SyncMaterial.AlbedoColor
        qualifiedName: Unity.Reflect.Model.SyncMaterial.AlbedoColor
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncMaterial.AlbedoColor
  Unity.Reflect.Model.SyncMaterial.AlbedoMap*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncMaterial.AlbedoMap*
        name: AlbedoMap
        nameWithType: SyncMaterial.AlbedoMap
        qualifiedName: Unity.Reflect.Model.SyncMaterial.AlbedoMap
      VB:
      - id: Unity.Reflect.Model.SyncMaterial.AlbedoMap*
        name: AlbedoMap
        nameWithType: SyncMaterial.AlbedoMap
        qualifiedName: Unity.Reflect.Model.SyncMaterial.AlbedoMap
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncMaterial.AlbedoMap
  Unity.Reflect.Model.SyncMaterial.AlbedoFade*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncMaterial.AlbedoFade*
        name: AlbedoFade
        nameWithType: SyncMaterial.AlbedoFade
        qualifiedName: Unity.Reflect.Model.SyncMaterial.AlbedoFade
      VB:
      - id: Unity.Reflect.Model.SyncMaterial.AlbedoFade*
        name: AlbedoFade
        nameWithType: SyncMaterial.AlbedoFade
        qualifiedName: Unity.Reflect.Model.SyncMaterial.AlbedoFade
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncMaterial.AlbedoFade
  Unity.Reflect.Model.SyncMaterial.Alpha*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncMaterial.Alpha*
        name: Alpha
        nameWithType: SyncMaterial.Alpha
        qualifiedName: Unity.Reflect.Model.SyncMaterial.Alpha
      VB:
      - id: Unity.Reflect.Model.SyncMaterial.Alpha*
        name: Alpha
        nameWithType: SyncMaterial.Alpha
        qualifiedName: Unity.Reflect.Model.SyncMaterial.Alpha
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncMaterial.Alpha
  Unity.Reflect.Model.SyncMaterial.AlphaMap*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncMaterial.AlphaMap*
        name: AlphaMap
        nameWithType: SyncMaterial.AlphaMap
        qualifiedName: Unity.Reflect.Model.SyncMaterial.AlphaMap
      VB:
      - id: Unity.Reflect.Model.SyncMaterial.AlphaMap*
        name: AlphaMap
        nameWithType: SyncMaterial.AlphaMap
        qualifiedName: Unity.Reflect.Model.SyncMaterial.AlphaMap
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncMaterial.AlphaMap
  Unity.Reflect.Model.SyncMaterial.NormalMap*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncMaterial.NormalMap*
        name: NormalMap
        nameWithType: SyncMaterial.NormalMap
        qualifiedName: Unity.Reflect.Model.SyncMaterial.NormalMap
      VB:
      - id: Unity.Reflect.Model.SyncMaterial.NormalMap*
        name: NormalMap
        nameWithType: SyncMaterial.NormalMap
        qualifiedName: Unity.Reflect.Model.SyncMaterial.NormalMap
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncMaterial.NormalMap
  Unity.Reflect.Model.SyncMaterial.NormalScale*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncMaterial.NormalScale*
        name: NormalScale
        nameWithType: SyncMaterial.NormalScale
        qualifiedName: Unity.Reflect.Model.SyncMaterial.NormalScale
      VB:
      - id: Unity.Reflect.Model.SyncMaterial.NormalScale*
        name: NormalScale
        nameWithType: SyncMaterial.NormalScale
        qualifiedName: Unity.Reflect.Model.SyncMaterial.NormalScale
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncMaterial.NormalScale
  Unity.Reflect.Model.SyncMaterial.CutoutMap*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncMaterial.CutoutMap*
        name: CutoutMap
        nameWithType: SyncMaterial.CutoutMap
        qualifiedName: Unity.Reflect.Model.SyncMaterial.CutoutMap
      VB:
      - id: Unity.Reflect.Model.SyncMaterial.CutoutMap*
        name: CutoutMap
        nameWithType: SyncMaterial.CutoutMap
        qualifiedName: Unity.Reflect.Model.SyncMaterial.CutoutMap
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncMaterial.CutoutMap
  Unity.Reflect.Model.SyncMaterial.CutoutThreshold*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncMaterial.CutoutThreshold*
        name: CutoutThreshold
        nameWithType: SyncMaterial.CutoutThreshold
        qualifiedName: Unity.Reflect.Model.SyncMaterial.CutoutThreshold
      VB:
      - id: Unity.Reflect.Model.SyncMaterial.CutoutThreshold*
        name: CutoutThreshold
        nameWithType: SyncMaterial.CutoutThreshold
        qualifiedName: Unity.Reflect.Model.SyncMaterial.CutoutThreshold
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncMaterial.CutoutThreshold
  Unity.Reflect.Model.SyncMaterial.Glossiness*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncMaterial.Glossiness*
        name: Glossiness
        nameWithType: SyncMaterial.Glossiness
        qualifiedName: Unity.Reflect.Model.SyncMaterial.Glossiness
      VB:
      - id: Unity.Reflect.Model.SyncMaterial.Glossiness*
        name: Glossiness
        nameWithType: SyncMaterial.Glossiness
        qualifiedName: Unity.Reflect.Model.SyncMaterial.Glossiness
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncMaterial.Glossiness
  Unity.Reflect.Model.SyncMaterial.GlossinessMap*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncMaterial.GlossinessMap*
        name: GlossinessMap
        nameWithType: SyncMaterial.GlossinessMap
        qualifiedName: Unity.Reflect.Model.SyncMaterial.GlossinessMap
      VB:
      - id: Unity.Reflect.Model.SyncMaterial.GlossinessMap*
        name: GlossinessMap
        nameWithType: SyncMaterial.GlossinessMap
        qualifiedName: Unity.Reflect.Model.SyncMaterial.GlossinessMap
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncMaterial.GlossinessMap
  Unity.Reflect.Model.SyncMaterial.Metallic*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncMaterial.Metallic*
        name: Metallic
        nameWithType: SyncMaterial.Metallic
        qualifiedName: Unity.Reflect.Model.SyncMaterial.Metallic
      VB:
      - id: Unity.Reflect.Model.SyncMaterial.Metallic*
        name: Metallic
        nameWithType: SyncMaterial.Metallic
        qualifiedName: Unity.Reflect.Model.SyncMaterial.Metallic
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncMaterial.Metallic
  Unity.Reflect.Model.SyncMaterial.MetallicMap*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncMaterial.MetallicMap*
        name: MetallicMap
        nameWithType: SyncMaterial.MetallicMap
        qualifiedName: Unity.Reflect.Model.SyncMaterial.MetallicMap
      VB:
      - id: Unity.Reflect.Model.SyncMaterial.MetallicMap*
        name: MetallicMap
        nameWithType: SyncMaterial.MetallicMap
        qualifiedName: Unity.Reflect.Model.SyncMaterial.MetallicMap
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncMaterial.MetallicMap
  Unity.Reflect.Model.SyncMaterial.Emission*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncMaterial.Emission*
        name: Emission
        nameWithType: SyncMaterial.Emission
        qualifiedName: Unity.Reflect.Model.SyncMaterial.Emission
      VB:
      - id: Unity.Reflect.Model.SyncMaterial.Emission*
        name: Emission
        nameWithType: SyncMaterial.Emission
        qualifiedName: Unity.Reflect.Model.SyncMaterial.Emission
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncMaterial.Emission
  Unity.Reflect.Model.SyncMaterial.EmissionTemperature*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncMaterial.EmissionTemperature*
        name: EmissionTemperature
        nameWithType: SyncMaterial.EmissionTemperature
        qualifiedName: Unity.Reflect.Model.SyncMaterial.EmissionTemperature
      VB:
      - id: Unity.Reflect.Model.SyncMaterial.EmissionTemperature*
        name: EmissionTemperature
        nameWithType: SyncMaterial.EmissionTemperature
        qualifiedName: Unity.Reflect.Model.SyncMaterial.EmissionTemperature
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncMaterial.EmissionTemperature
  Unity.Reflect.Model.SyncMaterial.EmissionMap*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncMaterial.EmissionMap*
        name: EmissionMap
        nameWithType: SyncMaterial.EmissionMap
        qualifiedName: Unity.Reflect.Model.SyncMaterial.EmissionMap
      VB:
      - id: Unity.Reflect.Model.SyncMaterial.EmissionMap*
        name: EmissionMap
        nameWithType: SyncMaterial.EmissionMap
        qualifiedName: Unity.Reflect.Model.SyncMaterial.EmissionMap
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncMaterial.EmissionMap
  Unity.Reflect.Model.SyncMaterial.Equals*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncMaterial.Equals*
        name: Equals
        nameWithType: SyncMaterial.Equals
        qualifiedName: Unity.Reflect.Model.SyncMaterial.Equals
      VB:
      - id: Unity.Reflect.Model.SyncMaterial.Equals*
        name: Equals
        nameWithType: SyncMaterial.Equals
        qualifiedName: Unity.Reflect.Model.SyncMaterial.Equals
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncMaterial.Equals
  Unity.Reflect.Model.SyncMaterial.GetHashCode*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncMaterial.GetHashCode*
        name: GetHashCode
        nameWithType: SyncMaterial.GetHashCode
        qualifiedName: Unity.Reflect.Model.SyncMaterial.GetHashCode
      VB:
      - id: Unity.Reflect.Model.SyncMaterial.GetHashCode*
        name: GetHashCode
        nameWithType: SyncMaterial.GetHashCode
        qualifiedName: Unity.Reflect.Model.SyncMaterial.GetHashCode
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncMaterial.GetHashCode
  Unity.Reflect.Model.SyncMaterial.ToString*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncMaterial.ToString*
        name: ToString
        nameWithType: SyncMaterial.ToString
        qualifiedName: Unity.Reflect.Model.SyncMaterial.ToString
      VB:
      - id: Unity.Reflect.Model.SyncMaterial.ToString*
        name: ToString
        nameWithType: SyncMaterial.ToString
        qualifiedName: Unity.Reflect.Model.SyncMaterial.ToString
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncMaterial.ToString
  Unity.Reflect.Model.SyncMaterial.WriteTo*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncMaterial.WriteTo*
        name: WriteTo
        nameWithType: SyncMaterial.WriteTo
        qualifiedName: Unity.Reflect.Model.SyncMaterial.WriteTo
      VB:
      - id: Unity.Reflect.Model.SyncMaterial.WriteTo*
        name: WriteTo
        nameWithType: SyncMaterial.WriteTo
        qualifiedName: Unity.Reflect.Model.SyncMaterial.WriteTo
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncMaterial.WriteTo
  Unity.Reflect.Model.SyncMaterial.CalculateSize*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncMaterial.CalculateSize*
        name: CalculateSize
        nameWithType: SyncMaterial.CalculateSize
        qualifiedName: Unity.Reflect.Model.SyncMaterial.CalculateSize
      VB:
      - id: Unity.Reflect.Model.SyncMaterial.CalculateSize*
        name: CalculateSize
        nameWithType: SyncMaterial.CalculateSize
        qualifiedName: Unity.Reflect.Model.SyncMaterial.CalculateSize
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncMaterial.CalculateSize
  Unity.Reflect.Model.SyncMaterial.MergeFrom*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncMaterial.MergeFrom*
        name: MergeFrom
        nameWithType: SyncMaterial.MergeFrom
        qualifiedName: Unity.Reflect.Model.SyncMaterial.MergeFrom
      VB:
      - id: Unity.Reflect.Model.SyncMaterial.MergeFrom*
        name: MergeFrom
        nameWithType: SyncMaterial.MergeFrom
        qualifiedName: Unity.Reflect.Model.SyncMaterial.MergeFrom
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncMaterial.MergeFrom
  Unity.Reflect.Model.SyncMap.Empty*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncMap.Empty*
        name: Empty
        nameWithType: SyncMap.Empty
        qualifiedName: Unity.Reflect.Model.SyncMap.Empty
      VB:
      - id: Unity.Reflect.Model.SyncMap.Empty*
        name: Empty
        nameWithType: SyncMap.Empty
        qualifiedName: Unity.Reflect.Model.SyncMap.Empty
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncMap.Empty
  Unity.Reflect.Model.SyncFloat2:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncFloat2
        name: SyncFloat2
        nameWithType: SyncFloat2
        qualifiedName: Unity.Reflect.Model.SyncFloat2
      VB:
      - id: Unity.Reflect.Model.SyncFloat2
        name: SyncFloat2
        nameWithType: SyncFloat2
        qualifiedName: Unity.Reflect.Model.SyncFloat2
    isDefinition: true
    parent: Unity.Reflect.Model
    commentId: T:Unity.Reflect.Model.SyncFloat2
  Unity.Reflect.Model.SyncMap.#ctor*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncMap.#ctor*
        name: SyncMap
        nameWithType: SyncMap.SyncMap
        qualifiedName: Unity.Reflect.Model.SyncMap.SyncMap
      VB:
      - id: Unity.Reflect.Model.SyncMap.#ctor*
        name: SyncMap
        nameWithType: SyncMap.SyncMap
        qualifiedName: Unity.Reflect.Model.SyncMap.SyncMap
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncMap.#ctor
  pb.MessageParser{Unity.Reflect.Model.SyncMap}:
    name:
      CSharp:
      - id: pb.MessageParser`1
        name: pb.MessageParser
        nameWithType: pb.MessageParser
        qualifiedName: pb.MessageParser
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Unity.Reflect.Model.SyncMap
        name: SyncMap
        nameWithType: SyncMap
        qualifiedName: Unity.Reflect.Model.SyncMap
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: pb.MessageParser`1
        name: pb.MessageParser
        nameWithType: pb.MessageParser
        qualifiedName: pb.MessageParser
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Unity.Reflect.Model.SyncMap
        name: SyncMap
        nameWithType: SyncMap
        qualifiedName: Unity.Reflect.Model.SyncMap
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: pb.MessageParser`1
    commentId: '!:pb.MessageParser{Unity.Reflect.Model.SyncMap}'
  Unity.Reflect.Model.SyncMap.Parser*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncMap.Parser*
        name: Parser
        nameWithType: SyncMap.Parser
        qualifiedName: Unity.Reflect.Model.SyncMap.Parser
      VB:
      - id: Unity.Reflect.Model.SyncMap.Parser*
        name: Parser
        nameWithType: SyncMap.Parser
        qualifiedName: Unity.Reflect.Model.SyncMap.Parser
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncMap.Parser
  Unity.Reflect.Model.SyncMap.Descriptor*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncMap.Descriptor*
        name: Descriptor
        nameWithType: SyncMap.Descriptor
        qualifiedName: Unity.Reflect.Model.SyncMap.Descriptor
      VB:
      - id: Unity.Reflect.Model.SyncMap.Descriptor*
        name: Descriptor
        nameWithType: SyncMap.Descriptor
        qualifiedName: Unity.Reflect.Model.SyncMap.Descriptor
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncMap.Descriptor
  Unity.Reflect.Model.SyncMap.Clone*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncMap.Clone*
        name: Clone
        nameWithType: SyncMap.Clone
        qualifiedName: Unity.Reflect.Model.SyncMap.Clone
      VB:
      - id: Unity.Reflect.Model.SyncMap.Clone*
        name: Clone
        nameWithType: SyncMap.Clone
        qualifiedName: Unity.Reflect.Model.SyncMap.Clone
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncMap.Clone
  Unity.Reflect.Model.SyncMap.Texture*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncMap.Texture*
        name: Texture
        nameWithType: SyncMap.Texture
        qualifiedName: Unity.Reflect.Model.SyncMap.Texture
      VB:
      - id: Unity.Reflect.Model.SyncMap.Texture*
        name: Texture
        nameWithType: SyncMap.Texture
        qualifiedName: Unity.Reflect.Model.SyncMap.Texture
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncMap.Texture
  Unity.Reflect.Model.SyncMap.Offset*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncMap.Offset*
        name: Offset
        nameWithType: SyncMap.Offset
        qualifiedName: Unity.Reflect.Model.SyncMap.Offset
      VB:
      - id: Unity.Reflect.Model.SyncMap.Offset*
        name: Offset
        nameWithType: SyncMap.Offset
        qualifiedName: Unity.Reflect.Model.SyncMap.Offset
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncMap.Offset
  Unity.Reflect.Model.SyncMap.Tiling*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncMap.Tiling*
        name: Tiling
        nameWithType: SyncMap.Tiling
        qualifiedName: Unity.Reflect.Model.SyncMap.Tiling
      VB:
      - id: Unity.Reflect.Model.SyncMap.Tiling*
        name: Tiling
        nameWithType: SyncMap.Tiling
        qualifiedName: Unity.Reflect.Model.SyncMap.Tiling
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncMap.Tiling
  Unity.Reflect.Model.SyncMap.Brightness*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncMap.Brightness*
        name: Brightness
        nameWithType: SyncMap.Brightness
        qualifiedName: Unity.Reflect.Model.SyncMap.Brightness
      VB:
      - id: Unity.Reflect.Model.SyncMap.Brightness*
        name: Brightness
        nameWithType: SyncMap.Brightness
        qualifiedName: Unity.Reflect.Model.SyncMap.Brightness
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncMap.Brightness
  Unity.Reflect.Model.SyncMap.Invert*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncMap.Invert*
        name: Invert
        nameWithType: SyncMap.Invert
        qualifiedName: Unity.Reflect.Model.SyncMap.Invert
      VB:
      - id: Unity.Reflect.Model.SyncMap.Invert*
        name: Invert
        nameWithType: SyncMap.Invert
        qualifiedName: Unity.Reflect.Model.SyncMap.Invert
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncMap.Invert
  Unity.Reflect.Model.SyncMap.RotationDegrees*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncMap.RotationDegrees*
        name: RotationDegrees
        nameWithType: SyncMap.RotationDegrees
        qualifiedName: Unity.Reflect.Model.SyncMap.RotationDegrees
      VB:
      - id: Unity.Reflect.Model.SyncMap.RotationDegrees*
        name: RotationDegrees
        nameWithType: SyncMap.RotationDegrees
        qualifiedName: Unity.Reflect.Model.SyncMap.RotationDegrees
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncMap.RotationDegrees
  Unity.Reflect.Model.SyncMap.Equals*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncMap.Equals*
        name: Equals
        nameWithType: SyncMap.Equals
        qualifiedName: Unity.Reflect.Model.SyncMap.Equals
      VB:
      - id: Unity.Reflect.Model.SyncMap.Equals*
        name: Equals
        nameWithType: SyncMap.Equals
        qualifiedName: Unity.Reflect.Model.SyncMap.Equals
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncMap.Equals
  Unity.Reflect.Model.SyncMap.GetHashCode*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncMap.GetHashCode*
        name: GetHashCode
        nameWithType: SyncMap.GetHashCode
        qualifiedName: Unity.Reflect.Model.SyncMap.GetHashCode
      VB:
      - id: Unity.Reflect.Model.SyncMap.GetHashCode*
        name: GetHashCode
        nameWithType: SyncMap.GetHashCode
        qualifiedName: Unity.Reflect.Model.SyncMap.GetHashCode
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncMap.GetHashCode
  Unity.Reflect.Model.SyncMap.ToString*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncMap.ToString*
        name: ToString
        nameWithType: SyncMap.ToString
        qualifiedName: Unity.Reflect.Model.SyncMap.ToString
      VB:
      - id: Unity.Reflect.Model.SyncMap.ToString*
        name: ToString
        nameWithType: SyncMap.ToString
        qualifiedName: Unity.Reflect.Model.SyncMap.ToString
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncMap.ToString
  Unity.Reflect.Model.SyncMap.WriteTo*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncMap.WriteTo*
        name: WriteTo
        nameWithType: SyncMap.WriteTo
        qualifiedName: Unity.Reflect.Model.SyncMap.WriteTo
      VB:
      - id: Unity.Reflect.Model.SyncMap.WriteTo*
        name: WriteTo
        nameWithType: SyncMap.WriteTo
        qualifiedName: Unity.Reflect.Model.SyncMap.WriteTo
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncMap.WriteTo
  Unity.Reflect.Model.SyncMap.CalculateSize*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncMap.CalculateSize*
        name: CalculateSize
        nameWithType: SyncMap.CalculateSize
        qualifiedName: Unity.Reflect.Model.SyncMap.CalculateSize
      VB:
      - id: Unity.Reflect.Model.SyncMap.CalculateSize*
        name: CalculateSize
        nameWithType: SyncMap.CalculateSize
        qualifiedName: Unity.Reflect.Model.SyncMap.CalculateSize
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncMap.CalculateSize
  Unity.Reflect.Model.SyncMap.MergeFrom*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncMap.MergeFrom*
        name: MergeFrom
        nameWithType: SyncMap.MergeFrom
        qualifiedName: Unity.Reflect.Model.SyncMap.MergeFrom
      VB:
      - id: Unity.Reflect.Model.SyncMap.MergeFrom*
        name: MergeFrom
        nameWithType: SyncMap.MergeFrom
        qualifiedName: Unity.Reflect.Model.SyncMap.MergeFrom
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncMap.MergeFrom
  Unity.Reflect.Model.SyncFloat4:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncFloat4
        name: SyncFloat4
        nameWithType: SyncFloat4
        qualifiedName: Unity.Reflect.Model.SyncFloat4
      VB:
      - id: Unity.Reflect.Model.SyncFloat4
        name: SyncFloat4
        nameWithType: SyncFloat4
        qualifiedName: Unity.Reflect.Model.SyncFloat4
    isDefinition: true
    parent: Unity.Reflect.Model
    commentId: T:Unity.Reflect.Model.SyncFloat4
  Unity.Reflect.Model.SyncFloat4.Zero*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncFloat4.Zero*
        name: Zero
        nameWithType: SyncFloat4.Zero
        qualifiedName: Unity.Reflect.Model.SyncFloat4.Zero
      VB:
      - id: Unity.Reflect.Model.SyncFloat4.Zero*
        name: Zero
        nameWithType: SyncFloat4.Zero
        qualifiedName: Unity.Reflect.Model.SyncFloat4.Zero
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncFloat4.Zero
  Unity.Reflect.Model.SyncFloat4.One*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncFloat4.One*
        name: One
        nameWithType: SyncFloat4.One
        qualifiedName: Unity.Reflect.Model.SyncFloat4.One
      VB:
      - id: Unity.Reflect.Model.SyncFloat4.One*
        name: One
        nameWithType: SyncFloat4.One
        qualifiedName: Unity.Reflect.Model.SyncFloat4.One
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncFloat4.One
  Unity.Reflect.Model.SyncFloat4.#ctor*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncFloat4.#ctor*
        name: SyncFloat4
        nameWithType: SyncFloat4.SyncFloat4
        qualifiedName: Unity.Reflect.Model.SyncFloat4.SyncFloat4
      VB:
      - id: Unity.Reflect.Model.SyncFloat4.#ctor*
        name: SyncFloat4
        nameWithType: SyncFloat4.SyncFloat4
        qualifiedName: Unity.Reflect.Model.SyncFloat4.SyncFloat4
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncFloat4.#ctor
  Unity.Reflect.Model.SyncFloat4.Dot*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncFloat4.Dot*
        name: Dot
        nameWithType: SyncFloat4.Dot
        qualifiedName: Unity.Reflect.Model.SyncFloat4.Dot
      VB:
      - id: Unity.Reflect.Model.SyncFloat4.Dot*
        name: Dot
        nameWithType: SyncFloat4.Dot
        qualifiedName: Unity.Reflect.Model.SyncFloat4.Dot
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncFloat4.Dot
  Unity.Reflect.Model.SyncFloat4.op_Equality*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncFloat4.op_Equality*
        name: Equality
        nameWithType: SyncFloat4.Equality
        qualifiedName: Unity.Reflect.Model.SyncFloat4.Equality
      VB:
      - id: Unity.Reflect.Model.SyncFloat4.op_Equality*
        name: Equality
        nameWithType: SyncFloat4.Equality
        qualifiedName: Unity.Reflect.Model.SyncFloat4.Equality
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncFloat4.op_Equality
  Unity.Reflect.Model.SyncFloat4.op_Inequality*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncFloat4.op_Inequality*
        name: Inequality
        nameWithType: SyncFloat4.Inequality
        qualifiedName: Unity.Reflect.Model.SyncFloat4.Inequality
      VB:
      - id: Unity.Reflect.Model.SyncFloat4.op_Inequality*
        name: Inequality
        nameWithType: SyncFloat4.Inequality
        qualifiedName: Unity.Reflect.Model.SyncFloat4.Inequality
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncFloat4.op_Inequality
  Unity.Reflect.Model.SyncFloat3:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncFloat3
        name: SyncFloat3
        nameWithType: SyncFloat3
        qualifiedName: Unity.Reflect.Model.SyncFloat3
      VB:
      - id: Unity.Reflect.Model.SyncFloat3
        name: SyncFloat3
        nameWithType: SyncFloat3
        qualifiedName: Unity.Reflect.Model.SyncFloat3
    isDefinition: true
    parent: Unity.Reflect.Model
    commentId: T:Unity.Reflect.Model.SyncFloat3
  Unity.Reflect.Model.SyncFloat4.op_Explicit*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncFloat4.op_Explicit*
        name: Explicit
        nameWithType: SyncFloat4.Explicit
        qualifiedName: Unity.Reflect.Model.SyncFloat4.Explicit
      VB:
      - id: Unity.Reflect.Model.SyncFloat4.op_Explicit*
        name: Narrowing
        nameWithType: SyncFloat4.Narrowing
        qualifiedName: Unity.Reflect.Model.SyncFloat4.Narrowing
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncFloat4.op_Explicit
  Unity.Reflect.Model.SyncFloat4.Length*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncFloat4.Length*
        name: Length
        nameWithType: SyncFloat4.Length
        qualifiedName: Unity.Reflect.Model.SyncFloat4.Length
      VB:
      - id: Unity.Reflect.Model.SyncFloat4.Length*
        name: Length
        nameWithType: SyncFloat4.Length
        qualifiedName: Unity.Reflect.Model.SyncFloat4.Length
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncFloat4.Length
  Unity.Reflect.Model.SyncFloat4.op_Addition*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncFloat4.op_Addition*
        name: Addition
        nameWithType: SyncFloat4.Addition
        qualifiedName: Unity.Reflect.Model.SyncFloat4.Addition
      VB:
      - id: Unity.Reflect.Model.SyncFloat4.op_Addition*
        name: Addition
        nameWithType: SyncFloat4.Addition
        qualifiedName: Unity.Reflect.Model.SyncFloat4.Addition
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncFloat4.op_Addition
  Unity.Reflect.Model.SyncFloat4.op_Subtraction*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncFloat4.op_Subtraction*
        name: Subtraction
        nameWithType: SyncFloat4.Subtraction
        qualifiedName: Unity.Reflect.Model.SyncFloat4.Subtraction
      VB:
      - id: Unity.Reflect.Model.SyncFloat4.op_Subtraction*
        name: Subtraction
        nameWithType: SyncFloat4.Subtraction
        qualifiedName: Unity.Reflect.Model.SyncFloat4.Subtraction
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncFloat4.op_Subtraction
  Unity.Reflect.Model.SyncFloat4.op_Multiply*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncFloat4.op_Multiply*
        name: Multiply
        nameWithType: SyncFloat4.Multiply
        qualifiedName: Unity.Reflect.Model.SyncFloat4.Multiply
      VB:
      - id: Unity.Reflect.Model.SyncFloat4.op_Multiply*
        name: Multiply
        nameWithType: SyncFloat4.Multiply
        qualifiedName: Unity.Reflect.Model.SyncFloat4.Multiply
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncFloat4.op_Multiply
  Unity.Reflect.Model.SyncFloat4.op_Division*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncFloat4.op_Division*
        name: Division
        nameWithType: SyncFloat4.Division
        qualifiedName: Unity.Reflect.Model.SyncFloat4.Division
      VB:
      - id: Unity.Reflect.Model.SyncFloat4.op_Division*
        name: Division
        nameWithType: SyncFloat4.Division
        qualifiedName: Unity.Reflect.Model.SyncFloat4.Division
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncFloat4.op_Division
  pb.MessageParser{Unity.Reflect.Model.SyncFloat4}:
    name:
      CSharp:
      - id: pb.MessageParser`1
        name: pb.MessageParser
        nameWithType: pb.MessageParser
        qualifiedName: pb.MessageParser
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Unity.Reflect.Model.SyncFloat4
        name: SyncFloat4
        nameWithType: SyncFloat4
        qualifiedName: Unity.Reflect.Model.SyncFloat4
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: pb.MessageParser`1
        name: pb.MessageParser
        nameWithType: pb.MessageParser
        qualifiedName: pb.MessageParser
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Unity.Reflect.Model.SyncFloat4
        name: SyncFloat4
        nameWithType: SyncFloat4
        qualifiedName: Unity.Reflect.Model.SyncFloat4
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: pb.MessageParser`1
    commentId: '!:pb.MessageParser{Unity.Reflect.Model.SyncFloat4}'
  Unity.Reflect.Model.SyncFloat4.Parser*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncFloat4.Parser*
        name: Parser
        nameWithType: SyncFloat4.Parser
        qualifiedName: Unity.Reflect.Model.SyncFloat4.Parser
      VB:
      - id: Unity.Reflect.Model.SyncFloat4.Parser*
        name: Parser
        nameWithType: SyncFloat4.Parser
        qualifiedName: Unity.Reflect.Model.SyncFloat4.Parser
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncFloat4.Parser
  Unity.Reflect.Model.SyncFloat4.Descriptor*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncFloat4.Descriptor*
        name: Descriptor
        nameWithType: SyncFloat4.Descriptor
        qualifiedName: Unity.Reflect.Model.SyncFloat4.Descriptor
      VB:
      - id: Unity.Reflect.Model.SyncFloat4.Descriptor*
        name: Descriptor
        nameWithType: SyncFloat4.Descriptor
        qualifiedName: Unity.Reflect.Model.SyncFloat4.Descriptor
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncFloat4.Descriptor
  Unity.Reflect.Model.SyncFloat4.Clone*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncFloat4.Clone*
        name: Clone
        nameWithType: SyncFloat4.Clone
        qualifiedName: Unity.Reflect.Model.SyncFloat4.Clone
      VB:
      - id: Unity.Reflect.Model.SyncFloat4.Clone*
        name: Clone
        nameWithType: SyncFloat4.Clone
        qualifiedName: Unity.Reflect.Model.SyncFloat4.Clone
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncFloat4.Clone
  Unity.Reflect.Model.SyncFloat4.X*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncFloat4.X*
        name: X
        nameWithType: SyncFloat4.X
        qualifiedName: Unity.Reflect.Model.SyncFloat4.X
      VB:
      - id: Unity.Reflect.Model.SyncFloat4.X*
        name: X
        nameWithType: SyncFloat4.X
        qualifiedName: Unity.Reflect.Model.SyncFloat4.X
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncFloat4.X
  Unity.Reflect.Model.SyncFloat4.Y*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncFloat4.Y*
        name: Y
        nameWithType: SyncFloat4.Y
        qualifiedName: Unity.Reflect.Model.SyncFloat4.Y
      VB:
      - id: Unity.Reflect.Model.SyncFloat4.Y*
        name: Y
        nameWithType: SyncFloat4.Y
        qualifiedName: Unity.Reflect.Model.SyncFloat4.Y
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncFloat4.Y
  Unity.Reflect.Model.SyncFloat4.Z*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncFloat4.Z*
        name: Z
        nameWithType: SyncFloat4.Z
        qualifiedName: Unity.Reflect.Model.SyncFloat4.Z
      VB:
      - id: Unity.Reflect.Model.SyncFloat4.Z*
        name: Z
        nameWithType: SyncFloat4.Z
        qualifiedName: Unity.Reflect.Model.SyncFloat4.Z
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncFloat4.Z
  Unity.Reflect.Model.SyncFloat4.W*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncFloat4.W*
        name: W
        nameWithType: SyncFloat4.W
        qualifiedName: Unity.Reflect.Model.SyncFloat4.W
      VB:
      - id: Unity.Reflect.Model.SyncFloat4.W*
        name: W
        nameWithType: SyncFloat4.W
        qualifiedName: Unity.Reflect.Model.SyncFloat4.W
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncFloat4.W
  Unity.Reflect.Model.SyncFloat4.Equals*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncFloat4.Equals*
        name: Equals
        nameWithType: SyncFloat4.Equals
        qualifiedName: Unity.Reflect.Model.SyncFloat4.Equals
      VB:
      - id: Unity.Reflect.Model.SyncFloat4.Equals*
        name: Equals
        nameWithType: SyncFloat4.Equals
        qualifiedName: Unity.Reflect.Model.SyncFloat4.Equals
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncFloat4.Equals
  Unity.Reflect.Model.SyncFloat4.GetHashCode*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncFloat4.GetHashCode*
        name: GetHashCode
        nameWithType: SyncFloat4.GetHashCode
        qualifiedName: Unity.Reflect.Model.SyncFloat4.GetHashCode
      VB:
      - id: Unity.Reflect.Model.SyncFloat4.GetHashCode*
        name: GetHashCode
        nameWithType: SyncFloat4.GetHashCode
        qualifiedName: Unity.Reflect.Model.SyncFloat4.GetHashCode
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncFloat4.GetHashCode
  Unity.Reflect.Model.SyncFloat4.ToString*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncFloat4.ToString*
        name: ToString
        nameWithType: SyncFloat4.ToString
        qualifiedName: Unity.Reflect.Model.SyncFloat4.ToString
      VB:
      - id: Unity.Reflect.Model.SyncFloat4.ToString*
        name: ToString
        nameWithType: SyncFloat4.ToString
        qualifiedName: Unity.Reflect.Model.SyncFloat4.ToString
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncFloat4.ToString
  Unity.Reflect.Model.SyncFloat4.WriteTo*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncFloat4.WriteTo*
        name: WriteTo
        nameWithType: SyncFloat4.WriteTo
        qualifiedName: Unity.Reflect.Model.SyncFloat4.WriteTo
      VB:
      - id: Unity.Reflect.Model.SyncFloat4.WriteTo*
        name: WriteTo
        nameWithType: SyncFloat4.WriteTo
        qualifiedName: Unity.Reflect.Model.SyncFloat4.WriteTo
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncFloat4.WriteTo
  Unity.Reflect.Model.SyncFloat4.CalculateSize*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncFloat4.CalculateSize*
        name: CalculateSize
        nameWithType: SyncFloat4.CalculateSize
        qualifiedName: Unity.Reflect.Model.SyncFloat4.CalculateSize
      VB:
      - id: Unity.Reflect.Model.SyncFloat4.CalculateSize*
        name: CalculateSize
        nameWithType: SyncFloat4.CalculateSize
        qualifiedName: Unity.Reflect.Model.SyncFloat4.CalculateSize
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncFloat4.CalculateSize
  Unity.Reflect.Model.SyncFloat4.MergeFrom*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncFloat4.MergeFrom*
        name: MergeFrom
        nameWithType: SyncFloat4.MergeFrom
        qualifiedName: Unity.Reflect.Model.SyncFloat4.MergeFrom
      VB:
      - id: Unity.Reflect.Model.SyncFloat4.MergeFrom*
        name: MergeFrom
        nameWithType: SyncFloat4.MergeFrom
        qualifiedName: Unity.Reflect.Model.SyncFloat4.MergeFrom
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncFloat4.MergeFrom
  Unity.Reflect.Model.SyncFloat3.Zero*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncFloat3.Zero*
        name: Zero
        nameWithType: SyncFloat3.Zero
        qualifiedName: Unity.Reflect.Model.SyncFloat3.Zero
      VB:
      - id: Unity.Reflect.Model.SyncFloat3.Zero*
        name: Zero
        nameWithType: SyncFloat3.Zero
        qualifiedName: Unity.Reflect.Model.SyncFloat3.Zero
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncFloat3.Zero
  Unity.Reflect.Model.SyncFloat3.One*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncFloat3.One*
        name: One
        nameWithType: SyncFloat3.One
        qualifiedName: Unity.Reflect.Model.SyncFloat3.One
      VB:
      - id: Unity.Reflect.Model.SyncFloat3.One*
        name: One
        nameWithType: SyncFloat3.One
        qualifiedName: Unity.Reflect.Model.SyncFloat3.One
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncFloat3.One
  Unity.Reflect.Model.SyncFloat3.#ctor*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncFloat3.#ctor*
        name: SyncFloat3
        nameWithType: SyncFloat3.SyncFloat3
        qualifiedName: Unity.Reflect.Model.SyncFloat3.SyncFloat3
      VB:
      - id: Unity.Reflect.Model.SyncFloat3.#ctor*
        name: SyncFloat3
        nameWithType: SyncFloat3.SyncFloat3
        qualifiedName: Unity.Reflect.Model.SyncFloat3.SyncFloat3
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncFloat3.#ctor
  Unity.Reflect.Model.SyncFloat3.op_Addition*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncFloat3.op_Addition*
        name: Addition
        nameWithType: SyncFloat3.Addition
        qualifiedName: Unity.Reflect.Model.SyncFloat3.Addition
      VB:
      - id: Unity.Reflect.Model.SyncFloat3.op_Addition*
        name: Addition
        nameWithType: SyncFloat3.Addition
        qualifiedName: Unity.Reflect.Model.SyncFloat3.Addition
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncFloat3.op_Addition
  Unity.Reflect.Model.SyncFloat3.op_Subtraction*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncFloat3.op_Subtraction*
        name: Subtraction
        nameWithType: SyncFloat3.Subtraction
        qualifiedName: Unity.Reflect.Model.SyncFloat3.Subtraction
      VB:
      - id: Unity.Reflect.Model.SyncFloat3.op_Subtraction*
        name: Subtraction
        nameWithType: SyncFloat3.Subtraction
        qualifiedName: Unity.Reflect.Model.SyncFloat3.Subtraction
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncFloat3.op_Subtraction
  Unity.Reflect.Model.SyncFloat3.op_Multiply*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncFloat3.op_Multiply*
        name: Multiply
        nameWithType: SyncFloat3.Multiply
        qualifiedName: Unity.Reflect.Model.SyncFloat3.Multiply
      VB:
      - id: Unity.Reflect.Model.SyncFloat3.op_Multiply*
        name: Multiply
        nameWithType: SyncFloat3.Multiply
        qualifiedName: Unity.Reflect.Model.SyncFloat3.Multiply
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncFloat3.op_Multiply
  Unity.Reflect.Model.SyncFloat3.op_Division*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncFloat3.op_Division*
        name: Division
        nameWithType: SyncFloat3.Division
        qualifiedName: Unity.Reflect.Model.SyncFloat3.Division
      VB:
      - id: Unity.Reflect.Model.SyncFloat3.op_Division*
        name: Division
        nameWithType: SyncFloat3.Division
        qualifiedName: Unity.Reflect.Model.SyncFloat3.Division
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncFloat3.op_Division
  Unity.Reflect.Model.SyncFloat3.Dot*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncFloat3.Dot*
        name: Dot
        nameWithType: SyncFloat3.Dot
        qualifiedName: Unity.Reflect.Model.SyncFloat3.Dot
      VB:
      - id: Unity.Reflect.Model.SyncFloat3.Dot*
        name: Dot
        nameWithType: SyncFloat3.Dot
        qualifiedName: Unity.Reflect.Model.SyncFloat3.Dot
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncFloat3.Dot
  Unity.Reflect.Model.SyncFloat3.Cross*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncFloat3.Cross*
        name: Cross
        nameWithType: SyncFloat3.Cross
        qualifiedName: Unity.Reflect.Model.SyncFloat3.Cross
      VB:
      - id: Unity.Reflect.Model.SyncFloat3.Cross*
        name: Cross
        nameWithType: SyncFloat3.Cross
        qualifiedName: Unity.Reflect.Model.SyncFloat3.Cross
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncFloat3.Cross
  Unity.Reflect.Model.SyncFloat3.FlipYZ*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncFloat3.FlipYZ*
        name: FlipYZ
        nameWithType: SyncFloat3.FlipYZ
        qualifiedName: Unity.Reflect.Model.SyncFloat3.FlipYZ
      VB:
      - id: Unity.Reflect.Model.SyncFloat3.FlipYZ*
        name: FlipYZ
        nameWithType: SyncFloat3.FlipYZ
        qualifiedName: Unity.Reflect.Model.SyncFloat3.FlipYZ
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncFloat3.FlipYZ
  Unity.Reflect.Model.SyncFloat3.op_Equality*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncFloat3.op_Equality*
        name: Equality
        nameWithType: SyncFloat3.Equality
        qualifiedName: Unity.Reflect.Model.SyncFloat3.Equality
      VB:
      - id: Unity.Reflect.Model.SyncFloat3.op_Equality*
        name: Equality
        nameWithType: SyncFloat3.Equality
        qualifiedName: Unity.Reflect.Model.SyncFloat3.Equality
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncFloat3.op_Equality
  Unity.Reflect.Model.SyncFloat3.op_Inequality*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncFloat3.op_Inequality*
        name: Inequality
        nameWithType: SyncFloat3.Inequality
        qualifiedName: Unity.Reflect.Model.SyncFloat3.Inequality
      VB:
      - id: Unity.Reflect.Model.SyncFloat3.op_Inequality*
        name: Inequality
        nameWithType: SyncFloat3.Inequality
        qualifiedName: Unity.Reflect.Model.SyncFloat3.Inequality
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncFloat3.op_Inequality
  pb.MessageParser{Unity.Reflect.Model.SyncFloat3}:
    name:
      CSharp:
      - id: pb.MessageParser`1
        name: pb.MessageParser
        nameWithType: pb.MessageParser
        qualifiedName: pb.MessageParser
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Unity.Reflect.Model.SyncFloat3
        name: SyncFloat3
        nameWithType: SyncFloat3
        qualifiedName: Unity.Reflect.Model.SyncFloat3
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: pb.MessageParser`1
        name: pb.MessageParser
        nameWithType: pb.MessageParser
        qualifiedName: pb.MessageParser
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Unity.Reflect.Model.SyncFloat3
        name: SyncFloat3
        nameWithType: SyncFloat3
        qualifiedName: Unity.Reflect.Model.SyncFloat3
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: pb.MessageParser`1
    commentId: '!:pb.MessageParser{Unity.Reflect.Model.SyncFloat3}'
  Unity.Reflect.Model.SyncFloat3.Parser*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncFloat3.Parser*
        name: Parser
        nameWithType: SyncFloat3.Parser
        qualifiedName: Unity.Reflect.Model.SyncFloat3.Parser
      VB:
      - id: Unity.Reflect.Model.SyncFloat3.Parser*
        name: Parser
        nameWithType: SyncFloat3.Parser
        qualifiedName: Unity.Reflect.Model.SyncFloat3.Parser
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncFloat3.Parser
  Unity.Reflect.Model.SyncFloat3.Descriptor*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncFloat3.Descriptor*
        name: Descriptor
        nameWithType: SyncFloat3.Descriptor
        qualifiedName: Unity.Reflect.Model.SyncFloat3.Descriptor
      VB:
      - id: Unity.Reflect.Model.SyncFloat3.Descriptor*
        name: Descriptor
        nameWithType: SyncFloat3.Descriptor
        qualifiedName: Unity.Reflect.Model.SyncFloat3.Descriptor
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncFloat3.Descriptor
  Unity.Reflect.Model.SyncFloat3.Clone*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncFloat3.Clone*
        name: Clone
        nameWithType: SyncFloat3.Clone
        qualifiedName: Unity.Reflect.Model.SyncFloat3.Clone
      VB:
      - id: Unity.Reflect.Model.SyncFloat3.Clone*
        name: Clone
        nameWithType: SyncFloat3.Clone
        qualifiedName: Unity.Reflect.Model.SyncFloat3.Clone
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncFloat3.Clone
  Unity.Reflect.Model.SyncFloat3.X*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncFloat3.X*
        name: X
        nameWithType: SyncFloat3.X
        qualifiedName: Unity.Reflect.Model.SyncFloat3.X
      VB:
      - id: Unity.Reflect.Model.SyncFloat3.X*
        name: X
        nameWithType: SyncFloat3.X
        qualifiedName: Unity.Reflect.Model.SyncFloat3.X
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncFloat3.X
  Unity.Reflect.Model.SyncFloat3.Y*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncFloat3.Y*
        name: Y
        nameWithType: SyncFloat3.Y
        qualifiedName: Unity.Reflect.Model.SyncFloat3.Y
      VB:
      - id: Unity.Reflect.Model.SyncFloat3.Y*
        name: Y
        nameWithType: SyncFloat3.Y
        qualifiedName: Unity.Reflect.Model.SyncFloat3.Y
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncFloat3.Y
  Unity.Reflect.Model.SyncFloat3.Z*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncFloat3.Z*
        name: Z
        nameWithType: SyncFloat3.Z
        qualifiedName: Unity.Reflect.Model.SyncFloat3.Z
      VB:
      - id: Unity.Reflect.Model.SyncFloat3.Z*
        name: Z
        nameWithType: SyncFloat3.Z
        qualifiedName: Unity.Reflect.Model.SyncFloat3.Z
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncFloat3.Z
  Unity.Reflect.Model.SyncFloat3.Equals*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncFloat3.Equals*
        name: Equals
        nameWithType: SyncFloat3.Equals
        qualifiedName: Unity.Reflect.Model.SyncFloat3.Equals
      VB:
      - id: Unity.Reflect.Model.SyncFloat3.Equals*
        name: Equals
        nameWithType: SyncFloat3.Equals
        qualifiedName: Unity.Reflect.Model.SyncFloat3.Equals
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncFloat3.Equals
  Unity.Reflect.Model.SyncFloat3.GetHashCode*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncFloat3.GetHashCode*
        name: GetHashCode
        nameWithType: SyncFloat3.GetHashCode
        qualifiedName: Unity.Reflect.Model.SyncFloat3.GetHashCode
      VB:
      - id: Unity.Reflect.Model.SyncFloat3.GetHashCode*
        name: GetHashCode
        nameWithType: SyncFloat3.GetHashCode
        qualifiedName: Unity.Reflect.Model.SyncFloat3.GetHashCode
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncFloat3.GetHashCode
  Unity.Reflect.Model.SyncFloat3.ToString*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncFloat3.ToString*
        name: ToString
        nameWithType: SyncFloat3.ToString
        qualifiedName: Unity.Reflect.Model.SyncFloat3.ToString
      VB:
      - id: Unity.Reflect.Model.SyncFloat3.ToString*
        name: ToString
        nameWithType: SyncFloat3.ToString
        qualifiedName: Unity.Reflect.Model.SyncFloat3.ToString
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncFloat3.ToString
  Unity.Reflect.Model.SyncFloat3.WriteTo*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncFloat3.WriteTo*
        name: WriteTo
        nameWithType: SyncFloat3.WriteTo
        qualifiedName: Unity.Reflect.Model.SyncFloat3.WriteTo
      VB:
      - id: Unity.Reflect.Model.SyncFloat3.WriteTo*
        name: WriteTo
        nameWithType: SyncFloat3.WriteTo
        qualifiedName: Unity.Reflect.Model.SyncFloat3.WriteTo
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncFloat3.WriteTo
  Unity.Reflect.Model.SyncFloat3.CalculateSize*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncFloat3.CalculateSize*
        name: CalculateSize
        nameWithType: SyncFloat3.CalculateSize
        qualifiedName: Unity.Reflect.Model.SyncFloat3.CalculateSize
      VB:
      - id: Unity.Reflect.Model.SyncFloat3.CalculateSize*
        name: CalculateSize
        nameWithType: SyncFloat3.CalculateSize
        qualifiedName: Unity.Reflect.Model.SyncFloat3.CalculateSize
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncFloat3.CalculateSize
  Unity.Reflect.Model.SyncFloat3.MergeFrom*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncFloat3.MergeFrom*
        name: MergeFrom
        nameWithType: SyncFloat3.MergeFrom
        qualifiedName: Unity.Reflect.Model.SyncFloat3.MergeFrom
      VB:
      - id: Unity.Reflect.Model.SyncFloat3.MergeFrom*
        name: MergeFrom
        nameWithType: SyncFloat3.MergeFrom
        qualifiedName: Unity.Reflect.Model.SyncFloat3.MergeFrom
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncFloat3.MergeFrom
  Unity.Reflect.Model.SyncFloat2.Zero*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncFloat2.Zero*
        name: Zero
        nameWithType: SyncFloat2.Zero
        qualifiedName: Unity.Reflect.Model.SyncFloat2.Zero
      VB:
      - id: Unity.Reflect.Model.SyncFloat2.Zero*
        name: Zero
        nameWithType: SyncFloat2.Zero
        qualifiedName: Unity.Reflect.Model.SyncFloat2.Zero
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncFloat2.Zero
  Unity.Reflect.Model.SyncFloat2.One*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncFloat2.One*
        name: One
        nameWithType: SyncFloat2.One
        qualifiedName: Unity.Reflect.Model.SyncFloat2.One
      VB:
      - id: Unity.Reflect.Model.SyncFloat2.One*
        name: One
        nameWithType: SyncFloat2.One
        qualifiedName: Unity.Reflect.Model.SyncFloat2.One
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncFloat2.One
  Unity.Reflect.Model.SyncFloat2.op_Addition*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncFloat2.op_Addition*
        name: Addition
        nameWithType: SyncFloat2.Addition
        qualifiedName: Unity.Reflect.Model.SyncFloat2.Addition
      VB:
      - id: Unity.Reflect.Model.SyncFloat2.op_Addition*
        name: Addition
        nameWithType: SyncFloat2.Addition
        qualifiedName: Unity.Reflect.Model.SyncFloat2.Addition
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncFloat2.op_Addition
  Unity.Reflect.Model.SyncFloat2.op_Subtraction*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncFloat2.op_Subtraction*
        name: Subtraction
        nameWithType: SyncFloat2.Subtraction
        qualifiedName: Unity.Reflect.Model.SyncFloat2.Subtraction
      VB:
      - id: Unity.Reflect.Model.SyncFloat2.op_Subtraction*
        name: Subtraction
        nameWithType: SyncFloat2.Subtraction
        qualifiedName: Unity.Reflect.Model.SyncFloat2.Subtraction
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncFloat2.op_Subtraction
  Unity.Reflect.Model.SyncFloat2.op_Multiply*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncFloat2.op_Multiply*
        name: Multiply
        nameWithType: SyncFloat2.Multiply
        qualifiedName: Unity.Reflect.Model.SyncFloat2.Multiply
      VB:
      - id: Unity.Reflect.Model.SyncFloat2.op_Multiply*
        name: Multiply
        nameWithType: SyncFloat2.Multiply
        qualifiedName: Unity.Reflect.Model.SyncFloat2.Multiply
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncFloat2.op_Multiply
  Unity.Reflect.Model.SyncFloat2.op_Division*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncFloat2.op_Division*
        name: Division
        nameWithType: SyncFloat2.Division
        qualifiedName: Unity.Reflect.Model.SyncFloat2.Division
      VB:
      - id: Unity.Reflect.Model.SyncFloat2.op_Division*
        name: Division
        nameWithType: SyncFloat2.Division
        qualifiedName: Unity.Reflect.Model.SyncFloat2.Division
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncFloat2.op_Division
  Unity.Reflect.Model.SyncFloat2.Dot*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncFloat2.Dot*
        name: Dot
        nameWithType: SyncFloat2.Dot
        qualifiedName: Unity.Reflect.Model.SyncFloat2.Dot
      VB:
      - id: Unity.Reflect.Model.SyncFloat2.Dot*
        name: Dot
        nameWithType: SyncFloat2.Dot
        qualifiedName: Unity.Reflect.Model.SyncFloat2.Dot
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncFloat2.Dot
  Unity.Reflect.Model.SyncFloat2.#ctor*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncFloat2.#ctor*
        name: SyncFloat2
        nameWithType: SyncFloat2.SyncFloat2
        qualifiedName: Unity.Reflect.Model.SyncFloat2.SyncFloat2
      VB:
      - id: Unity.Reflect.Model.SyncFloat2.#ctor*
        name: SyncFloat2
        nameWithType: SyncFloat2.SyncFloat2
        qualifiedName: Unity.Reflect.Model.SyncFloat2.SyncFloat2
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncFloat2.#ctor
  Unity.Reflect.Model.SyncFloat2.op_Equality*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncFloat2.op_Equality*
        name: Equality
        nameWithType: SyncFloat2.Equality
        qualifiedName: Unity.Reflect.Model.SyncFloat2.Equality
      VB:
      - id: Unity.Reflect.Model.SyncFloat2.op_Equality*
        name: Equality
        nameWithType: SyncFloat2.Equality
        qualifiedName: Unity.Reflect.Model.SyncFloat2.Equality
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncFloat2.op_Equality
  Unity.Reflect.Model.SyncFloat2.op_Inequality*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncFloat2.op_Inequality*
        name: Inequality
        nameWithType: SyncFloat2.Inequality
        qualifiedName: Unity.Reflect.Model.SyncFloat2.Inequality
      VB:
      - id: Unity.Reflect.Model.SyncFloat2.op_Inequality*
        name: Inequality
        nameWithType: SyncFloat2.Inequality
        qualifiedName: Unity.Reflect.Model.SyncFloat2.Inequality
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncFloat2.op_Inequality
  pb.MessageParser{Unity.Reflect.Model.SyncFloat2}:
    name:
      CSharp:
      - id: pb.MessageParser`1
        name: pb.MessageParser
        nameWithType: pb.MessageParser
        qualifiedName: pb.MessageParser
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Unity.Reflect.Model.SyncFloat2
        name: SyncFloat2
        nameWithType: SyncFloat2
        qualifiedName: Unity.Reflect.Model.SyncFloat2
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: pb.MessageParser`1
        name: pb.MessageParser
        nameWithType: pb.MessageParser
        qualifiedName: pb.MessageParser
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Unity.Reflect.Model.SyncFloat2
        name: SyncFloat2
        nameWithType: SyncFloat2
        qualifiedName: Unity.Reflect.Model.SyncFloat2
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: pb.MessageParser`1
    commentId: '!:pb.MessageParser{Unity.Reflect.Model.SyncFloat2}'
  Unity.Reflect.Model.SyncFloat2.Parser*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncFloat2.Parser*
        name: Parser
        nameWithType: SyncFloat2.Parser
        qualifiedName: Unity.Reflect.Model.SyncFloat2.Parser
      VB:
      - id: Unity.Reflect.Model.SyncFloat2.Parser*
        name: Parser
        nameWithType: SyncFloat2.Parser
        qualifiedName: Unity.Reflect.Model.SyncFloat2.Parser
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncFloat2.Parser
  Unity.Reflect.Model.SyncFloat2.Descriptor*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncFloat2.Descriptor*
        name: Descriptor
        nameWithType: SyncFloat2.Descriptor
        qualifiedName: Unity.Reflect.Model.SyncFloat2.Descriptor
      VB:
      - id: Unity.Reflect.Model.SyncFloat2.Descriptor*
        name: Descriptor
        nameWithType: SyncFloat2.Descriptor
        qualifiedName: Unity.Reflect.Model.SyncFloat2.Descriptor
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncFloat2.Descriptor
  Unity.Reflect.Model.SyncFloat2.Clone*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncFloat2.Clone*
        name: Clone
        nameWithType: SyncFloat2.Clone
        qualifiedName: Unity.Reflect.Model.SyncFloat2.Clone
      VB:
      - id: Unity.Reflect.Model.SyncFloat2.Clone*
        name: Clone
        nameWithType: SyncFloat2.Clone
        qualifiedName: Unity.Reflect.Model.SyncFloat2.Clone
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncFloat2.Clone
  Unity.Reflect.Model.SyncFloat2.X*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncFloat2.X*
        name: X
        nameWithType: SyncFloat2.X
        qualifiedName: Unity.Reflect.Model.SyncFloat2.X
      VB:
      - id: Unity.Reflect.Model.SyncFloat2.X*
        name: X
        nameWithType: SyncFloat2.X
        qualifiedName: Unity.Reflect.Model.SyncFloat2.X
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncFloat2.X
  Unity.Reflect.Model.SyncFloat2.Y*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncFloat2.Y*
        name: Y
        nameWithType: SyncFloat2.Y
        qualifiedName: Unity.Reflect.Model.SyncFloat2.Y
      VB:
      - id: Unity.Reflect.Model.SyncFloat2.Y*
        name: Y
        nameWithType: SyncFloat2.Y
        qualifiedName: Unity.Reflect.Model.SyncFloat2.Y
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncFloat2.Y
  Unity.Reflect.Model.SyncFloat2.Equals*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncFloat2.Equals*
        name: Equals
        nameWithType: SyncFloat2.Equals
        qualifiedName: Unity.Reflect.Model.SyncFloat2.Equals
      VB:
      - id: Unity.Reflect.Model.SyncFloat2.Equals*
        name: Equals
        nameWithType: SyncFloat2.Equals
        qualifiedName: Unity.Reflect.Model.SyncFloat2.Equals
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncFloat2.Equals
  Unity.Reflect.Model.SyncFloat2.GetHashCode*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncFloat2.GetHashCode*
        name: GetHashCode
        nameWithType: SyncFloat2.GetHashCode
        qualifiedName: Unity.Reflect.Model.SyncFloat2.GetHashCode
      VB:
      - id: Unity.Reflect.Model.SyncFloat2.GetHashCode*
        name: GetHashCode
        nameWithType: SyncFloat2.GetHashCode
        qualifiedName: Unity.Reflect.Model.SyncFloat2.GetHashCode
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncFloat2.GetHashCode
  Unity.Reflect.Model.SyncFloat2.ToString*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncFloat2.ToString*
        name: ToString
        nameWithType: SyncFloat2.ToString
        qualifiedName: Unity.Reflect.Model.SyncFloat2.ToString
      VB:
      - id: Unity.Reflect.Model.SyncFloat2.ToString*
        name: ToString
        nameWithType: SyncFloat2.ToString
        qualifiedName: Unity.Reflect.Model.SyncFloat2.ToString
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncFloat2.ToString
  Unity.Reflect.Model.SyncFloat2.WriteTo*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncFloat2.WriteTo*
        name: WriteTo
        nameWithType: SyncFloat2.WriteTo
        qualifiedName: Unity.Reflect.Model.SyncFloat2.WriteTo
      VB:
      - id: Unity.Reflect.Model.SyncFloat2.WriteTo*
        name: WriteTo
        nameWithType: SyncFloat2.WriteTo
        qualifiedName: Unity.Reflect.Model.SyncFloat2.WriteTo
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncFloat2.WriteTo
  Unity.Reflect.Model.SyncFloat2.CalculateSize*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncFloat2.CalculateSize*
        name: CalculateSize
        nameWithType: SyncFloat2.CalculateSize
        qualifiedName: Unity.Reflect.Model.SyncFloat2.CalculateSize
      VB:
      - id: Unity.Reflect.Model.SyncFloat2.CalculateSize*
        name: CalculateSize
        nameWithType: SyncFloat2.CalculateSize
        qualifiedName: Unity.Reflect.Model.SyncFloat2.CalculateSize
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncFloat2.CalculateSize
  Unity.Reflect.Model.SyncFloat2.MergeFrom*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncFloat2.MergeFrom*
        name: MergeFrom
        nameWithType: SyncFloat2.MergeFrom
        qualifiedName: Unity.Reflect.Model.SyncFloat2.MergeFrom
      VB:
      - id: Unity.Reflect.Model.SyncFloat2.MergeFrom*
        name: MergeFrom
        nameWithType: SyncFloat2.MergeFrom
        qualifiedName: Unity.Reflect.Model.SyncFloat2.MergeFrom
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncFloat2.MergeFrom
  Unity.Reflect.Model.SyncQuaternion:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncQuaternion
        name: SyncQuaternion
        nameWithType: SyncQuaternion
        qualifiedName: Unity.Reflect.Model.SyncQuaternion
      VB:
      - id: Unity.Reflect.Model.SyncQuaternion
        name: SyncQuaternion
        nameWithType: SyncQuaternion
        qualifiedName: Unity.Reflect.Model.SyncQuaternion
    isDefinition: true
    parent: Unity.Reflect.Model
    commentId: T:Unity.Reflect.Model.SyncQuaternion
  Unity.Reflect.Model.SyncQuaternion.Identity*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncQuaternion.Identity*
        name: Identity
        nameWithType: SyncQuaternion.Identity
        qualifiedName: Unity.Reflect.Model.SyncQuaternion.Identity
      VB:
      - id: Unity.Reflect.Model.SyncQuaternion.Identity*
        name: Identity
        nameWithType: SyncQuaternion.Identity
        qualifiedName: Unity.Reflect.Model.SyncQuaternion.Identity
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncQuaternion.Identity
  Unity.Reflect.Model.SyncQuaternion.RotateX*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncQuaternion.RotateX*
        name: RotateX
        nameWithType: SyncQuaternion.RotateX
        qualifiedName: Unity.Reflect.Model.SyncQuaternion.RotateX
      VB:
      - id: Unity.Reflect.Model.SyncQuaternion.RotateX*
        name: RotateX
        nameWithType: SyncQuaternion.RotateX
        qualifiedName: Unity.Reflect.Model.SyncQuaternion.RotateX
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncQuaternion.RotateX
  Unity.Reflect.Model.SyncQuaternion.#ctor*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncQuaternion.#ctor*
        name: SyncQuaternion
        nameWithType: SyncQuaternion.SyncQuaternion
        qualifiedName: Unity.Reflect.Model.SyncQuaternion.SyncQuaternion
      VB:
      - id: Unity.Reflect.Model.SyncQuaternion.#ctor*
        name: SyncQuaternion
        nameWithType: SyncQuaternion.SyncQuaternion
        qualifiedName: Unity.Reflect.Model.SyncQuaternion.SyncQuaternion
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncQuaternion.#ctor
  Unity.Reflect.Model.SyncQuaternion.op_Multiply*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncQuaternion.op_Multiply*
        name: Multiply
        nameWithType: SyncQuaternion.Multiply
        qualifiedName: Unity.Reflect.Model.SyncQuaternion.Multiply
      VB:
      - id: Unity.Reflect.Model.SyncQuaternion.op_Multiply*
        name: Multiply
        nameWithType: SyncQuaternion.Multiply
        qualifiedName: Unity.Reflect.Model.SyncQuaternion.Multiply
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncQuaternion.op_Multiply
  Unity.Reflect.Model.SyncQuaternion.Inverse*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncQuaternion.Inverse*
        name: Inverse
        nameWithType: SyncQuaternion.Inverse
        qualifiedName: Unity.Reflect.Model.SyncQuaternion.Inverse
      VB:
      - id: Unity.Reflect.Model.SyncQuaternion.Inverse*
        name: Inverse
        nameWithType: SyncQuaternion.Inverse
        qualifiedName: Unity.Reflect.Model.SyncQuaternion.Inverse
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncQuaternion.Inverse
  Unity.Reflect.Model.SyncQuaternion.Normalize*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncQuaternion.Normalize*
        name: Normalize
        nameWithType: SyncQuaternion.Normalize
        qualifiedName: Unity.Reflect.Model.SyncQuaternion.Normalize
      VB:
      - id: Unity.Reflect.Model.SyncQuaternion.Normalize*
        name: Normalize
        nameWithType: SyncQuaternion.Normalize
        qualifiedName: Unity.Reflect.Model.SyncQuaternion.Normalize
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncQuaternion.Normalize
  Unity.Reflect.Model.SyncQuaternion.Dot*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncQuaternion.Dot*
        name: Dot
        nameWithType: SyncQuaternion.Dot
        qualifiedName: Unity.Reflect.Model.SyncQuaternion.Dot
      VB:
      - id: Unity.Reflect.Model.SyncQuaternion.Dot*
        name: Dot
        nameWithType: SyncQuaternion.Dot
        qualifiedName: Unity.Reflect.Model.SyncQuaternion.Dot
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncQuaternion.Dot
  Unity.Reflect.Model.SyncQuaternion.op_Equality*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncQuaternion.op_Equality*
        name: Equality
        nameWithType: SyncQuaternion.Equality
        qualifiedName: Unity.Reflect.Model.SyncQuaternion.Equality
      VB:
      - id: Unity.Reflect.Model.SyncQuaternion.op_Equality*
        name: Equality
        nameWithType: SyncQuaternion.Equality
        qualifiedName: Unity.Reflect.Model.SyncQuaternion.Equality
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncQuaternion.op_Equality
  Unity.Reflect.Model.SyncQuaternion.op_Inequality*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncQuaternion.op_Inequality*
        name: Inequality
        nameWithType: SyncQuaternion.Inequality
        qualifiedName: Unity.Reflect.Model.SyncQuaternion.Inequality
      VB:
      - id: Unity.Reflect.Model.SyncQuaternion.op_Inequality*
        name: Inequality
        nameWithType: SyncQuaternion.Inequality
        qualifiedName: Unity.Reflect.Model.SyncQuaternion.Inequality
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncQuaternion.op_Inequality
  pb.MessageParser{Unity.Reflect.Model.SyncQuaternion}:
    name:
      CSharp:
      - id: pb.MessageParser`1
        name: pb.MessageParser
        nameWithType: pb.MessageParser
        qualifiedName: pb.MessageParser
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Unity.Reflect.Model.SyncQuaternion
        name: SyncQuaternion
        nameWithType: SyncQuaternion
        qualifiedName: Unity.Reflect.Model.SyncQuaternion
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: pb.MessageParser`1
        name: pb.MessageParser
        nameWithType: pb.MessageParser
        qualifiedName: pb.MessageParser
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Unity.Reflect.Model.SyncQuaternion
        name: SyncQuaternion
        nameWithType: SyncQuaternion
        qualifiedName: Unity.Reflect.Model.SyncQuaternion
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: pb.MessageParser`1
    commentId: '!:pb.MessageParser{Unity.Reflect.Model.SyncQuaternion}'
  Unity.Reflect.Model.SyncQuaternion.Parser*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncQuaternion.Parser*
        name: Parser
        nameWithType: SyncQuaternion.Parser
        qualifiedName: Unity.Reflect.Model.SyncQuaternion.Parser
      VB:
      - id: Unity.Reflect.Model.SyncQuaternion.Parser*
        name: Parser
        nameWithType: SyncQuaternion.Parser
        qualifiedName: Unity.Reflect.Model.SyncQuaternion.Parser
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncQuaternion.Parser
  Unity.Reflect.Model.SyncQuaternion.Descriptor*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncQuaternion.Descriptor*
        name: Descriptor
        nameWithType: SyncQuaternion.Descriptor
        qualifiedName: Unity.Reflect.Model.SyncQuaternion.Descriptor
      VB:
      - id: Unity.Reflect.Model.SyncQuaternion.Descriptor*
        name: Descriptor
        nameWithType: SyncQuaternion.Descriptor
        qualifiedName: Unity.Reflect.Model.SyncQuaternion.Descriptor
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncQuaternion.Descriptor
  Unity.Reflect.Model.SyncQuaternion.Clone*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncQuaternion.Clone*
        name: Clone
        nameWithType: SyncQuaternion.Clone
        qualifiedName: Unity.Reflect.Model.SyncQuaternion.Clone
      VB:
      - id: Unity.Reflect.Model.SyncQuaternion.Clone*
        name: Clone
        nameWithType: SyncQuaternion.Clone
        qualifiedName: Unity.Reflect.Model.SyncQuaternion.Clone
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncQuaternion.Clone
  Unity.Reflect.Model.SyncQuaternion.X*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncQuaternion.X*
        name: X
        nameWithType: SyncQuaternion.X
        qualifiedName: Unity.Reflect.Model.SyncQuaternion.X
      VB:
      - id: Unity.Reflect.Model.SyncQuaternion.X*
        name: X
        nameWithType: SyncQuaternion.X
        qualifiedName: Unity.Reflect.Model.SyncQuaternion.X
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncQuaternion.X
  Unity.Reflect.Model.SyncQuaternion.Y*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncQuaternion.Y*
        name: Y
        nameWithType: SyncQuaternion.Y
        qualifiedName: Unity.Reflect.Model.SyncQuaternion.Y
      VB:
      - id: Unity.Reflect.Model.SyncQuaternion.Y*
        name: Y
        nameWithType: SyncQuaternion.Y
        qualifiedName: Unity.Reflect.Model.SyncQuaternion.Y
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncQuaternion.Y
  Unity.Reflect.Model.SyncQuaternion.Z*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncQuaternion.Z*
        name: Z
        nameWithType: SyncQuaternion.Z
        qualifiedName: Unity.Reflect.Model.SyncQuaternion.Z
      VB:
      - id: Unity.Reflect.Model.SyncQuaternion.Z*
        name: Z
        nameWithType: SyncQuaternion.Z
        qualifiedName: Unity.Reflect.Model.SyncQuaternion.Z
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncQuaternion.Z
  Unity.Reflect.Model.SyncQuaternion.W*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncQuaternion.W*
        name: W
        nameWithType: SyncQuaternion.W
        qualifiedName: Unity.Reflect.Model.SyncQuaternion.W
      VB:
      - id: Unity.Reflect.Model.SyncQuaternion.W*
        name: W
        nameWithType: SyncQuaternion.W
        qualifiedName: Unity.Reflect.Model.SyncQuaternion.W
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncQuaternion.W
  Unity.Reflect.Model.SyncQuaternion.Equals*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncQuaternion.Equals*
        name: Equals
        nameWithType: SyncQuaternion.Equals
        qualifiedName: Unity.Reflect.Model.SyncQuaternion.Equals
      VB:
      - id: Unity.Reflect.Model.SyncQuaternion.Equals*
        name: Equals
        nameWithType: SyncQuaternion.Equals
        qualifiedName: Unity.Reflect.Model.SyncQuaternion.Equals
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncQuaternion.Equals
  Unity.Reflect.Model.SyncQuaternion.GetHashCode*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncQuaternion.GetHashCode*
        name: GetHashCode
        nameWithType: SyncQuaternion.GetHashCode
        qualifiedName: Unity.Reflect.Model.SyncQuaternion.GetHashCode
      VB:
      - id: Unity.Reflect.Model.SyncQuaternion.GetHashCode*
        name: GetHashCode
        nameWithType: SyncQuaternion.GetHashCode
        qualifiedName: Unity.Reflect.Model.SyncQuaternion.GetHashCode
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncQuaternion.GetHashCode
  Unity.Reflect.Model.SyncQuaternion.ToString*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncQuaternion.ToString*
        name: ToString
        nameWithType: SyncQuaternion.ToString
        qualifiedName: Unity.Reflect.Model.SyncQuaternion.ToString
      VB:
      - id: Unity.Reflect.Model.SyncQuaternion.ToString*
        name: ToString
        nameWithType: SyncQuaternion.ToString
        qualifiedName: Unity.Reflect.Model.SyncQuaternion.ToString
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncQuaternion.ToString
  Unity.Reflect.Model.SyncQuaternion.WriteTo*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncQuaternion.WriteTo*
        name: WriteTo
        nameWithType: SyncQuaternion.WriteTo
        qualifiedName: Unity.Reflect.Model.SyncQuaternion.WriteTo
      VB:
      - id: Unity.Reflect.Model.SyncQuaternion.WriteTo*
        name: WriteTo
        nameWithType: SyncQuaternion.WriteTo
        qualifiedName: Unity.Reflect.Model.SyncQuaternion.WriteTo
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncQuaternion.WriteTo
  Unity.Reflect.Model.SyncQuaternion.CalculateSize*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncQuaternion.CalculateSize*
        name: CalculateSize
        nameWithType: SyncQuaternion.CalculateSize
        qualifiedName: Unity.Reflect.Model.SyncQuaternion.CalculateSize
      VB:
      - id: Unity.Reflect.Model.SyncQuaternion.CalculateSize*
        name: CalculateSize
        nameWithType: SyncQuaternion.CalculateSize
        qualifiedName: Unity.Reflect.Model.SyncQuaternion.CalculateSize
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncQuaternion.CalculateSize
  Unity.Reflect.Model.SyncQuaternion.MergeFrom*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncQuaternion.MergeFrom*
        name: MergeFrom
        nameWithType: SyncQuaternion.MergeFrom
        qualifiedName: Unity.Reflect.Model.SyncQuaternion.MergeFrom
      VB:
      - id: Unity.Reflect.Model.SyncQuaternion.MergeFrom*
        name: MergeFrom
        nameWithType: SyncQuaternion.MergeFrom
        qualifiedName: Unity.Reflect.Model.SyncQuaternion.MergeFrom
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncQuaternion.MergeFrom
  Unity.Reflect.Model.SyncMatrix:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncMatrix
        name: SyncMatrix
        nameWithType: SyncMatrix
        qualifiedName: Unity.Reflect.Model.SyncMatrix
      VB:
      - id: Unity.Reflect.Model.SyncMatrix
        name: SyncMatrix
        nameWithType: SyncMatrix
        qualifiedName: Unity.Reflect.Model.SyncMatrix
    isDefinition: true
    parent: Unity.Reflect.Model
    commentId: T:Unity.Reflect.Model.SyncMatrix
  Unity.Reflect.Model.SyncMatrix.Identity*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncMatrix.Identity*
        name: Identity
        nameWithType: SyncMatrix.Identity
        qualifiedName: Unity.Reflect.Model.SyncMatrix.Identity
      VB:
      - id: Unity.Reflect.Model.SyncMatrix.Identity*
        name: Identity
        nameWithType: SyncMatrix.Identity
        qualifiedName: Unity.Reflect.Model.SyncMatrix.Identity
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncMatrix.Identity
  Unity.Reflect.Model.SyncMatrix.#ctor*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncMatrix.#ctor*
        name: SyncMatrix
        nameWithType: SyncMatrix.SyncMatrix
        qualifiedName: Unity.Reflect.Model.SyncMatrix.SyncMatrix
      VB:
      - id: Unity.Reflect.Model.SyncMatrix.#ctor*
        name: SyncMatrix
        nameWithType: SyncMatrix.SyncMatrix
        qualifiedName: Unity.Reflect.Model.SyncMatrix.SyncMatrix
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncMatrix.#ctor
  Unity.Reflect.Model.SyncTRS:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncTRS
        name: SyncTRS
        nameWithType: SyncTRS
        qualifiedName: Unity.Reflect.Model.SyncTRS
      VB:
      - id: Unity.Reflect.Model.SyncTRS
        name: SyncTRS
        nameWithType: SyncTRS
        qualifiedName: Unity.Reflect.Model.SyncTRS
    isDefinition: true
    parent: Unity.Reflect.Model
    commentId: T:Unity.Reflect.Model.SyncTRS
  Unity.Reflect.Model.SyncMatrix.ToTRS*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncMatrix.ToTRS*
        name: ToTRS
        nameWithType: SyncMatrix.ToTRS
        qualifiedName: Unity.Reflect.Model.SyncMatrix.ToTRS
      VB:
      - id: Unity.Reflect.Model.SyncMatrix.ToTRS*
        name: ToTRS
        nameWithType: SyncMatrix.ToTRS
        qualifiedName: Unity.Reflect.Model.SyncMatrix.ToTRS
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncMatrix.ToTRS
  pb.MessageParser{Unity.Reflect.Model.SyncMatrix}:
    name:
      CSharp:
      - id: pb.MessageParser`1
        name: pb.MessageParser
        nameWithType: pb.MessageParser
        qualifiedName: pb.MessageParser
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Unity.Reflect.Model.SyncMatrix
        name: SyncMatrix
        nameWithType: SyncMatrix
        qualifiedName: Unity.Reflect.Model.SyncMatrix
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: pb.MessageParser`1
        name: pb.MessageParser
        nameWithType: pb.MessageParser
        qualifiedName: pb.MessageParser
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Unity.Reflect.Model.SyncMatrix
        name: SyncMatrix
        nameWithType: SyncMatrix
        qualifiedName: Unity.Reflect.Model.SyncMatrix
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: pb.MessageParser`1
    commentId: '!:pb.MessageParser{Unity.Reflect.Model.SyncMatrix}'
  Unity.Reflect.Model.SyncMatrix.Parser*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncMatrix.Parser*
        name: Parser
        nameWithType: SyncMatrix.Parser
        qualifiedName: Unity.Reflect.Model.SyncMatrix.Parser
      VB:
      - id: Unity.Reflect.Model.SyncMatrix.Parser*
        name: Parser
        nameWithType: SyncMatrix.Parser
        qualifiedName: Unity.Reflect.Model.SyncMatrix.Parser
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncMatrix.Parser
  Unity.Reflect.Model.SyncMatrix.Descriptor*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncMatrix.Descriptor*
        name: Descriptor
        nameWithType: SyncMatrix.Descriptor
        qualifiedName: Unity.Reflect.Model.SyncMatrix.Descriptor
      VB:
      - id: Unity.Reflect.Model.SyncMatrix.Descriptor*
        name: Descriptor
        nameWithType: SyncMatrix.Descriptor
        qualifiedName: Unity.Reflect.Model.SyncMatrix.Descriptor
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncMatrix.Descriptor
  Unity.Reflect.Model.SyncMatrix.Clone*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncMatrix.Clone*
        name: Clone
        nameWithType: SyncMatrix.Clone
        qualifiedName: Unity.Reflect.Model.SyncMatrix.Clone
      VB:
      - id: Unity.Reflect.Model.SyncMatrix.Clone*
        name: Clone
        nameWithType: SyncMatrix.Clone
        qualifiedName: Unity.Reflect.Model.SyncMatrix.Clone
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncMatrix.Clone
  Unity.Reflect.Model.SyncMatrix.C0*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncMatrix.C0*
        name: C0
        nameWithType: SyncMatrix.C0
        qualifiedName: Unity.Reflect.Model.SyncMatrix.C0
      VB:
      - id: Unity.Reflect.Model.SyncMatrix.C0*
        name: C0
        nameWithType: SyncMatrix.C0
        qualifiedName: Unity.Reflect.Model.SyncMatrix.C0
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncMatrix.C0
  Unity.Reflect.Model.SyncMatrix.C1*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncMatrix.C1*
        name: C1
        nameWithType: SyncMatrix.C1
        qualifiedName: Unity.Reflect.Model.SyncMatrix.C1
      VB:
      - id: Unity.Reflect.Model.SyncMatrix.C1*
        name: C1
        nameWithType: SyncMatrix.C1
        qualifiedName: Unity.Reflect.Model.SyncMatrix.C1
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncMatrix.C1
  Unity.Reflect.Model.SyncMatrix.C2*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncMatrix.C2*
        name: C2
        nameWithType: SyncMatrix.C2
        qualifiedName: Unity.Reflect.Model.SyncMatrix.C2
      VB:
      - id: Unity.Reflect.Model.SyncMatrix.C2*
        name: C2
        nameWithType: SyncMatrix.C2
        qualifiedName: Unity.Reflect.Model.SyncMatrix.C2
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncMatrix.C2
  Unity.Reflect.Model.SyncMatrix.C3*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncMatrix.C3*
        name: C3
        nameWithType: SyncMatrix.C3
        qualifiedName: Unity.Reflect.Model.SyncMatrix.C3
      VB:
      - id: Unity.Reflect.Model.SyncMatrix.C3*
        name: C3
        nameWithType: SyncMatrix.C3
        qualifiedName: Unity.Reflect.Model.SyncMatrix.C3
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncMatrix.C3
  Unity.Reflect.Model.SyncMatrix.Equals*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncMatrix.Equals*
        name: Equals
        nameWithType: SyncMatrix.Equals
        qualifiedName: Unity.Reflect.Model.SyncMatrix.Equals
      VB:
      - id: Unity.Reflect.Model.SyncMatrix.Equals*
        name: Equals
        nameWithType: SyncMatrix.Equals
        qualifiedName: Unity.Reflect.Model.SyncMatrix.Equals
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncMatrix.Equals
  Unity.Reflect.Model.SyncMatrix.GetHashCode*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncMatrix.GetHashCode*
        name: GetHashCode
        nameWithType: SyncMatrix.GetHashCode
        qualifiedName: Unity.Reflect.Model.SyncMatrix.GetHashCode
      VB:
      - id: Unity.Reflect.Model.SyncMatrix.GetHashCode*
        name: GetHashCode
        nameWithType: SyncMatrix.GetHashCode
        qualifiedName: Unity.Reflect.Model.SyncMatrix.GetHashCode
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncMatrix.GetHashCode
  Unity.Reflect.Model.SyncMatrix.ToString*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncMatrix.ToString*
        name: ToString
        nameWithType: SyncMatrix.ToString
        qualifiedName: Unity.Reflect.Model.SyncMatrix.ToString
      VB:
      - id: Unity.Reflect.Model.SyncMatrix.ToString*
        name: ToString
        nameWithType: SyncMatrix.ToString
        qualifiedName: Unity.Reflect.Model.SyncMatrix.ToString
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncMatrix.ToString
  Unity.Reflect.Model.SyncMatrix.WriteTo*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncMatrix.WriteTo*
        name: WriteTo
        nameWithType: SyncMatrix.WriteTo
        qualifiedName: Unity.Reflect.Model.SyncMatrix.WriteTo
      VB:
      - id: Unity.Reflect.Model.SyncMatrix.WriteTo*
        name: WriteTo
        nameWithType: SyncMatrix.WriteTo
        qualifiedName: Unity.Reflect.Model.SyncMatrix.WriteTo
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncMatrix.WriteTo
  Unity.Reflect.Model.SyncMatrix.CalculateSize*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncMatrix.CalculateSize*
        name: CalculateSize
        nameWithType: SyncMatrix.CalculateSize
        qualifiedName: Unity.Reflect.Model.SyncMatrix.CalculateSize
      VB:
      - id: Unity.Reflect.Model.SyncMatrix.CalculateSize*
        name: CalculateSize
        nameWithType: SyncMatrix.CalculateSize
        qualifiedName: Unity.Reflect.Model.SyncMatrix.CalculateSize
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncMatrix.CalculateSize
  Unity.Reflect.Model.SyncMatrix.MergeFrom*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncMatrix.MergeFrom*
        name: MergeFrom
        nameWithType: SyncMatrix.MergeFrom
        qualifiedName: Unity.Reflect.Model.SyncMatrix.MergeFrom
      VB:
      - id: Unity.Reflect.Model.SyncMatrix.MergeFrom*
        name: MergeFrom
        nameWithType: SyncMatrix.MergeFrom
        qualifiedName: Unity.Reflect.Model.SyncMatrix.MergeFrom
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncMatrix.MergeFrom
  Unity.Reflect.Model.SyncTRS.Identity*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncTRS.Identity*
        name: Identity
        nameWithType: SyncTRS.Identity
        qualifiedName: Unity.Reflect.Model.SyncTRS.Identity
      VB:
      - id: Unity.Reflect.Model.SyncTRS.Identity*
        name: Identity
        nameWithType: SyncTRS.Identity
        qualifiedName: Unity.Reflect.Model.SyncTRS.Identity
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncTRS.Identity
  Unity.Reflect.Model.SyncTRS.#ctor*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncTRS.#ctor*
        name: SyncTRS
        nameWithType: SyncTRS.SyncTRS
        qualifiedName: Unity.Reflect.Model.SyncTRS.SyncTRS
      VB:
      - id: Unity.Reflect.Model.SyncTRS.#ctor*
        name: SyncTRS
        nameWithType: SyncTRS.SyncTRS
        qualifiedName: Unity.Reflect.Model.SyncTRS.SyncTRS
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncTRS.#ctor
  Unity.Reflect.Model.SyncTRS.TransformPoint*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncTRS.TransformPoint*
        name: TransformPoint
        nameWithType: SyncTRS.TransformPoint
        qualifiedName: Unity.Reflect.Model.SyncTRS.TransformPoint
      VB:
      - id: Unity.Reflect.Model.SyncTRS.TransformPoint*
        name: TransformPoint
        nameWithType: SyncTRS.TransformPoint
        qualifiedName: Unity.Reflect.Model.SyncTRS.TransformPoint
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncTRS.TransformPoint
  Unity.Reflect.Model.SyncTRS.TransformVector*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncTRS.TransformVector*
        name: TransformVector
        nameWithType: SyncTRS.TransformVector
        qualifiedName: Unity.Reflect.Model.SyncTRS.TransformVector
      VB:
      - id: Unity.Reflect.Model.SyncTRS.TransformVector*
        name: TransformVector
        nameWithType: SyncTRS.TransformVector
        qualifiedName: Unity.Reflect.Model.SyncTRS.TransformVector
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncTRS.TransformVector
  Unity.Reflect.Model.SyncTRS.Inverse*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncTRS.Inverse*
        name: Inverse
        nameWithType: SyncTRS.Inverse
        qualifiedName: Unity.Reflect.Model.SyncTRS.Inverse
      VB:
      - id: Unity.Reflect.Model.SyncTRS.Inverse*
        name: Inverse
        nameWithType: SyncTRS.Inverse
        qualifiedName: Unity.Reflect.Model.SyncTRS.Inverse
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncTRS.Inverse
  Unity.Reflect.Model.SyncTRS.op_Multiply*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncTRS.op_Multiply*
        name: Multiply
        nameWithType: SyncTRS.Multiply
        qualifiedName: Unity.Reflect.Model.SyncTRS.Multiply
      VB:
      - id: Unity.Reflect.Model.SyncTRS.op_Multiply*
        name: Multiply
        nameWithType: SyncTRS.Multiply
        qualifiedName: Unity.Reflect.Model.SyncTRS.Multiply
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncTRS.op_Multiply
  Unity.Reflect.Model.SyncTRS.op_Equality*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncTRS.op_Equality*
        name: Equality
        nameWithType: SyncTRS.Equality
        qualifiedName: Unity.Reflect.Model.SyncTRS.Equality
      VB:
      - id: Unity.Reflect.Model.SyncTRS.op_Equality*
        name: Equality
        nameWithType: SyncTRS.Equality
        qualifiedName: Unity.Reflect.Model.SyncTRS.Equality
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncTRS.op_Equality
  Unity.Reflect.Model.SyncTRS.op_Inequality*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncTRS.op_Inequality*
        name: Inequality
        nameWithType: SyncTRS.Inequality
        qualifiedName: Unity.Reflect.Model.SyncTRS.Inequality
      VB:
      - id: Unity.Reflect.Model.SyncTRS.op_Inequality*
        name: Inequality
        nameWithType: SyncTRS.Inequality
        qualifiedName: Unity.Reflect.Model.SyncTRS.Inequality
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncTRS.op_Inequality
  Unity.Reflect.Model.SyncTRS.FlipYZ*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncTRS.FlipYZ*
        name: FlipYZ
        nameWithType: SyncTRS.FlipYZ
        qualifiedName: Unity.Reflect.Model.SyncTRS.FlipYZ
      VB:
      - id: Unity.Reflect.Model.SyncTRS.FlipYZ*
        name: FlipYZ
        nameWithType: SyncTRS.FlipYZ
        qualifiedName: Unity.Reflect.Model.SyncTRS.FlipYZ
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncTRS.FlipYZ
  pb.MessageParser{Unity.Reflect.Model.SyncTRS}:
    name:
      CSharp:
      - id: pb.MessageParser`1
        name: pb.MessageParser
        nameWithType: pb.MessageParser
        qualifiedName: pb.MessageParser
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Unity.Reflect.Model.SyncTRS
        name: SyncTRS
        nameWithType: SyncTRS
        qualifiedName: Unity.Reflect.Model.SyncTRS
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: pb.MessageParser`1
        name: pb.MessageParser
        nameWithType: pb.MessageParser
        qualifiedName: pb.MessageParser
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Unity.Reflect.Model.SyncTRS
        name: SyncTRS
        nameWithType: SyncTRS
        qualifiedName: Unity.Reflect.Model.SyncTRS
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: pb.MessageParser`1
    commentId: '!:pb.MessageParser{Unity.Reflect.Model.SyncTRS}'
  Unity.Reflect.Model.SyncTRS.Parser*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncTRS.Parser*
        name: Parser
        nameWithType: SyncTRS.Parser
        qualifiedName: Unity.Reflect.Model.SyncTRS.Parser
      VB:
      - id: Unity.Reflect.Model.SyncTRS.Parser*
        name: Parser
        nameWithType: SyncTRS.Parser
        qualifiedName: Unity.Reflect.Model.SyncTRS.Parser
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncTRS.Parser
  Unity.Reflect.Model.SyncTRS.Descriptor*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncTRS.Descriptor*
        name: Descriptor
        nameWithType: SyncTRS.Descriptor
        qualifiedName: Unity.Reflect.Model.SyncTRS.Descriptor
      VB:
      - id: Unity.Reflect.Model.SyncTRS.Descriptor*
        name: Descriptor
        nameWithType: SyncTRS.Descriptor
        qualifiedName: Unity.Reflect.Model.SyncTRS.Descriptor
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncTRS.Descriptor
  Unity.Reflect.Model.SyncTRS.Clone*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncTRS.Clone*
        name: Clone
        nameWithType: SyncTRS.Clone
        qualifiedName: Unity.Reflect.Model.SyncTRS.Clone
      VB:
      - id: Unity.Reflect.Model.SyncTRS.Clone*
        name: Clone
        nameWithType: SyncTRS.Clone
        qualifiedName: Unity.Reflect.Model.SyncTRS.Clone
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncTRS.Clone
  Unity.Reflect.Model.SyncTRS.Position*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncTRS.Position*
        name: Position
        nameWithType: SyncTRS.Position
        qualifiedName: Unity.Reflect.Model.SyncTRS.Position
      VB:
      - id: Unity.Reflect.Model.SyncTRS.Position*
        name: Position
        nameWithType: SyncTRS.Position
        qualifiedName: Unity.Reflect.Model.SyncTRS.Position
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncTRS.Position
  Unity.Reflect.Model.SyncTRS.Rotation*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncTRS.Rotation*
        name: Rotation
        nameWithType: SyncTRS.Rotation
        qualifiedName: Unity.Reflect.Model.SyncTRS.Rotation
      VB:
      - id: Unity.Reflect.Model.SyncTRS.Rotation*
        name: Rotation
        nameWithType: SyncTRS.Rotation
        qualifiedName: Unity.Reflect.Model.SyncTRS.Rotation
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncTRS.Rotation
  Unity.Reflect.Model.SyncTRS.Scale*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncTRS.Scale*
        name: Scale
        nameWithType: SyncTRS.Scale
        qualifiedName: Unity.Reflect.Model.SyncTRS.Scale
      VB:
      - id: Unity.Reflect.Model.SyncTRS.Scale*
        name: Scale
        nameWithType: SyncTRS.Scale
        qualifiedName: Unity.Reflect.Model.SyncTRS.Scale
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncTRS.Scale
  Unity.Reflect.Model.SyncTRS.Equals*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncTRS.Equals*
        name: Equals
        nameWithType: SyncTRS.Equals
        qualifiedName: Unity.Reflect.Model.SyncTRS.Equals
      VB:
      - id: Unity.Reflect.Model.SyncTRS.Equals*
        name: Equals
        nameWithType: SyncTRS.Equals
        qualifiedName: Unity.Reflect.Model.SyncTRS.Equals
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncTRS.Equals
  Unity.Reflect.Model.SyncTRS.GetHashCode*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncTRS.GetHashCode*
        name: GetHashCode
        nameWithType: SyncTRS.GetHashCode
        qualifiedName: Unity.Reflect.Model.SyncTRS.GetHashCode
      VB:
      - id: Unity.Reflect.Model.SyncTRS.GetHashCode*
        name: GetHashCode
        nameWithType: SyncTRS.GetHashCode
        qualifiedName: Unity.Reflect.Model.SyncTRS.GetHashCode
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncTRS.GetHashCode
  Unity.Reflect.Model.SyncTRS.ToString*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncTRS.ToString*
        name: ToString
        nameWithType: SyncTRS.ToString
        qualifiedName: Unity.Reflect.Model.SyncTRS.ToString
      VB:
      - id: Unity.Reflect.Model.SyncTRS.ToString*
        name: ToString
        nameWithType: SyncTRS.ToString
        qualifiedName: Unity.Reflect.Model.SyncTRS.ToString
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncTRS.ToString
  Unity.Reflect.Model.SyncTRS.WriteTo*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncTRS.WriteTo*
        name: WriteTo
        nameWithType: SyncTRS.WriteTo
        qualifiedName: Unity.Reflect.Model.SyncTRS.WriteTo
      VB:
      - id: Unity.Reflect.Model.SyncTRS.WriteTo*
        name: WriteTo
        nameWithType: SyncTRS.WriteTo
        qualifiedName: Unity.Reflect.Model.SyncTRS.WriteTo
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncTRS.WriteTo
  Unity.Reflect.Model.SyncTRS.CalculateSize*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncTRS.CalculateSize*
        name: CalculateSize
        nameWithType: SyncTRS.CalculateSize
        qualifiedName: Unity.Reflect.Model.SyncTRS.CalculateSize
      VB:
      - id: Unity.Reflect.Model.SyncTRS.CalculateSize*
        name: CalculateSize
        nameWithType: SyncTRS.CalculateSize
        qualifiedName: Unity.Reflect.Model.SyncTRS.CalculateSize
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncTRS.CalculateSize
  Unity.Reflect.Model.SyncTRS.MergeFrom*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncTRS.MergeFrom*
        name: MergeFrom
        nameWithType: SyncTRS.MergeFrom
        qualifiedName: Unity.Reflect.Model.SyncTRS.MergeFrom
      VB:
      - id: Unity.Reflect.Model.SyncTRS.MergeFrom*
        name: MergeFrom
        nameWithType: SyncTRS.MergeFrom
        qualifiedName: Unity.Reflect.Model.SyncTRS.MergeFrom
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncTRS.MergeFrom
  Unity.Reflect.Model.SyncTransform.Identity*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncTransform.Identity*
        name: Identity
        nameWithType: SyncTransform.Identity
        qualifiedName: Unity.Reflect.Model.SyncTransform.Identity
      VB:
      - id: Unity.Reflect.Model.SyncTransform.Identity*
        name: Identity
        nameWithType: SyncTransform.Identity
        qualifiedName: Unity.Reflect.Model.SyncTransform.Identity
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncTransform.Identity
  Unity.Reflect.Model.SyncTransform.#ctor*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncTransform.#ctor*
        name: SyncTransform
        nameWithType: SyncTransform.SyncTransform
        qualifiedName: Unity.Reflect.Model.SyncTransform.SyncTransform
      VB:
      - id: Unity.Reflect.Model.SyncTransform.#ctor*
        name: SyncTransform
        nameWithType: SyncTransform.SyncTransform
        qualifiedName: Unity.Reflect.Model.SyncTransform.SyncTransform
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncTransform.#ctor
  Unity.Reflect.Model.SyncTransform.Position*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncTransform.Position*
        name: Position
        nameWithType: SyncTransform.Position
        qualifiedName: Unity.Reflect.Model.SyncTransform.Position
      VB:
      - id: Unity.Reflect.Model.SyncTransform.Position*
        name: Position
        nameWithType: SyncTransform.Position
        qualifiedName: Unity.Reflect.Model.SyncTransform.Position
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncTransform.Position
  Unity.Reflect.Model.SyncTransform.Rotation*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncTransform.Rotation*
        name: Rotation
        nameWithType: SyncTransform.Rotation
        qualifiedName: Unity.Reflect.Model.SyncTransform.Rotation
      VB:
      - id: Unity.Reflect.Model.SyncTransform.Rotation*
        name: Rotation
        nameWithType: SyncTransform.Rotation
        qualifiedName: Unity.Reflect.Model.SyncTransform.Rotation
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncTransform.Rotation
  Unity.Reflect.Model.SyncTransform.Scale*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncTransform.Scale*
        name: Scale
        nameWithType: SyncTransform.Scale
        qualifiedName: Unity.Reflect.Model.SyncTransform.Scale
      VB:
      - id: Unity.Reflect.Model.SyncTransform.Scale*
        name: Scale
        nameWithType: SyncTransform.Scale
        qualifiedName: Unity.Reflect.Model.SyncTransform.Scale
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncTransform.Scale
  Unity.Reflect.Model.SyncTransform.TransformPoint*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncTransform.TransformPoint*
        name: TransformPoint
        nameWithType: SyncTransform.TransformPoint
        qualifiedName: Unity.Reflect.Model.SyncTransform.TransformPoint
      VB:
      - id: Unity.Reflect.Model.SyncTransform.TransformPoint*
        name: TransformPoint
        nameWithType: SyncTransform.TransformPoint
        qualifiedName: Unity.Reflect.Model.SyncTransform.TransformPoint
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncTransform.TransformPoint
  Unity.Reflect.Model.SyncTransform.TransformVector*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncTransform.TransformVector*
        name: TransformVector
        nameWithType: SyncTransform.TransformVector
        qualifiedName: Unity.Reflect.Model.SyncTransform.TransformVector
      VB:
      - id: Unity.Reflect.Model.SyncTransform.TransformVector*
        name: TransformVector
        nameWithType: SyncTransform.TransformVector
        qualifiedName: Unity.Reflect.Model.SyncTransform.TransformVector
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncTransform.TransformVector
  Unity.Reflect.Model.SyncTransform.Inverse*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncTransform.Inverse*
        name: Inverse
        nameWithType: SyncTransform.Inverse
        qualifiedName: Unity.Reflect.Model.SyncTransform.Inverse
      VB:
      - id: Unity.Reflect.Model.SyncTransform.Inverse*
        name: Inverse
        nameWithType: SyncTransform.Inverse
        qualifiedName: Unity.Reflect.Model.SyncTransform.Inverse
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncTransform.Inverse
  Unity.Reflect.Model.SyncTransform.op_Multiply*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncTransform.op_Multiply*
        name: Multiply
        nameWithType: SyncTransform.Multiply
        qualifiedName: Unity.Reflect.Model.SyncTransform.Multiply
      VB:
      - id: Unity.Reflect.Model.SyncTransform.op_Multiply*
        name: Multiply
        nameWithType: SyncTransform.Multiply
        qualifiedName: Unity.Reflect.Model.SyncTransform.Multiply
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncTransform.op_Multiply
  Unity.Reflect.Model.SyncTransform.op_Equality*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncTransform.op_Equality*
        name: Equality
        nameWithType: SyncTransform.Equality
        qualifiedName: Unity.Reflect.Model.SyncTransform.Equality
      VB:
      - id: Unity.Reflect.Model.SyncTransform.op_Equality*
        name: Equality
        nameWithType: SyncTransform.Equality
        qualifiedName: Unity.Reflect.Model.SyncTransform.Equality
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncTransform.op_Equality
  Unity.Reflect.Model.SyncTransform.op_Inequality*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncTransform.op_Inequality*
        name: Inequality
        nameWithType: SyncTransform.Inequality
        qualifiedName: Unity.Reflect.Model.SyncTransform.Inequality
      VB:
      - id: Unity.Reflect.Model.SyncTransform.op_Inequality*
        name: Inequality
        nameWithType: SyncTransform.Inequality
        qualifiedName: Unity.Reflect.Model.SyncTransform.Inequality
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncTransform.op_Inequality
  Unity.Reflect.Model.SyncTransform.FlipYZ*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncTransform.FlipYZ*
        name: FlipYZ
        nameWithType: SyncTransform.FlipYZ
        qualifiedName: Unity.Reflect.Model.SyncTransform.FlipYZ
      VB:
      - id: Unity.Reflect.Model.SyncTransform.FlipYZ*
        name: FlipYZ
        nameWithType: SyncTransform.FlipYZ
        qualifiedName: Unity.Reflect.Model.SyncTransform.FlipYZ
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncTransform.FlipYZ
  pb.MessageParser{Unity.Reflect.Model.SyncTransform}:
    name:
      CSharp:
      - id: pb.MessageParser`1
        name: pb.MessageParser
        nameWithType: pb.MessageParser
        qualifiedName: pb.MessageParser
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Unity.Reflect.Model.SyncTransform
        name: SyncTransform
        nameWithType: SyncTransform
        qualifiedName: Unity.Reflect.Model.SyncTransform
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: pb.MessageParser`1
        name: pb.MessageParser
        nameWithType: pb.MessageParser
        qualifiedName: pb.MessageParser
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Unity.Reflect.Model.SyncTransform
        name: SyncTransform
        nameWithType: SyncTransform
        qualifiedName: Unity.Reflect.Model.SyncTransform
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: pb.MessageParser`1
    commentId: '!:pb.MessageParser{Unity.Reflect.Model.SyncTransform}'
  Unity.Reflect.Model.SyncTransform.Parser*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncTransform.Parser*
        name: Parser
        nameWithType: SyncTransform.Parser
        qualifiedName: Unity.Reflect.Model.SyncTransform.Parser
      VB:
      - id: Unity.Reflect.Model.SyncTransform.Parser*
        name: Parser
        nameWithType: SyncTransform.Parser
        qualifiedName: Unity.Reflect.Model.SyncTransform.Parser
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncTransform.Parser
  Unity.Reflect.Model.SyncTransform.Descriptor*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncTransform.Descriptor*
        name: Descriptor
        nameWithType: SyncTransform.Descriptor
        qualifiedName: Unity.Reflect.Model.SyncTransform.Descriptor
      VB:
      - id: Unity.Reflect.Model.SyncTransform.Descriptor*
        name: Descriptor
        nameWithType: SyncTransform.Descriptor
        qualifiedName: Unity.Reflect.Model.SyncTransform.Descriptor
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncTransform.Descriptor
  Unity.Reflect.Model.SyncTransform.Clone*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncTransform.Clone*
        name: Clone
        nameWithType: SyncTransform.Clone
        qualifiedName: Unity.Reflect.Model.SyncTransform.Clone
      VB:
      - id: Unity.Reflect.Model.SyncTransform.Clone*
        name: Clone
        nameWithType: SyncTransform.Clone
        qualifiedName: Unity.Reflect.Model.SyncTransform.Clone
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncTransform.Clone
  Unity.Reflect.Model.SyncTransform.Trs*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncTransform.Trs*
        name: Trs
        nameWithType: SyncTransform.Trs
        qualifiedName: Unity.Reflect.Model.SyncTransform.Trs
      VB:
      - id: Unity.Reflect.Model.SyncTransform.Trs*
        name: Trs
        nameWithType: SyncTransform.Trs
        qualifiedName: Unity.Reflect.Model.SyncTransform.Trs
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncTransform.Trs
  Unity.Reflect.Model.SyncTransform.Matrix*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncTransform.Matrix*
        name: Matrix
        nameWithType: SyncTransform.Matrix
        qualifiedName: Unity.Reflect.Model.SyncTransform.Matrix
      VB:
      - id: Unity.Reflect.Model.SyncTransform.Matrix*
        name: Matrix
        nameWithType: SyncTransform.Matrix
        qualifiedName: Unity.Reflect.Model.SyncTransform.Matrix
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncTransform.Matrix
  Unity.Reflect.Model.SyncTransform.ValueOneofCase:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncTransform.ValueOneofCase
        name: SyncTransform.ValueOneofCase
        nameWithType: SyncTransform.ValueOneofCase
        qualifiedName: Unity.Reflect.Model.SyncTransform.ValueOneofCase
      VB:
      - id: Unity.Reflect.Model.SyncTransform.ValueOneofCase
        name: SyncTransform.ValueOneofCase
        nameWithType: SyncTransform.ValueOneofCase
        qualifiedName: Unity.Reflect.Model.SyncTransform.ValueOneofCase
    isDefinition: true
    parent: Unity.Reflect.Model
    commentId: T:Unity.Reflect.Model.SyncTransform.ValueOneofCase
  Unity.Reflect.Model.SyncTransform.ValueCase*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncTransform.ValueCase*
        name: ValueCase
        nameWithType: SyncTransform.ValueCase
        qualifiedName: Unity.Reflect.Model.SyncTransform.ValueCase
      VB:
      - id: Unity.Reflect.Model.SyncTransform.ValueCase*
        name: ValueCase
        nameWithType: SyncTransform.ValueCase
        qualifiedName: Unity.Reflect.Model.SyncTransform.ValueCase
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncTransform.ValueCase
  Unity.Reflect.Model.SyncTransform.ClearValue*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncTransform.ClearValue*
        name: ClearValue
        nameWithType: SyncTransform.ClearValue
        qualifiedName: Unity.Reflect.Model.SyncTransform.ClearValue
      VB:
      - id: Unity.Reflect.Model.SyncTransform.ClearValue*
        name: ClearValue
        nameWithType: SyncTransform.ClearValue
        qualifiedName: Unity.Reflect.Model.SyncTransform.ClearValue
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncTransform.ClearValue
  Unity.Reflect.Model.SyncTransform.Equals*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncTransform.Equals*
        name: Equals
        nameWithType: SyncTransform.Equals
        qualifiedName: Unity.Reflect.Model.SyncTransform.Equals
      VB:
      - id: Unity.Reflect.Model.SyncTransform.Equals*
        name: Equals
        nameWithType: SyncTransform.Equals
        qualifiedName: Unity.Reflect.Model.SyncTransform.Equals
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncTransform.Equals
  Unity.Reflect.Model.SyncTransform.GetHashCode*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncTransform.GetHashCode*
        name: GetHashCode
        nameWithType: SyncTransform.GetHashCode
        qualifiedName: Unity.Reflect.Model.SyncTransform.GetHashCode
      VB:
      - id: Unity.Reflect.Model.SyncTransform.GetHashCode*
        name: GetHashCode
        nameWithType: SyncTransform.GetHashCode
        qualifiedName: Unity.Reflect.Model.SyncTransform.GetHashCode
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncTransform.GetHashCode
  Unity.Reflect.Model.SyncTransform.ToString*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncTransform.ToString*
        name: ToString
        nameWithType: SyncTransform.ToString
        qualifiedName: Unity.Reflect.Model.SyncTransform.ToString
      VB:
      - id: Unity.Reflect.Model.SyncTransform.ToString*
        name: ToString
        nameWithType: SyncTransform.ToString
        qualifiedName: Unity.Reflect.Model.SyncTransform.ToString
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncTransform.ToString
  Unity.Reflect.Model.SyncTransform.WriteTo*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncTransform.WriteTo*
        name: WriteTo
        nameWithType: SyncTransform.WriteTo
        qualifiedName: Unity.Reflect.Model.SyncTransform.WriteTo
      VB:
      - id: Unity.Reflect.Model.SyncTransform.WriteTo*
        name: WriteTo
        nameWithType: SyncTransform.WriteTo
        qualifiedName: Unity.Reflect.Model.SyncTransform.WriteTo
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncTransform.WriteTo
  Unity.Reflect.Model.SyncTransform.CalculateSize*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncTransform.CalculateSize*
        name: CalculateSize
        nameWithType: SyncTransform.CalculateSize
        qualifiedName: Unity.Reflect.Model.SyncTransform.CalculateSize
      VB:
      - id: Unity.Reflect.Model.SyncTransform.CalculateSize*
        name: CalculateSize
        nameWithType: SyncTransform.CalculateSize
        qualifiedName: Unity.Reflect.Model.SyncTransform.CalculateSize
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncTransform.CalculateSize
  Unity.Reflect.Model.SyncTransform.MergeFrom*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncTransform.MergeFrom*
        name: MergeFrom
        nameWithType: SyncTransform.MergeFrom
        qualifiedName: Unity.Reflect.Model.SyncTransform.MergeFrom
      VB:
      - id: Unity.Reflect.Model.SyncTransform.MergeFrom*
        name: MergeFrom
        nameWithType: SyncTransform.MergeFrom
        qualifiedName: Unity.Reflect.Model.SyncTransform.MergeFrom
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncTransform.MergeFrom
  Unity.Reflect.Model.SyncBoundingBox.IsInitialized*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncBoundingBox.IsInitialized*
        name: IsInitialized
        nameWithType: SyncBoundingBox.IsInitialized
        qualifiedName: Unity.Reflect.Model.SyncBoundingBox.IsInitialized
      VB:
      - id: Unity.Reflect.Model.SyncBoundingBox.IsInitialized*
        name: IsInitialized
        nameWithType: SyncBoundingBox.IsInitialized
        qualifiedName: Unity.Reflect.Model.SyncBoundingBox.IsInitialized
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncBoundingBox.IsInitialized
  Unity.Reflect.Model.SyncBoundingBox.Encapsulate*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncBoundingBox.Encapsulate*
        name: Encapsulate
        nameWithType: SyncBoundingBox.Encapsulate
        qualifiedName: Unity.Reflect.Model.SyncBoundingBox.Encapsulate
      VB:
      - id: Unity.Reflect.Model.SyncBoundingBox.Encapsulate*
        name: Encapsulate
        nameWithType: SyncBoundingBox.Encapsulate
        qualifiedName: Unity.Reflect.Model.SyncBoundingBox.Encapsulate
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncBoundingBox.Encapsulate
  Unity.Reflect.Model.SyncBoundingBox:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncBoundingBox
        name: SyncBoundingBox
        nameWithType: SyncBoundingBox
        qualifiedName: Unity.Reflect.Model.SyncBoundingBox
      VB:
      - id: Unity.Reflect.Model.SyncBoundingBox
        name: SyncBoundingBox
        nameWithType: SyncBoundingBox
        qualifiedName: Unity.Reflect.Model.SyncBoundingBox
    isDefinition: true
    parent: Unity.Reflect.Model
    commentId: T:Unity.Reflect.Model.SyncBoundingBox
  Unity.Reflect.Model.SyncBoundingBox.Transform*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncBoundingBox.Transform*
        name: Transform
        nameWithType: SyncBoundingBox.Transform
        qualifiedName: Unity.Reflect.Model.SyncBoundingBox.Transform
      VB:
      - id: Unity.Reflect.Model.SyncBoundingBox.Transform*
        name: Transform
        nameWithType: SyncBoundingBox.Transform
        qualifiedName: Unity.Reflect.Model.SyncBoundingBox.Transform
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncBoundingBox.Transform
  Unity.Reflect.Model.SyncFloat3[]:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncFloat3
        name: SyncFloat3
        nameWithType: SyncFloat3
        qualifiedName: Unity.Reflect.Model.SyncFloat3
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: Unity.Reflect.Model.SyncFloat3
        name: SyncFloat3
        nameWithType: SyncFloat3
        qualifiedName: Unity.Reflect.Model.SyncFloat3
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  Unity.Reflect.Model.SyncBoundingBox.GetCorners*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncBoundingBox.GetCorners*
        name: GetCorners
        nameWithType: SyncBoundingBox.GetCorners
        qualifiedName: Unity.Reflect.Model.SyncBoundingBox.GetCorners
      VB:
      - id: Unity.Reflect.Model.SyncBoundingBox.GetCorners*
        name: GetCorners
        nameWithType: SyncBoundingBox.GetCorners
        qualifiedName: Unity.Reflect.Model.SyncBoundingBox.GetCorners
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncBoundingBox.GetCorners
  pb.MessageParser{Unity.Reflect.Model.SyncBoundingBox}:
    name:
      CSharp:
      - id: pb.MessageParser`1
        name: pb.MessageParser
        nameWithType: pb.MessageParser
        qualifiedName: pb.MessageParser
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Unity.Reflect.Model.SyncBoundingBox
        name: SyncBoundingBox
        nameWithType: SyncBoundingBox
        qualifiedName: Unity.Reflect.Model.SyncBoundingBox
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: pb.MessageParser`1
        name: pb.MessageParser
        nameWithType: pb.MessageParser
        qualifiedName: pb.MessageParser
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Unity.Reflect.Model.SyncBoundingBox
        name: SyncBoundingBox
        nameWithType: SyncBoundingBox
        qualifiedName: Unity.Reflect.Model.SyncBoundingBox
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: pb.MessageParser`1
    commentId: '!:pb.MessageParser{Unity.Reflect.Model.SyncBoundingBox}'
  Unity.Reflect.Model.SyncBoundingBox.Parser*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncBoundingBox.Parser*
        name: Parser
        nameWithType: SyncBoundingBox.Parser
        qualifiedName: Unity.Reflect.Model.SyncBoundingBox.Parser
      VB:
      - id: Unity.Reflect.Model.SyncBoundingBox.Parser*
        name: Parser
        nameWithType: SyncBoundingBox.Parser
        qualifiedName: Unity.Reflect.Model.SyncBoundingBox.Parser
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncBoundingBox.Parser
  Unity.Reflect.Model.SyncBoundingBox.Descriptor*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncBoundingBox.Descriptor*
        name: Descriptor
        nameWithType: SyncBoundingBox.Descriptor
        qualifiedName: Unity.Reflect.Model.SyncBoundingBox.Descriptor
      VB:
      - id: Unity.Reflect.Model.SyncBoundingBox.Descriptor*
        name: Descriptor
        nameWithType: SyncBoundingBox.Descriptor
        qualifiedName: Unity.Reflect.Model.SyncBoundingBox.Descriptor
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncBoundingBox.Descriptor
  Unity.Reflect.Model.SyncBoundingBox.#ctor*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncBoundingBox.#ctor*
        name: SyncBoundingBox
        nameWithType: SyncBoundingBox.SyncBoundingBox
        qualifiedName: Unity.Reflect.Model.SyncBoundingBox.SyncBoundingBox
      VB:
      - id: Unity.Reflect.Model.SyncBoundingBox.#ctor*
        name: SyncBoundingBox
        nameWithType: SyncBoundingBox.SyncBoundingBox
        qualifiedName: Unity.Reflect.Model.SyncBoundingBox.SyncBoundingBox
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncBoundingBox.#ctor
  Unity.Reflect.Model.SyncBoundingBox.Clone*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncBoundingBox.Clone*
        name: Clone
        nameWithType: SyncBoundingBox.Clone
        qualifiedName: Unity.Reflect.Model.SyncBoundingBox.Clone
      VB:
      - id: Unity.Reflect.Model.SyncBoundingBox.Clone*
        name: Clone
        nameWithType: SyncBoundingBox.Clone
        qualifiedName: Unity.Reflect.Model.SyncBoundingBox.Clone
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncBoundingBox.Clone
  Unity.Reflect.Model.SyncBoundingBox.Min*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncBoundingBox.Min*
        name: Min
        nameWithType: SyncBoundingBox.Min
        qualifiedName: Unity.Reflect.Model.SyncBoundingBox.Min
      VB:
      - id: Unity.Reflect.Model.SyncBoundingBox.Min*
        name: Min
        nameWithType: SyncBoundingBox.Min
        qualifiedName: Unity.Reflect.Model.SyncBoundingBox.Min
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncBoundingBox.Min
  Unity.Reflect.Model.SyncBoundingBox.Max*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncBoundingBox.Max*
        name: Max
        nameWithType: SyncBoundingBox.Max
        qualifiedName: Unity.Reflect.Model.SyncBoundingBox.Max
      VB:
      - id: Unity.Reflect.Model.SyncBoundingBox.Max*
        name: Max
        nameWithType: SyncBoundingBox.Max
        qualifiedName: Unity.Reflect.Model.SyncBoundingBox.Max
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncBoundingBox.Max
  Unity.Reflect.Model.SyncBoundingBox.Equals*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncBoundingBox.Equals*
        name: Equals
        nameWithType: SyncBoundingBox.Equals
        qualifiedName: Unity.Reflect.Model.SyncBoundingBox.Equals
      VB:
      - id: Unity.Reflect.Model.SyncBoundingBox.Equals*
        name: Equals
        nameWithType: SyncBoundingBox.Equals
        qualifiedName: Unity.Reflect.Model.SyncBoundingBox.Equals
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncBoundingBox.Equals
  Unity.Reflect.Model.SyncBoundingBox.GetHashCode*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncBoundingBox.GetHashCode*
        name: GetHashCode
        nameWithType: SyncBoundingBox.GetHashCode
        qualifiedName: Unity.Reflect.Model.SyncBoundingBox.GetHashCode
      VB:
      - id: Unity.Reflect.Model.SyncBoundingBox.GetHashCode*
        name: GetHashCode
        nameWithType: SyncBoundingBox.GetHashCode
        qualifiedName: Unity.Reflect.Model.SyncBoundingBox.GetHashCode
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncBoundingBox.GetHashCode
  Unity.Reflect.Model.SyncBoundingBox.ToString*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncBoundingBox.ToString*
        name: ToString
        nameWithType: SyncBoundingBox.ToString
        qualifiedName: Unity.Reflect.Model.SyncBoundingBox.ToString
      VB:
      - id: Unity.Reflect.Model.SyncBoundingBox.ToString*
        name: ToString
        nameWithType: SyncBoundingBox.ToString
        qualifiedName: Unity.Reflect.Model.SyncBoundingBox.ToString
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncBoundingBox.ToString
  Unity.Reflect.Model.SyncBoundingBox.WriteTo*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncBoundingBox.WriteTo*
        name: WriteTo
        nameWithType: SyncBoundingBox.WriteTo
        qualifiedName: Unity.Reflect.Model.SyncBoundingBox.WriteTo
      VB:
      - id: Unity.Reflect.Model.SyncBoundingBox.WriteTo*
        name: WriteTo
        nameWithType: SyncBoundingBox.WriteTo
        qualifiedName: Unity.Reflect.Model.SyncBoundingBox.WriteTo
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncBoundingBox.WriteTo
  Unity.Reflect.Model.SyncBoundingBox.CalculateSize*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncBoundingBox.CalculateSize*
        name: CalculateSize
        nameWithType: SyncBoundingBox.CalculateSize
        qualifiedName: Unity.Reflect.Model.SyncBoundingBox.CalculateSize
      VB:
      - id: Unity.Reflect.Model.SyncBoundingBox.CalculateSize*
        name: CalculateSize
        nameWithType: SyncBoundingBox.CalculateSize
        qualifiedName: Unity.Reflect.Model.SyncBoundingBox.CalculateSize
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncBoundingBox.CalculateSize
  Unity.Reflect.Model.SyncBoundingBox.MergeFrom*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncBoundingBox.MergeFrom*
        name: MergeFrom
        nameWithType: SyncBoundingBox.MergeFrom
        qualifiedName: Unity.Reflect.Model.SyncBoundingBox.MergeFrom
      VB:
      - id: Unity.Reflect.Model.SyncBoundingBox.MergeFrom*
        name: MergeFrom
        nameWithType: SyncBoundingBox.MergeFrom
        qualifiedName: Unity.Reflect.Model.SyncBoundingBox.MergeFrom
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncBoundingBox.MergeFrom
  Unity.Reflect.Model.SyncFloat2[]:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncFloat2
        name: SyncFloat2
        nameWithType: SyncFloat2
        qualifiedName: Unity.Reflect.Model.SyncFloat2
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: Unity.Reflect.Model.SyncFloat2
        name: SyncFloat2
        nameWithType: SyncFloat2
        qualifiedName: Unity.Reflect.Model.SyncFloat2
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  Unity.Reflect.Model.SyncSubMesh[]:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncSubMesh
        name: SyncSubMesh
        nameWithType: SyncSubMesh
        qualifiedName: Unity.Reflect.Model.SyncSubMesh
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: Unity.Reflect.Model.SyncSubMesh
        name: SyncSubMesh
        nameWithType: SyncSubMesh
        qualifiedName: Unity.Reflect.Model.SyncSubMesh
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  Unity.Reflect.Model.SyncMesh.#ctor*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncMesh.#ctor*
        name: SyncMesh
        nameWithType: SyncMesh.SyncMesh
        qualifiedName: Unity.Reflect.Model.SyncMesh.SyncMesh
      VB:
      - id: Unity.Reflect.Model.SyncMesh.#ctor*
        name: SyncMesh
        nameWithType: SyncMesh.SyncMesh
        qualifiedName: Unity.Reflect.Model.SyncMesh.SyncMesh
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncMesh.#ctor
  pb.MessageParser{Unity.Reflect.Model.SyncMesh}:
    name:
      CSharp:
      - id: pb.MessageParser`1
        name: pb.MessageParser
        nameWithType: pb.MessageParser
        qualifiedName: pb.MessageParser
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Unity.Reflect.Model.SyncMesh
        name: SyncMesh
        nameWithType: SyncMesh
        qualifiedName: Unity.Reflect.Model.SyncMesh
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: pb.MessageParser`1
        name: pb.MessageParser
        nameWithType: pb.MessageParser
        qualifiedName: pb.MessageParser
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Unity.Reflect.Model.SyncMesh
        name: SyncMesh
        nameWithType: SyncMesh
        qualifiedName: Unity.Reflect.Model.SyncMesh
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: pb.MessageParser`1
    commentId: '!:pb.MessageParser{Unity.Reflect.Model.SyncMesh}'
  Unity.Reflect.Model.SyncMesh.Parser*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncMesh.Parser*
        name: Parser
        nameWithType: SyncMesh.Parser
        qualifiedName: Unity.Reflect.Model.SyncMesh.Parser
      VB:
      - id: Unity.Reflect.Model.SyncMesh.Parser*
        name: Parser
        nameWithType: SyncMesh.Parser
        qualifiedName: Unity.Reflect.Model.SyncMesh.Parser
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncMesh.Parser
  Unity.Reflect.Model.SyncMesh.Descriptor*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncMesh.Descriptor*
        name: Descriptor
        nameWithType: SyncMesh.Descriptor
        qualifiedName: Unity.Reflect.Model.SyncMesh.Descriptor
      VB:
      - id: Unity.Reflect.Model.SyncMesh.Descriptor*
        name: Descriptor
        nameWithType: SyncMesh.Descriptor
        qualifiedName: Unity.Reflect.Model.SyncMesh.Descriptor
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncMesh.Descriptor
  Unity.Reflect.Model.SyncMesh:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncMesh
        name: SyncMesh
        nameWithType: SyncMesh
        qualifiedName: Unity.Reflect.Model.SyncMesh
      VB:
      - id: Unity.Reflect.Model.SyncMesh
        name: SyncMesh
        nameWithType: SyncMesh
        qualifiedName: Unity.Reflect.Model.SyncMesh
    isDefinition: true
    parent: Unity.Reflect.Model
    commentId: T:Unity.Reflect.Model.SyncMesh
  Unity.Reflect.Model.SyncMesh.Clone*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncMesh.Clone*
        name: Clone
        nameWithType: SyncMesh.Clone
        qualifiedName: Unity.Reflect.Model.SyncMesh.Clone
      VB:
      - id: Unity.Reflect.Model.SyncMesh.Clone*
        name: Clone
        nameWithType: SyncMesh.Clone
        qualifiedName: Unity.Reflect.Model.SyncMesh.Clone
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncMesh.Clone
  Unity.Reflect.Model.SyncMesh.Name*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncMesh.Name*
        name: Name
        nameWithType: SyncMesh.Name
        qualifiedName: Unity.Reflect.Model.SyncMesh.Name
      VB:
      - id: Unity.Reflect.Model.SyncMesh.Name*
        name: Name
        nameWithType: SyncMesh.Name
        qualifiedName: Unity.Reflect.Model.SyncMesh.Name
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncMesh.Name
  pbc.RepeatedField`1:
    name:
      CSharp:
      - id: pbc.RepeatedField`1
        name: pbc.RepeatedField
        nameWithType: pbc.RepeatedField
        qualifiedName: pbc.RepeatedField
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: pbc.RepeatedField`1
        name: pbc.RepeatedField
        nameWithType: pbc.RepeatedField
        qualifiedName: pbc.RepeatedField
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
  pbc.RepeatedField{Unity.Reflect.Model.SyncFloat3}:
    name:
      CSharp:
      - id: pbc.RepeatedField`1
        name: pbc.RepeatedField
        nameWithType: pbc.RepeatedField
        qualifiedName: pbc.RepeatedField
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Unity.Reflect.Model.SyncFloat3
        name: SyncFloat3
        nameWithType: SyncFloat3
        qualifiedName: Unity.Reflect.Model.SyncFloat3
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: pbc.RepeatedField`1
        name: pbc.RepeatedField
        nameWithType: pbc.RepeatedField
        qualifiedName: pbc.RepeatedField
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Unity.Reflect.Model.SyncFloat3
        name: SyncFloat3
        nameWithType: SyncFloat3
        qualifiedName: Unity.Reflect.Model.SyncFloat3
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: pbc.RepeatedField`1
    commentId: '!:pbc.RepeatedField{Unity.Reflect.Model.SyncFloat3}'
  Unity.Reflect.Model.SyncMesh.Vertices*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncMesh.Vertices*
        name: Vertices
        nameWithType: SyncMesh.Vertices
        qualifiedName: Unity.Reflect.Model.SyncMesh.Vertices
      VB:
      - id: Unity.Reflect.Model.SyncMesh.Vertices*
        name: Vertices
        nameWithType: SyncMesh.Vertices
        qualifiedName: Unity.Reflect.Model.SyncMesh.Vertices
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncMesh.Vertices
  Unity.Reflect.Model.SyncMesh.Normals*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncMesh.Normals*
        name: Normals
        nameWithType: SyncMesh.Normals
        qualifiedName: Unity.Reflect.Model.SyncMesh.Normals
      VB:
      - id: Unity.Reflect.Model.SyncMesh.Normals*
        name: Normals
        nameWithType: SyncMesh.Normals
        qualifiedName: Unity.Reflect.Model.SyncMesh.Normals
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncMesh.Normals
  pbc.RepeatedField{Unity.Reflect.Model.SyncFloat2}:
    name:
      CSharp:
      - id: pbc.RepeatedField`1
        name: pbc.RepeatedField
        nameWithType: pbc.RepeatedField
        qualifiedName: pbc.RepeatedField
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Unity.Reflect.Model.SyncFloat2
        name: SyncFloat2
        nameWithType: SyncFloat2
        qualifiedName: Unity.Reflect.Model.SyncFloat2
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: pbc.RepeatedField`1
        name: pbc.RepeatedField
        nameWithType: pbc.RepeatedField
        qualifiedName: pbc.RepeatedField
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Unity.Reflect.Model.SyncFloat2
        name: SyncFloat2
        nameWithType: SyncFloat2
        qualifiedName: Unity.Reflect.Model.SyncFloat2
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: pbc.RepeatedField`1
    commentId: '!:pbc.RepeatedField{Unity.Reflect.Model.SyncFloat2}'
  Unity.Reflect.Model.SyncMesh.Uvs*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncMesh.Uvs*
        name: Uvs
        nameWithType: SyncMesh.Uvs
        qualifiedName: Unity.Reflect.Model.SyncMesh.Uvs
      VB:
      - id: Unity.Reflect.Model.SyncMesh.Uvs*
        name: Uvs
        nameWithType: SyncMesh.Uvs
        qualifiedName: Unity.Reflect.Model.SyncMesh.Uvs
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncMesh.Uvs
  pbc.RepeatedField{Unity.Reflect.Model.SyncSubMesh}:
    name:
      CSharp:
      - id: pbc.RepeatedField`1
        name: pbc.RepeatedField
        nameWithType: pbc.RepeatedField
        qualifiedName: pbc.RepeatedField
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Unity.Reflect.Model.SyncSubMesh
        name: SyncSubMesh
        nameWithType: SyncSubMesh
        qualifiedName: Unity.Reflect.Model.SyncSubMesh
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: pbc.RepeatedField`1
        name: pbc.RepeatedField
        nameWithType: pbc.RepeatedField
        qualifiedName: pbc.RepeatedField
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Unity.Reflect.Model.SyncSubMesh
        name: SyncSubMesh
        nameWithType: SyncSubMesh
        qualifiedName: Unity.Reflect.Model.SyncSubMesh
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: pbc.RepeatedField`1
    commentId: '!:pbc.RepeatedField{Unity.Reflect.Model.SyncSubMesh}'
  Unity.Reflect.Model.SyncMesh.Submeshes*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncMesh.Submeshes*
        name: Submeshes
        nameWithType: SyncMesh.Submeshes
        qualifiedName: Unity.Reflect.Model.SyncMesh.Submeshes
      VB:
      - id: Unity.Reflect.Model.SyncMesh.Submeshes*
        name: Submeshes
        nameWithType: SyncMesh.Submeshes
        qualifiedName: Unity.Reflect.Model.SyncMesh.Submeshes
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncMesh.Submeshes
  Unity.Reflect.Model.SyncMesh.Equals*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncMesh.Equals*
        name: Equals
        nameWithType: SyncMesh.Equals
        qualifiedName: Unity.Reflect.Model.SyncMesh.Equals
      VB:
      - id: Unity.Reflect.Model.SyncMesh.Equals*
        name: Equals
        nameWithType: SyncMesh.Equals
        qualifiedName: Unity.Reflect.Model.SyncMesh.Equals
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncMesh.Equals
  Unity.Reflect.Model.SyncMesh.GetHashCode*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncMesh.GetHashCode*
        name: GetHashCode
        nameWithType: SyncMesh.GetHashCode
        qualifiedName: Unity.Reflect.Model.SyncMesh.GetHashCode
      VB:
      - id: Unity.Reflect.Model.SyncMesh.GetHashCode*
        name: GetHashCode
        nameWithType: SyncMesh.GetHashCode
        qualifiedName: Unity.Reflect.Model.SyncMesh.GetHashCode
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncMesh.GetHashCode
  Unity.Reflect.Model.SyncMesh.ToString*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncMesh.ToString*
        name: ToString
        nameWithType: SyncMesh.ToString
        qualifiedName: Unity.Reflect.Model.SyncMesh.ToString
      VB:
      - id: Unity.Reflect.Model.SyncMesh.ToString*
        name: ToString
        nameWithType: SyncMesh.ToString
        qualifiedName: Unity.Reflect.Model.SyncMesh.ToString
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncMesh.ToString
  Unity.Reflect.Model.SyncMesh.WriteTo*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncMesh.WriteTo*
        name: WriteTo
        nameWithType: SyncMesh.WriteTo
        qualifiedName: Unity.Reflect.Model.SyncMesh.WriteTo
      VB:
      - id: Unity.Reflect.Model.SyncMesh.WriteTo*
        name: WriteTo
        nameWithType: SyncMesh.WriteTo
        qualifiedName: Unity.Reflect.Model.SyncMesh.WriteTo
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncMesh.WriteTo
  Unity.Reflect.Model.SyncMesh.CalculateSize*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncMesh.CalculateSize*
        name: CalculateSize
        nameWithType: SyncMesh.CalculateSize
        qualifiedName: Unity.Reflect.Model.SyncMesh.CalculateSize
      VB:
      - id: Unity.Reflect.Model.SyncMesh.CalculateSize*
        name: CalculateSize
        nameWithType: SyncMesh.CalculateSize
        qualifiedName: Unity.Reflect.Model.SyncMesh.CalculateSize
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncMesh.CalculateSize
  Unity.Reflect.Model.SyncMesh.MergeFrom*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncMesh.MergeFrom*
        name: MergeFrom
        nameWithType: SyncMesh.MergeFrom
        qualifiedName: Unity.Reflect.Model.SyncMesh.MergeFrom
      VB:
      - id: Unity.Reflect.Model.SyncMesh.MergeFrom*
        name: MergeFrom
        nameWithType: SyncMesh.MergeFrom
        qualifiedName: Unity.Reflect.Model.SyncMesh.MergeFrom
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncMesh.MergeFrom
  System.Int32[]:
    name:
      CSharp:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  Unity.Reflect.Model.SyncSubMesh.#ctor*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncSubMesh.#ctor*
        name: SyncSubMesh
        nameWithType: SyncSubMesh.SyncSubMesh
        qualifiedName: Unity.Reflect.Model.SyncSubMesh.SyncSubMesh
      VB:
      - id: Unity.Reflect.Model.SyncSubMesh.#ctor*
        name: SyncSubMesh
        nameWithType: SyncSubMesh.SyncSubMesh
        qualifiedName: Unity.Reflect.Model.SyncSubMesh.SyncSubMesh
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncSubMesh.#ctor
  pb.MessageParser{Unity.Reflect.Model.SyncSubMesh}:
    name:
      CSharp:
      - id: pb.MessageParser`1
        name: pb.MessageParser
        nameWithType: pb.MessageParser
        qualifiedName: pb.MessageParser
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Unity.Reflect.Model.SyncSubMesh
        name: SyncSubMesh
        nameWithType: SyncSubMesh
        qualifiedName: Unity.Reflect.Model.SyncSubMesh
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: pb.MessageParser`1
        name: pb.MessageParser
        nameWithType: pb.MessageParser
        qualifiedName: pb.MessageParser
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Unity.Reflect.Model.SyncSubMesh
        name: SyncSubMesh
        nameWithType: SyncSubMesh
        qualifiedName: Unity.Reflect.Model.SyncSubMesh
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: pb.MessageParser`1
    commentId: '!:pb.MessageParser{Unity.Reflect.Model.SyncSubMesh}'
  Unity.Reflect.Model.SyncSubMesh.Parser*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncSubMesh.Parser*
        name: Parser
        nameWithType: SyncSubMesh.Parser
        qualifiedName: Unity.Reflect.Model.SyncSubMesh.Parser
      VB:
      - id: Unity.Reflect.Model.SyncSubMesh.Parser*
        name: Parser
        nameWithType: SyncSubMesh.Parser
        qualifiedName: Unity.Reflect.Model.SyncSubMesh.Parser
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncSubMesh.Parser
  Unity.Reflect.Model.SyncSubMesh.Descriptor*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncSubMesh.Descriptor*
        name: Descriptor
        nameWithType: SyncSubMesh.Descriptor
        qualifiedName: Unity.Reflect.Model.SyncSubMesh.Descriptor
      VB:
      - id: Unity.Reflect.Model.SyncSubMesh.Descriptor*
        name: Descriptor
        nameWithType: SyncSubMesh.Descriptor
        qualifiedName: Unity.Reflect.Model.SyncSubMesh.Descriptor
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncSubMesh.Descriptor
  Unity.Reflect.Model.SyncSubMesh:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncSubMesh
        name: SyncSubMesh
        nameWithType: SyncSubMesh
        qualifiedName: Unity.Reflect.Model.SyncSubMesh
      VB:
      - id: Unity.Reflect.Model.SyncSubMesh
        name: SyncSubMesh
        nameWithType: SyncSubMesh
        qualifiedName: Unity.Reflect.Model.SyncSubMesh
    isDefinition: true
    parent: Unity.Reflect.Model
    commentId: T:Unity.Reflect.Model.SyncSubMesh
  Unity.Reflect.Model.SyncSubMesh.Clone*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncSubMesh.Clone*
        name: Clone
        nameWithType: SyncSubMesh.Clone
        qualifiedName: Unity.Reflect.Model.SyncSubMesh.Clone
      VB:
      - id: Unity.Reflect.Model.SyncSubMesh.Clone*
        name: Clone
        nameWithType: SyncSubMesh.Clone
        qualifiedName: Unity.Reflect.Model.SyncSubMesh.Clone
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncSubMesh.Clone
  pbc.RepeatedField{System.Int32}:
    name:
      CSharp:
      - id: pbc.RepeatedField`1
        name: pbc.RepeatedField
        nameWithType: pbc.RepeatedField
        qualifiedName: pbc.RepeatedField
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: pbc.RepeatedField`1
        name: pbc.RepeatedField
        nameWithType: pbc.RepeatedField
        qualifiedName: pbc.RepeatedField
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: pbc.RepeatedField`1
    commentId: '!:pbc.RepeatedField{System.Int32}'
  Unity.Reflect.Model.SyncSubMesh.Triangles*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncSubMesh.Triangles*
        name: Triangles
        nameWithType: SyncSubMesh.Triangles
        qualifiedName: Unity.Reflect.Model.SyncSubMesh.Triangles
      VB:
      - id: Unity.Reflect.Model.SyncSubMesh.Triangles*
        name: Triangles
        nameWithType: SyncSubMesh.Triangles
        qualifiedName: Unity.Reflect.Model.SyncSubMesh.Triangles
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncSubMesh.Triangles
  Unity.Reflect.Model.SyncSubMesh.Equals*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncSubMesh.Equals*
        name: Equals
        nameWithType: SyncSubMesh.Equals
        qualifiedName: Unity.Reflect.Model.SyncSubMesh.Equals
      VB:
      - id: Unity.Reflect.Model.SyncSubMesh.Equals*
        name: Equals
        nameWithType: SyncSubMesh.Equals
        qualifiedName: Unity.Reflect.Model.SyncSubMesh.Equals
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncSubMesh.Equals
  Unity.Reflect.Model.SyncSubMesh.GetHashCode*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncSubMesh.GetHashCode*
        name: GetHashCode
        nameWithType: SyncSubMesh.GetHashCode
        qualifiedName: Unity.Reflect.Model.SyncSubMesh.GetHashCode
      VB:
      - id: Unity.Reflect.Model.SyncSubMesh.GetHashCode*
        name: GetHashCode
        nameWithType: SyncSubMesh.GetHashCode
        qualifiedName: Unity.Reflect.Model.SyncSubMesh.GetHashCode
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncSubMesh.GetHashCode
  Unity.Reflect.Model.SyncSubMesh.ToString*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncSubMesh.ToString*
        name: ToString
        nameWithType: SyncSubMesh.ToString
        qualifiedName: Unity.Reflect.Model.SyncSubMesh.ToString
      VB:
      - id: Unity.Reflect.Model.SyncSubMesh.ToString*
        name: ToString
        nameWithType: SyncSubMesh.ToString
        qualifiedName: Unity.Reflect.Model.SyncSubMesh.ToString
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncSubMesh.ToString
  Unity.Reflect.Model.SyncSubMesh.WriteTo*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncSubMesh.WriteTo*
        name: WriteTo
        nameWithType: SyncSubMesh.WriteTo
        qualifiedName: Unity.Reflect.Model.SyncSubMesh.WriteTo
      VB:
      - id: Unity.Reflect.Model.SyncSubMesh.WriteTo*
        name: WriteTo
        nameWithType: SyncSubMesh.WriteTo
        qualifiedName: Unity.Reflect.Model.SyncSubMesh.WriteTo
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncSubMesh.WriteTo
  Unity.Reflect.Model.SyncSubMesh.CalculateSize*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncSubMesh.CalculateSize*
        name: CalculateSize
        nameWithType: SyncSubMesh.CalculateSize
        qualifiedName: Unity.Reflect.Model.SyncSubMesh.CalculateSize
      VB:
      - id: Unity.Reflect.Model.SyncSubMesh.CalculateSize*
        name: CalculateSize
        nameWithType: SyncSubMesh.CalculateSize
        qualifiedName: Unity.Reflect.Model.SyncSubMesh.CalculateSize
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncSubMesh.CalculateSize
  Unity.Reflect.Model.SyncSubMesh.MergeFrom*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncSubMesh.MergeFrom*
        name: MergeFrom
        nameWithType: SyncSubMesh.MergeFrom
        qualifiedName: Unity.Reflect.Model.SyncSubMesh.MergeFrom
      VB:
      - id: Unity.Reflect.Model.SyncSubMesh.MergeFrom*
        name: MergeFrom
        nameWithType: SyncSubMesh.MergeFrom
        qualifiedName: Unity.Reflect.Model.SyncSubMesh.MergeFrom
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncSubMesh.MergeFrom
  Unity.Reflect.Model.SyncObject.#ctor*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncObject.#ctor*
        name: SyncObject
        nameWithType: SyncObject.SyncObject
        qualifiedName: Unity.Reflect.Model.SyncObject.SyncObject
      VB:
      - id: Unity.Reflect.Model.SyncObject.#ctor*
        name: SyncObject
        nameWithType: SyncObject.SyncObject
        qualifiedName: Unity.Reflect.Model.SyncObject.SyncObject
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncObject.#ctor
  Unity.Reflect.Model.SyncObject.IsEmpty*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncObject.IsEmpty*
        name: IsEmpty
        nameWithType: SyncObject.IsEmpty
        qualifiedName: Unity.Reflect.Model.SyncObject.IsEmpty
      VB:
      - id: Unity.Reflect.Model.SyncObject.IsEmpty*
        name: IsEmpty
        nameWithType: SyncObject.IsEmpty
        qualifiedName: Unity.Reflect.Model.SyncObject.IsEmpty
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncObject.IsEmpty
  pb.MessageParser{Unity.Reflect.Model.SyncObject}:
    name:
      CSharp:
      - id: pb.MessageParser`1
        name: pb.MessageParser
        nameWithType: pb.MessageParser
        qualifiedName: pb.MessageParser
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Unity.Reflect.Model.SyncObject
        name: SyncObject
        nameWithType: SyncObject
        qualifiedName: Unity.Reflect.Model.SyncObject
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: pb.MessageParser`1
        name: pb.MessageParser
        nameWithType: pb.MessageParser
        qualifiedName: pb.MessageParser
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Unity.Reflect.Model.SyncObject
        name: SyncObject
        nameWithType: SyncObject
        qualifiedName: Unity.Reflect.Model.SyncObject
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: pb.MessageParser`1
    commentId: '!:pb.MessageParser{Unity.Reflect.Model.SyncObject}'
  Unity.Reflect.Model.SyncObject.Parser*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncObject.Parser*
        name: Parser
        nameWithType: SyncObject.Parser
        qualifiedName: Unity.Reflect.Model.SyncObject.Parser
      VB:
      - id: Unity.Reflect.Model.SyncObject.Parser*
        name: Parser
        nameWithType: SyncObject.Parser
        qualifiedName: Unity.Reflect.Model.SyncObject.Parser
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncObject.Parser
  Unity.Reflect.Model.SyncObject.Descriptor*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncObject.Descriptor*
        name: Descriptor
        nameWithType: SyncObject.Descriptor
        qualifiedName: Unity.Reflect.Model.SyncObject.Descriptor
      VB:
      - id: Unity.Reflect.Model.SyncObject.Descriptor*
        name: Descriptor
        nameWithType: SyncObject.Descriptor
        qualifiedName: Unity.Reflect.Model.SyncObject.Descriptor
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncObject.Descriptor
  Unity.Reflect.Model.SyncObject:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncObject
        name: SyncObject
        nameWithType: SyncObject
        qualifiedName: Unity.Reflect.Model.SyncObject
      VB:
      - id: Unity.Reflect.Model.SyncObject
        name: SyncObject
        nameWithType: SyncObject
        qualifiedName: Unity.Reflect.Model.SyncObject
    isDefinition: true
    parent: Unity.Reflect.Model
    commentId: T:Unity.Reflect.Model.SyncObject
  Unity.Reflect.Model.SyncObject.Clone*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncObject.Clone*
        name: Clone
        nameWithType: SyncObject.Clone
        qualifiedName: Unity.Reflect.Model.SyncObject.Clone
      VB:
      - id: Unity.Reflect.Model.SyncObject.Clone*
        name: Clone
        nameWithType: SyncObject.Clone
        qualifiedName: Unity.Reflect.Model.SyncObject.Clone
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncObject.Clone
  Unity.Reflect.Model.SyncObject.Name*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncObject.Name*
        name: Name
        nameWithType: SyncObject.Name
        qualifiedName: Unity.Reflect.Model.SyncObject.Name
      VB:
      - id: Unity.Reflect.Model.SyncObject.Name*
        name: Name
        nameWithType: SyncObject.Name
        qualifiedName: Unity.Reflect.Model.SyncObject.Name
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncObject.Name
  Unity.Reflect.Model.SyncObject.Transform*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncObject.Transform*
        name: Transform
        nameWithType: SyncObject.Transform
        qualifiedName: Unity.Reflect.Model.SyncObject.Transform
      VB:
      - id: Unity.Reflect.Model.SyncObject.Transform*
        name: Transform
        nameWithType: SyncObject.Transform
        qualifiedName: Unity.Reflect.Model.SyncObject.Transform
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncObject.Transform
  Unity.Reflect.Model.SyncObject.Mesh*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncObject.Mesh*
        name: Mesh
        nameWithType: SyncObject.Mesh
        qualifiedName: Unity.Reflect.Model.SyncObject.Mesh
      VB:
      - id: Unity.Reflect.Model.SyncObject.Mesh*
        name: Mesh
        nameWithType: SyncObject.Mesh
        qualifiedName: Unity.Reflect.Model.SyncObject.Mesh
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncObject.Mesh
  pbc.RepeatedField{System.String}:
    name:
      CSharp:
      - id: pbc.RepeatedField`1
        name: pbc.RepeatedField
        nameWithType: pbc.RepeatedField
        qualifiedName: pbc.RepeatedField
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: pbc.RepeatedField`1
        name: pbc.RepeatedField
        nameWithType: pbc.RepeatedField
        qualifiedName: pbc.RepeatedField
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: pbc.RepeatedField`1
    commentId: '!:pbc.RepeatedField{System.String}'
  Unity.Reflect.Model.SyncObject.Materials*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncObject.Materials*
        name: Materials
        nameWithType: SyncObject.Materials
        qualifiedName: Unity.Reflect.Model.SyncObject.Materials
      VB:
      - id: Unity.Reflect.Model.SyncObject.Materials*
        name: Materials
        nameWithType: SyncObject.Materials
        qualifiedName: Unity.Reflect.Model.SyncObject.Materials
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncObject.Materials
  pbc.RepeatedField{Unity.Reflect.Model.SyncLight}:
    name:
      CSharp:
      - id: pbc.RepeatedField`1
        name: pbc.RepeatedField
        nameWithType: pbc.RepeatedField
        qualifiedName: pbc.RepeatedField
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Unity.Reflect.Model.SyncLight
        name: SyncLight
        nameWithType: SyncLight
        qualifiedName: Unity.Reflect.Model.SyncLight
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: pbc.RepeatedField`1
        name: pbc.RepeatedField
        nameWithType: pbc.RepeatedField
        qualifiedName: pbc.RepeatedField
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Unity.Reflect.Model.SyncLight
        name: SyncLight
        nameWithType: SyncLight
        qualifiedName: Unity.Reflect.Model.SyncLight
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: pbc.RepeatedField`1
    commentId: '!:pbc.RepeatedField{Unity.Reflect.Model.SyncLight}'
  Unity.Reflect.Model.SyncObject.Lights*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncObject.Lights*
        name: Lights
        nameWithType: SyncObject.Lights
        qualifiedName: Unity.Reflect.Model.SyncObject.Lights
      VB:
      - id: Unity.Reflect.Model.SyncObject.Lights*
        name: Lights
        nameWithType: SyncObject.Lights
        qualifiedName: Unity.Reflect.Model.SyncObject.Lights
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncObject.Lights
  pbc.RepeatedField{Unity.Reflect.Model.SyncRPC}:
    name:
      CSharp:
      - id: pbc.RepeatedField`1
        name: pbc.RepeatedField
        nameWithType: pbc.RepeatedField
        qualifiedName: pbc.RepeatedField
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Unity.Reflect.Model.SyncRPC
        name: SyncRPC
        nameWithType: SyncRPC
        qualifiedName: Unity.Reflect.Model.SyncRPC
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: pbc.RepeatedField`1
        name: pbc.RepeatedField
        nameWithType: pbc.RepeatedField
        qualifiedName: pbc.RepeatedField
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Unity.Reflect.Model.SyncRPC
        name: SyncRPC
        nameWithType: SyncRPC
        qualifiedName: Unity.Reflect.Model.SyncRPC
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: pbc.RepeatedField`1
    commentId: '!:pbc.RepeatedField{Unity.Reflect.Model.SyncRPC}'
  Unity.Reflect.Model.SyncObject.Rpcs*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncObject.Rpcs*
        name: Rpcs
        nameWithType: SyncObject.Rpcs
        qualifiedName: Unity.Reflect.Model.SyncObject.Rpcs
      VB:
      - id: Unity.Reflect.Model.SyncObject.Rpcs*
        name: Rpcs
        nameWithType: SyncObject.Rpcs
        qualifiedName: Unity.Reflect.Model.SyncObject.Rpcs
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncObject.Rpcs
  pbc.RepeatedField{Unity.Reflect.Model.SyncCamera}:
    name:
      CSharp:
      - id: pbc.RepeatedField`1
        name: pbc.RepeatedField
        nameWithType: pbc.RepeatedField
        qualifiedName: pbc.RepeatedField
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Unity.Reflect.Model.SyncCamera
        name: SyncCamera
        nameWithType: SyncCamera
        qualifiedName: Unity.Reflect.Model.SyncCamera
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: pbc.RepeatedField`1
        name: pbc.RepeatedField
        nameWithType: pbc.RepeatedField
        qualifiedName: pbc.RepeatedField
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Unity.Reflect.Model.SyncCamera
        name: SyncCamera
        nameWithType: SyncCamera
        qualifiedName: Unity.Reflect.Model.SyncCamera
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: pbc.RepeatedField`1
    commentId: '!:pbc.RepeatedField{Unity.Reflect.Model.SyncCamera}'
  Unity.Reflect.Model.SyncObject.Cameras*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncObject.Cameras*
        name: Cameras
        nameWithType: SyncObject.Cameras
        qualifiedName: Unity.Reflect.Model.SyncObject.Cameras
      VB:
      - id: Unity.Reflect.Model.SyncObject.Cameras*
        name: Cameras
        nameWithType: SyncObject.Cameras
        qualifiedName: Unity.Reflect.Model.SyncObject.Cameras
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncObject.Cameras
  pbc.MapField`2:
    name:
      CSharp:
      - id: pbc.MapField`2
        name: pbc.MapField
        nameWithType: pbc.MapField
        qualifiedName: pbc.MapField
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: pbc.MapField`2
        name: pbc.MapField
        nameWithType: pbc.MapField
        qualifiedName: pbc.MapField
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
  pbc.MapField{System.String,Unity.Reflect.Model.SyncParameter}:
    name:
      CSharp:
      - id: pbc.MapField`2
        name: pbc.MapField
        nameWithType: pbc.MapField
        qualifiedName: pbc.MapField
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Unity.Reflect.Model.SyncParameter
        name: SyncParameter
        nameWithType: SyncParameter
        qualifiedName: Unity.Reflect.Model.SyncParameter
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: pbc.MapField`2
        name: pbc.MapField
        nameWithType: pbc.MapField
        qualifiedName: pbc.MapField
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Unity.Reflect.Model.SyncParameter
        name: SyncParameter
        nameWithType: SyncParameter
        qualifiedName: Unity.Reflect.Model.SyncParameter
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: pbc.MapField`2
    commentId: '!:pbc.MapField{System.String,Unity.Reflect.Model.SyncParameter}'
  Unity.Reflect.Model.SyncObject.Metadata*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncObject.Metadata*
        name: Metadata
        nameWithType: SyncObject.Metadata
        qualifiedName: Unity.Reflect.Model.SyncObject.Metadata
      VB:
      - id: Unity.Reflect.Model.SyncObject.Metadata*
        name: Metadata
        nameWithType: SyncObject.Metadata
        qualifiedName: Unity.Reflect.Model.SyncObject.Metadata
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncObject.Metadata
  pbc.RepeatedField{Unity.Reflect.Model.SyncObject}:
    name:
      CSharp:
      - id: pbc.RepeatedField`1
        name: pbc.RepeatedField
        nameWithType: pbc.RepeatedField
        qualifiedName: pbc.RepeatedField
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Unity.Reflect.Model.SyncObject
        name: SyncObject
        nameWithType: SyncObject
        qualifiedName: Unity.Reflect.Model.SyncObject
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: pbc.RepeatedField`1
        name: pbc.RepeatedField
        nameWithType: pbc.RepeatedField
        qualifiedName: pbc.RepeatedField
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Unity.Reflect.Model.SyncObject
        name: SyncObject
        nameWithType: SyncObject
        qualifiedName: Unity.Reflect.Model.SyncObject
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: pbc.RepeatedField`1
    commentId: '!:pbc.RepeatedField{Unity.Reflect.Model.SyncObject}'
  Unity.Reflect.Model.SyncObject.Children*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncObject.Children*
        name: Children
        nameWithType: SyncObject.Children
        qualifiedName: Unity.Reflect.Model.SyncObject.Children
      VB:
      - id: Unity.Reflect.Model.SyncObject.Children*
        name: Children
        nameWithType: SyncObject.Children
        qualifiedName: Unity.Reflect.Model.SyncObject.Children
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncObject.Children
  Unity.Reflect.Model.SyncObject.Equals*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncObject.Equals*
        name: Equals
        nameWithType: SyncObject.Equals
        qualifiedName: Unity.Reflect.Model.SyncObject.Equals
      VB:
      - id: Unity.Reflect.Model.SyncObject.Equals*
        name: Equals
        nameWithType: SyncObject.Equals
        qualifiedName: Unity.Reflect.Model.SyncObject.Equals
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncObject.Equals
  Unity.Reflect.Model.SyncObject.GetHashCode*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncObject.GetHashCode*
        name: GetHashCode
        nameWithType: SyncObject.GetHashCode
        qualifiedName: Unity.Reflect.Model.SyncObject.GetHashCode
      VB:
      - id: Unity.Reflect.Model.SyncObject.GetHashCode*
        name: GetHashCode
        nameWithType: SyncObject.GetHashCode
        qualifiedName: Unity.Reflect.Model.SyncObject.GetHashCode
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncObject.GetHashCode
  Unity.Reflect.Model.SyncObject.ToString*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncObject.ToString*
        name: ToString
        nameWithType: SyncObject.ToString
        qualifiedName: Unity.Reflect.Model.SyncObject.ToString
      VB:
      - id: Unity.Reflect.Model.SyncObject.ToString*
        name: ToString
        nameWithType: SyncObject.ToString
        qualifiedName: Unity.Reflect.Model.SyncObject.ToString
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncObject.ToString
  Unity.Reflect.Model.SyncObject.WriteTo*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncObject.WriteTo*
        name: WriteTo
        nameWithType: SyncObject.WriteTo
        qualifiedName: Unity.Reflect.Model.SyncObject.WriteTo
      VB:
      - id: Unity.Reflect.Model.SyncObject.WriteTo*
        name: WriteTo
        nameWithType: SyncObject.WriteTo
        qualifiedName: Unity.Reflect.Model.SyncObject.WriteTo
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncObject.WriteTo
  Unity.Reflect.Model.SyncObject.CalculateSize*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncObject.CalculateSize*
        name: CalculateSize
        nameWithType: SyncObject.CalculateSize
        qualifiedName: Unity.Reflect.Model.SyncObject.CalculateSize
      VB:
      - id: Unity.Reflect.Model.SyncObject.CalculateSize*
        name: CalculateSize
        nameWithType: SyncObject.CalculateSize
        qualifiedName: Unity.Reflect.Model.SyncObject.CalculateSize
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncObject.CalculateSize
  Unity.Reflect.Model.SyncObject.MergeFrom*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncObject.MergeFrom*
        name: MergeFrom
        nameWithType: SyncObject.MergeFrom
        qualifiedName: Unity.Reflect.Model.SyncObject.MergeFrom
      VB:
      - id: Unity.Reflect.Model.SyncObject.MergeFrom*
        name: MergeFrom
        nameWithType: SyncObject.MergeFrom
        qualifiedName: Unity.Reflect.Model.SyncObject.MergeFrom
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncObject.MergeFrom
  pb.MessageParser{Unity.Reflect.Model.SyncObjectInstance}:
    name:
      CSharp:
      - id: pb.MessageParser`1
        name: pb.MessageParser
        nameWithType: pb.MessageParser
        qualifiedName: pb.MessageParser
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Unity.Reflect.Model.SyncObjectInstance
        name: SyncObjectInstance
        nameWithType: SyncObjectInstance
        qualifiedName: Unity.Reflect.Model.SyncObjectInstance
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: pb.MessageParser`1
        name: pb.MessageParser
        nameWithType: pb.MessageParser
        qualifiedName: pb.MessageParser
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Unity.Reflect.Model.SyncObjectInstance
        name: SyncObjectInstance
        nameWithType: SyncObjectInstance
        qualifiedName: Unity.Reflect.Model.SyncObjectInstance
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: pb.MessageParser`1
    commentId: '!:pb.MessageParser{Unity.Reflect.Model.SyncObjectInstance}'
  Unity.Reflect.Model.SyncObjectInstance.Parser*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncObjectInstance.Parser*
        name: Parser
        nameWithType: SyncObjectInstance.Parser
        qualifiedName: Unity.Reflect.Model.SyncObjectInstance.Parser
      VB:
      - id: Unity.Reflect.Model.SyncObjectInstance.Parser*
        name: Parser
        nameWithType: SyncObjectInstance.Parser
        qualifiedName: Unity.Reflect.Model.SyncObjectInstance.Parser
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncObjectInstance.Parser
  Unity.Reflect.Model.SyncObjectInstance.Descriptor*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncObjectInstance.Descriptor*
        name: Descriptor
        nameWithType: SyncObjectInstance.Descriptor
        qualifiedName: Unity.Reflect.Model.SyncObjectInstance.Descriptor
      VB:
      - id: Unity.Reflect.Model.SyncObjectInstance.Descriptor*
        name: Descriptor
        nameWithType: SyncObjectInstance.Descriptor
        qualifiedName: Unity.Reflect.Model.SyncObjectInstance.Descriptor
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncObjectInstance.Descriptor
  Unity.Reflect.Model.SyncObjectInstance.#ctor*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncObjectInstance.#ctor*
        name: SyncObjectInstance
        nameWithType: SyncObjectInstance.SyncObjectInstance
        qualifiedName: Unity.Reflect.Model.SyncObjectInstance.SyncObjectInstance
      VB:
      - id: Unity.Reflect.Model.SyncObjectInstance.#ctor*
        name: SyncObjectInstance
        nameWithType: SyncObjectInstance.SyncObjectInstance
        qualifiedName: Unity.Reflect.Model.SyncObjectInstance.SyncObjectInstance
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncObjectInstance.#ctor
  Unity.Reflect.Model.SyncObjectInstance:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncObjectInstance
        name: SyncObjectInstance
        nameWithType: SyncObjectInstance
        qualifiedName: Unity.Reflect.Model.SyncObjectInstance
      VB:
      - id: Unity.Reflect.Model.SyncObjectInstance
        name: SyncObjectInstance
        nameWithType: SyncObjectInstance
        qualifiedName: Unity.Reflect.Model.SyncObjectInstance
    isDefinition: true
    parent: Unity.Reflect.Model
    commentId: T:Unity.Reflect.Model.SyncObjectInstance
  Unity.Reflect.Model.SyncObjectInstance.Clone*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncObjectInstance.Clone*
        name: Clone
        nameWithType: SyncObjectInstance.Clone
        qualifiedName: Unity.Reflect.Model.SyncObjectInstance.Clone
      VB:
      - id: Unity.Reflect.Model.SyncObjectInstance.Clone*
        name: Clone
        nameWithType: SyncObjectInstance.Clone
        qualifiedName: Unity.Reflect.Model.SyncObjectInstance.Clone
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncObjectInstance.Clone
  Unity.Reflect.Model.SyncObjectInstance.Object*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncObjectInstance.Object*
        name: Object
        nameWithType: SyncObjectInstance.Object
        qualifiedName: Unity.Reflect.Model.SyncObjectInstance.Object
      VB:
      - id: Unity.Reflect.Model.SyncObjectInstance.Object*
        name: Object
        nameWithType: SyncObjectInstance.Object
        qualifiedName: Unity.Reflect.Model.SyncObjectInstance.Object
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncObjectInstance.Object
  Unity.Reflect.Model.SyncObjectInstance.Name*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncObjectInstance.Name*
        name: Name
        nameWithType: SyncObjectInstance.Name
        qualifiedName: Unity.Reflect.Model.SyncObjectInstance.Name
      VB:
      - id: Unity.Reflect.Model.SyncObjectInstance.Name*
        name: Name
        nameWithType: SyncObjectInstance.Name
        qualifiedName: Unity.Reflect.Model.SyncObjectInstance.Name
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncObjectInstance.Name
  Unity.Reflect.Model.SyncObjectInstance.Transform*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncObjectInstance.Transform*
        name: Transform
        nameWithType: SyncObjectInstance.Transform
        qualifiedName: Unity.Reflect.Model.SyncObjectInstance.Transform
      VB:
      - id: Unity.Reflect.Model.SyncObjectInstance.Transform*
        name: Transform
        nameWithType: SyncObjectInstance.Transform
        qualifiedName: Unity.Reflect.Model.SyncObjectInstance.Transform
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncObjectInstance.Transform
  Unity.Reflect.Model.SyncObjectInstance.Metadata*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncObjectInstance.Metadata*
        name: Metadata
        nameWithType: SyncObjectInstance.Metadata
        qualifiedName: Unity.Reflect.Model.SyncObjectInstance.Metadata
      VB:
      - id: Unity.Reflect.Model.SyncObjectInstance.Metadata*
        name: Metadata
        nameWithType: SyncObjectInstance.Metadata
        qualifiedName: Unity.Reflect.Model.SyncObjectInstance.Metadata
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncObjectInstance.Metadata
  Unity.Reflect.Model.SyncObjectInstance.Equals*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncObjectInstance.Equals*
        name: Equals
        nameWithType: SyncObjectInstance.Equals
        qualifiedName: Unity.Reflect.Model.SyncObjectInstance.Equals
      VB:
      - id: Unity.Reflect.Model.SyncObjectInstance.Equals*
        name: Equals
        nameWithType: SyncObjectInstance.Equals
        qualifiedName: Unity.Reflect.Model.SyncObjectInstance.Equals
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncObjectInstance.Equals
  Unity.Reflect.Model.SyncObjectInstance.GetHashCode*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncObjectInstance.GetHashCode*
        name: GetHashCode
        nameWithType: SyncObjectInstance.GetHashCode
        qualifiedName: Unity.Reflect.Model.SyncObjectInstance.GetHashCode
      VB:
      - id: Unity.Reflect.Model.SyncObjectInstance.GetHashCode*
        name: GetHashCode
        nameWithType: SyncObjectInstance.GetHashCode
        qualifiedName: Unity.Reflect.Model.SyncObjectInstance.GetHashCode
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncObjectInstance.GetHashCode
  Unity.Reflect.Model.SyncObjectInstance.ToString*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncObjectInstance.ToString*
        name: ToString
        nameWithType: SyncObjectInstance.ToString
        qualifiedName: Unity.Reflect.Model.SyncObjectInstance.ToString
      VB:
      - id: Unity.Reflect.Model.SyncObjectInstance.ToString*
        name: ToString
        nameWithType: SyncObjectInstance.ToString
        qualifiedName: Unity.Reflect.Model.SyncObjectInstance.ToString
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncObjectInstance.ToString
  Unity.Reflect.Model.SyncObjectInstance.WriteTo*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncObjectInstance.WriteTo*
        name: WriteTo
        nameWithType: SyncObjectInstance.WriteTo
        qualifiedName: Unity.Reflect.Model.SyncObjectInstance.WriteTo
      VB:
      - id: Unity.Reflect.Model.SyncObjectInstance.WriteTo*
        name: WriteTo
        nameWithType: SyncObjectInstance.WriteTo
        qualifiedName: Unity.Reflect.Model.SyncObjectInstance.WriteTo
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncObjectInstance.WriteTo
  Unity.Reflect.Model.SyncObjectInstance.CalculateSize*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncObjectInstance.CalculateSize*
        name: CalculateSize
        nameWithType: SyncObjectInstance.CalculateSize
        qualifiedName: Unity.Reflect.Model.SyncObjectInstance.CalculateSize
      VB:
      - id: Unity.Reflect.Model.SyncObjectInstance.CalculateSize*
        name: CalculateSize
        nameWithType: SyncObjectInstance.CalculateSize
        qualifiedName: Unity.Reflect.Model.SyncObjectInstance.CalculateSize
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncObjectInstance.CalculateSize
  Unity.Reflect.Model.SyncObjectInstance.MergeFrom*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncObjectInstance.MergeFrom*
        name: MergeFrom
        nameWithType: SyncObjectInstance.MergeFrom
        qualifiedName: Unity.Reflect.Model.SyncObjectInstance.MergeFrom
      VB:
      - id: Unity.Reflect.Model.SyncObjectInstance.MergeFrom*
        name: MergeFrom
        nameWithType: SyncObjectInstance.MergeFrom
        qualifiedName: Unity.Reflect.Model.SyncObjectInstance.MergeFrom
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncObjectInstance.MergeFrom
  pb.MessageParser{Unity.Reflect.Model.SyncPrefab}:
    name:
      CSharp:
      - id: pb.MessageParser`1
        name: pb.MessageParser
        nameWithType: pb.MessageParser
        qualifiedName: pb.MessageParser
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Unity.Reflect.Model.SyncPrefab
        name: SyncPrefab
        nameWithType: SyncPrefab
        qualifiedName: Unity.Reflect.Model.SyncPrefab
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: pb.MessageParser`1
        name: pb.MessageParser
        nameWithType: pb.MessageParser
        qualifiedName: pb.MessageParser
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Unity.Reflect.Model.SyncPrefab
        name: SyncPrefab
        nameWithType: SyncPrefab
        qualifiedName: Unity.Reflect.Model.SyncPrefab
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: pb.MessageParser`1
    commentId: '!:pb.MessageParser{Unity.Reflect.Model.SyncPrefab}'
  Unity.Reflect.Model.SyncPrefab.Parser*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncPrefab.Parser*
        name: Parser
        nameWithType: SyncPrefab.Parser
        qualifiedName: Unity.Reflect.Model.SyncPrefab.Parser
      VB:
      - id: Unity.Reflect.Model.SyncPrefab.Parser*
        name: Parser
        nameWithType: SyncPrefab.Parser
        qualifiedName: Unity.Reflect.Model.SyncPrefab.Parser
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncPrefab.Parser
  Unity.Reflect.Model.SyncPrefab.Descriptor*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncPrefab.Descriptor*
        name: Descriptor
        nameWithType: SyncPrefab.Descriptor
        qualifiedName: Unity.Reflect.Model.SyncPrefab.Descriptor
      VB:
      - id: Unity.Reflect.Model.SyncPrefab.Descriptor*
        name: Descriptor
        nameWithType: SyncPrefab.Descriptor
        qualifiedName: Unity.Reflect.Model.SyncPrefab.Descriptor
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncPrefab.Descriptor
  Unity.Reflect.Model.SyncPrefab.#ctor*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncPrefab.#ctor*
        name: SyncPrefab
        nameWithType: SyncPrefab.SyncPrefab
        qualifiedName: Unity.Reflect.Model.SyncPrefab.SyncPrefab
      VB:
      - id: Unity.Reflect.Model.SyncPrefab.#ctor*
        name: SyncPrefab
        nameWithType: SyncPrefab.SyncPrefab
        qualifiedName: Unity.Reflect.Model.SyncPrefab.SyncPrefab
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncPrefab.#ctor
  Unity.Reflect.Model.SyncPrefab:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncPrefab
        name: SyncPrefab
        nameWithType: SyncPrefab
        qualifiedName: Unity.Reflect.Model.SyncPrefab
      VB:
      - id: Unity.Reflect.Model.SyncPrefab
        name: SyncPrefab
        nameWithType: SyncPrefab
        qualifiedName: Unity.Reflect.Model.SyncPrefab
    isDefinition: true
    parent: Unity.Reflect.Model
    commentId: T:Unity.Reflect.Model.SyncPrefab
  Unity.Reflect.Model.SyncPrefab.Clone*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncPrefab.Clone*
        name: Clone
        nameWithType: SyncPrefab.Clone
        qualifiedName: Unity.Reflect.Model.SyncPrefab.Clone
      VB:
      - id: Unity.Reflect.Model.SyncPrefab.Clone*
        name: Clone
        nameWithType: SyncPrefab.Clone
        qualifiedName: Unity.Reflect.Model.SyncPrefab.Clone
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncPrefab.Clone
  Unity.Reflect.Model.SyncPrefab.Name*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncPrefab.Name*
        name: Name
        nameWithType: SyncPrefab.Name
        qualifiedName: Unity.Reflect.Model.SyncPrefab.Name
      VB:
      - id: Unity.Reflect.Model.SyncPrefab.Name*
        name: Name
        nameWithType: SyncPrefab.Name
        qualifiedName: Unity.Reflect.Model.SyncPrefab.Name
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncPrefab.Name
  Unity.Reflect.Model.SyncPrefab.Key*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncPrefab.Key*
        name: Key
        nameWithType: SyncPrefab.Key
        qualifiedName: Unity.Reflect.Model.SyncPrefab.Key
      VB:
      - id: Unity.Reflect.Model.SyncPrefab.Key*
        name: Key
        nameWithType: SyncPrefab.Key
        qualifiedName: Unity.Reflect.Model.SyncPrefab.Key
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncPrefab.Key
  pbc.RepeatedField{Unity.Reflect.Model.SyncObjectInstance}:
    name:
      CSharp:
      - id: pbc.RepeatedField`1
        name: pbc.RepeatedField
        nameWithType: pbc.RepeatedField
        qualifiedName: pbc.RepeatedField
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Unity.Reflect.Model.SyncObjectInstance
        name: SyncObjectInstance
        nameWithType: SyncObjectInstance
        qualifiedName: Unity.Reflect.Model.SyncObjectInstance
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: pbc.RepeatedField`1
        name: pbc.RepeatedField
        nameWithType: pbc.RepeatedField
        qualifiedName: pbc.RepeatedField
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Unity.Reflect.Model.SyncObjectInstance
        name: SyncObjectInstance
        nameWithType: SyncObjectInstance
        qualifiedName: Unity.Reflect.Model.SyncObjectInstance
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: pbc.RepeatedField`1
    commentId: '!:pbc.RepeatedField{Unity.Reflect.Model.SyncObjectInstance}'
  Unity.Reflect.Model.SyncPrefab.Instances*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncPrefab.Instances*
        name: Instances
        nameWithType: SyncPrefab.Instances
        qualifiedName: Unity.Reflect.Model.SyncPrefab.Instances
      VB:
      - id: Unity.Reflect.Model.SyncPrefab.Instances*
        name: Instances
        nameWithType: SyncPrefab.Instances
        qualifiedName: Unity.Reflect.Model.SyncPrefab.Instances
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncPrefab.Instances
  Unity.Reflect.Model.SyncPrefab.Equals*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncPrefab.Equals*
        name: Equals
        nameWithType: SyncPrefab.Equals
        qualifiedName: Unity.Reflect.Model.SyncPrefab.Equals
      VB:
      - id: Unity.Reflect.Model.SyncPrefab.Equals*
        name: Equals
        nameWithType: SyncPrefab.Equals
        qualifiedName: Unity.Reflect.Model.SyncPrefab.Equals
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncPrefab.Equals
  Unity.Reflect.Model.SyncPrefab.GetHashCode*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncPrefab.GetHashCode*
        name: GetHashCode
        nameWithType: SyncPrefab.GetHashCode
        qualifiedName: Unity.Reflect.Model.SyncPrefab.GetHashCode
      VB:
      - id: Unity.Reflect.Model.SyncPrefab.GetHashCode*
        name: GetHashCode
        nameWithType: SyncPrefab.GetHashCode
        qualifiedName: Unity.Reflect.Model.SyncPrefab.GetHashCode
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncPrefab.GetHashCode
  Unity.Reflect.Model.SyncPrefab.ToString*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncPrefab.ToString*
        name: ToString
        nameWithType: SyncPrefab.ToString
        qualifiedName: Unity.Reflect.Model.SyncPrefab.ToString
      VB:
      - id: Unity.Reflect.Model.SyncPrefab.ToString*
        name: ToString
        nameWithType: SyncPrefab.ToString
        qualifiedName: Unity.Reflect.Model.SyncPrefab.ToString
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncPrefab.ToString
  Unity.Reflect.Model.SyncPrefab.WriteTo*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncPrefab.WriteTo*
        name: WriteTo
        nameWithType: SyncPrefab.WriteTo
        qualifiedName: Unity.Reflect.Model.SyncPrefab.WriteTo
      VB:
      - id: Unity.Reflect.Model.SyncPrefab.WriteTo*
        name: WriteTo
        nameWithType: SyncPrefab.WriteTo
        qualifiedName: Unity.Reflect.Model.SyncPrefab.WriteTo
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncPrefab.WriteTo
  Unity.Reflect.Model.SyncPrefab.CalculateSize*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncPrefab.CalculateSize*
        name: CalculateSize
        nameWithType: SyncPrefab.CalculateSize
        qualifiedName: Unity.Reflect.Model.SyncPrefab.CalculateSize
      VB:
      - id: Unity.Reflect.Model.SyncPrefab.CalculateSize*
        name: CalculateSize
        nameWithType: SyncPrefab.CalculateSize
        qualifiedName: Unity.Reflect.Model.SyncPrefab.CalculateSize
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncPrefab.CalculateSize
  Unity.Reflect.Model.SyncPrefab.MergeFrom*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncPrefab.MergeFrom*
        name: MergeFrom
        nameWithType: SyncPrefab.MergeFrom
        qualifiedName: Unity.Reflect.Model.SyncPrefab.MergeFrom
      VB:
      - id: Unity.Reflect.Model.SyncPrefab.MergeFrom*
        name: MergeFrom
        nameWithType: SyncPrefab.MergeFrom
        qualifiedName: Unity.Reflect.Model.SyncPrefab.MergeFrom
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncPrefab.MergeFrom
  Unity.Reflect.Model.SyncParameter.#ctor*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncParameter.#ctor*
        name: SyncParameter
        nameWithType: SyncParameter.SyncParameter
        qualifiedName: Unity.Reflect.Model.SyncParameter.SyncParameter
      VB:
      - id: Unity.Reflect.Model.SyncParameter.#ctor*
        name: SyncParameter
        nameWithType: SyncParameter.SyncParameter
        qualifiedName: Unity.Reflect.Model.SyncParameter.SyncParameter
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncParameter.#ctor
  pb.MessageParser{Unity.Reflect.Model.SyncParameter}:
    name:
      CSharp:
      - id: pb.MessageParser`1
        name: pb.MessageParser
        nameWithType: pb.MessageParser
        qualifiedName: pb.MessageParser
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Unity.Reflect.Model.SyncParameter
        name: SyncParameter
        nameWithType: SyncParameter
        qualifiedName: Unity.Reflect.Model.SyncParameter
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: pb.MessageParser`1
        name: pb.MessageParser
        nameWithType: pb.MessageParser
        qualifiedName: pb.MessageParser
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Unity.Reflect.Model.SyncParameter
        name: SyncParameter
        nameWithType: SyncParameter
        qualifiedName: Unity.Reflect.Model.SyncParameter
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: pb.MessageParser`1
    commentId: '!:pb.MessageParser{Unity.Reflect.Model.SyncParameter}'
  Unity.Reflect.Model.SyncParameter.Parser*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncParameter.Parser*
        name: Parser
        nameWithType: SyncParameter.Parser
        qualifiedName: Unity.Reflect.Model.SyncParameter.Parser
      VB:
      - id: Unity.Reflect.Model.SyncParameter.Parser*
        name: Parser
        nameWithType: SyncParameter.Parser
        qualifiedName: Unity.Reflect.Model.SyncParameter.Parser
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncParameter.Parser
  Unity.Reflect.Model.SyncParameter.Descriptor*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncParameter.Descriptor*
        name: Descriptor
        nameWithType: SyncParameter.Descriptor
        qualifiedName: Unity.Reflect.Model.SyncParameter.Descriptor
      VB:
      - id: Unity.Reflect.Model.SyncParameter.Descriptor*
        name: Descriptor
        nameWithType: SyncParameter.Descriptor
        qualifiedName: Unity.Reflect.Model.SyncParameter.Descriptor
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncParameter.Descriptor
  Unity.Reflect.Model.SyncParameter:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncParameter
        name: SyncParameter
        nameWithType: SyncParameter
        qualifiedName: Unity.Reflect.Model.SyncParameter
      VB:
      - id: Unity.Reflect.Model.SyncParameter
        name: SyncParameter
        nameWithType: SyncParameter
        qualifiedName: Unity.Reflect.Model.SyncParameter
    isDefinition: true
    parent: Unity.Reflect.Model
    commentId: T:Unity.Reflect.Model.SyncParameter
  Unity.Reflect.Model.SyncParameter.Clone*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncParameter.Clone*
        name: Clone
        nameWithType: SyncParameter.Clone
        qualifiedName: Unity.Reflect.Model.SyncParameter.Clone
      VB:
      - id: Unity.Reflect.Model.SyncParameter.Clone*
        name: Clone
        nameWithType: SyncParameter.Clone
        qualifiedName: Unity.Reflect.Model.SyncParameter.Clone
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncParameter.Clone
  Unity.Reflect.Model.SyncParameter.Value*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncParameter.Value*
        name: Value
        nameWithType: SyncParameter.Value
        qualifiedName: Unity.Reflect.Model.SyncParameter.Value
      VB:
      - id: Unity.Reflect.Model.SyncParameter.Value*
        name: Value
        nameWithType: SyncParameter.Value
        qualifiedName: Unity.Reflect.Model.SyncParameter.Value
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncParameter.Value
  Unity.Reflect.Model.SyncParameter.ParameterGroup*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncParameter.ParameterGroup*
        name: ParameterGroup
        nameWithType: SyncParameter.ParameterGroup
        qualifiedName: Unity.Reflect.Model.SyncParameter.ParameterGroup
      VB:
      - id: Unity.Reflect.Model.SyncParameter.ParameterGroup*
        name: ParameterGroup
        nameWithType: SyncParameter.ParameterGroup
        qualifiedName: Unity.Reflect.Model.SyncParameter.ParameterGroup
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncParameter.ParameterGroup
  Unity.Reflect.Model.SyncParameter.Visible*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncParameter.Visible*
        name: Visible
        nameWithType: SyncParameter.Visible
        qualifiedName: Unity.Reflect.Model.SyncParameter.Visible
      VB:
      - id: Unity.Reflect.Model.SyncParameter.Visible*
        name: Visible
        nameWithType: SyncParameter.Visible
        qualifiedName: Unity.Reflect.Model.SyncParameter.Visible
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncParameter.Visible
  Unity.Reflect.Model.SyncParameter.Equals*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncParameter.Equals*
        name: Equals
        nameWithType: SyncParameter.Equals
        qualifiedName: Unity.Reflect.Model.SyncParameter.Equals
      VB:
      - id: Unity.Reflect.Model.SyncParameter.Equals*
        name: Equals
        nameWithType: SyncParameter.Equals
        qualifiedName: Unity.Reflect.Model.SyncParameter.Equals
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncParameter.Equals
  Unity.Reflect.Model.SyncParameter.GetHashCode*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncParameter.GetHashCode*
        name: GetHashCode
        nameWithType: SyncParameter.GetHashCode
        qualifiedName: Unity.Reflect.Model.SyncParameter.GetHashCode
      VB:
      - id: Unity.Reflect.Model.SyncParameter.GetHashCode*
        name: GetHashCode
        nameWithType: SyncParameter.GetHashCode
        qualifiedName: Unity.Reflect.Model.SyncParameter.GetHashCode
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncParameter.GetHashCode
  Unity.Reflect.Model.SyncParameter.ToString*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncParameter.ToString*
        name: ToString
        nameWithType: SyncParameter.ToString
        qualifiedName: Unity.Reflect.Model.SyncParameter.ToString
      VB:
      - id: Unity.Reflect.Model.SyncParameter.ToString*
        name: ToString
        nameWithType: SyncParameter.ToString
        qualifiedName: Unity.Reflect.Model.SyncParameter.ToString
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncParameter.ToString
  Unity.Reflect.Model.SyncParameter.WriteTo*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncParameter.WriteTo*
        name: WriteTo
        nameWithType: SyncParameter.WriteTo
        qualifiedName: Unity.Reflect.Model.SyncParameter.WriteTo
      VB:
      - id: Unity.Reflect.Model.SyncParameter.WriteTo*
        name: WriteTo
        nameWithType: SyncParameter.WriteTo
        qualifiedName: Unity.Reflect.Model.SyncParameter.WriteTo
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncParameter.WriteTo
  Unity.Reflect.Model.SyncParameter.CalculateSize*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncParameter.CalculateSize*
        name: CalculateSize
        nameWithType: SyncParameter.CalculateSize
        qualifiedName: Unity.Reflect.Model.SyncParameter.CalculateSize
      VB:
      - id: Unity.Reflect.Model.SyncParameter.CalculateSize*
        name: CalculateSize
        nameWithType: SyncParameter.CalculateSize
        qualifiedName: Unity.Reflect.Model.SyncParameter.CalculateSize
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncParameter.CalculateSize
  Unity.Reflect.Model.SyncParameter.MergeFrom*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncParameter.MergeFrom*
        name: MergeFrom
        nameWithType: SyncParameter.MergeFrom
        qualifiedName: Unity.Reflect.Model.SyncParameter.MergeFrom
      VB:
      - id: Unity.Reflect.Model.SyncParameter.MergeFrom*
        name: MergeFrom
        nameWithType: SyncParameter.MergeFrom
        qualifiedName: Unity.Reflect.Model.SyncParameter.MergeFrom
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncParameter.MergeFrom
  Unity.Reflect.Model.SyncRPC.#ctor*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncRPC.#ctor*
        name: SyncRPC
        nameWithType: SyncRPC.SyncRPC
        qualifiedName: Unity.Reflect.Model.SyncRPC.SyncRPC
      VB:
      - id: Unity.Reflect.Model.SyncRPC.#ctor*
        name: SyncRPC
        nameWithType: SyncRPC.SyncRPC
        qualifiedName: Unity.Reflect.Model.SyncRPC.SyncRPC
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncRPC.#ctor
  pb.MessageParser{Unity.Reflect.Model.SyncRPC}:
    name:
      CSharp:
      - id: pb.MessageParser`1
        name: pb.MessageParser
        nameWithType: pb.MessageParser
        qualifiedName: pb.MessageParser
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Unity.Reflect.Model.SyncRPC
        name: SyncRPC
        nameWithType: SyncRPC
        qualifiedName: Unity.Reflect.Model.SyncRPC
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: pb.MessageParser`1
        name: pb.MessageParser
        nameWithType: pb.MessageParser
        qualifiedName: pb.MessageParser
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Unity.Reflect.Model.SyncRPC
        name: SyncRPC
        nameWithType: SyncRPC
        qualifiedName: Unity.Reflect.Model.SyncRPC
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: pb.MessageParser`1
    commentId: '!:pb.MessageParser{Unity.Reflect.Model.SyncRPC}'
  Unity.Reflect.Model.SyncRPC.Parser*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncRPC.Parser*
        name: Parser
        nameWithType: SyncRPC.Parser
        qualifiedName: Unity.Reflect.Model.SyncRPC.Parser
      VB:
      - id: Unity.Reflect.Model.SyncRPC.Parser*
        name: Parser
        nameWithType: SyncRPC.Parser
        qualifiedName: Unity.Reflect.Model.SyncRPC.Parser
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncRPC.Parser
  Unity.Reflect.Model.SyncRPC.Descriptor*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncRPC.Descriptor*
        name: Descriptor
        nameWithType: SyncRPC.Descriptor
        qualifiedName: Unity.Reflect.Model.SyncRPC.Descriptor
      VB:
      - id: Unity.Reflect.Model.SyncRPC.Descriptor*
        name: Descriptor
        nameWithType: SyncRPC.Descriptor
        qualifiedName: Unity.Reflect.Model.SyncRPC.Descriptor
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncRPC.Descriptor
  Unity.Reflect.Model.SyncRPC:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncRPC
        name: SyncRPC
        nameWithType: SyncRPC
        qualifiedName: Unity.Reflect.Model.SyncRPC
      VB:
      - id: Unity.Reflect.Model.SyncRPC
        name: SyncRPC
        nameWithType: SyncRPC
        qualifiedName: Unity.Reflect.Model.SyncRPC
    isDefinition: true
    parent: Unity.Reflect.Model
    commentId: T:Unity.Reflect.Model.SyncRPC
  Unity.Reflect.Model.SyncRPC.Clone*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncRPC.Clone*
        name: Clone
        nameWithType: SyncRPC.Clone
        qualifiedName: Unity.Reflect.Model.SyncRPC.Clone
      VB:
      - id: Unity.Reflect.Model.SyncRPC.Clone*
        name: Clone
        nameWithType: SyncRPC.Clone
        qualifiedName: Unity.Reflect.Model.SyncRPC.Clone
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncRPC.Clone
  Unity.Reflect.Model.SyncRPC.Name*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncRPC.Name*
        name: Name
        nameWithType: SyncRPC.Name
        qualifiedName: Unity.Reflect.Model.SyncRPC.Name
      VB:
      - id: Unity.Reflect.Model.SyncRPC.Name*
        name: Name
        nameWithType: SyncRPC.Name
        qualifiedName: Unity.Reflect.Model.SyncRPC.Name
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncRPC.Name
  Unity.Reflect.Model.SyncRPC.Transform*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncRPC.Transform*
        name: Transform
        nameWithType: SyncRPC.Transform
        qualifiedName: Unity.Reflect.Model.SyncRPC.Transform
      VB:
      - id: Unity.Reflect.Model.SyncRPC.Transform*
        name: Transform
        nameWithType: SyncRPC.Transform
        qualifiedName: Unity.Reflect.Model.SyncRPC.Transform
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncRPC.Transform
  Unity.Reflect.Model.SyncRPC.Equals*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncRPC.Equals*
        name: Equals
        nameWithType: SyncRPC.Equals
        qualifiedName: Unity.Reflect.Model.SyncRPC.Equals
      VB:
      - id: Unity.Reflect.Model.SyncRPC.Equals*
        name: Equals
        nameWithType: SyncRPC.Equals
        qualifiedName: Unity.Reflect.Model.SyncRPC.Equals
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncRPC.Equals
  Unity.Reflect.Model.SyncRPC.GetHashCode*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncRPC.GetHashCode*
        name: GetHashCode
        nameWithType: SyncRPC.GetHashCode
        qualifiedName: Unity.Reflect.Model.SyncRPC.GetHashCode
      VB:
      - id: Unity.Reflect.Model.SyncRPC.GetHashCode*
        name: GetHashCode
        nameWithType: SyncRPC.GetHashCode
        qualifiedName: Unity.Reflect.Model.SyncRPC.GetHashCode
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncRPC.GetHashCode
  Unity.Reflect.Model.SyncRPC.ToString*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncRPC.ToString*
        name: ToString
        nameWithType: SyncRPC.ToString
        qualifiedName: Unity.Reflect.Model.SyncRPC.ToString
      VB:
      - id: Unity.Reflect.Model.SyncRPC.ToString*
        name: ToString
        nameWithType: SyncRPC.ToString
        qualifiedName: Unity.Reflect.Model.SyncRPC.ToString
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncRPC.ToString
  Unity.Reflect.Model.SyncRPC.WriteTo*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncRPC.WriteTo*
        name: WriteTo
        nameWithType: SyncRPC.WriteTo
        qualifiedName: Unity.Reflect.Model.SyncRPC.WriteTo
      VB:
      - id: Unity.Reflect.Model.SyncRPC.WriteTo*
        name: WriteTo
        nameWithType: SyncRPC.WriteTo
        qualifiedName: Unity.Reflect.Model.SyncRPC.WriteTo
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncRPC.WriteTo
  Unity.Reflect.Model.SyncRPC.CalculateSize*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncRPC.CalculateSize*
        name: CalculateSize
        nameWithType: SyncRPC.CalculateSize
        qualifiedName: Unity.Reflect.Model.SyncRPC.CalculateSize
      VB:
      - id: Unity.Reflect.Model.SyncRPC.CalculateSize*
        name: CalculateSize
        nameWithType: SyncRPC.CalculateSize
        qualifiedName: Unity.Reflect.Model.SyncRPC.CalculateSize
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncRPC.CalculateSize
  Unity.Reflect.Model.SyncRPC.MergeFrom*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncRPC.MergeFrom*
        name: MergeFrom
        nameWithType: SyncRPC.MergeFrom
        qualifiedName: Unity.Reflect.Model.SyncRPC.MergeFrom
      VB:
      - id: Unity.Reflect.Model.SyncRPC.MergeFrom*
        name: MergeFrom
        nameWithType: SyncRPC.MergeFrom
        qualifiedName: Unity.Reflect.Model.SyncRPC.MergeFrom
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncRPC.MergeFrom
  pb.MessageParser{Unity.Reflect.Model.SyncTexture}:
    name:
      CSharp:
      - id: pb.MessageParser`1
        name: pb.MessageParser
        nameWithType: pb.MessageParser
        qualifiedName: pb.MessageParser
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Unity.Reflect.Model.SyncTexture
        name: SyncTexture
        nameWithType: SyncTexture
        qualifiedName: Unity.Reflect.Model.SyncTexture
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: pb.MessageParser`1
        name: pb.MessageParser
        nameWithType: pb.MessageParser
        qualifiedName: pb.MessageParser
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Unity.Reflect.Model.SyncTexture
        name: SyncTexture
        nameWithType: SyncTexture
        qualifiedName: Unity.Reflect.Model.SyncTexture
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: pb.MessageParser`1
    commentId: '!:pb.MessageParser{Unity.Reflect.Model.SyncTexture}'
  Unity.Reflect.Model.SyncTexture.Parser*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncTexture.Parser*
        name: Parser
        nameWithType: SyncTexture.Parser
        qualifiedName: Unity.Reflect.Model.SyncTexture.Parser
      VB:
      - id: Unity.Reflect.Model.SyncTexture.Parser*
        name: Parser
        nameWithType: SyncTexture.Parser
        qualifiedName: Unity.Reflect.Model.SyncTexture.Parser
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncTexture.Parser
  Unity.Reflect.Model.SyncTexture.Descriptor*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncTexture.Descriptor*
        name: Descriptor
        nameWithType: SyncTexture.Descriptor
        qualifiedName: Unity.Reflect.Model.SyncTexture.Descriptor
      VB:
      - id: Unity.Reflect.Model.SyncTexture.Descriptor*
        name: Descriptor
        nameWithType: SyncTexture.Descriptor
        qualifiedName: Unity.Reflect.Model.SyncTexture.Descriptor
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncTexture.Descriptor
  Unity.Reflect.Model.SyncTexture.#ctor*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncTexture.#ctor*
        name: SyncTexture
        nameWithType: SyncTexture.SyncTexture
        qualifiedName: Unity.Reflect.Model.SyncTexture.SyncTexture
      VB:
      - id: Unity.Reflect.Model.SyncTexture.#ctor*
        name: SyncTexture
        nameWithType: SyncTexture.SyncTexture
        qualifiedName: Unity.Reflect.Model.SyncTexture.SyncTexture
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncTexture.#ctor
  Unity.Reflect.Model.SyncTexture:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncTexture
        name: SyncTexture
        nameWithType: SyncTexture
        qualifiedName: Unity.Reflect.Model.SyncTexture
      VB:
      - id: Unity.Reflect.Model.SyncTexture
        name: SyncTexture
        nameWithType: SyncTexture
        qualifiedName: Unity.Reflect.Model.SyncTexture
    isDefinition: true
    parent: Unity.Reflect.Model
    commentId: T:Unity.Reflect.Model.SyncTexture
  Unity.Reflect.Model.SyncTexture.Clone*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncTexture.Clone*
        name: Clone
        nameWithType: SyncTexture.Clone
        qualifiedName: Unity.Reflect.Model.SyncTexture.Clone
      VB:
      - id: Unity.Reflect.Model.SyncTexture.Clone*
        name: Clone
        nameWithType: SyncTexture.Clone
        qualifiedName: Unity.Reflect.Model.SyncTexture.Clone
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncTexture.Clone
  Unity.Reflect.Model.SyncTexture.Name*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncTexture.Name*
        name: Name
        nameWithType: SyncTexture.Name
        qualifiedName: Unity.Reflect.Model.SyncTexture.Name
      VB:
      - id: Unity.Reflect.Model.SyncTexture.Name*
        name: Name
        nameWithType: SyncTexture.Name
        qualifiedName: Unity.Reflect.Model.SyncTexture.Name
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncTexture.Name
  pb.ByteString:
    name:
      CSharp:
      - id: pb.ByteString
        name: pb.ByteString
        nameWithType: pb.ByteString
        qualifiedName: pb.ByteString
        isExternal: true
      VB:
      - id: pb.ByteString
        name: pb.ByteString
        nameWithType: pb.ByteString
        qualifiedName: pb.ByteString
        isExternal: true
    isDefinition: true
  Unity.Reflect.Model.SyncTexture.Source*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncTexture.Source*
        name: Source
        nameWithType: SyncTexture.Source
        qualifiedName: Unity.Reflect.Model.SyncTexture.Source
      VB:
      - id: Unity.Reflect.Model.SyncTexture.Source*
        name: Source
        nameWithType: SyncTexture.Source
        qualifiedName: Unity.Reflect.Model.SyncTexture.Source
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncTexture.Source
  Unity.Reflect.Model.SyncTexture.ConvertToNormalMap*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncTexture.ConvertToNormalMap*
        name: ConvertToNormalMap
        nameWithType: SyncTexture.ConvertToNormalMap
        qualifiedName: Unity.Reflect.Model.SyncTexture.ConvertToNormalMap
      VB:
      - id: Unity.Reflect.Model.SyncTexture.ConvertToNormalMap*
        name: ConvertToNormalMap
        nameWithType: SyncTexture.ConvertToNormalMap
        qualifiedName: Unity.Reflect.Model.SyncTexture.ConvertToNormalMap
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncTexture.ConvertToNormalMap
  Unity.Reflect.Model.SyncTexture.Equals*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncTexture.Equals*
        name: Equals
        nameWithType: SyncTexture.Equals
        qualifiedName: Unity.Reflect.Model.SyncTexture.Equals
      VB:
      - id: Unity.Reflect.Model.SyncTexture.Equals*
        name: Equals
        nameWithType: SyncTexture.Equals
        qualifiedName: Unity.Reflect.Model.SyncTexture.Equals
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncTexture.Equals
  Unity.Reflect.Model.SyncTexture.GetHashCode*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncTexture.GetHashCode*
        name: GetHashCode
        nameWithType: SyncTexture.GetHashCode
        qualifiedName: Unity.Reflect.Model.SyncTexture.GetHashCode
      VB:
      - id: Unity.Reflect.Model.SyncTexture.GetHashCode*
        name: GetHashCode
        nameWithType: SyncTexture.GetHashCode
        qualifiedName: Unity.Reflect.Model.SyncTexture.GetHashCode
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncTexture.GetHashCode
  Unity.Reflect.Model.SyncTexture.ToString*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncTexture.ToString*
        name: ToString
        nameWithType: SyncTexture.ToString
        qualifiedName: Unity.Reflect.Model.SyncTexture.ToString
      VB:
      - id: Unity.Reflect.Model.SyncTexture.ToString*
        name: ToString
        nameWithType: SyncTexture.ToString
        qualifiedName: Unity.Reflect.Model.SyncTexture.ToString
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncTexture.ToString
  Unity.Reflect.Model.SyncTexture.WriteTo*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncTexture.WriteTo*
        name: WriteTo
        nameWithType: SyncTexture.WriteTo
        qualifiedName: Unity.Reflect.Model.SyncTexture.WriteTo
      VB:
      - id: Unity.Reflect.Model.SyncTexture.WriteTo*
        name: WriteTo
        nameWithType: SyncTexture.WriteTo
        qualifiedName: Unity.Reflect.Model.SyncTexture.WriteTo
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncTexture.WriteTo
  Unity.Reflect.Model.SyncTexture.CalculateSize*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncTexture.CalculateSize*
        name: CalculateSize
        nameWithType: SyncTexture.CalculateSize
        qualifiedName: Unity.Reflect.Model.SyncTexture.CalculateSize
      VB:
      - id: Unity.Reflect.Model.SyncTexture.CalculateSize*
        name: CalculateSize
        nameWithType: SyncTexture.CalculateSize
        qualifiedName: Unity.Reflect.Model.SyncTexture.CalculateSize
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncTexture.CalculateSize
  Unity.Reflect.Model.SyncTexture.MergeFrom*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.SyncTexture.MergeFrom*
        name: MergeFrom
        nameWithType: SyncTexture.MergeFrom
        qualifiedName: Unity.Reflect.Model.SyncTexture.MergeFrom
      VB:
      - id: Unity.Reflect.Model.SyncTexture.MergeFrom*
        name: MergeFrom
        nameWithType: SyncTexture.MergeFrom
        qualifiedName: Unity.Reflect.Model.SyncTexture.MergeFrom
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.SyncTexture.MergeFrom
  pbr.FileDescriptor:
    name:
      CSharp:
      - id: pbr.FileDescriptor
        name: pbr.FileDescriptor
        nameWithType: pbr.FileDescriptor
        qualifiedName: pbr.FileDescriptor
        isExternal: true
      VB:
      - id: pbr.FileDescriptor
        name: pbr.FileDescriptor
        nameWithType: pbr.FileDescriptor
        qualifiedName: pbr.FileDescriptor
        isExternal: true
    isDefinition: true
  Unity.Reflect.Model.CameraReflection.Descriptor*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.CameraReflection.Descriptor*
        name: Descriptor
        nameWithType: CameraReflection.Descriptor
        qualifiedName: Unity.Reflect.Model.CameraReflection.Descriptor
      VB:
      - id: Unity.Reflect.Model.CameraReflection.Descriptor*
        name: Descriptor
        nameWithType: CameraReflection.Descriptor
        qualifiedName: Unity.Reflect.Model.CameraReflection.Descriptor
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.CameraReflection.Descriptor
  Unity.Reflect.Model.CameraReflection:
    name:
      CSharp:
      - id: Unity.Reflect.Model.CameraReflection
        name: CameraReflection
        nameWithType: CameraReflection
        qualifiedName: Unity.Reflect.Model.CameraReflection
      VB:
      - id: Unity.Reflect.Model.CameraReflection
        name: CameraReflection
        nameWithType: CameraReflection
        qualifiedName: Unity.Reflect.Model.CameraReflection
    isDefinition: true
    commentId: T:Unity.Reflect.Model.CameraReflection
  Unity.Reflect.Model.ColorReflection.Descriptor*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.ColorReflection.Descriptor*
        name: Descriptor
        nameWithType: ColorReflection.Descriptor
        qualifiedName: Unity.Reflect.Model.ColorReflection.Descriptor
      VB:
      - id: Unity.Reflect.Model.ColorReflection.Descriptor*
        name: Descriptor
        nameWithType: ColorReflection.Descriptor
        qualifiedName: Unity.Reflect.Model.ColorReflection.Descriptor
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.ColorReflection.Descriptor
  Unity.Reflect.Model.ColorReflection:
    name:
      CSharp:
      - id: Unity.Reflect.Model.ColorReflection
        name: ColorReflection
        nameWithType: ColorReflection
        qualifiedName: Unity.Reflect.Model.ColorReflection
      VB:
      - id: Unity.Reflect.Model.ColorReflection
        name: ColorReflection
        nameWithType: ColorReflection
        qualifiedName: Unity.Reflect.Model.ColorReflection
    isDefinition: true
    commentId: T:Unity.Reflect.Model.ColorReflection
  Unity.Reflect.Model.LightReflection.Descriptor*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.LightReflection.Descriptor*
        name: Descriptor
        nameWithType: LightReflection.Descriptor
        qualifiedName: Unity.Reflect.Model.LightReflection.Descriptor
      VB:
      - id: Unity.Reflect.Model.LightReflection.Descriptor*
        name: Descriptor
        nameWithType: LightReflection.Descriptor
        qualifiedName: Unity.Reflect.Model.LightReflection.Descriptor
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.LightReflection.Descriptor
  Unity.Reflect.Model.LightReflection:
    name:
      CSharp:
      - id: Unity.Reflect.Model.LightReflection
        name: LightReflection
        nameWithType: LightReflection
        qualifiedName: Unity.Reflect.Model.LightReflection
      VB:
      - id: Unity.Reflect.Model.LightReflection
        name: LightReflection
        nameWithType: LightReflection
        qualifiedName: Unity.Reflect.Model.LightReflection
    isDefinition: true
    commentId: T:Unity.Reflect.Model.LightReflection
  Unity.Reflect.Model.MaterialReflection.Descriptor*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.MaterialReflection.Descriptor*
        name: Descriptor
        nameWithType: MaterialReflection.Descriptor
        qualifiedName: Unity.Reflect.Model.MaterialReflection.Descriptor
      VB:
      - id: Unity.Reflect.Model.MaterialReflection.Descriptor*
        name: Descriptor
        nameWithType: MaterialReflection.Descriptor
        qualifiedName: Unity.Reflect.Model.MaterialReflection.Descriptor
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.MaterialReflection.Descriptor
  Unity.Reflect.Model.MaterialReflection:
    name:
      CSharp:
      - id: Unity.Reflect.Model.MaterialReflection
        name: MaterialReflection
        nameWithType: MaterialReflection
        qualifiedName: Unity.Reflect.Model.MaterialReflection
      VB:
      - id: Unity.Reflect.Model.MaterialReflection
        name: MaterialReflection
        nameWithType: MaterialReflection
        qualifiedName: Unity.Reflect.Model.MaterialReflection
    isDefinition: true
    commentId: T:Unity.Reflect.Model.MaterialReflection
  Unity.Reflect.Model.MathematicsReflection.Descriptor*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.MathematicsReflection.Descriptor*
        name: Descriptor
        nameWithType: MathematicsReflection.Descriptor
        qualifiedName: Unity.Reflect.Model.MathematicsReflection.Descriptor
      VB:
      - id: Unity.Reflect.Model.MathematicsReflection.Descriptor*
        name: Descriptor
        nameWithType: MathematicsReflection.Descriptor
        qualifiedName: Unity.Reflect.Model.MathematicsReflection.Descriptor
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.MathematicsReflection.Descriptor
  Unity.Reflect.Model.MathematicsReflection:
    name:
      CSharp:
      - id: Unity.Reflect.Model.MathematicsReflection
        name: MathematicsReflection
        nameWithType: MathematicsReflection
        qualifiedName: Unity.Reflect.Model.MathematicsReflection
      VB:
      - id: Unity.Reflect.Model.MathematicsReflection
        name: MathematicsReflection
        nameWithType: MathematicsReflection
        qualifiedName: Unity.Reflect.Model.MathematicsReflection
    isDefinition: true
    commentId: T:Unity.Reflect.Model.MathematicsReflection
  Unity.Reflect.Model.MeshReflection.Descriptor*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.MeshReflection.Descriptor*
        name: Descriptor
        nameWithType: MeshReflection.Descriptor
        qualifiedName: Unity.Reflect.Model.MeshReflection.Descriptor
      VB:
      - id: Unity.Reflect.Model.MeshReflection.Descriptor*
        name: Descriptor
        nameWithType: MeshReflection.Descriptor
        qualifiedName: Unity.Reflect.Model.MeshReflection.Descriptor
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.MeshReflection.Descriptor
  Unity.Reflect.Model.MeshReflection:
    name:
      CSharp:
      - id: Unity.Reflect.Model.MeshReflection
        name: MeshReflection
        nameWithType: MeshReflection
        qualifiedName: Unity.Reflect.Model.MeshReflection
      VB:
      - id: Unity.Reflect.Model.MeshReflection
        name: MeshReflection
        nameWithType: MeshReflection
        qualifiedName: Unity.Reflect.Model.MeshReflection
    isDefinition: true
    commentId: T:Unity.Reflect.Model.MeshReflection
  Unity.Reflect.Model.ObjectReflection.Descriptor*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.ObjectReflection.Descriptor*
        name: Descriptor
        nameWithType: ObjectReflection.Descriptor
        qualifiedName: Unity.Reflect.Model.ObjectReflection.Descriptor
      VB:
      - id: Unity.Reflect.Model.ObjectReflection.Descriptor*
        name: Descriptor
        nameWithType: ObjectReflection.Descriptor
        qualifiedName: Unity.Reflect.Model.ObjectReflection.Descriptor
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.ObjectReflection.Descriptor
  Unity.Reflect.Model.ObjectReflection:
    name:
      CSharp:
      - id: Unity.Reflect.Model.ObjectReflection
        name: ObjectReflection
        nameWithType: ObjectReflection
        qualifiedName: Unity.Reflect.Model.ObjectReflection
      VB:
      - id: Unity.Reflect.Model.ObjectReflection
        name: ObjectReflection
        nameWithType: ObjectReflection
        qualifiedName: Unity.Reflect.Model.ObjectReflection
    isDefinition: true
    commentId: T:Unity.Reflect.Model.ObjectReflection
  Unity.Reflect.Model.ParameterReflection.Descriptor*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.ParameterReflection.Descriptor*
        name: Descriptor
        nameWithType: ParameterReflection.Descriptor
        qualifiedName: Unity.Reflect.Model.ParameterReflection.Descriptor
      VB:
      - id: Unity.Reflect.Model.ParameterReflection.Descriptor*
        name: Descriptor
        nameWithType: ParameterReflection.Descriptor
        qualifiedName: Unity.Reflect.Model.ParameterReflection.Descriptor
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.ParameterReflection.Descriptor
  Unity.Reflect.Model.ParameterReflection:
    name:
      CSharp:
      - id: Unity.Reflect.Model.ParameterReflection
        name: ParameterReflection
        nameWithType: ParameterReflection
        qualifiedName: Unity.Reflect.Model.ParameterReflection
      VB:
      - id: Unity.Reflect.Model.ParameterReflection
        name: ParameterReflection
        nameWithType: ParameterReflection
        qualifiedName: Unity.Reflect.Model.ParameterReflection
    isDefinition: true
    commentId: T:Unity.Reflect.Model.ParameterReflection
  Unity.Reflect.Model.RpcReflection.Descriptor*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.RpcReflection.Descriptor*
        name: Descriptor
        nameWithType: RpcReflection.Descriptor
        qualifiedName: Unity.Reflect.Model.RpcReflection.Descriptor
      VB:
      - id: Unity.Reflect.Model.RpcReflection.Descriptor*
        name: Descriptor
        nameWithType: RpcReflection.Descriptor
        qualifiedName: Unity.Reflect.Model.RpcReflection.Descriptor
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.RpcReflection.Descriptor
  Unity.Reflect.Model.RpcReflection:
    name:
      CSharp:
      - id: Unity.Reflect.Model.RpcReflection
        name: RpcReflection
        nameWithType: RpcReflection
        qualifiedName: Unity.Reflect.Model.RpcReflection
      VB:
      - id: Unity.Reflect.Model.RpcReflection
        name: RpcReflection
        nameWithType: RpcReflection
        qualifiedName: Unity.Reflect.Model.RpcReflection
    isDefinition: true
    commentId: T:Unity.Reflect.Model.RpcReflection
  Unity.Reflect.Model.TextureReflection.Descriptor*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.TextureReflection.Descriptor*
        name: Descriptor
        nameWithType: TextureReflection.Descriptor
        qualifiedName: Unity.Reflect.Model.TextureReflection.Descriptor
      VB:
      - id: Unity.Reflect.Model.TextureReflection.Descriptor*
        name: Descriptor
        nameWithType: TextureReflection.Descriptor
        qualifiedName: Unity.Reflect.Model.TextureReflection.Descriptor
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.TextureReflection.Descriptor
  Unity.Reflect.Model.TextureReflection:
    name:
      CSharp:
      - id: Unity.Reflect.Model.TextureReflection
        name: TextureReflection
        nameWithType: TextureReflection
        qualifiedName: Unity.Reflect.Model.TextureReflection
      VB:
      - id: Unity.Reflect.Model.TextureReflection
        name: TextureReflection
        nameWithType: TextureReflection
        qualifiedName: Unity.Reflect.Model.TextureReflection
    isDefinition: true
    commentId: T:Unity.Reflect.Model.TextureReflection
  Unity.Reflect.Model.ISyncModel.Name*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.ISyncModel.Name*
        name: Name
        nameWithType: ISyncModel.Name
        qualifiedName: Unity.Reflect.Model.ISyncModel.Name
      VB:
      - id: Unity.Reflect.Model.ISyncModel.Name*
        name: Name
        nameWithType: ISyncModel.Name
        qualifiedName: Unity.Reflect.Model.ISyncModel.Name
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.ISyncModel.Name
  RepeatedField`1:
    name:
      CSharp:
      - id: RepeatedField`1
        name: RepeatedField
        nameWithType: RepeatedField
        qualifiedName: RepeatedField
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: RepeatedField`1
        name: RepeatedField
        nameWithType: RepeatedField
        qualifiedName: RepeatedField
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
  RepeatedField{{T}}:
    name:
      CSharp:
      - id: RepeatedField`1
        name: RepeatedField
        nameWithType: RepeatedField
        qualifiedName: RepeatedField
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: RepeatedField`1
        name: RepeatedField
        nameWithType: RepeatedField
        qualifiedName: RepeatedField
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: RepeatedField`1
    commentId: '!:RepeatedField{``0}'
  IEnumerable{{T}}:
    name:
      CSharp:
      - id: IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: IEnumerable`1
    commentId: '!:IEnumerable{``0}'
  Unity.Reflect.Model.Utils.Set*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.Utils.Set*
        name: Set
        nameWithType: Utils.Set
        qualifiedName: Unity.Reflect.Model.Utils.Set
      VB:
      - id: Unity.Reflect.Model.Utils.Set*
        name: Set
        nameWithType: Utils.Set
        qualifiedName: Unity.Reflect.Model.Utils.Set
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.Utils.Set
  RepeatedField{System.String}:
    name:
      CSharp:
      - id: RepeatedField`1
        name: RepeatedField
        nameWithType: RepeatedField
        qualifiedName: RepeatedField
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: RepeatedField`1
        name: RepeatedField
        nameWithType: RepeatedField
        qualifiedName: RepeatedField
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: RepeatedField`1
    commentId: '!:RepeatedField{System.String}'
  IEnumerable{System.String}:
    name:
      CSharp:
      - id: IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: IEnumerable`1
    commentId: '!:IEnumerable{System.String}'
  MapField`2:
    name:
      CSharp:
      - id: MapField`2
        name: MapField
        nameWithType: MapField
        qualifiedName: MapField
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: MapField`2
        name: MapField
        nameWithType: MapField
        qualifiedName: MapField
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: '!:MapField`2'
  MapField{{TKey},{TValue}}:
    name:
      CSharp:
      - id: MapField`2
        name: MapField
        nameWithType: MapField
        qualifiedName: MapField
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: MapField`2
        name: MapField
        nameWithType: MapField
        qualifiedName: MapField
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: MapField`2
    commentId: '!:MapField{``0,``1}'
  IDictionary`2:
    name:
      CSharp:
      - id: IDictionary`2
        name: IDictionary
        nameWithType: IDictionary
        qualifiedName: IDictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: IDictionary`2
        name: IDictionary
        nameWithType: IDictionary
        qualifiedName: IDictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: '!:IDictionary`2'
  IDictionary{{TKey},{TValue}}:
    name:
      CSharp:
      - id: IDictionary`2
        name: IDictionary
        nameWithType: IDictionary
        qualifiedName: IDictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: IDictionary`2
        name: IDictionary
        nameWithType: IDictionary
        qualifiedName: IDictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: IDictionary`2
    commentId: '!:IDictionary{``0,``1}'
  Unity.Reflect.Model.Utils.PersistentHash*:
    name:
      CSharp:
      - id: Unity.Reflect.Model.Utils.PersistentHash*
        name: PersistentHash
        nameWithType: Utils.PersistentHash
        qualifiedName: Unity.Reflect.Model.Utils.PersistentHash
      VB:
      - id: Unity.Reflect.Model.Utils.PersistentHash*
        name: PersistentHash
        nameWithType: Utils.PersistentHash
        qualifiedName: Unity.Reflect.Model.Utils.PersistentHash
    isDefinition: true
    commentId: Overload:Unity.Reflect.Model.Utils.PersistentHash
  Unity.Reflect.Model.Utils:
    name:
      CSharp:
      - id: Unity.Reflect.Model.Utils
        name: Utils
        nameWithType: Utils
        qualifiedName: Unity.Reflect.Model.Utils
      VB:
      - id: Unity.Reflect.Model.Utils
        name: Utils
        nameWithType: Utils
        qualifiedName: Unity.Reflect.Model.Utils
    isDefinition: true
    commentId: T:Unity.Reflect.Model.Utils
  IReadOnlyDictionary`2:
    name:
      CSharp:
      - id: IReadOnlyDictionary`2
        name: IReadOnlyDictionary
        nameWithType: IReadOnlyDictionary
        qualifiedName: IReadOnlyDictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: IReadOnlyDictionary`2
        name: IReadOnlyDictionary
        nameWithType: IReadOnlyDictionary
        qualifiedName: IReadOnlyDictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
  IReadOnlyDictionary{Unity.Reflect.Data.PersistentKey,Unity.Reflect.Data.ManifestEntry}:
    name:
      CSharp:
      - id: IReadOnlyDictionary`2
        name: IReadOnlyDictionary
        nameWithType: IReadOnlyDictionary
        qualifiedName: IReadOnlyDictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Unity.Reflect.Data.PersistentKey
        name: PersistentKey
        nameWithType: PersistentKey
        qualifiedName: Unity.Reflect.Data.PersistentKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Unity.Reflect.Data.ManifestEntry
        name: ManifestEntry
        nameWithType: ManifestEntry
        qualifiedName: Unity.Reflect.Data.ManifestEntry
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: IReadOnlyDictionary`2
        name: IReadOnlyDictionary
        nameWithType: IReadOnlyDictionary
        qualifiedName: IReadOnlyDictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Unity.Reflect.Data.PersistentKey
        name: PersistentKey
        nameWithType: PersistentKey
        qualifiedName: Unity.Reflect.Data.PersistentKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Unity.Reflect.Data.ManifestEntry
        name: ManifestEntry
        nameWithType: ManifestEntry
        qualifiedName: Unity.Reflect.Data.ManifestEntry
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: IReadOnlyDictionary`2
    commentId: '!:IReadOnlyDictionary{Unity.Reflect.Data.PersistentKey,Unity.Reflect.Data.ManifestEntry}'
  Unity.Reflect.Data.SyncManifest.Content*:
    name:
      CSharp:
      - id: Unity.Reflect.Data.SyncManifest.Content*
        name: Content
        nameWithType: SyncManifest.Content
        qualifiedName: Unity.Reflect.Data.SyncManifest.Content
      VB:
      - id: Unity.Reflect.Data.SyncManifest.Content*
        name: Content
        nameWithType: SyncManifest.Content
        qualifiedName: Unity.Reflect.Data.SyncManifest.Content
    isDefinition: true
    commentId: Overload:Unity.Reflect.Data.SyncManifest.Content
  Dictionary`2:
    name:
      CSharp:
      - id: Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: '!:Dictionary`2'
  Dictionary{Unity.Reflect.Data.PersistentKey,System.String}:
    name:
      CSharp:
      - id: Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Unity.Reflect.Data.PersistentKey
        name: PersistentKey
        nameWithType: PersistentKey
        qualifiedName: Unity.Reflect.Data.PersistentKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Unity.Reflect.Data.PersistentKey
        name: PersistentKey
        nameWithType: PersistentKey
        qualifiedName: Unity.Reflect.Data.PersistentKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Dictionary`2
    commentId: '!:Dictionary{Unity.Reflect.Data.PersistentKey,System.String}'
  Unity.Reflect.Data.SyncManifest.Remaps*:
    name:
      CSharp:
      - id: Unity.Reflect.Data.SyncManifest.Remaps*
        name: Remaps
        nameWithType: SyncManifest.Remaps
        qualifiedName: Unity.Reflect.Data.SyncManifest.Remaps
      VB:
      - id: Unity.Reflect.Data.SyncManifest.Remaps*
        name: Remaps
        nameWithType: SyncManifest.Remaps
        qualifiedName: Unity.Reflect.Data.SyncManifest.Remaps
    isDefinition: true
    commentId: Overload:Unity.Reflect.Data.SyncManifest.Remaps
  Unity.Reflect.Data.SyncManifest.ExpectedManifestPath*:
    name:
      CSharp:
      - id: Unity.Reflect.Data.SyncManifest.ExpectedManifestPath*
        name: ExpectedManifestPath
        nameWithType: SyncManifest.ExpectedManifestPath
        qualifiedName: Unity.Reflect.Data.SyncManifest.ExpectedManifestPath
      VB:
      - id: Unity.Reflect.Data.SyncManifest.ExpectedManifestPath*
        name: ExpectedManifestPath
        nameWithType: SyncManifest.ExpectedManifestPath
        qualifiedName: Unity.Reflect.Data.SyncManifest.ExpectedManifestPath
    isDefinition: true
    commentId: Overload:Unity.Reflect.Data.SyncManifest.ExpectedManifestPath
  Unity.Reflect.Data:
    name:
      CSharp:
      - name: Unity.Reflect.Data
        nameWithType: Unity.Reflect.Data
        qualifiedName: Unity.Reflect.Data
      VB:
      - name: Unity.Reflect.Data
        nameWithType: Unity.Reflect.Data
        qualifiedName: Unity.Reflect.Data
    isDefinition: true
    commentId: N:Unity.Reflect.Data
  Unity.Reflect.Data.PersistentKey:
    name:
      CSharp:
      - id: Unity.Reflect.Data.PersistentKey
        name: PersistentKey
        nameWithType: PersistentKey
        qualifiedName: Unity.Reflect.Data.PersistentKey
      VB:
      - id: Unity.Reflect.Data.PersistentKey
        name: PersistentKey
        nameWithType: PersistentKey
        qualifiedName: Unity.Reflect.Data.PersistentKey
    isDefinition: true
    parent: Unity.Reflect.Data
    commentId: T:Unity.Reflect.Data.PersistentKey
  SyncBoundingBox:
    name:
      CSharp:
      - id: SyncBoundingBox
        name: SyncBoundingBox
        nameWithType: SyncBoundingBox
        qualifiedName: SyncBoundingBox
        isExternal: true
      VB:
      - id: SyncBoundingBox
        name: SyncBoundingBox
        nameWithType: SyncBoundingBox
        qualifiedName: SyncBoundingBox
        isExternal: true
    isDefinition: true
    commentId: '!:SyncBoundingBox'
  Unity.Reflect.Data.SyncManifest.Append*:
    name:
      CSharp:
      - id: Unity.Reflect.Data.SyncManifest.Append*
        name: Append
        nameWithType: SyncManifest.Append
        qualifiedName: Unity.Reflect.Data.SyncManifest.Append
      VB:
      - id: Unity.Reflect.Data.SyncManifest.Append*
        name: Append
        nameWithType: SyncManifest.Append
        qualifiedName: Unity.Reflect.Data.SyncManifest.Append
    isDefinition: true
    commentId: Overload:Unity.Reflect.Data.SyncManifest.Append
  Unity.Reflect.Data.SyncManifest.Save*:
    name:
      CSharp:
      - id: Unity.Reflect.Data.SyncManifest.Save*
        name: Save
        nameWithType: SyncManifest.Save
        qualifiedName: Unity.Reflect.Data.SyncManifest.Save
      VB:
      - id: Unity.Reflect.Data.SyncManifest.Save*
        name: Save
        nameWithType: SyncManifest.Save
        qualifiedName: Unity.Reflect.Data.SyncManifest.Save
    isDefinition: true
    commentId: Overload:Unity.Reflect.Data.SyncManifest.Save
  Unity.Reflect.Data.SyncManifest:
    name:
      CSharp:
      - id: Unity.Reflect.Data.SyncManifest
        name: SyncManifest
        nameWithType: SyncManifest
        qualifiedName: Unity.Reflect.Data.SyncManifest
      VB:
      - id: Unity.Reflect.Data.SyncManifest
        name: SyncManifest
        nameWithType: SyncManifest
        qualifiedName: Unity.Reflect.Data.SyncManifest
    isDefinition: true
    parent: Unity.Reflect.Data
    commentId: T:Unity.Reflect.Data.SyncManifest
  System.Byte[]:
    name:
      CSharp:
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  Unity.Reflect.Data.SyncManifest.LoadFromBytes*:
    name:
      CSharp:
      - id: Unity.Reflect.Data.SyncManifest.LoadFromBytes*
        name: LoadFromBytes
        nameWithType: SyncManifest.LoadFromBytes
        qualifiedName: Unity.Reflect.Data.SyncManifest.LoadFromBytes
      VB:
      - id: Unity.Reflect.Data.SyncManifest.LoadFromBytes*
        name: LoadFromBytes
        nameWithType: SyncManifest.LoadFromBytes
        qualifiedName: Unity.Reflect.Data.SyncManifest.LoadFromBytes
    isDefinition: true
    commentId: Overload:Unity.Reflect.Data.SyncManifest.LoadFromBytes
  IList`1:
    name:
      CSharp:
      - id: IList`1
        name: IList
        nameWithType: IList
        qualifiedName: IList
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: IList`1
        name: IList
        nameWithType: IList
        qualifiedName: IList
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
  IList{Unity.Reflect.Data.ManifestEntry}:
    name:
      CSharp:
      - id: IList`1
        name: IList
        nameWithType: IList
        qualifiedName: IList
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Unity.Reflect.Data.ManifestEntry
        name: ManifestEntry
        nameWithType: ManifestEntry
        qualifiedName: Unity.Reflect.Data.ManifestEntry
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: IList`1
        name: IList
        nameWithType: IList
        qualifiedName: IList
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Unity.Reflect.Data.ManifestEntry
        name: ManifestEntry
        nameWithType: ManifestEntry
        qualifiedName: Unity.Reflect.Data.ManifestEntry
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: IList`1
    commentId: '!:IList{Unity.Reflect.Data.ManifestEntry}'
  Unity.Reflect.Data.SyncManifest.ComputeDiff*:
    name:
      CSharp:
      - id: Unity.Reflect.Data.SyncManifest.ComputeDiff*
        name: ComputeDiff
        nameWithType: SyncManifest.ComputeDiff
        qualifiedName: Unity.Reflect.Data.SyncManifest.ComputeDiff
      VB:
      - id: Unity.Reflect.Data.SyncManifest.ComputeDiff*
        name: ComputeDiff
        nameWithType: SyncManifest.ComputeDiff
        qualifiedName: Unity.Reflect.Data.SyncManifest.ComputeDiff
    isDefinition: true
    commentId: Overload:Unity.Reflect.Data.SyncManifest.ComputeDiff
  pb.MessageParser{Unity.Reflect.Data.SyncManifest}:
    name:
      CSharp:
      - id: pb.MessageParser`1
        name: pb.MessageParser
        nameWithType: pb.MessageParser
        qualifiedName: pb.MessageParser
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Unity.Reflect.Data.SyncManifest
        name: SyncManifest
        nameWithType: SyncManifest
        qualifiedName: Unity.Reflect.Data.SyncManifest
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: pb.MessageParser`1
        name: pb.MessageParser
        nameWithType: pb.MessageParser
        qualifiedName: pb.MessageParser
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Unity.Reflect.Data.SyncManifest
        name: SyncManifest
        nameWithType: SyncManifest
        qualifiedName: Unity.Reflect.Data.SyncManifest
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: pb.MessageParser`1
    commentId: '!:pb.MessageParser{Unity.Reflect.Data.SyncManifest}'
  Unity.Reflect.Data.SyncManifest.Parser*:
    name:
      CSharp:
      - id: Unity.Reflect.Data.SyncManifest.Parser*
        name: Parser
        nameWithType: SyncManifest.Parser
        qualifiedName: Unity.Reflect.Data.SyncManifest.Parser
      VB:
      - id: Unity.Reflect.Data.SyncManifest.Parser*
        name: Parser
        nameWithType: SyncManifest.Parser
        qualifiedName: Unity.Reflect.Data.SyncManifest.Parser
    isDefinition: true
    commentId: Overload:Unity.Reflect.Data.SyncManifest.Parser
  Unity.Reflect.Data.SyncManifest.Descriptor*:
    name:
      CSharp:
      - id: Unity.Reflect.Data.SyncManifest.Descriptor*
        name: Descriptor
        nameWithType: SyncManifest.Descriptor
        qualifiedName: Unity.Reflect.Data.SyncManifest.Descriptor
      VB:
      - id: Unity.Reflect.Data.SyncManifest.Descriptor*
        name: Descriptor
        nameWithType: SyncManifest.Descriptor
        qualifiedName: Unity.Reflect.Data.SyncManifest.Descriptor
    isDefinition: true
    commentId: Overload:Unity.Reflect.Data.SyncManifest.Descriptor
  Unity.Reflect.Data.SyncManifest.#ctor*:
    name:
      CSharp:
      - id: Unity.Reflect.Data.SyncManifest.#ctor*
        name: SyncManifest
        nameWithType: SyncManifest.SyncManifest
        qualifiedName: Unity.Reflect.Data.SyncManifest.SyncManifest
      VB:
      - id: Unity.Reflect.Data.SyncManifest.#ctor*
        name: SyncManifest
        nameWithType: SyncManifest.SyncManifest
        qualifiedName: Unity.Reflect.Data.SyncManifest.SyncManifest
    isDefinition: true
    commentId: Overload:Unity.Reflect.Data.SyncManifest.#ctor
  Unity.Reflect.Data.SyncManifest.Clone*:
    name:
      CSharp:
      - id: Unity.Reflect.Data.SyncManifest.Clone*
        name: Clone
        nameWithType: SyncManifest.Clone
        qualifiedName: Unity.Reflect.Data.SyncManifest.Clone
      VB:
      - id: Unity.Reflect.Data.SyncManifest.Clone*
        name: Clone
        nameWithType: SyncManifest.Clone
        qualifiedName: Unity.Reflect.Data.SyncManifest.Clone
    isDefinition: true
    commentId: Overload:Unity.Reflect.Data.SyncManifest.Clone
  pbc.MapField{System.String,Unity.Reflect.Data.ManifestEntry}:
    name:
      CSharp:
      - id: pbc.MapField`2
        name: pbc.MapField
        nameWithType: pbc.MapField
        qualifiedName: pbc.MapField
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Unity.Reflect.Data.ManifestEntry
        name: ManifestEntry
        nameWithType: ManifestEntry
        qualifiedName: Unity.Reflect.Data.ManifestEntry
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: pbc.MapField`2
        name: pbc.MapField
        nameWithType: pbc.MapField
        qualifiedName: pbc.MapField
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Unity.Reflect.Data.ManifestEntry
        name: ManifestEntry
        nameWithType: ManifestEntry
        qualifiedName: Unity.Reflect.Data.ManifestEntry
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: pbc.MapField`2
    commentId: '!:pbc.MapField{System.String,Unity.Reflect.Data.ManifestEntry}'
  Unity.Reflect.Data.SyncManifest.Entries*:
    name:
      CSharp:
      - id: Unity.Reflect.Data.SyncManifest.Entries*
        name: Entries
        nameWithType: SyncManifest.Entries
        qualifiedName: Unity.Reflect.Data.SyncManifest.Entries
      VB:
      - id: Unity.Reflect.Data.SyncManifest.Entries*
        name: Entries
        nameWithType: SyncManifest.Entries
        qualifiedName: Unity.Reflect.Data.SyncManifest.Entries
    isDefinition: true
    commentId: Overload:Unity.Reflect.Data.SyncManifest.Entries
  Unity.Reflect.Data.SyncManifest.Equals*:
    name:
      CSharp:
      - id: Unity.Reflect.Data.SyncManifest.Equals*
        name: Equals
        nameWithType: SyncManifest.Equals
        qualifiedName: Unity.Reflect.Data.SyncManifest.Equals
      VB:
      - id: Unity.Reflect.Data.SyncManifest.Equals*
        name: Equals
        nameWithType: SyncManifest.Equals
        qualifiedName: Unity.Reflect.Data.SyncManifest.Equals
    isDefinition: true
    commentId: Overload:Unity.Reflect.Data.SyncManifest.Equals
  Unity.Reflect.Data.SyncManifest.GetHashCode*:
    name:
      CSharp:
      - id: Unity.Reflect.Data.SyncManifest.GetHashCode*
        name: GetHashCode
        nameWithType: SyncManifest.GetHashCode
        qualifiedName: Unity.Reflect.Data.SyncManifest.GetHashCode
      VB:
      - id: Unity.Reflect.Data.SyncManifest.GetHashCode*
        name: GetHashCode
        nameWithType: SyncManifest.GetHashCode
        qualifiedName: Unity.Reflect.Data.SyncManifest.GetHashCode
    isDefinition: true
    commentId: Overload:Unity.Reflect.Data.SyncManifest.GetHashCode
  Unity.Reflect.Data.SyncManifest.ToString*:
    name:
      CSharp:
      - id: Unity.Reflect.Data.SyncManifest.ToString*
        name: ToString
        nameWithType: SyncManifest.ToString
        qualifiedName: Unity.Reflect.Data.SyncManifest.ToString
      VB:
      - id: Unity.Reflect.Data.SyncManifest.ToString*
        name: ToString
        nameWithType: SyncManifest.ToString
        qualifiedName: Unity.Reflect.Data.SyncManifest.ToString
    isDefinition: true
    commentId: Overload:Unity.Reflect.Data.SyncManifest.ToString
  Unity.Reflect.Data.SyncManifest.WriteTo*:
    name:
      CSharp:
      - id: Unity.Reflect.Data.SyncManifest.WriteTo*
        name: WriteTo
        nameWithType: SyncManifest.WriteTo
        qualifiedName: Unity.Reflect.Data.SyncManifest.WriteTo
      VB:
      - id: Unity.Reflect.Data.SyncManifest.WriteTo*
        name: WriteTo
        nameWithType: SyncManifest.WriteTo
        qualifiedName: Unity.Reflect.Data.SyncManifest.WriteTo
    isDefinition: true
    commentId: Overload:Unity.Reflect.Data.SyncManifest.WriteTo
  Unity.Reflect.Data.SyncManifest.CalculateSize*:
    name:
      CSharp:
      - id: Unity.Reflect.Data.SyncManifest.CalculateSize*
        name: CalculateSize
        nameWithType: SyncManifest.CalculateSize
        qualifiedName: Unity.Reflect.Data.SyncManifest.CalculateSize
      VB:
      - id: Unity.Reflect.Data.SyncManifest.CalculateSize*
        name: CalculateSize
        nameWithType: SyncManifest.CalculateSize
        qualifiedName: Unity.Reflect.Data.SyncManifest.CalculateSize
    isDefinition: true
    commentId: Overload:Unity.Reflect.Data.SyncManifest.CalculateSize
  Unity.Reflect.Data.SyncManifest.MergeFrom*:
    name:
      CSharp:
      - id: Unity.Reflect.Data.SyncManifest.MergeFrom*
        name: MergeFrom
        nameWithType: SyncManifest.MergeFrom
        qualifiedName: Unity.Reflect.Data.SyncManifest.MergeFrom
      VB:
      - id: Unity.Reflect.Data.SyncManifest.MergeFrom*
        name: MergeFrom
        nameWithType: SyncManifest.MergeFrom
        qualifiedName: Unity.Reflect.Data.SyncManifest.MergeFrom
    isDefinition: true
    commentId: Overload:Unity.Reflect.Data.SyncManifest.MergeFrom
  MemberInfo:
    name:
      CSharp:
      - id: MemberInfo
        name: MemberInfo
        nameWithType: MemberInfo
        qualifiedName: MemberInfo
        isExternal: true
      VB:
      - id: MemberInfo
        name: MemberInfo
        nameWithType: MemberInfo
        qualifiedName: MemberInfo
        isExternal: true
    isDefinition: true
    commentId: '!:MemberInfo'
  Unity.Reflect.Data.PersistentKey.GetTypeName*:
    name:
      CSharp:
      - id: Unity.Reflect.Data.PersistentKey.GetTypeName*
        name: GetTypeName
        nameWithType: PersistentKey.GetTypeName
        qualifiedName: Unity.Reflect.Data.PersistentKey.GetTypeName
      VB:
      - id: Unity.Reflect.Data.PersistentKey.GetTypeName*
        name: GetTypeName
        nameWithType: PersistentKey.GetTypeName
        qualifiedName: Unity.Reflect.Data.PersistentKey.GetTypeName
    isDefinition: true
    commentId: Overload:Unity.Reflect.Data.PersistentKey.GetTypeName
  Unity.Reflect.Data.PersistentKey.#ctor*:
    name:
      CSharp:
      - id: Unity.Reflect.Data.PersistentKey.#ctor*
        name: PersistentKey
        nameWithType: PersistentKey.PersistentKey
        qualifiedName: Unity.Reflect.Data.PersistentKey.PersistentKey
      VB:
      - id: Unity.Reflect.Data.PersistentKey.#ctor*
        name: PersistentKey
        nameWithType: PersistentKey.PersistentKey
        qualifiedName: Unity.Reflect.Data.PersistentKey.PersistentKey
    isDefinition: true
    commentId: Overload:Unity.Reflect.Data.PersistentKey.#ctor
  Unity.Reflect.Data.PersistentKey.GetKey*:
    name:
      CSharp:
      - id: Unity.Reflect.Data.PersistentKey.GetKey*
        name: GetKey
        nameWithType: PersistentKey.GetKey
        qualifiedName: Unity.Reflect.Data.PersistentKey.GetKey
      VB:
      - id: Unity.Reflect.Data.PersistentKey.GetKey*
        name: GetKey
        nameWithType: PersistentKey.GetKey
        qualifiedName: Unity.Reflect.Data.PersistentKey.GetKey
    isDefinition: true
    commentId: Overload:Unity.Reflect.Data.PersistentKey.GetKey
  Unity.Reflect.Data.PersistentKey.Equals*:
    name:
      CSharp:
      - id: Unity.Reflect.Data.PersistentKey.Equals*
        name: Equals
        nameWithType: PersistentKey.Equals
        qualifiedName: Unity.Reflect.Data.PersistentKey.Equals
      VB:
      - id: Unity.Reflect.Data.PersistentKey.Equals*
        name: Equals
        nameWithType: PersistentKey.Equals
        qualifiedName: Unity.Reflect.Data.PersistentKey.Equals
    isDefinition: true
    commentId: Overload:Unity.Reflect.Data.PersistentKey.Equals
  Unity.Reflect.Data.PersistentKey.op_Equality*:
    name:
      CSharp:
      - id: Unity.Reflect.Data.PersistentKey.op_Equality*
        name: Equality
        nameWithType: PersistentKey.Equality
        qualifiedName: Unity.Reflect.Data.PersistentKey.Equality
      VB:
      - id: Unity.Reflect.Data.PersistentKey.op_Equality*
        name: Equality
        nameWithType: PersistentKey.Equality
        qualifiedName: Unity.Reflect.Data.PersistentKey.Equality
    isDefinition: true
    commentId: Overload:Unity.Reflect.Data.PersistentKey.op_Equality
  Unity.Reflect.Data.PersistentKey.op_Inequality*:
    name:
      CSharp:
      - id: Unity.Reflect.Data.PersistentKey.op_Inequality*
        name: Inequality
        nameWithType: PersistentKey.Inequality
        qualifiedName: Unity.Reflect.Data.PersistentKey.Inequality
      VB:
      - id: Unity.Reflect.Data.PersistentKey.op_Inequality*
        name: Inequality
        nameWithType: PersistentKey.Inequality
        qualifiedName: Unity.Reflect.Data.PersistentKey.Inequality
    isDefinition: true
    commentId: Overload:Unity.Reflect.Data.PersistentKey.op_Inequality
  Unity.Reflect.Data.PersistentKey.GetHashCode*:
    name:
      CSharp:
      - id: Unity.Reflect.Data.PersistentKey.GetHashCode*
        name: GetHashCode
        nameWithType: PersistentKey.GetHashCode
        qualifiedName: Unity.Reflect.Data.PersistentKey.GetHashCode
      VB:
      - id: Unity.Reflect.Data.PersistentKey.GetHashCode*
        name: GetHashCode
        nameWithType: PersistentKey.GetHashCode
        qualifiedName: Unity.Reflect.Data.PersistentKey.GetHashCode
    isDefinition: true
    commentId: Overload:Unity.Reflect.Data.PersistentKey.GetHashCode
  Unity.Reflect.Data.PersistentKey.ToString*:
    name:
      CSharp:
      - id: Unity.Reflect.Data.PersistentKey.ToString*
        name: ToString
        nameWithType: PersistentKey.ToString
        qualifiedName: Unity.Reflect.Data.PersistentKey.ToString
      VB:
      - id: Unity.Reflect.Data.PersistentKey.ToString*
        name: ToString
        nameWithType: PersistentKey.ToString
        qualifiedName: Unity.Reflect.Data.PersistentKey.ToString
    isDefinition: true
    commentId: Overload:Unity.Reflect.Data.PersistentKey.ToString
  Unity.Reflect.Data.PersistentKey.Encode*:
    name:
      CSharp:
      - id: Unity.Reflect.Data.PersistentKey.Encode*
        name: Encode
        nameWithType: PersistentKey.Encode
        qualifiedName: Unity.Reflect.Data.PersistentKey.Encode
      VB:
      - id: Unity.Reflect.Data.PersistentKey.Encode*
        name: Encode
        nameWithType: PersistentKey.Encode
        qualifiedName: Unity.Reflect.Data.PersistentKey.Encode
    isDefinition: true
    commentId: Overload:Unity.Reflect.Data.PersistentKey.Encode
  Unity.Reflect.Data.PersistentKey.Decode*:
    name:
      CSharp:
      - id: Unity.Reflect.Data.PersistentKey.Decode*
        name: Decode
        nameWithType: PersistentKey.Decode
        qualifiedName: Unity.Reflect.Data.PersistentKey.Decode
      VB:
      - id: Unity.Reflect.Data.PersistentKey.Decode*
        name: Decode
        nameWithType: PersistentKey.Decode
        qualifiedName: Unity.Reflect.Data.PersistentKey.Decode
    isDefinition: true
    commentId: Overload:Unity.Reflect.Data.PersistentKey.Decode
  Unity.Reflect.Data.ManifestReflection.Descriptor*:
    name:
      CSharp:
      - id: Unity.Reflect.Data.ManifestReflection.Descriptor*
        name: Descriptor
        nameWithType: ManifestReflection.Descriptor
        qualifiedName: Unity.Reflect.Data.ManifestReflection.Descriptor
      VB:
      - id: Unity.Reflect.Data.ManifestReflection.Descriptor*
        name: Descriptor
        nameWithType: ManifestReflection.Descriptor
        qualifiedName: Unity.Reflect.Data.ManifestReflection.Descriptor
    isDefinition: true
    commentId: Overload:Unity.Reflect.Data.ManifestReflection.Descriptor
  Unity.Reflect.Data.ManifestReflection:
    name:
      CSharp:
      - id: Unity.Reflect.Data.ManifestReflection
        name: ManifestReflection
        nameWithType: ManifestReflection
        qualifiedName: Unity.Reflect.Data.ManifestReflection
      VB:
      - id: Unity.Reflect.Data.ManifestReflection
        name: ManifestReflection
        nameWithType: ManifestReflection
        qualifiedName: Unity.Reflect.Data.ManifestReflection
    isDefinition: true
    commentId: T:Unity.Reflect.Data.ManifestReflection
  pb.MessageParser{Unity.Reflect.Data.ManifestEntry}:
    name:
      CSharp:
      - id: pb.MessageParser`1
        name: pb.MessageParser
        nameWithType: pb.MessageParser
        qualifiedName: pb.MessageParser
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Unity.Reflect.Data.ManifestEntry
        name: ManifestEntry
        nameWithType: ManifestEntry
        qualifiedName: Unity.Reflect.Data.ManifestEntry
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: pb.MessageParser`1
        name: pb.MessageParser
        nameWithType: pb.MessageParser
        qualifiedName: pb.MessageParser
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Unity.Reflect.Data.ManifestEntry
        name: ManifestEntry
        nameWithType: ManifestEntry
        qualifiedName: Unity.Reflect.Data.ManifestEntry
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: pb.MessageParser`1
    commentId: '!:pb.MessageParser{Unity.Reflect.Data.ManifestEntry}'
  Unity.Reflect.Data.ManifestEntry.Parser*:
    name:
      CSharp:
      - id: Unity.Reflect.Data.ManifestEntry.Parser*
        name: Parser
        nameWithType: ManifestEntry.Parser
        qualifiedName: Unity.Reflect.Data.ManifestEntry.Parser
      VB:
      - id: Unity.Reflect.Data.ManifestEntry.Parser*
        name: Parser
        nameWithType: ManifestEntry.Parser
        qualifiedName: Unity.Reflect.Data.ManifestEntry.Parser
    isDefinition: true
    commentId: Overload:Unity.Reflect.Data.ManifestEntry.Parser
  Unity.Reflect.Data.ManifestEntry.Descriptor*:
    name:
      CSharp:
      - id: Unity.Reflect.Data.ManifestEntry.Descriptor*
        name: Descriptor
        nameWithType: ManifestEntry.Descriptor
        qualifiedName: Unity.Reflect.Data.ManifestEntry.Descriptor
      VB:
      - id: Unity.Reflect.Data.ManifestEntry.Descriptor*
        name: Descriptor
        nameWithType: ManifestEntry.Descriptor
        qualifiedName: Unity.Reflect.Data.ManifestEntry.Descriptor
    isDefinition: true
    commentId: Overload:Unity.Reflect.Data.ManifestEntry.Descriptor
  Unity.Reflect.Data.ManifestEntry.#ctor*:
    name:
      CSharp:
      - id: Unity.Reflect.Data.ManifestEntry.#ctor*
        name: ManifestEntry
        nameWithType: ManifestEntry.ManifestEntry
        qualifiedName: Unity.Reflect.Data.ManifestEntry.ManifestEntry
      VB:
      - id: Unity.Reflect.Data.ManifestEntry.#ctor*
        name: ManifestEntry
        nameWithType: ManifestEntry.ManifestEntry
        qualifiedName: Unity.Reflect.Data.ManifestEntry.ManifestEntry
    isDefinition: true
    commentId: Overload:Unity.Reflect.Data.ManifestEntry.#ctor
  Unity.Reflect.Data.ManifestEntry:
    name:
      CSharp:
      - id: Unity.Reflect.Data.ManifestEntry
        name: ManifestEntry
        nameWithType: ManifestEntry
        qualifiedName: Unity.Reflect.Data.ManifestEntry
      VB:
      - id: Unity.Reflect.Data.ManifestEntry
        name: ManifestEntry
        nameWithType: ManifestEntry
        qualifiedName: Unity.Reflect.Data.ManifestEntry
    isDefinition: true
    parent: Unity.Reflect.Data
    commentId: T:Unity.Reflect.Data.ManifestEntry
  Unity.Reflect.Data.ManifestEntry.Clone*:
    name:
      CSharp:
      - id: Unity.Reflect.Data.ManifestEntry.Clone*
        name: Clone
        nameWithType: ManifestEntry.Clone
        qualifiedName: Unity.Reflect.Data.ManifestEntry.Clone
      VB:
      - id: Unity.Reflect.Data.ManifestEntry.Clone*
        name: Clone
        nameWithType: ManifestEntry.Clone
        qualifiedName: Unity.Reflect.Data.ManifestEntry.Clone
    isDefinition: true
    commentId: Overload:Unity.Reflect.Data.ManifestEntry.Clone
  Unity.Reflect.Data.ManifestEntry.DstPath*:
    name:
      CSharp:
      - id: Unity.Reflect.Data.ManifestEntry.DstPath*
        name: DstPath
        nameWithType: ManifestEntry.DstPath
        qualifiedName: Unity.Reflect.Data.ManifestEntry.DstPath
      VB:
      - id: Unity.Reflect.Data.ManifestEntry.DstPath*
        name: DstPath
        nameWithType: ManifestEntry.DstPath
        qualifiedName: Unity.Reflect.Data.ManifestEntry.DstPath
    isDefinition: true
    commentId: Overload:Unity.Reflect.Data.ManifestEntry.DstPath
  Unity.Reflect.Data.ManifestEntry.SrcHash*:
    name:
      CSharp:
      - id: Unity.Reflect.Data.ManifestEntry.SrcHash*
        name: SrcHash
        nameWithType: ManifestEntry.SrcHash
        qualifiedName: Unity.Reflect.Data.ManifestEntry.SrcHash
      VB:
      - id: Unity.Reflect.Data.ManifestEntry.SrcHash*
        name: SrcHash
        nameWithType: ManifestEntry.SrcHash
        qualifiedName: Unity.Reflect.Data.ManifestEntry.SrcHash
    isDefinition: true
    commentId: Overload:Unity.Reflect.Data.ManifestEntry.SrcHash
  Unity.Reflect.Data.ManifestEntry.DstHash*:
    name:
      CSharp:
      - id: Unity.Reflect.Data.ManifestEntry.DstHash*
        name: DstHash
        nameWithType: ManifestEntry.DstHash
        qualifiedName: Unity.Reflect.Data.ManifestEntry.DstHash
      VB:
      - id: Unity.Reflect.Data.ManifestEntry.DstHash*
        name: DstHash
        nameWithType: ManifestEntry.DstHash
        qualifiedName: Unity.Reflect.Data.ManifestEntry.DstHash
    isDefinition: true
    commentId: Overload:Unity.Reflect.Data.ManifestEntry.DstHash
  Unity.Reflect.Data.ManifestEntry.BoundingBox*:
    name:
      CSharp:
      - id: Unity.Reflect.Data.ManifestEntry.BoundingBox*
        name: BoundingBox
        nameWithType: ManifestEntry.BoundingBox
        qualifiedName: Unity.Reflect.Data.ManifestEntry.BoundingBox
      VB:
      - id: Unity.Reflect.Data.ManifestEntry.BoundingBox*
        name: BoundingBox
        nameWithType: ManifestEntry.BoundingBox
        qualifiedName: Unity.Reflect.Data.ManifestEntry.BoundingBox
    isDefinition: true
    commentId: Overload:Unity.Reflect.Data.ManifestEntry.BoundingBox
  Unity.Reflect.Data.ManifestEntry.Equals*:
    name:
      CSharp:
      - id: Unity.Reflect.Data.ManifestEntry.Equals*
        name: Equals
        nameWithType: ManifestEntry.Equals
        qualifiedName: Unity.Reflect.Data.ManifestEntry.Equals
      VB:
      - id: Unity.Reflect.Data.ManifestEntry.Equals*
        name: Equals
        nameWithType: ManifestEntry.Equals
        qualifiedName: Unity.Reflect.Data.ManifestEntry.Equals
    isDefinition: true
    commentId: Overload:Unity.Reflect.Data.ManifestEntry.Equals
  Unity.Reflect.Data.ManifestEntry.GetHashCode*:
    name:
      CSharp:
      - id: Unity.Reflect.Data.ManifestEntry.GetHashCode*
        name: GetHashCode
        nameWithType: ManifestEntry.GetHashCode
        qualifiedName: Unity.Reflect.Data.ManifestEntry.GetHashCode
      VB:
      - id: Unity.Reflect.Data.ManifestEntry.GetHashCode*
        name: GetHashCode
        nameWithType: ManifestEntry.GetHashCode
        qualifiedName: Unity.Reflect.Data.ManifestEntry.GetHashCode
    isDefinition: true
    commentId: Overload:Unity.Reflect.Data.ManifestEntry.GetHashCode
  Unity.Reflect.Data.ManifestEntry.ToString*:
    name:
      CSharp:
      - id: Unity.Reflect.Data.ManifestEntry.ToString*
        name: ToString
        nameWithType: ManifestEntry.ToString
        qualifiedName: Unity.Reflect.Data.ManifestEntry.ToString
      VB:
      - id: Unity.Reflect.Data.ManifestEntry.ToString*
        name: ToString
        nameWithType: ManifestEntry.ToString
        qualifiedName: Unity.Reflect.Data.ManifestEntry.ToString
    isDefinition: true
    commentId: Overload:Unity.Reflect.Data.ManifestEntry.ToString
  Unity.Reflect.Data.ManifestEntry.WriteTo*:
    name:
      CSharp:
      - id: Unity.Reflect.Data.ManifestEntry.WriteTo*
        name: WriteTo
        nameWithType: ManifestEntry.WriteTo
        qualifiedName: Unity.Reflect.Data.ManifestEntry.WriteTo
      VB:
      - id: Unity.Reflect.Data.ManifestEntry.WriteTo*
        name: WriteTo
        nameWithType: ManifestEntry.WriteTo
        qualifiedName: Unity.Reflect.Data.ManifestEntry.WriteTo
    isDefinition: true
    commentId: Overload:Unity.Reflect.Data.ManifestEntry.WriteTo
  Unity.Reflect.Data.ManifestEntry.CalculateSize*:
    name:
      CSharp:
      - id: Unity.Reflect.Data.ManifestEntry.CalculateSize*
        name: CalculateSize
        nameWithType: ManifestEntry.CalculateSize
        qualifiedName: Unity.Reflect.Data.ManifestEntry.CalculateSize
      VB:
      - id: Unity.Reflect.Data.ManifestEntry.CalculateSize*
        name: CalculateSize
        nameWithType: ManifestEntry.CalculateSize
        qualifiedName: Unity.Reflect.Data.ManifestEntry.CalculateSize
    isDefinition: true
    commentId: Overload:Unity.Reflect.Data.ManifestEntry.CalculateSize
  Unity.Reflect.Data.ManifestEntry.MergeFrom*:
    name:
      CSharp:
      - id: Unity.Reflect.Data.ManifestEntry.MergeFrom*
        name: MergeFrom
        nameWithType: ManifestEntry.MergeFrom
        qualifiedName: Unity.Reflect.Data.ManifestEntry.MergeFrom
      VB:
      - id: Unity.Reflect.Data.ManifestEntry.MergeFrom*
        name: MergeFrom
        nameWithType: ManifestEntry.MergeFrom
        qualifiedName: Unity.Reflect.Data.ManifestEntry.MergeFrom
    isDefinition: true
    commentId: Overload:Unity.Reflect.Data.ManifestEntry.MergeFrom
  Unity.Reflect.Services.ProjectDiscovery:
    name:
      CSharp:
      - id: Unity.Reflect.Services.ProjectDiscovery
        name: ProjectDiscovery
        nameWithType: ProjectDiscovery
        qualifiedName: Unity.Reflect.Services.ProjectDiscovery
      VB:
      - id: Unity.Reflect.Services.ProjectDiscovery
        name: ProjectDiscovery
        nameWithType: ProjectDiscovery
        qualifiedName: Unity.Reflect.Services.ProjectDiscovery
    isDefinition: true
    commentId: T:Unity.Reflect.Services.ProjectDiscovery
  Unity.Reflect.Services.ProjectInfo.ServerProjectId*:
    name:
      CSharp:
      - id: Unity.Reflect.Services.ProjectInfo.ServerProjectId*
        name: ServerProjectId
        nameWithType: ProjectInfo.ServerProjectId
        qualifiedName: Unity.Reflect.Services.ProjectInfo.ServerProjectId
      VB:
      - id: Unity.Reflect.Services.ProjectInfo.ServerProjectId*
        name: ServerProjectId
        nameWithType: ProjectInfo.ServerProjectId
        qualifiedName: Unity.Reflect.Services.ProjectInfo.ServerProjectId
    isDefinition: true
    commentId: Overload:Unity.Reflect.Services.ProjectInfo.ServerProjectId
  Unity.Reflect.Services.ProjectInfo.ProjectId*:
    name:
      CSharp:
      - id: Unity.Reflect.Services.ProjectInfo.ProjectId*
        name: ProjectId
        nameWithType: ProjectInfo.ProjectId
        qualifiedName: Unity.Reflect.Services.ProjectInfo.ProjectId
      VB:
      - id: Unity.Reflect.Services.ProjectInfo.ProjectId*
        name: ProjectId
        nameWithType: ProjectInfo.ProjectId
        qualifiedName: Unity.Reflect.Services.ProjectInfo.ProjectId
    isDefinition: true
    commentId: Overload:Unity.Reflect.Services.ProjectInfo.ProjectId
  Unity.Reflect.Services.ProjectInfo.Name*:
    name:
      CSharp:
      - id: Unity.Reflect.Services.ProjectInfo.Name*
        name: Name
        nameWithType: ProjectInfo.Name
        qualifiedName: Unity.Reflect.Services.ProjectInfo.Name
      VB:
      - id: Unity.Reflect.Services.ProjectInfo.Name*
        name: Name
        nameWithType: ProjectInfo.Name
        qualifiedName: Unity.Reflect.Services.ProjectInfo.Name
    isDefinition: true
    commentId: Overload:Unity.Reflect.Services.ProjectInfo.Name
  Unity.Reflect.Services.ProjectInfo.ServerName*:
    name:
      CSharp:
      - id: Unity.Reflect.Services.ProjectInfo.ServerName*
        name: ServerName
        nameWithType: ProjectInfo.ServerName
        qualifiedName: Unity.Reflect.Services.ProjectInfo.ServerName
      VB:
      - id: Unity.Reflect.Services.ProjectInfo.ServerName*
        name: ServerName
        nameWithType: ProjectInfo.ServerName
        qualifiedName: Unity.Reflect.Services.ProjectInfo.ServerName
    isDefinition: true
    commentId: Overload:Unity.Reflect.Services.ProjectInfo.ServerName
  Unity.Reflect.Services.ProjectInfo.ServerAddress*:
    name:
      CSharp:
      - id: Unity.Reflect.Services.ProjectInfo.ServerAddress*
        name: ServerAddress
        nameWithType: ProjectInfo.ServerAddress
        qualifiedName: Unity.Reflect.Services.ProjectInfo.ServerAddress
      VB:
      - id: Unity.Reflect.Services.ProjectInfo.ServerAddress*
        name: ServerAddress
        nameWithType: ProjectInfo.ServerAddress
        qualifiedName: Unity.Reflect.Services.ProjectInfo.ServerAddress
    isDefinition: true
    commentId: Overload:Unity.Reflect.Services.ProjectInfo.ServerAddress
  Unity.Reflect.Services.ProjectInfo.UserId*:
    name:
      CSharp:
      - id: Unity.Reflect.Services.ProjectInfo.UserId*
        name: UserId
        nameWithType: ProjectInfo.UserId
        qualifiedName: Unity.Reflect.Services.ProjectInfo.UserId
      VB:
      - id: Unity.Reflect.Services.ProjectInfo.UserId*
        name: UserId
        nameWithType: ProjectInfo.UserId
        qualifiedName: Unity.Reflect.Services.ProjectInfo.UserId
    isDefinition: true
    commentId: Overload:Unity.Reflect.Services.ProjectInfo.UserId
  Unity.Reflect.Services.ProjectInfo.OrgId*:
    name:
      CSharp:
      - id: Unity.Reflect.Services.ProjectInfo.OrgId*
        name: OrgId
        nameWithType: ProjectInfo.OrgId
        qualifiedName: Unity.Reflect.Services.ProjectInfo.OrgId
      VB:
      - id: Unity.Reflect.Services.ProjectInfo.OrgId*
        name: OrgId
        nameWithType: ProjectInfo.OrgId
        qualifiedName: Unity.Reflect.Services.ProjectInfo.OrgId
    isDefinition: true
    commentId: Overload:Unity.Reflect.Services.ProjectInfo.OrgId
  System.DateTime:
    name:
      CSharp:
      - id: System.DateTime
        name: DateTime
        nameWithType: DateTime
        qualifiedName: System.DateTime
        isExternal: true
      VB:
      - id: System.DateTime
        name: DateTime
        nameWithType: DateTime
        qualifiedName: System.DateTime
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.DateTime
  Unity.Reflect.Services.ProjectInfo.LastUpdated*:
    name:
      CSharp:
      - id: Unity.Reflect.Services.ProjectInfo.LastUpdated*
        name: LastUpdated
        nameWithType: ProjectInfo.LastUpdated
        qualifiedName: Unity.Reflect.Services.ProjectInfo.LastUpdated
      VB:
      - id: Unity.Reflect.Services.ProjectInfo.LastUpdated*
        name: LastUpdated
        nameWithType: ProjectInfo.LastUpdated
        qualifiedName: Unity.Reflect.Services.ProjectInfo.LastUpdated
    isDefinition: true
    commentId: Overload:Unity.Reflect.Services.ProjectInfo.LastUpdated
  Unity.Reflect.Services.ProjectInfo.ServiceChannel*:
    name:
      CSharp:
      - id: Unity.Reflect.Services.ProjectInfo.ServiceChannel*
        name: ServiceChannel
        nameWithType: ProjectInfo.ServiceChannel
        qualifiedName: Unity.Reflect.Services.ProjectInfo.ServiceChannel
      VB:
      - id: Unity.Reflect.Services.ProjectInfo.ServiceChannel*
        name: ServiceChannel
        nameWithType: ProjectInfo.ServiceChannel
        qualifiedName: Unity.Reflect.Services.ProjectInfo.ServiceChannel
    isDefinition: true
    commentId: Overload:Unity.Reflect.Services.ProjectInfo.ServiceChannel
  Unity.Reflect.Services.ProjectInfo:
    name:
      CSharp:
      - id: Unity.Reflect.Services.ProjectInfo
        name: ProjectInfo
        nameWithType: ProjectInfo
        qualifiedName: Unity.Reflect.Services.ProjectInfo
      VB:
      - id: Unity.Reflect.Services.ProjectInfo
        name: ProjectInfo
        nameWithType: ProjectInfo
        qualifiedName: Unity.Reflect.Services.ProjectInfo
    isDefinition: true
    commentId: T:Unity.Reflect.Services.ProjectInfo
  System.Action{Unity.Reflect.Services.ProjectInfo}:
    name:
      CSharp:
      - id: System.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: System.Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Unity.Reflect.Services.ProjectInfo
        name: ProjectInfo
        nameWithType: ProjectInfo
        qualifiedName: Unity.Reflect.Services.ProjectInfo
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: System.Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Unity.Reflect.Services.ProjectInfo
        name: ProjectInfo
        nameWithType: ProjectInfo
        qualifiedName: Unity.Reflect.Services.ProjectInfo
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Action`1
    parent: System
    commentId: T:System.Action{Unity.Reflect.Services.ProjectInfo}
  IReadOnlyDictionary{System.String,Unity.Reflect.Services.ProjectInfo}:
    name:
      CSharp:
      - id: IReadOnlyDictionary`2
        name: IReadOnlyDictionary
        nameWithType: IReadOnlyDictionary
        qualifiedName: IReadOnlyDictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Unity.Reflect.Services.ProjectInfo
        name: ProjectInfo
        nameWithType: ProjectInfo
        qualifiedName: Unity.Reflect.Services.ProjectInfo
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: IReadOnlyDictionary`2
        name: IReadOnlyDictionary
        nameWithType: IReadOnlyDictionary
        qualifiedName: IReadOnlyDictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Unity.Reflect.Services.ProjectInfo
        name: ProjectInfo
        nameWithType: ProjectInfo
        qualifiedName: Unity.Reflect.Services.ProjectInfo
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: IReadOnlyDictionary`2
    commentId: '!:IReadOnlyDictionary{System.String,Unity.Reflect.Services.ProjectInfo}'
  Unity.Reflect.Services.ProjectDiscovery.availableProjects*:
    name:
      CSharp:
      - id: Unity.Reflect.Services.ProjectDiscovery.availableProjects*
        name: availableProjects
        nameWithType: ProjectDiscovery.availableProjects
        qualifiedName: Unity.Reflect.Services.ProjectDiscovery.availableProjects
      VB:
      - id: Unity.Reflect.Services.ProjectDiscovery.availableProjects*
        name: availableProjects
        nameWithType: ProjectDiscovery.availableProjects
        qualifiedName: Unity.Reflect.Services.ProjectDiscovery.availableProjects
    isDefinition: true
    commentId: Overload:Unity.Reflect.Services.ProjectDiscovery.availableProjects
  Unity.Reflect.Services.ProjectDiscovery.#ctor*:
    name:
      CSharp:
      - id: Unity.Reflect.Services.ProjectDiscovery.#ctor*
        name: ProjectDiscovery
        nameWithType: ProjectDiscovery.ProjectDiscovery
        qualifiedName: Unity.Reflect.Services.ProjectDiscovery.ProjectDiscovery
      VB:
      - id: Unity.Reflect.Services.ProjectDiscovery.#ctor*
        name: ProjectDiscovery
        nameWithType: ProjectDiscovery.ProjectDiscovery
        qualifiedName: Unity.Reflect.Services.ProjectDiscovery.ProjectDiscovery
    isDefinition: true
    commentId: Overload:Unity.Reflect.Services.ProjectDiscovery.#ctor
  Unity.Reflect.Services.ProjectDiscovery.Start*:
    name:
      CSharp:
      - id: Unity.Reflect.Services.ProjectDiscovery.Start*
        name: Start
        nameWithType: ProjectDiscovery.Start
        qualifiedName: Unity.Reflect.Services.ProjectDiscovery.Start
      VB:
      - id: Unity.Reflect.Services.ProjectDiscovery.Start*
        name: Start
        nameWithType: ProjectDiscovery.Start
        qualifiedName: Unity.Reflect.Services.ProjectDiscovery.Start
    isDefinition: true
    commentId: Overload:Unity.Reflect.Services.ProjectDiscovery.Start
  Unity.Reflect.Services.ProjectDiscovery.Stop*:
    name:
      CSharp:
      - id: Unity.Reflect.Services.ProjectDiscovery.Stop*
        name: Stop
        nameWithType: ProjectDiscovery.Stop
        qualifiedName: Unity.Reflect.Services.ProjectDiscovery.Stop
      VB:
      - id: Unity.Reflect.Services.ProjectDiscovery.Stop*
        name: Stop
        nameWithType: ProjectDiscovery.Stop
        qualifiedName: Unity.Reflect.Services.ProjectDiscovery.Stop
    isDefinition: true
    commentId: Overload:Unity.Reflect.Services.ProjectDiscovery.Stop
  Unity.Reflect.Services:
    name:
      CSharp:
      - name: Unity.Reflect.Services
        nameWithType: Unity.Reflect.Services
        qualifiedName: Unity.Reflect.Services
      VB:
      - name: Unity.Reflect.Services
        nameWithType: Unity.Reflect.Services
        qualifiedName: Unity.Reflect.Services
    isDefinition: true
    commentId: N:Unity.Reflect.Services
  Unity.Reflect.ProjectServer.Services.CommonReflection.Descriptor*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.CommonReflection.Descriptor*
        name: Descriptor
        nameWithType: CommonReflection.Descriptor
        qualifiedName: Unity.Reflect.ProjectServer.Services.CommonReflection.Descriptor
      VB:
      - id: Unity.Reflect.ProjectServer.Services.CommonReflection.Descriptor*
        name: Descriptor
        nameWithType: CommonReflection.Descriptor
        qualifiedName: Unity.Reflect.ProjectServer.Services.CommonReflection.Descriptor
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.CommonReflection.Descriptor
  Unity.Reflect.ProjectServer.Services.CommonReflection:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.CommonReflection
        name: CommonReflection
        nameWithType: CommonReflection
        qualifiedName: Unity.Reflect.ProjectServer.Services.CommonReflection
      VB:
      - id: Unity.Reflect.ProjectServer.Services.CommonReflection
        name: CommonReflection
        nameWithType: CommonReflection
        qualifiedName: Unity.Reflect.ProjectServer.Services.CommonReflection
    isDefinition: true
    commentId: T:Unity.Reflect.ProjectServer.Services.CommonReflection
  pb.MessageParser{Unity.Reflect.ProjectServer.Services.Empty}:
    name:
      CSharp:
      - id: pb.MessageParser`1
        name: pb.MessageParser
        nameWithType: pb.MessageParser
        qualifiedName: pb.MessageParser
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Unity.Reflect.ProjectServer.Services.Empty
        name: Empty
        nameWithType: Empty
        qualifiedName: Unity.Reflect.ProjectServer.Services.Empty
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: pb.MessageParser`1
        name: pb.MessageParser
        nameWithType: pb.MessageParser
        qualifiedName: pb.MessageParser
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Unity.Reflect.ProjectServer.Services.Empty
        name: Empty
        nameWithType: Empty
        qualifiedName: Unity.Reflect.ProjectServer.Services.Empty
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: pb.MessageParser`1
    commentId: '!:pb.MessageParser{Unity.Reflect.ProjectServer.Services.Empty}'
  Unity.Reflect.ProjectServer.Services.Empty.Parser*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Empty.Parser*
        name: Parser
        nameWithType: Empty.Parser
        qualifiedName: Unity.Reflect.ProjectServer.Services.Empty.Parser
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Empty.Parser*
        name: Parser
        nameWithType: Empty.Parser
        qualifiedName: Unity.Reflect.ProjectServer.Services.Empty.Parser
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Empty.Parser
  Unity.Reflect.ProjectServer.Services.Empty.Descriptor*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Empty.Descriptor*
        name: Descriptor
        nameWithType: Empty.Descriptor
        qualifiedName: Unity.Reflect.ProjectServer.Services.Empty.Descriptor
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Empty.Descriptor*
        name: Descriptor
        nameWithType: Empty.Descriptor
        qualifiedName: Unity.Reflect.ProjectServer.Services.Empty.Descriptor
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Empty.Descriptor
  Unity.Reflect.ProjectServer.Services.Empty.#ctor*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Empty.#ctor*
        name: Empty
        nameWithType: Empty.Empty
        qualifiedName: Unity.Reflect.ProjectServer.Services.Empty.Empty
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Empty.#ctor*
        name: Empty
        nameWithType: Empty.Empty
        qualifiedName: Unity.Reflect.ProjectServer.Services.Empty.Empty
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Empty.#ctor
  Unity.Reflect.ProjectServer.Services:
    name:
      CSharp:
      - name: Unity.Reflect.ProjectServer.Services
        nameWithType: Unity.Reflect.ProjectServer.Services
        qualifiedName: Unity.Reflect.ProjectServer.Services
      VB:
      - name: Unity.Reflect.ProjectServer.Services
        nameWithType: Unity.Reflect.ProjectServer.Services
        qualifiedName: Unity.Reflect.ProjectServer.Services
    isDefinition: true
    commentId: N:Unity.Reflect.ProjectServer.Services
  Unity.Reflect.ProjectServer.Services.Empty:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Empty
        name: Empty
        nameWithType: Empty
        qualifiedName: Unity.Reflect.ProjectServer.Services.Empty
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Empty
        name: Empty
        nameWithType: Empty
        qualifiedName: Unity.Reflect.ProjectServer.Services.Empty
    isDefinition: true
    parent: Unity.Reflect.ProjectServer.Services
    commentId: T:Unity.Reflect.ProjectServer.Services.Empty
  Unity.Reflect.ProjectServer.Services.Empty.Clone*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Empty.Clone*
        name: Clone
        nameWithType: Empty.Clone
        qualifiedName: Unity.Reflect.ProjectServer.Services.Empty.Clone
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Empty.Clone*
        name: Clone
        nameWithType: Empty.Clone
        qualifiedName: Unity.Reflect.ProjectServer.Services.Empty.Clone
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Empty.Clone
  Unity.Reflect.ProjectServer.Services.Empty.Equals*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Empty.Equals*
        name: Equals
        nameWithType: Empty.Equals
        qualifiedName: Unity.Reflect.ProjectServer.Services.Empty.Equals
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Empty.Equals*
        name: Equals
        nameWithType: Empty.Equals
        qualifiedName: Unity.Reflect.ProjectServer.Services.Empty.Equals
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Empty.Equals
  Unity.Reflect.ProjectServer.Services.Empty.GetHashCode*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Empty.GetHashCode*
        name: GetHashCode
        nameWithType: Empty.GetHashCode
        qualifiedName: Unity.Reflect.ProjectServer.Services.Empty.GetHashCode
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Empty.GetHashCode*
        name: GetHashCode
        nameWithType: Empty.GetHashCode
        qualifiedName: Unity.Reflect.ProjectServer.Services.Empty.GetHashCode
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Empty.GetHashCode
  Unity.Reflect.ProjectServer.Services.Empty.ToString*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Empty.ToString*
        name: ToString
        nameWithType: Empty.ToString
        qualifiedName: Unity.Reflect.ProjectServer.Services.Empty.ToString
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Empty.ToString*
        name: ToString
        nameWithType: Empty.ToString
        qualifiedName: Unity.Reflect.ProjectServer.Services.Empty.ToString
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Empty.ToString
  Unity.Reflect.ProjectServer.Services.Empty.WriteTo*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Empty.WriteTo*
        name: WriteTo
        nameWithType: Empty.WriteTo
        qualifiedName: Unity.Reflect.ProjectServer.Services.Empty.WriteTo
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Empty.WriteTo*
        name: WriteTo
        nameWithType: Empty.WriteTo
        qualifiedName: Unity.Reflect.ProjectServer.Services.Empty.WriteTo
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Empty.WriteTo
  Unity.Reflect.ProjectServer.Services.Empty.CalculateSize*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Empty.CalculateSize*
        name: CalculateSize
        nameWithType: Empty.CalculateSize
        qualifiedName: Unity.Reflect.ProjectServer.Services.Empty.CalculateSize
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Empty.CalculateSize*
        name: CalculateSize
        nameWithType: Empty.CalculateSize
        qualifiedName: Unity.Reflect.ProjectServer.Services.Empty.CalculateSize
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Empty.CalculateSize
  Unity.Reflect.ProjectServer.Services.Empty.MergeFrom*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Empty.MergeFrom*
        name: MergeFrom
        nameWithType: Empty.MergeFrom
        qualifiedName: Unity.Reflect.ProjectServer.Services.Empty.MergeFrom
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Empty.MergeFrom*
        name: MergeFrom
        nameWithType: Empty.MergeFrom
        qualifiedName: Unity.Reflect.ProjectServer.Services.Empty.MergeFrom
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Empty.MergeFrom
  Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationReflection.Descriptor*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationReflection.Descriptor*
        name: Descriptor
        nameWithType: AuthenticationReflection.Descriptor
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationReflection.Descriptor
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationReflection.Descriptor*
        name: Descriptor
        nameWithType: AuthenticationReflection.Descriptor
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationReflection.Descriptor
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationReflection.Descriptor
  Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationReflection:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationReflection
        name: AuthenticationReflection
        nameWithType: AuthenticationReflection
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationReflection
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationReflection
        name: AuthenticationReflection
        nameWithType: AuthenticationReflection
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationReflection
    isDefinition: true
    commentId: T:Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationReflection
  Unity.Reflect.ProjectServer.Services.Authentication:
    name:
      CSharp:
      - name: Unity.Reflect.ProjectServer.Services.Authentication
        nameWithType: Unity.Reflect.ProjectServer.Services.Authentication
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication
      VB:
      - name: Unity.Reflect.ProjectServer.Services.Authentication
        nameWithType: Unity.Reflect.ProjectServer.Services.Authentication
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication
    isDefinition: true
    commentId: N:Unity.Reflect.ProjectServer.Services.Authentication
  Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessType:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessType
        name: ProjectAccessType
        nameWithType: ProjectAccessType
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessType
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessType
        name: ProjectAccessType
        nameWithType: ProjectAccessType
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessType
    isDefinition: true
    parent: Unity.Reflect.ProjectServer.Services.Authentication
    commentId: T:Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessType
  pb.MessageParser{Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse}:
    name:
      CSharp:
      - id: pb.MessageParser`1
        name: pb.MessageParser
        nameWithType: pb.MessageParser
        qualifiedName: pb.MessageParser
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse
        name: SigninResponse
        nameWithType: SigninResponse
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: pb.MessageParser`1
        name: pb.MessageParser
        nameWithType: pb.MessageParser
        qualifiedName: pb.MessageParser
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse
        name: SigninResponse
        nameWithType: SigninResponse
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: pb.MessageParser`1
    commentId: '!:pb.MessageParser{Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse}'
  Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.Parser*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.Parser*
        name: Parser
        nameWithType: SigninResponse.Parser
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.Parser
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.Parser*
        name: Parser
        nameWithType: SigninResponse.Parser
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.Parser
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.Parser
  Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.Descriptor*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.Descriptor*
        name: Descriptor
        nameWithType: SigninResponse.Descriptor
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.Descriptor
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.Descriptor*
        name: Descriptor
        nameWithType: SigninResponse.Descriptor
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.Descriptor
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.Descriptor
  Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.#ctor*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.#ctor*
        name: SigninResponse
        nameWithType: SigninResponse.SigninResponse
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.SigninResponse
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.#ctor*
        name: SigninResponse
        nameWithType: SigninResponse.SigninResponse
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.SigninResponse
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.#ctor
  Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse
        name: SigninResponse
        nameWithType: SigninResponse
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse
        name: SigninResponse
        nameWithType: SigninResponse
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse
    isDefinition: true
    parent: Unity.Reflect.ProjectServer.Services.Authentication
    commentId: T:Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse
  Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.Clone*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.Clone*
        name: Clone
        nameWithType: SigninResponse.Clone
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.Clone
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.Clone*
        name: Clone
        nameWithType: SigninResponse.Clone
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.Clone
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.Clone
  Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.Token*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.Token*
        name: Token
        nameWithType: SigninResponse.Token
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.Token
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.Token*
        name: Token
        nameWithType: SigninResponse.Token
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.Token
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.Token
  Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.Equals*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.Equals*
        name: Equals
        nameWithType: SigninResponse.Equals
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.Equals
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.Equals*
        name: Equals
        nameWithType: SigninResponse.Equals
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.Equals
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.Equals
  Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.GetHashCode*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.GetHashCode*
        name: GetHashCode
        nameWithType: SigninResponse.GetHashCode
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.GetHashCode
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.GetHashCode*
        name: GetHashCode
        nameWithType: SigninResponse.GetHashCode
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.GetHashCode
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.GetHashCode
  Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.ToString*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.ToString*
        name: ToString
        nameWithType: SigninResponse.ToString
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.ToString
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.ToString*
        name: ToString
        nameWithType: SigninResponse.ToString
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.ToString
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.ToString
  Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.WriteTo*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.WriteTo*
        name: WriteTo
        nameWithType: SigninResponse.WriteTo
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.WriteTo
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.WriteTo*
        name: WriteTo
        nameWithType: SigninResponse.WriteTo
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.WriteTo
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.WriteTo
  Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.CalculateSize*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.CalculateSize*
        name: CalculateSize
        nameWithType: SigninResponse.CalculateSize
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.CalculateSize
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.CalculateSize*
        name: CalculateSize
        nameWithType: SigninResponse.CalculateSize
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.CalculateSize
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.CalculateSize
  Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.MergeFrom*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.MergeFrom*
        name: MergeFrom
        nameWithType: SigninResponse.MergeFrom
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.MergeFrom
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.MergeFrom*
        name: MergeFrom
        nameWithType: SigninResponse.MergeFrom
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.MergeFrom
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse.MergeFrom
  pb.MessageParser{Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest}:
    name:
      CSharp:
      - id: pb.MessageParser`1
        name: pb.MessageParser
        nameWithType: pb.MessageParser
        qualifiedName: pb.MessageParser
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest
        name: PublicKeyRequest
        nameWithType: PublicKeyRequest
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: pb.MessageParser`1
        name: pb.MessageParser
        nameWithType: pb.MessageParser
        qualifiedName: pb.MessageParser
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest
        name: PublicKeyRequest
        nameWithType: PublicKeyRequest
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: pb.MessageParser`1
    commentId: '!:pb.MessageParser{Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest}'
  Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.Parser*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.Parser*
        name: Parser
        nameWithType: PublicKeyRequest.Parser
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.Parser
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.Parser*
        name: Parser
        nameWithType: PublicKeyRequest.Parser
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.Parser
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.Parser
  Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.Descriptor*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.Descriptor*
        name: Descriptor
        nameWithType: PublicKeyRequest.Descriptor
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.Descriptor
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.Descriptor*
        name: Descriptor
        nameWithType: PublicKeyRequest.Descriptor
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.Descriptor
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.Descriptor
  Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.#ctor*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.#ctor*
        name: PublicKeyRequest
        nameWithType: PublicKeyRequest.PublicKeyRequest
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.PublicKeyRequest
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.#ctor*
        name: PublicKeyRequest
        nameWithType: PublicKeyRequest.PublicKeyRequest
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.PublicKeyRequest
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.#ctor
  Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest
        name: PublicKeyRequest
        nameWithType: PublicKeyRequest
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest
        name: PublicKeyRequest
        nameWithType: PublicKeyRequest
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest
    isDefinition: true
    parent: Unity.Reflect.ProjectServer.Services.Authentication
    commentId: T:Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest
  Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.Clone*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.Clone*
        name: Clone
        nameWithType: PublicKeyRequest.Clone
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.Clone
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.Clone*
        name: Clone
        nameWithType: PublicKeyRequest.Clone
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.Clone
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.Clone
  Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.Kid*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.Kid*
        name: Kid
        nameWithType: PublicKeyRequest.Kid
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.Kid
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.Kid*
        name: Kid
        nameWithType: PublicKeyRequest.Kid
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.Kid
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.Kid
  Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.Equals*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.Equals*
        name: Equals
        nameWithType: PublicKeyRequest.Equals
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.Equals
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.Equals*
        name: Equals
        nameWithType: PublicKeyRequest.Equals
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.Equals
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.Equals
  Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.GetHashCode*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.GetHashCode*
        name: GetHashCode
        nameWithType: PublicKeyRequest.GetHashCode
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.GetHashCode
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.GetHashCode*
        name: GetHashCode
        nameWithType: PublicKeyRequest.GetHashCode
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.GetHashCode
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.GetHashCode
  Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.ToString*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.ToString*
        name: ToString
        nameWithType: PublicKeyRequest.ToString
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.ToString
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.ToString*
        name: ToString
        nameWithType: PublicKeyRequest.ToString
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.ToString
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.ToString
  Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.WriteTo*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.WriteTo*
        name: WriteTo
        nameWithType: PublicKeyRequest.WriteTo
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.WriteTo
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.WriteTo*
        name: WriteTo
        nameWithType: PublicKeyRequest.WriteTo
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.WriteTo
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.WriteTo
  Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.CalculateSize*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.CalculateSize*
        name: CalculateSize
        nameWithType: PublicKeyRequest.CalculateSize
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.CalculateSize
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.CalculateSize*
        name: CalculateSize
        nameWithType: PublicKeyRequest.CalculateSize
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.CalculateSize
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.CalculateSize
  Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.MergeFrom*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.MergeFrom*
        name: MergeFrom
        nameWithType: PublicKeyRequest.MergeFrom
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.MergeFrom
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.MergeFrom*
        name: MergeFrom
        nameWithType: PublicKeyRequest.MergeFrom
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.MergeFrom
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyRequest.MergeFrom
  pb.MessageParser{Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse}:
    name:
      CSharp:
      - id: pb.MessageParser`1
        name: pb.MessageParser
        nameWithType: pb.MessageParser
        qualifiedName: pb.MessageParser
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse
        name: PublicKeyResponse
        nameWithType: PublicKeyResponse
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: pb.MessageParser`1
        name: pb.MessageParser
        nameWithType: pb.MessageParser
        qualifiedName: pb.MessageParser
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse
        name: PublicKeyResponse
        nameWithType: PublicKeyResponse
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: pb.MessageParser`1
    commentId: '!:pb.MessageParser{Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse}'
  Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.Parser*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.Parser*
        name: Parser
        nameWithType: PublicKeyResponse.Parser
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.Parser
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.Parser*
        name: Parser
        nameWithType: PublicKeyResponse.Parser
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.Parser
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.Parser
  Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.Descriptor*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.Descriptor*
        name: Descriptor
        nameWithType: PublicKeyResponse.Descriptor
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.Descriptor
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.Descriptor*
        name: Descriptor
        nameWithType: PublicKeyResponse.Descriptor
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.Descriptor
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.Descriptor
  Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.#ctor*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.#ctor*
        name: PublicKeyResponse
        nameWithType: PublicKeyResponse.PublicKeyResponse
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.PublicKeyResponse
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.#ctor*
        name: PublicKeyResponse
        nameWithType: PublicKeyResponse.PublicKeyResponse
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.PublicKeyResponse
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.#ctor
  Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse
        name: PublicKeyResponse
        nameWithType: PublicKeyResponse
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse
        name: PublicKeyResponse
        nameWithType: PublicKeyResponse
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse
    isDefinition: true
    parent: Unity.Reflect.ProjectServer.Services.Authentication
    commentId: T:Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse
  Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.Clone*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.Clone*
        name: Clone
        nameWithType: PublicKeyResponse.Clone
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.Clone
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.Clone*
        name: Clone
        nameWithType: PublicKeyResponse.Clone
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.Clone
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.Clone
  Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.Modulus*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.Modulus*
        name: Modulus
        nameWithType: PublicKeyResponse.Modulus
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.Modulus
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.Modulus*
        name: Modulus
        nameWithType: PublicKeyResponse.Modulus
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.Modulus
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.Modulus
  Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.Exponent*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.Exponent*
        name: Exponent
        nameWithType: PublicKeyResponse.Exponent
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.Exponent
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.Exponent*
        name: Exponent
        nameWithType: PublicKeyResponse.Exponent
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.Exponent
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.Exponent
  Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.Equals*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.Equals*
        name: Equals
        nameWithType: PublicKeyResponse.Equals
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.Equals
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.Equals*
        name: Equals
        nameWithType: PublicKeyResponse.Equals
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.Equals
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.Equals
  Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.GetHashCode*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.GetHashCode*
        name: GetHashCode
        nameWithType: PublicKeyResponse.GetHashCode
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.GetHashCode
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.GetHashCode*
        name: GetHashCode
        nameWithType: PublicKeyResponse.GetHashCode
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.GetHashCode
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.GetHashCode
  Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.ToString*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.ToString*
        name: ToString
        nameWithType: PublicKeyResponse.ToString
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.ToString
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.ToString*
        name: ToString
        nameWithType: PublicKeyResponse.ToString
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.ToString
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.ToString
  Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.WriteTo*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.WriteTo*
        name: WriteTo
        nameWithType: PublicKeyResponse.WriteTo
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.WriteTo
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.WriteTo*
        name: WriteTo
        nameWithType: PublicKeyResponse.WriteTo
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.WriteTo
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.WriteTo
  Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.CalculateSize*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.CalculateSize*
        name: CalculateSize
        nameWithType: PublicKeyResponse.CalculateSize
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.CalculateSize
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.CalculateSize*
        name: CalculateSize
        nameWithType: PublicKeyResponse.CalculateSize
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.CalculateSize
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.CalculateSize
  Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.MergeFrom*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.MergeFrom*
        name: MergeFrom
        nameWithType: PublicKeyResponse.MergeFrom
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.MergeFrom
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.MergeFrom*
        name: MergeFrom
        nameWithType: PublicKeyResponse.MergeFrom
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.MergeFrom
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse.MergeFrom
  pb.MessageParser{Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest}:
    name:
      CSharp:
      - id: pb.MessageParser`1
        name: pb.MessageParser
        nameWithType: pb.MessageParser
        qualifiedName: pb.MessageParser
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest
        name: ProjectAccessTokenRequest
        nameWithType: ProjectAccessTokenRequest
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: pb.MessageParser`1
        name: pb.MessageParser
        nameWithType: pb.MessageParser
        qualifiedName: pb.MessageParser
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest
        name: ProjectAccessTokenRequest
        nameWithType: ProjectAccessTokenRequest
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: pb.MessageParser`1
    commentId: '!:pb.MessageParser{Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest}'
  Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.Parser*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.Parser*
        name: Parser
        nameWithType: ProjectAccessTokenRequest.Parser
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.Parser
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.Parser*
        name: Parser
        nameWithType: ProjectAccessTokenRequest.Parser
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.Parser
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.Parser
  Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.Descriptor*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.Descriptor*
        name: Descriptor
        nameWithType: ProjectAccessTokenRequest.Descriptor
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.Descriptor
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.Descriptor*
        name: Descriptor
        nameWithType: ProjectAccessTokenRequest.Descriptor
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.Descriptor
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.Descriptor
  Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.#ctor*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.#ctor*
        name: ProjectAccessTokenRequest
        nameWithType: ProjectAccessTokenRequest.ProjectAccessTokenRequest
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.ProjectAccessTokenRequest
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.#ctor*
        name: ProjectAccessTokenRequest
        nameWithType: ProjectAccessTokenRequest.ProjectAccessTokenRequest
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.ProjectAccessTokenRequest
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.#ctor
  Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest
        name: ProjectAccessTokenRequest
        nameWithType: ProjectAccessTokenRequest
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest
        name: ProjectAccessTokenRequest
        nameWithType: ProjectAccessTokenRequest
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest
    isDefinition: true
    parent: Unity.Reflect.ProjectServer.Services.Authentication
    commentId: T:Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest
  Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.Clone*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.Clone*
        name: Clone
        nameWithType: ProjectAccessTokenRequest.Clone
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.Clone
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.Clone*
        name: Clone
        nameWithType: ProjectAccessTokenRequest.Clone
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.Clone
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.Clone
  Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.ProjectId*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.ProjectId*
        name: ProjectId
        nameWithType: ProjectAccessTokenRequest.ProjectId
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.ProjectId
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.ProjectId*
        name: ProjectId
        nameWithType: ProjectAccessTokenRequest.ProjectId
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.ProjectId
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.ProjectId
  Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.HostAddress*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.HostAddress*
        name: HostAddress
        nameWithType: ProjectAccessTokenRequest.HostAddress
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.HostAddress
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.HostAddress*
        name: HostAddress
        nameWithType: ProjectAccessTokenRequest.HostAddress
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.HostAddress
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.HostAddress
  Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.AccessType*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.AccessType*
        name: AccessType
        nameWithType: ProjectAccessTokenRequest.AccessType
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.AccessType
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.AccessType*
        name: AccessType
        nameWithType: ProjectAccessTokenRequest.AccessType
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.AccessType
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.AccessType
  Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.Equals*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.Equals*
        name: Equals
        nameWithType: ProjectAccessTokenRequest.Equals
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.Equals
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.Equals*
        name: Equals
        nameWithType: ProjectAccessTokenRequest.Equals
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.Equals
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.Equals
  Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.GetHashCode*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.GetHashCode*
        name: GetHashCode
        nameWithType: ProjectAccessTokenRequest.GetHashCode
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.GetHashCode
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.GetHashCode*
        name: GetHashCode
        nameWithType: ProjectAccessTokenRequest.GetHashCode
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.GetHashCode
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.GetHashCode
  Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.ToString*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.ToString*
        name: ToString
        nameWithType: ProjectAccessTokenRequest.ToString
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.ToString
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.ToString*
        name: ToString
        nameWithType: ProjectAccessTokenRequest.ToString
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.ToString
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.ToString
  Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.WriteTo*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.WriteTo*
        name: WriteTo
        nameWithType: ProjectAccessTokenRequest.WriteTo
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.WriteTo
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.WriteTo*
        name: WriteTo
        nameWithType: ProjectAccessTokenRequest.WriteTo
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.WriteTo
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.WriteTo
  Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.CalculateSize*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.CalculateSize*
        name: CalculateSize
        nameWithType: ProjectAccessTokenRequest.CalculateSize
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.CalculateSize
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.CalculateSize*
        name: CalculateSize
        nameWithType: ProjectAccessTokenRequest.CalculateSize
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.CalculateSize
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.CalculateSize
  Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.MergeFrom*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.MergeFrom*
        name: MergeFrom
        nameWithType: ProjectAccessTokenRequest.MergeFrom
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.MergeFrom
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.MergeFrom*
        name: MergeFrom
        nameWithType: ProjectAccessTokenRequest.MergeFrom
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.MergeFrom
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenRequest.MergeFrom
  pb.MessageParser{Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse}:
    name:
      CSharp:
      - id: pb.MessageParser`1
        name: pb.MessageParser
        nameWithType: pb.MessageParser
        qualifiedName: pb.MessageParser
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse
        name: ProjectAccessTokenResponse
        nameWithType: ProjectAccessTokenResponse
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: pb.MessageParser`1
        name: pb.MessageParser
        nameWithType: pb.MessageParser
        qualifiedName: pb.MessageParser
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse
        name: ProjectAccessTokenResponse
        nameWithType: ProjectAccessTokenResponse
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: pb.MessageParser`1
    commentId: '!:pb.MessageParser{Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse}'
  Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.Parser*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.Parser*
        name: Parser
        nameWithType: ProjectAccessTokenResponse.Parser
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.Parser
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.Parser*
        name: Parser
        nameWithType: ProjectAccessTokenResponse.Parser
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.Parser
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.Parser
  Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.Descriptor*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.Descriptor*
        name: Descriptor
        nameWithType: ProjectAccessTokenResponse.Descriptor
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.Descriptor
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.Descriptor*
        name: Descriptor
        nameWithType: ProjectAccessTokenResponse.Descriptor
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.Descriptor
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.Descriptor
  Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.#ctor*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.#ctor*
        name: ProjectAccessTokenResponse
        nameWithType: ProjectAccessTokenResponse.ProjectAccessTokenResponse
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.ProjectAccessTokenResponse
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.#ctor*
        name: ProjectAccessTokenResponse
        nameWithType: ProjectAccessTokenResponse.ProjectAccessTokenResponse
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.ProjectAccessTokenResponse
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.#ctor
  Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse
        name: ProjectAccessTokenResponse
        nameWithType: ProjectAccessTokenResponse
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse
        name: ProjectAccessTokenResponse
        nameWithType: ProjectAccessTokenResponse
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse
    isDefinition: true
    parent: Unity.Reflect.ProjectServer.Services.Authentication
    commentId: T:Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse
  Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.Clone*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.Clone*
        name: Clone
        nameWithType: ProjectAccessTokenResponse.Clone
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.Clone
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.Clone*
        name: Clone
        nameWithType: ProjectAccessTokenResponse.Clone
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.Clone
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.Clone
  Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.Token*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.Token*
        name: Token
        nameWithType: ProjectAccessTokenResponse.Token
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.Token
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.Token*
        name: Token
        nameWithType: ProjectAccessTokenResponse.Token
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.Token
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.Token
  Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.Equals*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.Equals*
        name: Equals
        nameWithType: ProjectAccessTokenResponse.Equals
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.Equals
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.Equals*
        name: Equals
        nameWithType: ProjectAccessTokenResponse.Equals
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.Equals
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.Equals
  Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.GetHashCode*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.GetHashCode*
        name: GetHashCode
        nameWithType: ProjectAccessTokenResponse.GetHashCode
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.GetHashCode
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.GetHashCode*
        name: GetHashCode
        nameWithType: ProjectAccessTokenResponse.GetHashCode
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.GetHashCode
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.GetHashCode
  Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.ToString*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.ToString*
        name: ToString
        nameWithType: ProjectAccessTokenResponse.ToString
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.ToString
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.ToString*
        name: ToString
        nameWithType: ProjectAccessTokenResponse.ToString
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.ToString
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.ToString
  Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.WriteTo*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.WriteTo*
        name: WriteTo
        nameWithType: ProjectAccessTokenResponse.WriteTo
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.WriteTo
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.WriteTo*
        name: WriteTo
        nameWithType: ProjectAccessTokenResponse.WriteTo
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.WriteTo
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.WriteTo
  Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.CalculateSize*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.CalculateSize*
        name: CalculateSize
        nameWithType: ProjectAccessTokenResponse.CalculateSize
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.CalculateSize
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.CalculateSize*
        name: CalculateSize
        nameWithType: ProjectAccessTokenResponse.CalculateSize
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.CalculateSize
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.CalculateSize
  Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.MergeFrom*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.MergeFrom*
        name: MergeFrom
        nameWithType: ProjectAccessTokenResponse.MergeFrom
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.MergeFrom
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.MergeFrom*
        name: MergeFrom
        nameWithType: ProjectAccessTokenResponse.MergeFrom
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.MergeFrom
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse.MergeFrom
  Google.Protobuf.Reflection.ServiceDescriptor:
    name:
      CSharp:
      - id: Google.Protobuf.Reflection.ServiceDescriptor
        name: Google.Protobuf.Reflection.ServiceDescriptor
        nameWithType: Google.Protobuf.Reflection.ServiceDescriptor
        qualifiedName: Google.Protobuf.Reflection.ServiceDescriptor
        isExternal: true
      VB:
      - id: Google.Protobuf.Reflection.ServiceDescriptor
        name: Google.Protobuf.Reflection.ServiceDescriptor
        nameWithType: Google.Protobuf.Reflection.ServiceDescriptor
        qualifiedName: Google.Protobuf.Reflection.ServiceDescriptor
        isExternal: true
    isDefinition: true
  Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.Descriptor*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.Descriptor*
        name: Descriptor
        nameWithType: AuthenticationService.Descriptor
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.Descriptor
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.Descriptor*
        name: Descriptor
        nameWithType: AuthenticationService.Descriptor
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.Descriptor
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.Descriptor
  grpc.ServerServiceDefinition:
    name:
      CSharp:
      - id: grpc.ServerServiceDefinition
        name: grpc.ServerServiceDefinition
        nameWithType: grpc.ServerServiceDefinition
        qualifiedName: grpc.ServerServiceDefinition
        isExternal: true
      VB:
      - id: grpc.ServerServiceDefinition
        name: grpc.ServerServiceDefinition
        nameWithType: grpc.ServerServiceDefinition
        qualifiedName: grpc.ServerServiceDefinition
        isExternal: true
    isDefinition: true
  Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceBase:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceBase
        name: AuthenticationService.AuthenticationServiceBase
        nameWithType: AuthenticationService.AuthenticationServiceBase
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceBase
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceBase
        name: AuthenticationService.AuthenticationServiceBase
        nameWithType: AuthenticationService.AuthenticationServiceBase
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceBase
    isDefinition: true
    parent: Unity.Reflect.ProjectServer.Services.Authentication
    commentId: T:Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceBase
  Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.BindService*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.BindService*
        name: BindService
        nameWithType: AuthenticationService.BindService
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.BindService
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.BindService*
        name: BindService
        nameWithType: AuthenticationService.BindService
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.BindService
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.BindService
  grpc.ServiceBinderBase:
    name:
      CSharp:
      - id: grpc.ServiceBinderBase
        name: grpc.ServiceBinderBase
        nameWithType: grpc.ServiceBinderBase
        qualifiedName: grpc.ServiceBinderBase
        isExternal: true
      VB:
      - id: grpc.ServiceBinderBase
        name: grpc.ServiceBinderBase
        nameWithType: grpc.ServiceBinderBase
        qualifiedName: grpc.ServiceBinderBase
        isExternal: true
    isDefinition: true
  Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService
        name: AuthenticationService
        nameWithType: AuthenticationService
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService
        name: AuthenticationService
        nameWithType: AuthenticationService
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService
    isDefinition: true
    commentId: T:Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService
  System.Threading.Tasks.Task`1:
    name:
      CSharp:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TResult
        nameWithType: TResult
        qualifiedName: TResult
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TResult
        nameWithType: TResult
        qualifiedName: TResult
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Threading.Tasks.Task`1
  System.Threading.Tasks:
    name:
      CSharp:
      - name: System.Threading.Tasks
        nameWithType: System.Threading.Tasks
        qualifiedName: System.Threading.Tasks
        isExternal: true
      VB:
      - name: System.Threading.Tasks
        nameWithType: System.Threading.Tasks
        qualifiedName: System.Threading.Tasks
    isDefinition: true
    commentId: N:System.Threading.Tasks
  System.Threading.Tasks.Task{Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse}:
    name:
      CSharp:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse
        name: SigninResponse
        nameWithType: SigninResponse
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse
        name: SigninResponse
        nameWithType: SigninResponse
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Threading.Tasks.Task`1
    parent: System.Threading.Tasks
    commentId: T:System.Threading.Tasks.Task{Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse}
  grpc.ServerCallContext:
    name:
      CSharp:
      - id: grpc.ServerCallContext
        name: grpc.ServerCallContext
        nameWithType: grpc.ServerCallContext
        qualifiedName: grpc.ServerCallContext
        isExternal: true
      VB:
      - id: grpc.ServerCallContext
        name: grpc.ServerCallContext
        nameWithType: grpc.ServerCallContext
        qualifiedName: grpc.ServerCallContext
        isExternal: true
    isDefinition: true
  Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceBase.Signin*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceBase.Signin*
        name: Signin
        nameWithType: AuthenticationService.AuthenticationServiceBase.Signin
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceBase.Signin
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceBase.Signin*
        name: Signin
        nameWithType: AuthenticationService.AuthenticationServiceBase.Signin
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceBase.Signin
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceBase.Signin
  System.Threading.Tasks.Task{Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse}:
    name:
      CSharp:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse
        name: PublicKeyResponse
        nameWithType: PublicKeyResponse
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse
        name: PublicKeyResponse
        nameWithType: PublicKeyResponse
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Threading.Tasks.Task`1
    parent: System.Threading.Tasks
    commentId: T:System.Threading.Tasks.Task{Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse}
  Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceBase.GetPublicKey*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceBase.GetPublicKey*
        name: GetPublicKey
        nameWithType: AuthenticationService.AuthenticationServiceBase.GetPublicKey
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceBase.GetPublicKey
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceBase.GetPublicKey*
        name: GetPublicKey
        nameWithType: AuthenticationService.AuthenticationServiceBase.GetPublicKey
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceBase.GetPublicKey
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceBase.GetPublicKey
  System.Threading.Tasks.Task{Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse}:
    name:
      CSharp:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse
        name: ProjectAccessTokenResponse
        nameWithType: ProjectAccessTokenResponse
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse
        name: ProjectAccessTokenResponse
        nameWithType: ProjectAccessTokenResponse
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Threading.Tasks.Task`1
    parent: System.Threading.Tasks
    commentId: T:System.Threading.Tasks.Task{Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse}
  Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceBase.GetProjectAccessToken*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceBase.GetProjectAccessToken*
        name: GetProjectAccessToken
        nameWithType: AuthenticationService.AuthenticationServiceBase.GetProjectAccessToken
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceBase.GetProjectAccessToken
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceBase.GetProjectAccessToken*
        name: GetProjectAccessToken
        nameWithType: AuthenticationService.AuthenticationServiceBase.GetProjectAccessToken
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceBase.GetProjectAccessToken
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceBase.GetProjectAccessToken
  grpc.Channel:
    name:
      CSharp:
      - id: grpc.Channel
        name: grpc.Channel
        nameWithType: grpc.Channel
        qualifiedName: grpc.Channel
        isExternal: true
      VB:
      - id: grpc.Channel
        name: grpc.Channel
        nameWithType: grpc.Channel
        qualifiedName: grpc.Channel
        isExternal: true
    isDefinition: true
  Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.#ctor*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.#ctor*
        name: AuthenticationServiceClient
        nameWithType: AuthenticationService.AuthenticationServiceClient.AuthenticationServiceClient
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.AuthenticationServiceClient
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.#ctor*
        name: AuthenticationServiceClient
        nameWithType: AuthenticationService.AuthenticationServiceClient.AuthenticationServiceClient
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.AuthenticationServiceClient
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.#ctor
  grpc.CallInvoker:
    name:
      CSharp:
      - id: grpc.CallInvoker
        name: grpc.CallInvoker
        nameWithType: grpc.CallInvoker
        qualifiedName: grpc.CallInvoker
        isExternal: true
      VB:
      - id: grpc.CallInvoker
        name: grpc.CallInvoker
        nameWithType: grpc.CallInvoker
        qualifiedName: grpc.CallInvoker
        isExternal: true
    isDefinition: true
  ClientBaseConfiguration:
    name:
      CSharp:
      - id: ClientBaseConfiguration
        name: ClientBaseConfiguration
        nameWithType: ClientBaseConfiguration
        qualifiedName: ClientBaseConfiguration
        isExternal: true
      VB:
      - id: ClientBaseConfiguration
        name: ClientBaseConfiguration
        nameWithType: ClientBaseConfiguration
        qualifiedName: ClientBaseConfiguration
        isExternal: true
    isDefinition: true
  grpc.Metadata:
    name:
      CSharp:
      - id: grpc.Metadata
        name: grpc.Metadata
        nameWithType: grpc.Metadata
        qualifiedName: grpc.Metadata
        isExternal: true
      VB:
      - id: grpc.Metadata
        name: grpc.Metadata
        nameWithType: grpc.Metadata
        qualifiedName: grpc.Metadata
        isExternal: true
    isDefinition: true
  System.Nullable`1:
    name:
      CSharp:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Nullable`1
  System.Nullable{System.DateTime}:
    name:
      CSharp:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.DateTime
        name: DateTime
        nameWithType: DateTime
        qualifiedName: System.DateTime
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.DateTime
        name: DateTime
        nameWithType: DateTime
        qualifiedName: System.DateTime
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Nullable`1
    parent: System
    commentId: T:System.Nullable{System.DateTime}
  System.Threading:
    name:
      CSharp:
      - name: System.Threading
        nameWithType: System.Threading
        qualifiedName: System.Threading
        isExternal: true
      VB:
      - name: System.Threading
        nameWithType: System.Threading
        qualifiedName: System.Threading
    isDefinition: true
    commentId: N:System.Threading
  System.Threading.CancellationToken:
    name:
      CSharp:
      - id: System.Threading.CancellationToken
        name: CancellationToken
        nameWithType: CancellationToken
        qualifiedName: System.Threading.CancellationToken
        isExternal: true
      VB:
      - id: System.Threading.CancellationToken
        name: CancellationToken
        nameWithType: CancellationToken
        qualifiedName: System.Threading.CancellationToken
        isExternal: true
    isDefinition: true
    parent: System.Threading
    commentId: T:System.Threading.CancellationToken
  Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.Signin*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.Signin*
        name: Signin
        nameWithType: AuthenticationService.AuthenticationServiceClient.Signin
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.Signin
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.Signin*
        name: Signin
        nameWithType: AuthenticationService.AuthenticationServiceClient.Signin
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.Signin
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.Signin
  grpc.CallOptions:
    name:
      CSharp:
      - id: grpc.CallOptions
        name: grpc.CallOptions
        nameWithType: grpc.CallOptions
        qualifiedName: grpc.CallOptions
        isExternal: true
      VB:
      - id: grpc.CallOptions
        name: grpc.CallOptions
        nameWithType: grpc.CallOptions
        qualifiedName: grpc.CallOptions
        isExternal: true
    isDefinition: true
  grpc.AsyncUnaryCall`1:
    name:
      CSharp:
      - id: grpc.AsyncUnaryCall`1
        name: grpc.AsyncUnaryCall
        nameWithType: grpc.AsyncUnaryCall
        qualifiedName: grpc.AsyncUnaryCall
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: grpc.AsyncUnaryCall`1
        name: grpc.AsyncUnaryCall
        nameWithType: grpc.AsyncUnaryCall
        qualifiedName: grpc.AsyncUnaryCall
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
  grpc.AsyncUnaryCall{Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse}:
    name:
      CSharp:
      - id: grpc.AsyncUnaryCall`1
        name: grpc.AsyncUnaryCall
        nameWithType: grpc.AsyncUnaryCall
        qualifiedName: grpc.AsyncUnaryCall
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse
        name: SigninResponse
        nameWithType: SigninResponse
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: grpc.AsyncUnaryCall`1
        name: grpc.AsyncUnaryCall
        nameWithType: grpc.AsyncUnaryCall
        qualifiedName: grpc.AsyncUnaryCall
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse
        name: SigninResponse
        nameWithType: SigninResponse
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: grpc.AsyncUnaryCall`1
    commentId: '!:grpc.AsyncUnaryCall{Unity.Reflect.ProjectServer.Services.Authentication.SigninResponse}'
  Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.SigninAsync*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.SigninAsync*
        name: SigninAsync
        nameWithType: AuthenticationService.AuthenticationServiceClient.SigninAsync
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.SigninAsync
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.SigninAsync*
        name: SigninAsync
        nameWithType: AuthenticationService.AuthenticationServiceClient.SigninAsync
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.SigninAsync
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.SigninAsync
  Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.GetPublicKey*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.GetPublicKey*
        name: GetPublicKey
        nameWithType: AuthenticationService.AuthenticationServiceClient.GetPublicKey
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.GetPublicKey
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.GetPublicKey*
        name: GetPublicKey
        nameWithType: AuthenticationService.AuthenticationServiceClient.GetPublicKey
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.GetPublicKey
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.GetPublicKey
  grpc.AsyncUnaryCall{Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse}:
    name:
      CSharp:
      - id: grpc.AsyncUnaryCall`1
        name: grpc.AsyncUnaryCall
        nameWithType: grpc.AsyncUnaryCall
        qualifiedName: grpc.AsyncUnaryCall
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse
        name: PublicKeyResponse
        nameWithType: PublicKeyResponse
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: grpc.AsyncUnaryCall`1
        name: grpc.AsyncUnaryCall
        nameWithType: grpc.AsyncUnaryCall
        qualifiedName: grpc.AsyncUnaryCall
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse
        name: PublicKeyResponse
        nameWithType: PublicKeyResponse
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: grpc.AsyncUnaryCall`1
    commentId: '!:grpc.AsyncUnaryCall{Unity.Reflect.ProjectServer.Services.Authentication.PublicKeyResponse}'
  Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.GetPublicKeyAsync*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.GetPublicKeyAsync*
        name: GetPublicKeyAsync
        nameWithType: AuthenticationService.AuthenticationServiceClient.GetPublicKeyAsync
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.GetPublicKeyAsync
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.GetPublicKeyAsync*
        name: GetPublicKeyAsync
        nameWithType: AuthenticationService.AuthenticationServiceClient.GetPublicKeyAsync
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.GetPublicKeyAsync
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.GetPublicKeyAsync
  Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.GetProjectAccessToken*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.GetProjectAccessToken*
        name: GetProjectAccessToken
        nameWithType: AuthenticationService.AuthenticationServiceClient.GetProjectAccessToken
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.GetProjectAccessToken
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.GetProjectAccessToken*
        name: GetProjectAccessToken
        nameWithType: AuthenticationService.AuthenticationServiceClient.GetProjectAccessToken
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.GetProjectAccessToken
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.GetProjectAccessToken
  grpc.AsyncUnaryCall{Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse}:
    name:
      CSharp:
      - id: grpc.AsyncUnaryCall`1
        name: grpc.AsyncUnaryCall
        nameWithType: grpc.AsyncUnaryCall
        qualifiedName: grpc.AsyncUnaryCall
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse
        name: ProjectAccessTokenResponse
        nameWithType: ProjectAccessTokenResponse
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: grpc.AsyncUnaryCall`1
        name: grpc.AsyncUnaryCall
        nameWithType: grpc.AsyncUnaryCall
        qualifiedName: grpc.AsyncUnaryCall
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse
        name: ProjectAccessTokenResponse
        nameWithType: ProjectAccessTokenResponse
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: grpc.AsyncUnaryCall`1
    commentId: '!:grpc.AsyncUnaryCall{Unity.Reflect.ProjectServer.Services.Authentication.ProjectAccessTokenResponse}'
  ? Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.GetProjectAccessTokenAsync*
  : name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.GetProjectAccessTokenAsync*
        name: GetProjectAccessTokenAsync
        nameWithType: AuthenticationService.AuthenticationServiceClient.GetProjectAccessTokenAsync
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.GetProjectAccessTokenAsync
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.GetProjectAccessTokenAsync*
        name: GetProjectAccessTokenAsync
        nameWithType: AuthenticationService.AuthenticationServiceClient.GetProjectAccessTokenAsync
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.GetProjectAccessTokenAsync
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.GetProjectAccessTokenAsync
  Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient
        name: AuthenticationService.AuthenticationServiceClient
        nameWithType: AuthenticationService.AuthenticationServiceClient
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient
        name: AuthenticationService.AuthenticationServiceClient
        nameWithType: AuthenticationService.AuthenticationServiceClient
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient
    isDefinition: true
    parent: Unity.Reflect.ProjectServer.Services.Authentication
    commentId: T:Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient
  Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.NewInstance*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.NewInstance*
        name: NewInstance
        nameWithType: AuthenticationService.AuthenticationServiceClient.NewInstance
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.NewInstance
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.NewInstance*
        name: NewInstance
        nameWithType: AuthenticationService.AuthenticationServiceClient.NewInstance
        qualifiedName: Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.NewInstance
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Authentication.AuthenticationService.AuthenticationServiceClient.NewInstance
  Unity.Reflect.ProjectServer.Services.Publisher.PublisherReflection.Descriptor*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.PublisherReflection.Descriptor*
        name: Descriptor
        nameWithType: PublisherReflection.Descriptor
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.PublisherReflection.Descriptor
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.PublisherReflection.Descriptor*
        name: Descriptor
        nameWithType: PublisherReflection.Descriptor
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.PublisherReflection.Descriptor
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Publisher.PublisherReflection.Descriptor
  Unity.Reflect.ProjectServer.Services.Publisher.PublisherReflection:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.PublisherReflection
        name: PublisherReflection
        nameWithType: PublisherReflection
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.PublisherReflection
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.PublisherReflection
        name: PublisherReflection
        nameWithType: PublisherReflection
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.PublisherReflection
    isDefinition: true
    commentId: T:Unity.Reflect.ProjectServer.Services.Publisher.PublisherReflection
  pb.MessageParser{Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse}:
    name:
      CSharp:
      - id: pb.MessageParser`1
        name: pb.MessageParser
        nameWithType: pb.MessageParser
        qualifiedName: pb.MessageParser
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse
        name: ListSyncServersResponse
        nameWithType: ListSyncServersResponse
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: pb.MessageParser`1
        name: pb.MessageParser
        nameWithType: pb.MessageParser
        qualifiedName: pb.MessageParser
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse
        name: ListSyncServersResponse
        nameWithType: ListSyncServersResponse
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: pb.MessageParser`1
    commentId: '!:pb.MessageParser{Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse}'
  Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.Parser*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.Parser*
        name: Parser
        nameWithType: ListSyncServersResponse.Parser
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.Parser
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.Parser*
        name: Parser
        nameWithType: ListSyncServersResponse.Parser
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.Parser
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.Parser
  Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.Descriptor*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.Descriptor*
        name: Descriptor
        nameWithType: ListSyncServersResponse.Descriptor
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.Descriptor
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.Descriptor*
        name: Descriptor
        nameWithType: ListSyncServersResponse.Descriptor
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.Descriptor
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.Descriptor
  Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.#ctor*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.#ctor*
        name: ListSyncServersResponse
        nameWithType: ListSyncServersResponse.ListSyncServersResponse
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.ListSyncServersResponse
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.#ctor*
        name: ListSyncServersResponse
        nameWithType: ListSyncServersResponse.ListSyncServersResponse
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.ListSyncServersResponse
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.#ctor
  Unity.Reflect.ProjectServer.Services.Publisher:
    name:
      CSharp:
      - name: Unity.Reflect.ProjectServer.Services.Publisher
        nameWithType: Unity.Reflect.ProjectServer.Services.Publisher
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher
      VB:
      - name: Unity.Reflect.ProjectServer.Services.Publisher
        nameWithType: Unity.Reflect.ProjectServer.Services.Publisher
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher
    isDefinition: true
    commentId: N:Unity.Reflect.ProjectServer.Services.Publisher
  Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse
        name: ListSyncServersResponse
        nameWithType: ListSyncServersResponse
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse
        name: ListSyncServersResponse
        nameWithType: ListSyncServersResponse
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse
    isDefinition: true
    parent: Unity.Reflect.ProjectServer.Services.Publisher
    commentId: T:Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse
  Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.Clone*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.Clone*
        name: Clone
        nameWithType: ListSyncServersResponse.Clone
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.Clone
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.Clone*
        name: Clone
        nameWithType: ListSyncServersResponse.Clone
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.Clone
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.Clone
  pbc.RepeatedField{Unity.Reflect.ProjectServer.Services.Publisher.SyncServer}:
    name:
      CSharp:
      - id: pbc.RepeatedField`1
        name: pbc.RepeatedField
        nameWithType: pbc.RepeatedField
        qualifiedName: pbc.RepeatedField
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer
        name: SyncServer
        nameWithType: SyncServer
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: pbc.RepeatedField`1
        name: pbc.RepeatedField
        nameWithType: pbc.RepeatedField
        qualifiedName: pbc.RepeatedField
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer
        name: SyncServer
        nameWithType: SyncServer
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: pbc.RepeatedField`1
    commentId: '!:pbc.RepeatedField{Unity.Reflect.ProjectServer.Services.Publisher.SyncServer}'
  Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.Servers*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.Servers*
        name: Servers
        nameWithType: ListSyncServersResponse.Servers
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.Servers
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.Servers*
        name: Servers
        nameWithType: ListSyncServersResponse.Servers
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.Servers
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.Servers
  Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.Equals*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.Equals*
        name: Equals
        nameWithType: ListSyncServersResponse.Equals
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.Equals
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.Equals*
        name: Equals
        nameWithType: ListSyncServersResponse.Equals
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.Equals
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.Equals
  Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.GetHashCode*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.GetHashCode*
        name: GetHashCode
        nameWithType: ListSyncServersResponse.GetHashCode
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.GetHashCode
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.GetHashCode*
        name: GetHashCode
        nameWithType: ListSyncServersResponse.GetHashCode
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.GetHashCode
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.GetHashCode
  Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.ToString*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.ToString*
        name: ToString
        nameWithType: ListSyncServersResponse.ToString
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.ToString
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.ToString*
        name: ToString
        nameWithType: ListSyncServersResponse.ToString
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.ToString
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.ToString
  Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.WriteTo*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.WriteTo*
        name: WriteTo
        nameWithType: ListSyncServersResponse.WriteTo
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.WriteTo
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.WriteTo*
        name: WriteTo
        nameWithType: ListSyncServersResponse.WriteTo
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.WriteTo
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.WriteTo
  Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.CalculateSize*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.CalculateSize*
        name: CalculateSize
        nameWithType: ListSyncServersResponse.CalculateSize
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.CalculateSize
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.CalculateSize*
        name: CalculateSize
        nameWithType: ListSyncServersResponse.CalculateSize
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.CalculateSize
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.CalculateSize
  Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.MergeFrom*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.MergeFrom*
        name: MergeFrom
        nameWithType: ListSyncServersResponse.MergeFrom
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.MergeFrom
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.MergeFrom*
        name: MergeFrom
        nameWithType: ListSyncServersResponse.MergeFrom
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.MergeFrom
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse.MergeFrom
  pb.MessageParser{Unity.Reflect.ProjectServer.Services.Publisher.SyncServer}:
    name:
      CSharp:
      - id: pb.MessageParser`1
        name: pb.MessageParser
        nameWithType: pb.MessageParser
        qualifiedName: pb.MessageParser
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer
        name: SyncServer
        nameWithType: SyncServer
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: pb.MessageParser`1
        name: pb.MessageParser
        nameWithType: pb.MessageParser
        qualifiedName: pb.MessageParser
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer
        name: SyncServer
        nameWithType: SyncServer
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: pb.MessageParser`1
    commentId: '!:pb.MessageParser{Unity.Reflect.ProjectServer.Services.Publisher.SyncServer}'
  Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.Parser*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.Parser*
        name: Parser
        nameWithType: SyncServer.Parser
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.Parser
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.Parser*
        name: Parser
        nameWithType: SyncServer.Parser
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.Parser
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.Parser
  Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.Descriptor*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.Descriptor*
        name: Descriptor
        nameWithType: SyncServer.Descriptor
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.Descriptor
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.Descriptor*
        name: Descriptor
        nameWithType: SyncServer.Descriptor
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.Descriptor
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.Descriptor
  Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.#ctor*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.#ctor*
        name: SyncServer
        nameWithType: SyncServer.SyncServer
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.SyncServer
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.#ctor*
        name: SyncServer
        nameWithType: SyncServer.SyncServer
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.SyncServer
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.#ctor
  Unity.Reflect.ProjectServer.Services.Publisher.SyncServer:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer
        name: SyncServer
        nameWithType: SyncServer
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer
        name: SyncServer
        nameWithType: SyncServer
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer
    isDefinition: true
    parent: Unity.Reflect.ProjectServer.Services.Publisher
    commentId: T:Unity.Reflect.ProjectServer.Services.Publisher.SyncServer
  Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.Clone*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.Clone*
        name: Clone
        nameWithType: SyncServer.Clone
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.Clone
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.Clone*
        name: Clone
        nameWithType: SyncServer.Clone
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.Clone
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.Clone
  Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.MachineName*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.MachineName*
        name: MachineName
        nameWithType: SyncServer.MachineName
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.MachineName
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.MachineName*
        name: MachineName
        nameWithType: SyncServer.MachineName
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.MachineName
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.MachineName
  Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.EndpointAddress*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.EndpointAddress*
        name: EndpointAddress
        nameWithType: SyncServer.EndpointAddress
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.EndpointAddress
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.EndpointAddress*
        name: EndpointAddress
        nameWithType: SyncServer.EndpointAddress
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.EndpointAddress
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.EndpointAddress
  Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.UserName*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.UserName*
        name: UserName
        nameWithType: SyncServer.UserName
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.UserName
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.UserName*
        name: UserName
        nameWithType: SyncServer.UserName
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.UserName
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.UserName
  Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.ProjectIds*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.ProjectIds*
        name: ProjectIds
        nameWithType: SyncServer.ProjectIds
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.ProjectIds
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.ProjectIds*
        name: ProjectIds
        nameWithType: SyncServer.ProjectIds
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.ProjectIds
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.ProjectIds
  Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.Equals*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.Equals*
        name: Equals
        nameWithType: SyncServer.Equals
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.Equals
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.Equals*
        name: Equals
        nameWithType: SyncServer.Equals
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.Equals
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.Equals
  Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.GetHashCode*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.GetHashCode*
        name: GetHashCode
        nameWithType: SyncServer.GetHashCode
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.GetHashCode
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.GetHashCode*
        name: GetHashCode
        nameWithType: SyncServer.GetHashCode
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.GetHashCode
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.GetHashCode
  Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.ToString*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.ToString*
        name: ToString
        nameWithType: SyncServer.ToString
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.ToString
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.ToString*
        name: ToString
        nameWithType: SyncServer.ToString
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.ToString
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.ToString
  Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.WriteTo*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.WriteTo*
        name: WriteTo
        nameWithType: SyncServer.WriteTo
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.WriteTo
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.WriteTo*
        name: WriteTo
        nameWithType: SyncServer.WriteTo
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.WriteTo
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.WriteTo
  Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.CalculateSize*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.CalculateSize*
        name: CalculateSize
        nameWithType: SyncServer.CalculateSize
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.CalculateSize
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.CalculateSize*
        name: CalculateSize
        nameWithType: SyncServer.CalculateSize
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.CalculateSize
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.CalculateSize
  Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.MergeFrom*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.MergeFrom*
        name: MergeFrom
        nameWithType: SyncServer.MergeFrom
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.MergeFrom
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.MergeFrom*
        name: MergeFrom
        nameWithType: SyncServer.MergeFrom
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.MergeFrom
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Publisher.SyncServer.MergeFrom
  pb.MessageParser{Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse}:
    name:
      CSharp:
      - id: pb.MessageParser`1
        name: pb.MessageParser
        nameWithType: pb.MessageParser
        qualifiedName: pb.MessageParser
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse
        name: ListProjectsResponse
        nameWithType: ListProjectsResponse
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: pb.MessageParser`1
        name: pb.MessageParser
        nameWithType: pb.MessageParser
        qualifiedName: pb.MessageParser
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse
        name: ListProjectsResponse
        nameWithType: ListProjectsResponse
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: pb.MessageParser`1
    commentId: '!:pb.MessageParser{Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse}'
  Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Parser*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Parser*
        name: Parser
        nameWithType: ListProjectsResponse.Parser
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Parser
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Parser*
        name: Parser
        nameWithType: ListProjectsResponse.Parser
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Parser
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Parser
  Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Descriptor*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Descriptor*
        name: Descriptor
        nameWithType: ListProjectsResponse.Descriptor
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Descriptor
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Descriptor*
        name: Descriptor
        nameWithType: ListProjectsResponse.Descriptor
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Descriptor
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Descriptor
  Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.#ctor*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.#ctor*
        name: ListProjectsResponse
        nameWithType: ListProjectsResponse.ListProjectsResponse
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.ListProjectsResponse
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.#ctor*
        name: ListProjectsResponse
        nameWithType: ListProjectsResponse.ListProjectsResponse
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.ListProjectsResponse
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.#ctor
  Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse
        name: ListProjectsResponse
        nameWithType: ListProjectsResponse
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse
        name: ListProjectsResponse
        nameWithType: ListProjectsResponse
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse
    isDefinition: true
    parent: Unity.Reflect.ProjectServer.Services.Publisher
    commentId: T:Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse
  Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Clone*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Clone*
        name: Clone
        nameWithType: ListProjectsResponse.Clone
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Clone
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Clone*
        name: Clone
        nameWithType: ListProjectsResponse.Clone
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Clone
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Clone
  pbc.RepeatedField{Unity.Reflect.ProjectServer.Services.Publisher.Project}:
    name:
      CSharp:
      - id: pbc.RepeatedField`1
        name: pbc.RepeatedField
        nameWithType: pbc.RepeatedField
        qualifiedName: pbc.RepeatedField
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Unity.Reflect.ProjectServer.Services.Publisher.Project
        name: Project
        nameWithType: Project
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.Project
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: pbc.RepeatedField`1
        name: pbc.RepeatedField
        nameWithType: pbc.RepeatedField
        qualifiedName: pbc.RepeatedField
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Unity.Reflect.ProjectServer.Services.Publisher.Project
        name: Project
        nameWithType: Project
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.Project
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: pbc.RepeatedField`1
    commentId: '!:pbc.RepeatedField{Unity.Reflect.ProjectServer.Services.Publisher.Project}'
  Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Projects*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Projects*
        name: Projects
        nameWithType: ListProjectsResponse.Projects
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Projects
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Projects*
        name: Projects
        nameWithType: ListProjectsResponse.Projects
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Projects
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Projects
  Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Equals*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Equals*
        name: Equals
        nameWithType: ListProjectsResponse.Equals
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Equals
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Equals*
        name: Equals
        nameWithType: ListProjectsResponse.Equals
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Equals
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.Equals
  Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.GetHashCode*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.GetHashCode*
        name: GetHashCode
        nameWithType: ListProjectsResponse.GetHashCode
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.GetHashCode
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.GetHashCode*
        name: GetHashCode
        nameWithType: ListProjectsResponse.GetHashCode
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.GetHashCode
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.GetHashCode
  Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.ToString*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.ToString*
        name: ToString
        nameWithType: ListProjectsResponse.ToString
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.ToString
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.ToString*
        name: ToString
        nameWithType: ListProjectsResponse.ToString
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.ToString
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.ToString
  Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.WriteTo*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.WriteTo*
        name: WriteTo
        nameWithType: ListProjectsResponse.WriteTo
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.WriteTo
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.WriteTo*
        name: WriteTo
        nameWithType: ListProjectsResponse.WriteTo
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.WriteTo
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.WriteTo
  Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.CalculateSize*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.CalculateSize*
        name: CalculateSize
        nameWithType: ListProjectsResponse.CalculateSize
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.CalculateSize
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.CalculateSize*
        name: CalculateSize
        nameWithType: ListProjectsResponse.CalculateSize
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.CalculateSize
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.CalculateSize
  Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.MergeFrom*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.MergeFrom*
        name: MergeFrom
        nameWithType: ListProjectsResponse.MergeFrom
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.MergeFrom
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.MergeFrom*
        name: MergeFrom
        nameWithType: ListProjectsResponse.MergeFrom
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.MergeFrom
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse.MergeFrom
  pb.MessageParser{Unity.Reflect.ProjectServer.Services.Publisher.Project}:
    name:
      CSharp:
      - id: pb.MessageParser`1
        name: pb.MessageParser
        nameWithType: pb.MessageParser
        qualifiedName: pb.MessageParser
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Unity.Reflect.ProjectServer.Services.Publisher.Project
        name: Project
        nameWithType: Project
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.Project
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: pb.MessageParser`1
        name: pb.MessageParser
        nameWithType: pb.MessageParser
        qualifiedName: pb.MessageParser
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Unity.Reflect.ProjectServer.Services.Publisher.Project
        name: Project
        nameWithType: Project
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.Project
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: pb.MessageParser`1
    commentId: '!:pb.MessageParser{Unity.Reflect.ProjectServer.Services.Publisher.Project}'
  Unity.Reflect.ProjectServer.Services.Publisher.Project.Parser*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.Project.Parser*
        name: Parser
        nameWithType: Project.Parser
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.Project.Parser
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.Project.Parser*
        name: Parser
        nameWithType: Project.Parser
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.Project.Parser
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Publisher.Project.Parser
  Unity.Reflect.ProjectServer.Services.Publisher.Project.Descriptor*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.Project.Descriptor*
        name: Descriptor
        nameWithType: Project.Descriptor
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.Project.Descriptor
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.Project.Descriptor*
        name: Descriptor
        nameWithType: Project.Descriptor
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.Project.Descriptor
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Publisher.Project.Descriptor
  Unity.Reflect.ProjectServer.Services.Publisher.Project.#ctor*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.Project.#ctor*
        name: Project
        nameWithType: Project.Project
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.Project.Project
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.Project.#ctor*
        name: Project
        nameWithType: Project.Project
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.Project.Project
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Publisher.Project.#ctor
  Unity.Reflect.ProjectServer.Services.Publisher.Project:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.Project
        name: Project
        nameWithType: Project
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.Project
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.Project
        name: Project
        nameWithType: Project
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.Project
    isDefinition: true
    parent: Unity.Reflect.ProjectServer.Services.Publisher
    commentId: T:Unity.Reflect.ProjectServer.Services.Publisher.Project
  Unity.Reflect.ProjectServer.Services.Publisher.Project.Clone*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.Project.Clone*
        name: Clone
        nameWithType: Project.Clone
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.Project.Clone
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.Project.Clone*
        name: Clone
        nameWithType: Project.Clone
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.Project.Clone
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Publisher.Project.Clone
  Unity.Reflect.ProjectServer.Services.Publisher.Project.Id*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.Project.Id*
        name: Id
        nameWithType: Project.Id
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.Project.Id
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.Project.Id*
        name: Id
        nameWithType: Project.Id
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.Project.Id
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Publisher.Project.Id
  Unity.Reflect.ProjectServer.Services.Publisher.Project.Name*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.Project.Name*
        name: Name
        nameWithType: Project.Name
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.Project.Name
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.Project.Name*
        name: Name
        nameWithType: Project.Name
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.Project.Name
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Publisher.Project.Name
  Unity.Reflect.ProjectServer.Services.Publisher.Project.Equals*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.Project.Equals*
        name: Equals
        nameWithType: Project.Equals
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.Project.Equals
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.Project.Equals*
        name: Equals
        nameWithType: Project.Equals
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.Project.Equals
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Publisher.Project.Equals
  Unity.Reflect.ProjectServer.Services.Publisher.Project.GetHashCode*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.Project.GetHashCode*
        name: GetHashCode
        nameWithType: Project.GetHashCode
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.Project.GetHashCode
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.Project.GetHashCode*
        name: GetHashCode
        nameWithType: Project.GetHashCode
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.Project.GetHashCode
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Publisher.Project.GetHashCode
  Unity.Reflect.ProjectServer.Services.Publisher.Project.ToString*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.Project.ToString*
        name: ToString
        nameWithType: Project.ToString
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.Project.ToString
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.Project.ToString*
        name: ToString
        nameWithType: Project.ToString
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.Project.ToString
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Publisher.Project.ToString
  Unity.Reflect.ProjectServer.Services.Publisher.Project.WriteTo*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.Project.WriteTo*
        name: WriteTo
        nameWithType: Project.WriteTo
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.Project.WriteTo
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.Project.WriteTo*
        name: WriteTo
        nameWithType: Project.WriteTo
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.Project.WriteTo
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Publisher.Project.WriteTo
  Unity.Reflect.ProjectServer.Services.Publisher.Project.CalculateSize*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.Project.CalculateSize*
        name: CalculateSize
        nameWithType: Project.CalculateSize
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.Project.CalculateSize
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.Project.CalculateSize*
        name: CalculateSize
        nameWithType: Project.CalculateSize
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.Project.CalculateSize
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Publisher.Project.CalculateSize
  Unity.Reflect.ProjectServer.Services.Publisher.Project.MergeFrom*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.Project.MergeFrom*
        name: MergeFrom
        nameWithType: Project.MergeFrom
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.Project.MergeFrom
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.Project.MergeFrom*
        name: MergeFrom
        nameWithType: Project.MergeFrom
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.Project.MergeFrom
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Publisher.Project.MergeFrom
  pb.MessageParser{Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest}:
    name:
      CSharp:
      - id: pb.MessageParser`1
        name: pb.MessageParser
        nameWithType: pb.MessageParser
        qualifiedName: pb.MessageParser
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest
        name: CreateProjectRequest
        nameWithType: CreateProjectRequest
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: pb.MessageParser`1
        name: pb.MessageParser
        nameWithType: pb.MessageParser
        qualifiedName: pb.MessageParser
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest
        name: CreateProjectRequest
        nameWithType: CreateProjectRequest
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: pb.MessageParser`1
    commentId: '!:pb.MessageParser{Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest}'
  Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.Parser*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.Parser*
        name: Parser
        nameWithType: CreateProjectRequest.Parser
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.Parser
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.Parser*
        name: Parser
        nameWithType: CreateProjectRequest.Parser
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.Parser
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.Parser
  Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.Descriptor*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.Descriptor*
        name: Descriptor
        nameWithType: CreateProjectRequest.Descriptor
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.Descriptor
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.Descriptor*
        name: Descriptor
        nameWithType: CreateProjectRequest.Descriptor
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.Descriptor
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.Descriptor
  Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.#ctor*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.#ctor*
        name: CreateProjectRequest
        nameWithType: CreateProjectRequest.CreateProjectRequest
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.CreateProjectRequest
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.#ctor*
        name: CreateProjectRequest
        nameWithType: CreateProjectRequest.CreateProjectRequest
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.CreateProjectRequest
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.#ctor
  Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest
        name: CreateProjectRequest
        nameWithType: CreateProjectRequest
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest
        name: CreateProjectRequest
        nameWithType: CreateProjectRequest
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest
    isDefinition: true
    parent: Unity.Reflect.ProjectServer.Services.Publisher
    commentId: T:Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest
  Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.Clone*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.Clone*
        name: Clone
        nameWithType: CreateProjectRequest.Clone
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.Clone
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.Clone*
        name: Clone
        nameWithType: CreateProjectRequest.Clone
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.Clone
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.Clone
  Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.ProjectName*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.ProjectName*
        name: ProjectName
        nameWithType: CreateProjectRequest.ProjectName
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.ProjectName
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.ProjectName*
        name: ProjectName
        nameWithType: CreateProjectRequest.ProjectName
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.ProjectName
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.ProjectName
  Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.OrganizationName*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.OrganizationName*
        name: OrganizationName
        nameWithType: CreateProjectRequest.OrganizationName
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.OrganizationName
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.OrganizationName*
        name: OrganizationName
        nameWithType: CreateProjectRequest.OrganizationName
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.OrganizationName
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.OrganizationName
  Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.Equals*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.Equals*
        name: Equals
        nameWithType: CreateProjectRequest.Equals
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.Equals
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.Equals*
        name: Equals
        nameWithType: CreateProjectRequest.Equals
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.Equals
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.Equals
  Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.GetHashCode*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.GetHashCode*
        name: GetHashCode
        nameWithType: CreateProjectRequest.GetHashCode
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.GetHashCode
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.GetHashCode*
        name: GetHashCode
        nameWithType: CreateProjectRequest.GetHashCode
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.GetHashCode
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.GetHashCode
  Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.ToString*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.ToString*
        name: ToString
        nameWithType: CreateProjectRequest.ToString
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.ToString
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.ToString*
        name: ToString
        nameWithType: CreateProjectRequest.ToString
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.ToString
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.ToString
  Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.WriteTo*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.WriteTo*
        name: WriteTo
        nameWithType: CreateProjectRequest.WriteTo
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.WriteTo
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.WriteTo*
        name: WriteTo
        nameWithType: CreateProjectRequest.WriteTo
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.WriteTo
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.WriteTo
  Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.CalculateSize*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.CalculateSize*
        name: CalculateSize
        nameWithType: CreateProjectRequest.CalculateSize
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.CalculateSize
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.CalculateSize*
        name: CalculateSize
        nameWithType: CreateProjectRequest.CalculateSize
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.CalculateSize
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.CalculateSize
  Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.MergeFrom*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.MergeFrom*
        name: MergeFrom
        nameWithType: CreateProjectRequest.MergeFrom
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.MergeFrom
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.MergeFrom*
        name: MergeFrom
        nameWithType: CreateProjectRequest.MergeFrom
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.MergeFrom
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Publisher.CreateProjectRequest.MergeFrom
  Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.Descriptor*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.Descriptor*
        name: Descriptor
        nameWithType: PublisherService.Descriptor
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.Descriptor
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.Descriptor*
        name: Descriptor
        nameWithType: PublisherService.Descriptor
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.Descriptor
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.Descriptor
  Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceBase:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceBase
        name: PublisherService.PublisherServiceBase
        nameWithType: PublisherService.PublisherServiceBase
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceBase
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceBase
        name: PublisherService.PublisherServiceBase
        nameWithType: PublisherService.PublisherServiceBase
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceBase
    isDefinition: true
    parent: Unity.Reflect.ProjectServer.Services.Publisher
    commentId: T:Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceBase
  Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.BindService*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.BindService*
        name: BindService
        nameWithType: PublisherService.BindService
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.BindService
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.BindService*
        name: BindService
        nameWithType: PublisherService.BindService
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.BindService
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.BindService
  Unity.Reflect.ProjectServer.Services.Publisher.PublisherService:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService
        name: PublisherService
        nameWithType: PublisherService
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService
        name: PublisherService
        nameWithType: PublisherService
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService
    isDefinition: true
    commentId: T:Unity.Reflect.ProjectServer.Services.Publisher.PublisherService
  System.Threading.Tasks.Task{Unity.Reflect.ProjectServer.Services.Publisher.Project}:
    name:
      CSharp:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Unity.Reflect.ProjectServer.Services.Publisher.Project
        name: Project
        nameWithType: Project
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.Project
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Unity.Reflect.ProjectServer.Services.Publisher.Project
        name: Project
        nameWithType: Project
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.Project
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Threading.Tasks.Task`1
    parent: System.Threading.Tasks
    commentId: T:System.Threading.Tasks.Task{Unity.Reflect.ProjectServer.Services.Publisher.Project}
  Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceBase.CreateProject*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceBase.CreateProject*
        name: CreateProject
        nameWithType: PublisherService.PublisherServiceBase.CreateProject
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceBase.CreateProject
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceBase.CreateProject*
        name: CreateProject
        nameWithType: PublisherService.PublisherServiceBase.CreateProject
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceBase.CreateProject
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceBase.CreateProject
  System.Threading.Tasks.Task{Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse}:
    name:
      CSharp:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse
        name: ListProjectsResponse
        nameWithType: ListProjectsResponse
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse
        name: ListProjectsResponse
        nameWithType: ListProjectsResponse
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Threading.Tasks.Task`1
    parent: System.Threading.Tasks
    commentId: T:System.Threading.Tasks.Task{Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse}
  Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceBase.ListProjects*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceBase.ListProjects*
        name: ListProjects
        nameWithType: PublisherService.PublisherServiceBase.ListProjects
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceBase.ListProjects
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceBase.ListProjects*
        name: ListProjects
        nameWithType: PublisherService.PublisherServiceBase.ListProjects
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceBase.ListProjects
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceBase.ListProjects
  System.Threading.Tasks.Task{Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse}:
    name:
      CSharp:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse
        name: ListSyncServersResponse
        nameWithType: ListSyncServersResponse
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse
        name: ListSyncServersResponse
        nameWithType: ListSyncServersResponse
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Threading.Tasks.Task`1
    parent: System.Threading.Tasks
    commentId: T:System.Threading.Tasks.Task{Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse}
  Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceBase.ListSyncServers*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceBase.ListSyncServers*
        name: ListSyncServers
        nameWithType: PublisherService.PublisherServiceBase.ListSyncServers
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceBase.ListSyncServers
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceBase.ListSyncServers*
        name: ListSyncServers
        nameWithType: PublisherService.PublisherServiceBase.ListSyncServers
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceBase.ListSyncServers
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceBase.ListSyncServers
  Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.#ctor*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.#ctor*
        name: PublisherServiceClient
        nameWithType: PublisherService.PublisherServiceClient.PublisherServiceClient
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.PublisherServiceClient
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.#ctor*
        name: PublisherServiceClient
        nameWithType: PublisherService.PublisherServiceClient.PublisherServiceClient
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.PublisherServiceClient
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.#ctor
  Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.CreateProject*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.CreateProject*
        name: CreateProject
        nameWithType: PublisherService.PublisherServiceClient.CreateProject
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.CreateProject
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.CreateProject*
        name: CreateProject
        nameWithType: PublisherService.PublisherServiceClient.CreateProject
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.CreateProject
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.CreateProject
  grpc.AsyncUnaryCall{Unity.Reflect.ProjectServer.Services.Publisher.Project}:
    name:
      CSharp:
      - id: grpc.AsyncUnaryCall`1
        name: grpc.AsyncUnaryCall
        nameWithType: grpc.AsyncUnaryCall
        qualifiedName: grpc.AsyncUnaryCall
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Unity.Reflect.ProjectServer.Services.Publisher.Project
        name: Project
        nameWithType: Project
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.Project
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: grpc.AsyncUnaryCall`1
        name: grpc.AsyncUnaryCall
        nameWithType: grpc.AsyncUnaryCall
        qualifiedName: grpc.AsyncUnaryCall
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Unity.Reflect.ProjectServer.Services.Publisher.Project
        name: Project
        nameWithType: Project
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.Project
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: grpc.AsyncUnaryCall`1
    commentId: '!:grpc.AsyncUnaryCall{Unity.Reflect.ProjectServer.Services.Publisher.Project}'
  Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.CreateProjectAsync*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.CreateProjectAsync*
        name: CreateProjectAsync
        nameWithType: PublisherService.PublisherServiceClient.CreateProjectAsync
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.CreateProjectAsync
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.CreateProjectAsync*
        name: CreateProjectAsync
        nameWithType: PublisherService.PublisherServiceClient.CreateProjectAsync
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.CreateProjectAsync
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.CreateProjectAsync
  Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListProjects*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListProjects*
        name: ListProjects
        nameWithType: PublisherService.PublisherServiceClient.ListProjects
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListProjects
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListProjects*
        name: ListProjects
        nameWithType: PublisherService.PublisherServiceClient.ListProjects
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListProjects
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListProjects
  grpc.AsyncUnaryCall{Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse}:
    name:
      CSharp:
      - id: grpc.AsyncUnaryCall`1
        name: grpc.AsyncUnaryCall
        nameWithType: grpc.AsyncUnaryCall
        qualifiedName: grpc.AsyncUnaryCall
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse
        name: ListProjectsResponse
        nameWithType: ListProjectsResponse
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: grpc.AsyncUnaryCall`1
        name: grpc.AsyncUnaryCall
        nameWithType: grpc.AsyncUnaryCall
        qualifiedName: grpc.AsyncUnaryCall
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse
        name: ListProjectsResponse
        nameWithType: ListProjectsResponse
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: grpc.AsyncUnaryCall`1
    commentId: '!:grpc.AsyncUnaryCall{Unity.Reflect.ProjectServer.Services.Publisher.ListProjectsResponse}'
  Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListProjectsAsync*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListProjectsAsync*
        name: ListProjectsAsync
        nameWithType: PublisherService.PublisherServiceClient.ListProjectsAsync
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListProjectsAsync
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListProjectsAsync*
        name: ListProjectsAsync
        nameWithType: PublisherService.PublisherServiceClient.ListProjectsAsync
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListProjectsAsync
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListProjectsAsync
  Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListSyncServers*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListSyncServers*
        name: ListSyncServers
        nameWithType: PublisherService.PublisherServiceClient.ListSyncServers
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListSyncServers
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListSyncServers*
        name: ListSyncServers
        nameWithType: PublisherService.PublisherServiceClient.ListSyncServers
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListSyncServers
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListSyncServers
  grpc.AsyncUnaryCall{Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse}:
    name:
      CSharp:
      - id: grpc.AsyncUnaryCall`1
        name: grpc.AsyncUnaryCall
        nameWithType: grpc.AsyncUnaryCall
        qualifiedName: grpc.AsyncUnaryCall
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse
        name: ListSyncServersResponse
        nameWithType: ListSyncServersResponse
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: grpc.AsyncUnaryCall`1
        name: grpc.AsyncUnaryCall
        nameWithType: grpc.AsyncUnaryCall
        qualifiedName: grpc.AsyncUnaryCall
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse
        name: ListSyncServersResponse
        nameWithType: ListSyncServersResponse
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: grpc.AsyncUnaryCall`1
    commentId: '!:grpc.AsyncUnaryCall{Unity.Reflect.ProjectServer.Services.Publisher.ListSyncServersResponse}'
  Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListSyncServersAsync*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListSyncServersAsync*
        name: ListSyncServersAsync
        nameWithType: PublisherService.PublisherServiceClient.ListSyncServersAsync
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListSyncServersAsync
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListSyncServersAsync*
        name: ListSyncServersAsync
        nameWithType: PublisherService.PublisherServiceClient.ListSyncServersAsync
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListSyncServersAsync
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.ListSyncServersAsync
  Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient
        name: PublisherService.PublisherServiceClient
        nameWithType: PublisherService.PublisherServiceClient
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient
        name: PublisherService.PublisherServiceClient
        nameWithType: PublisherService.PublisherServiceClient
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient
    isDefinition: true
    parent: Unity.Reflect.ProjectServer.Services.Publisher
    commentId: T:Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient
  Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.NewInstance*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.NewInstance*
        name: NewInstance
        nameWithType: PublisherService.PublisherServiceClient.NewInstance
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.NewInstance
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.NewInstance*
        name: NewInstance
        nameWithType: PublisherService.PublisherServiceClient.NewInstance
        qualifiedName: Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.NewInstance
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Publisher.PublisherService.PublisherServiceClient.NewInstance
  Unity.Reflect.ProjectServer.Services.SyncServer.SyncServerReflection.Descriptor*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.SyncServerReflection.Descriptor*
        name: Descriptor
        nameWithType: SyncServerReflection.Descriptor
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.SyncServerReflection.Descriptor
      VB:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.SyncServerReflection.Descriptor*
        name: Descriptor
        nameWithType: SyncServerReflection.Descriptor
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.SyncServerReflection.Descriptor
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.SyncServer.SyncServerReflection.Descriptor
  Unity.Reflect.ProjectServer.Services.SyncServer.SyncServerReflection:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.SyncServerReflection
        name: SyncServerReflection
        nameWithType: SyncServerReflection
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.SyncServerReflection
      VB:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.SyncServerReflection
        name: SyncServerReflection
        nameWithType: SyncServerReflection
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.SyncServerReflection
    isDefinition: true
    commentId: T:Unity.Reflect.ProjectServer.Services.SyncServer.SyncServerReflection
  pb.MessageParser{Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest}:
    name:
      CSharp:
      - id: pb.MessageParser`1
        name: pb.MessageParser
        nameWithType: pb.MessageParser
        qualifiedName: pb.MessageParser
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest
        name: RegistrationRequest
        nameWithType: RegistrationRequest
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: pb.MessageParser`1
        name: pb.MessageParser
        nameWithType: pb.MessageParser
        qualifiedName: pb.MessageParser
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest
        name: RegistrationRequest
        nameWithType: RegistrationRequest
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: pb.MessageParser`1
    commentId: '!:pb.MessageParser{Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest}'
  Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.Parser*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.Parser*
        name: Parser
        nameWithType: RegistrationRequest.Parser
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.Parser
      VB:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.Parser*
        name: Parser
        nameWithType: RegistrationRequest.Parser
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.Parser
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.Parser
  Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.Descriptor*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.Descriptor*
        name: Descriptor
        nameWithType: RegistrationRequest.Descriptor
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.Descriptor
      VB:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.Descriptor*
        name: Descriptor
        nameWithType: RegistrationRequest.Descriptor
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.Descriptor
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.Descriptor
  Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.#ctor*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.#ctor*
        name: RegistrationRequest
        nameWithType: RegistrationRequest.RegistrationRequest
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.RegistrationRequest
      VB:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.#ctor*
        name: RegistrationRequest
        nameWithType: RegistrationRequest.RegistrationRequest
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.RegistrationRequest
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.#ctor
  Unity.Reflect.ProjectServer.Services.SyncServer:
    name:
      CSharp:
      - name: Unity.Reflect.ProjectServer.Services.SyncServer
        nameWithType: Unity.Reflect.ProjectServer.Services.SyncServer
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer
      VB:
      - name: Unity.Reflect.ProjectServer.Services.SyncServer
        nameWithType: Unity.Reflect.ProjectServer.Services.SyncServer
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer
    isDefinition: true
    commentId: N:Unity.Reflect.ProjectServer.Services.SyncServer
  Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest
        name: RegistrationRequest
        nameWithType: RegistrationRequest
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest
      VB:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest
        name: RegistrationRequest
        nameWithType: RegistrationRequest
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest
    isDefinition: true
    parent: Unity.Reflect.ProjectServer.Services.SyncServer
    commentId: T:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest
  Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.Clone*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.Clone*
        name: Clone
        nameWithType: RegistrationRequest.Clone
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.Clone
      VB:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.Clone*
        name: Clone
        nameWithType: RegistrationRequest.Clone
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.Clone
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.Clone
  Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.MachineName*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.MachineName*
        name: MachineName
        nameWithType: RegistrationRequest.MachineName
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.MachineName
      VB:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.MachineName*
        name: MachineName
        nameWithType: RegistrationRequest.MachineName
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.MachineName
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.MachineName
  Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.EndpointAddress*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.EndpointAddress*
        name: EndpointAddress
        nameWithType: RegistrationRequest.EndpointAddress
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.EndpointAddress
      VB:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.EndpointAddress*
        name: EndpointAddress
        nameWithType: RegistrationRequest.EndpointAddress
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.EndpointAddress
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.EndpointAddress
  Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.ProjectIdList*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.ProjectIdList*
        name: ProjectIdList
        nameWithType: RegistrationRequest.ProjectIdList
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.ProjectIdList
      VB:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.ProjectIdList*
        name: ProjectIdList
        nameWithType: RegistrationRequest.ProjectIdList
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.ProjectIdList
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.ProjectIdList
  Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.Equals*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.Equals*
        name: Equals
        nameWithType: RegistrationRequest.Equals
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.Equals
      VB:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.Equals*
        name: Equals
        nameWithType: RegistrationRequest.Equals
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.Equals
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.Equals
  Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.GetHashCode*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.GetHashCode*
        name: GetHashCode
        nameWithType: RegistrationRequest.GetHashCode
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.GetHashCode
      VB:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.GetHashCode*
        name: GetHashCode
        nameWithType: RegistrationRequest.GetHashCode
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.GetHashCode
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.GetHashCode
  Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.ToString*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.ToString*
        name: ToString
        nameWithType: RegistrationRequest.ToString
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.ToString
      VB:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.ToString*
        name: ToString
        nameWithType: RegistrationRequest.ToString
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.ToString
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.ToString
  Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.WriteTo*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.WriteTo*
        name: WriteTo
        nameWithType: RegistrationRequest.WriteTo
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.WriteTo
      VB:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.WriteTo*
        name: WriteTo
        nameWithType: RegistrationRequest.WriteTo
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.WriteTo
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.WriteTo
  Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.CalculateSize*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.CalculateSize*
        name: CalculateSize
        nameWithType: RegistrationRequest.CalculateSize
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.CalculateSize
      VB:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.CalculateSize*
        name: CalculateSize
        nameWithType: RegistrationRequest.CalculateSize
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.CalculateSize
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.CalculateSize
  Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.MergeFrom*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.MergeFrom*
        name: MergeFrom
        nameWithType: RegistrationRequest.MergeFrom
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.MergeFrom
      VB:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.MergeFrom*
        name: MergeFrom
        nameWithType: RegistrationRequest.MergeFrom
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.MergeFrom
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationRequest.MergeFrom
  pb.MessageParser{Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest}:
    name:
      CSharp:
      - id: pb.MessageParser`1
        name: pb.MessageParser
        nameWithType: pb.MessageParser
        qualifiedName: pb.MessageParser
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest
        name: KeepAliveRequest
        nameWithType: KeepAliveRequest
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: pb.MessageParser`1
        name: pb.MessageParser
        nameWithType: pb.MessageParser
        qualifiedName: pb.MessageParser
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest
        name: KeepAliveRequest
        nameWithType: KeepAliveRequest
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: pb.MessageParser`1
    commentId: '!:pb.MessageParser{Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest}'
  Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.Parser*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.Parser*
        name: Parser
        nameWithType: KeepAliveRequest.Parser
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.Parser
      VB:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.Parser*
        name: Parser
        nameWithType: KeepAliveRequest.Parser
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.Parser
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.Parser
  Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.Descriptor*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.Descriptor*
        name: Descriptor
        nameWithType: KeepAliveRequest.Descriptor
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.Descriptor
      VB:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.Descriptor*
        name: Descriptor
        nameWithType: KeepAliveRequest.Descriptor
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.Descriptor
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.Descriptor
  Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.#ctor*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.#ctor*
        name: KeepAliveRequest
        nameWithType: KeepAliveRequest.KeepAliveRequest
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.KeepAliveRequest
      VB:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.#ctor*
        name: KeepAliveRequest
        nameWithType: KeepAliveRequest.KeepAliveRequest
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.KeepAliveRequest
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.#ctor
  Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest
        name: KeepAliveRequest
        nameWithType: KeepAliveRequest
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest
      VB:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest
        name: KeepAliveRequest
        nameWithType: KeepAliveRequest
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest
    isDefinition: true
    parent: Unity.Reflect.ProjectServer.Services.SyncServer
    commentId: T:Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest
  Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.Clone*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.Clone*
        name: Clone
        nameWithType: KeepAliveRequest.Clone
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.Clone
      VB:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.Clone*
        name: Clone
        nameWithType: KeepAliveRequest.Clone
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.Clone
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.Clone
  Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.EndpointAddress*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.EndpointAddress*
        name: EndpointAddress
        nameWithType: KeepAliveRequest.EndpointAddress
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.EndpointAddress
      VB:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.EndpointAddress*
        name: EndpointAddress
        nameWithType: KeepAliveRequest.EndpointAddress
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.EndpointAddress
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.EndpointAddress
  Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.Equals*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.Equals*
        name: Equals
        nameWithType: KeepAliveRequest.Equals
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.Equals
      VB:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.Equals*
        name: Equals
        nameWithType: KeepAliveRequest.Equals
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.Equals
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.Equals
  Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.GetHashCode*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.GetHashCode*
        name: GetHashCode
        nameWithType: KeepAliveRequest.GetHashCode
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.GetHashCode
      VB:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.GetHashCode*
        name: GetHashCode
        nameWithType: KeepAliveRequest.GetHashCode
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.GetHashCode
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.GetHashCode
  Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.ToString*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.ToString*
        name: ToString
        nameWithType: KeepAliveRequest.ToString
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.ToString
      VB:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.ToString*
        name: ToString
        nameWithType: KeepAliveRequest.ToString
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.ToString
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.ToString
  Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.WriteTo*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.WriteTo*
        name: WriteTo
        nameWithType: KeepAliveRequest.WriteTo
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.WriteTo
      VB:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.WriteTo*
        name: WriteTo
        nameWithType: KeepAliveRequest.WriteTo
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.WriteTo
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.WriteTo
  Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.CalculateSize*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.CalculateSize*
        name: CalculateSize
        nameWithType: KeepAliveRequest.CalculateSize
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.CalculateSize
      VB:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.CalculateSize*
        name: CalculateSize
        nameWithType: KeepAliveRequest.CalculateSize
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.CalculateSize
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.CalculateSize
  Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.MergeFrom*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.MergeFrom*
        name: MergeFrom
        nameWithType: KeepAliveRequest.MergeFrom
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.MergeFrom
      VB:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.MergeFrom*
        name: MergeFrom
        nameWithType: KeepAliveRequest.MergeFrom
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.MergeFrom
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveRequest.MergeFrom
  pb.MessageParser{Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse}:
    name:
      CSharp:
      - id: pb.MessageParser`1
        name: pb.MessageParser
        nameWithType: pb.MessageParser
        qualifiedName: pb.MessageParser
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse
        name: KeepAliveResponse
        nameWithType: KeepAliveResponse
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: pb.MessageParser`1
        name: pb.MessageParser
        nameWithType: pb.MessageParser
        qualifiedName: pb.MessageParser
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse
        name: KeepAliveResponse
        nameWithType: KeepAliveResponse
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: pb.MessageParser`1
    commentId: '!:pb.MessageParser{Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse}'
  Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.Parser*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.Parser*
        name: Parser
        nameWithType: KeepAliveResponse.Parser
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.Parser
      VB:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.Parser*
        name: Parser
        nameWithType: KeepAliveResponse.Parser
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.Parser
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.Parser
  Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.Descriptor*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.Descriptor*
        name: Descriptor
        nameWithType: KeepAliveResponse.Descriptor
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.Descriptor
      VB:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.Descriptor*
        name: Descriptor
        nameWithType: KeepAliveResponse.Descriptor
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.Descriptor
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.Descriptor
  Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.#ctor*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.#ctor*
        name: KeepAliveResponse
        nameWithType: KeepAliveResponse.KeepAliveResponse
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.KeepAliveResponse
      VB:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.#ctor*
        name: KeepAliveResponse
        nameWithType: KeepAliveResponse.KeepAliveResponse
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.KeepAliveResponse
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.#ctor
  Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse
        name: KeepAliveResponse
        nameWithType: KeepAliveResponse
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse
      VB:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse
        name: KeepAliveResponse
        nameWithType: KeepAliveResponse
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse
    isDefinition: true
    parent: Unity.Reflect.ProjectServer.Services.SyncServer
    commentId: T:Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse
  Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.Clone*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.Clone*
        name: Clone
        nameWithType: KeepAliveResponse.Clone
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.Clone
      VB:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.Clone*
        name: Clone
        nameWithType: KeepAliveResponse.Clone
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.Clone
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.Clone
  Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.SecondsToNextKeepAlive*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.SecondsToNextKeepAlive*
        name: SecondsToNextKeepAlive
        nameWithType: KeepAliveResponse.SecondsToNextKeepAlive
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.SecondsToNextKeepAlive
      VB:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.SecondsToNextKeepAlive*
        name: SecondsToNextKeepAlive
        nameWithType: KeepAliveResponse.SecondsToNextKeepAlive
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.SecondsToNextKeepAlive
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.SecondsToNextKeepAlive
  Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.Equals*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.Equals*
        name: Equals
        nameWithType: KeepAliveResponse.Equals
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.Equals
      VB:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.Equals*
        name: Equals
        nameWithType: KeepAliveResponse.Equals
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.Equals
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.Equals
  Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.GetHashCode*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.GetHashCode*
        name: GetHashCode
        nameWithType: KeepAliveResponse.GetHashCode
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.GetHashCode
      VB:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.GetHashCode*
        name: GetHashCode
        nameWithType: KeepAliveResponse.GetHashCode
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.GetHashCode
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.GetHashCode
  Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.ToString*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.ToString*
        name: ToString
        nameWithType: KeepAliveResponse.ToString
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.ToString
      VB:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.ToString*
        name: ToString
        nameWithType: KeepAliveResponse.ToString
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.ToString
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.ToString
  Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.WriteTo*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.WriteTo*
        name: WriteTo
        nameWithType: KeepAliveResponse.WriteTo
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.WriteTo
      VB:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.WriteTo*
        name: WriteTo
        nameWithType: KeepAliveResponse.WriteTo
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.WriteTo
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.WriteTo
  Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.CalculateSize*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.CalculateSize*
        name: CalculateSize
        nameWithType: KeepAliveResponse.CalculateSize
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.CalculateSize
      VB:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.CalculateSize*
        name: CalculateSize
        nameWithType: KeepAliveResponse.CalculateSize
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.CalculateSize
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.CalculateSize
  Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.MergeFrom*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.MergeFrom*
        name: MergeFrom
        nameWithType: KeepAliveResponse.MergeFrom
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.MergeFrom
      VB:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.MergeFrom*
        name: MergeFrom
        nameWithType: KeepAliveResponse.MergeFrom
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.MergeFrom
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse.MergeFrom
  pb.MessageParser{Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest}:
    name:
      CSharp:
      - id: pb.MessageParser`1
        name: pb.MessageParser
        nameWithType: pb.MessageParser
        qualifiedName: pb.MessageParser
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest
        name: UnregisterRequest
        nameWithType: UnregisterRequest
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: pb.MessageParser`1
        name: pb.MessageParser
        nameWithType: pb.MessageParser
        qualifiedName: pb.MessageParser
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest
        name: UnregisterRequest
        nameWithType: UnregisterRequest
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: pb.MessageParser`1
    commentId: '!:pb.MessageParser{Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest}'
  Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.Parser*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.Parser*
        name: Parser
        nameWithType: UnregisterRequest.Parser
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.Parser
      VB:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.Parser*
        name: Parser
        nameWithType: UnregisterRequest.Parser
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.Parser
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.Parser
  Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.Descriptor*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.Descriptor*
        name: Descriptor
        nameWithType: UnregisterRequest.Descriptor
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.Descriptor
      VB:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.Descriptor*
        name: Descriptor
        nameWithType: UnregisterRequest.Descriptor
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.Descriptor
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.Descriptor
  Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.#ctor*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.#ctor*
        name: UnregisterRequest
        nameWithType: UnregisterRequest.UnregisterRequest
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.UnregisterRequest
      VB:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.#ctor*
        name: UnregisterRequest
        nameWithType: UnregisterRequest.UnregisterRequest
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.UnregisterRequest
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.#ctor
  Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest
        name: UnregisterRequest
        nameWithType: UnregisterRequest
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest
      VB:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest
        name: UnregisterRequest
        nameWithType: UnregisterRequest
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest
    isDefinition: true
    parent: Unity.Reflect.ProjectServer.Services.SyncServer
    commentId: T:Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest
  Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.Clone*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.Clone*
        name: Clone
        nameWithType: UnregisterRequest.Clone
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.Clone
      VB:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.Clone*
        name: Clone
        nameWithType: UnregisterRequest.Clone
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.Clone
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.Clone
  Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.EndpointAddress*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.EndpointAddress*
        name: EndpointAddress
        nameWithType: UnregisterRequest.EndpointAddress
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.EndpointAddress
      VB:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.EndpointAddress*
        name: EndpointAddress
        nameWithType: UnregisterRequest.EndpointAddress
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.EndpointAddress
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.EndpointAddress
  Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.Equals*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.Equals*
        name: Equals
        nameWithType: UnregisterRequest.Equals
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.Equals
      VB:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.Equals*
        name: Equals
        nameWithType: UnregisterRequest.Equals
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.Equals
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.Equals
  Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.GetHashCode*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.GetHashCode*
        name: GetHashCode
        nameWithType: UnregisterRequest.GetHashCode
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.GetHashCode
      VB:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.GetHashCode*
        name: GetHashCode
        nameWithType: UnregisterRequest.GetHashCode
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.GetHashCode
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.GetHashCode
  Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.ToString*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.ToString*
        name: ToString
        nameWithType: UnregisterRequest.ToString
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.ToString
      VB:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.ToString*
        name: ToString
        nameWithType: UnregisterRequest.ToString
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.ToString
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.ToString
  Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.WriteTo*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.WriteTo*
        name: WriteTo
        nameWithType: UnregisterRequest.WriteTo
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.WriteTo
      VB:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.WriteTo*
        name: WriteTo
        nameWithType: UnregisterRequest.WriteTo
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.WriteTo
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.WriteTo
  Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.CalculateSize*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.CalculateSize*
        name: CalculateSize
        nameWithType: UnregisterRequest.CalculateSize
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.CalculateSize
      VB:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.CalculateSize*
        name: CalculateSize
        nameWithType: UnregisterRequest.CalculateSize
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.CalculateSize
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.CalculateSize
  Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.MergeFrom*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.MergeFrom*
        name: MergeFrom
        nameWithType: UnregisterRequest.MergeFrom
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.MergeFrom
      VB:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.MergeFrom*
        name: MergeFrom
        nameWithType: UnregisterRequest.MergeFrom
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.MergeFrom
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.SyncServer.UnregisterRequest.MergeFrom
  Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.Descriptor*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.Descriptor*
        name: Descriptor
        nameWithType: RegistrationService.Descriptor
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.Descriptor
      VB:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.Descriptor*
        name: Descriptor
        nameWithType: RegistrationService.Descriptor
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.Descriptor
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.Descriptor
  Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceBase:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceBase
        name: RegistrationService.RegistrationServiceBase
        nameWithType: RegistrationService.RegistrationServiceBase
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceBase
      VB:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceBase
        name: RegistrationService.RegistrationServiceBase
        nameWithType: RegistrationService.RegistrationServiceBase
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceBase
    isDefinition: true
    parent: Unity.Reflect.ProjectServer.Services.SyncServer
    commentId: T:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceBase
  Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.BindService*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.BindService*
        name: BindService
        nameWithType: RegistrationService.BindService
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.BindService
      VB:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.BindService*
        name: BindService
        nameWithType: RegistrationService.BindService
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.BindService
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.BindService
  Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService
        name: RegistrationService
        nameWithType: RegistrationService
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService
      VB:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService
        name: RegistrationService
        nameWithType: RegistrationService
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService
    isDefinition: true
    commentId: T:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService
  System.Threading.Tasks.Task{Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse}:
    name:
      CSharp:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse
        name: KeepAliveResponse
        nameWithType: KeepAliveResponse
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse
        name: KeepAliveResponse
        nameWithType: KeepAliveResponse
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Threading.Tasks.Task`1
    parent: System.Threading.Tasks
    commentId: T:System.Threading.Tasks.Task{Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse}
  Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceBase.Register*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceBase.Register*
        name: Register
        nameWithType: RegistrationService.RegistrationServiceBase.Register
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceBase.Register
      VB:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceBase.Register*
        name: Register
        nameWithType: RegistrationService.RegistrationServiceBase.Register
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceBase.Register
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceBase.Register
  Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceBase.KeepAlive*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceBase.KeepAlive*
        name: KeepAlive
        nameWithType: RegistrationService.RegistrationServiceBase.KeepAlive
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceBase.KeepAlive
      VB:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceBase.KeepAlive*
        name: KeepAlive
        nameWithType: RegistrationService.RegistrationServiceBase.KeepAlive
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceBase.KeepAlive
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceBase.KeepAlive
  System.Threading.Tasks.Task{Unity.Reflect.ProjectServer.Services.Empty}:
    name:
      CSharp:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Unity.Reflect.ProjectServer.Services.Empty
        name: Empty
        nameWithType: Empty
        qualifiedName: Unity.Reflect.ProjectServer.Services.Empty
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Unity.Reflect.ProjectServer.Services.Empty
        name: Empty
        nameWithType: Empty
        qualifiedName: Unity.Reflect.ProjectServer.Services.Empty
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Threading.Tasks.Task`1
    parent: System.Threading.Tasks
    commentId: T:System.Threading.Tasks.Task{Unity.Reflect.ProjectServer.Services.Empty}
  Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceBase.Unregister*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceBase.Unregister*
        name: Unregister
        nameWithType: RegistrationService.RegistrationServiceBase.Unregister
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceBase.Unregister
      VB:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceBase.Unregister*
        name: Unregister
        nameWithType: RegistrationService.RegistrationServiceBase.Unregister
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceBase.Unregister
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceBase.Unregister
  Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.#ctor*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.#ctor*
        name: RegistrationServiceClient
        nameWithType: RegistrationService.RegistrationServiceClient.RegistrationServiceClient
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.RegistrationServiceClient
      VB:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.#ctor*
        name: RegistrationServiceClient
        nameWithType: RegistrationService.RegistrationServiceClient.RegistrationServiceClient
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.RegistrationServiceClient
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.#ctor
  Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.Register*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.Register*
        name: Register
        nameWithType: RegistrationService.RegistrationServiceClient.Register
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.Register
      VB:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.Register*
        name: Register
        nameWithType: RegistrationService.RegistrationServiceClient.Register
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.Register
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.Register
  grpc.AsyncUnaryCall{Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse}:
    name:
      CSharp:
      - id: grpc.AsyncUnaryCall`1
        name: grpc.AsyncUnaryCall
        nameWithType: grpc.AsyncUnaryCall
        qualifiedName: grpc.AsyncUnaryCall
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse
        name: KeepAliveResponse
        nameWithType: KeepAliveResponse
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: grpc.AsyncUnaryCall`1
        name: grpc.AsyncUnaryCall
        nameWithType: grpc.AsyncUnaryCall
        qualifiedName: grpc.AsyncUnaryCall
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse
        name: KeepAliveResponse
        nameWithType: KeepAliveResponse
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: grpc.AsyncUnaryCall`1
    commentId: '!:grpc.AsyncUnaryCall{Unity.Reflect.ProjectServer.Services.SyncServer.KeepAliveResponse}'
  Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.RegisterAsync*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.RegisterAsync*
        name: RegisterAsync
        nameWithType: RegistrationService.RegistrationServiceClient.RegisterAsync
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.RegisterAsync
      VB:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.RegisterAsync*
        name: RegisterAsync
        nameWithType: RegistrationService.RegistrationServiceClient.RegisterAsync
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.RegisterAsync
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.RegisterAsync
  Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.KeepAlive*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.KeepAlive*
        name: KeepAlive
        nameWithType: RegistrationService.RegistrationServiceClient.KeepAlive
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.KeepAlive
      VB:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.KeepAlive*
        name: KeepAlive
        nameWithType: RegistrationService.RegistrationServiceClient.KeepAlive
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.KeepAlive
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.KeepAlive
  Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.KeepAliveAsync*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.KeepAliveAsync*
        name: KeepAliveAsync
        nameWithType: RegistrationService.RegistrationServiceClient.KeepAliveAsync
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.KeepAliveAsync
      VB:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.KeepAliveAsync*
        name: KeepAliveAsync
        nameWithType: RegistrationService.RegistrationServiceClient.KeepAliveAsync
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.KeepAliveAsync
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.KeepAliveAsync
  Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.Unregister*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.Unregister*
        name: Unregister
        nameWithType: RegistrationService.RegistrationServiceClient.Unregister
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.Unregister
      VB:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.Unregister*
        name: Unregister
        nameWithType: RegistrationService.RegistrationServiceClient.Unregister
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.Unregister
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.Unregister
  grpc.AsyncUnaryCall{Unity.Reflect.ProjectServer.Services.Empty}:
    name:
      CSharp:
      - id: grpc.AsyncUnaryCall`1
        name: grpc.AsyncUnaryCall
        nameWithType: grpc.AsyncUnaryCall
        qualifiedName: grpc.AsyncUnaryCall
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Unity.Reflect.ProjectServer.Services.Empty
        name: Empty
        nameWithType: Empty
        qualifiedName: Unity.Reflect.ProjectServer.Services.Empty
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: grpc.AsyncUnaryCall`1
        name: grpc.AsyncUnaryCall
        nameWithType: grpc.AsyncUnaryCall
        qualifiedName: grpc.AsyncUnaryCall
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Unity.Reflect.ProjectServer.Services.Empty
        name: Empty
        nameWithType: Empty
        qualifiedName: Unity.Reflect.ProjectServer.Services.Empty
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: grpc.AsyncUnaryCall`1
    commentId: '!:grpc.AsyncUnaryCall{Unity.Reflect.ProjectServer.Services.Empty}'
  Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.UnregisterAsync*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.UnregisterAsync*
        name: UnregisterAsync
        nameWithType: RegistrationService.RegistrationServiceClient.UnregisterAsync
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.UnregisterAsync
      VB:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.UnregisterAsync*
        name: UnregisterAsync
        nameWithType: RegistrationService.RegistrationServiceClient.UnregisterAsync
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.UnregisterAsync
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.UnregisterAsync
  Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient
        name: RegistrationService.RegistrationServiceClient
        nameWithType: RegistrationService.RegistrationServiceClient
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient
      VB:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient
        name: RegistrationService.RegistrationServiceClient
        nameWithType: RegistrationService.RegistrationServiceClient
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient
    isDefinition: true
    parent: Unity.Reflect.ProjectServer.Services.SyncServer
    commentId: T:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient
  Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.NewInstance*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.NewInstance*
        name: NewInstance
        nameWithType: RegistrationService.RegistrationServiceClient.NewInstance
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.NewInstance
      VB:
      - id: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.NewInstance*
        name: NewInstance
        nameWithType: RegistrationService.RegistrationServiceClient.NewInstance
        qualifiedName: Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.NewInstance
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.SyncServer.RegistrationService.RegistrationServiceClient.NewInstance
  Unity.Reflect.ProjectServer.Services.Viewer.ViewerReflection.Descriptor*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.ViewerReflection.Descriptor*
        name: Descriptor
        nameWithType: ViewerReflection.Descriptor
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.ViewerReflection.Descriptor
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.ViewerReflection.Descriptor*
        name: Descriptor
        nameWithType: ViewerReflection.Descriptor
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.ViewerReflection.Descriptor
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Viewer.ViewerReflection.Descriptor
  Unity.Reflect.ProjectServer.Services.Viewer.ViewerReflection:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.ViewerReflection
        name: ViewerReflection
        nameWithType: ViewerReflection
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.ViewerReflection
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.ViewerReflection
        name: ViewerReflection
        nameWithType: ViewerReflection
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.ViewerReflection
    isDefinition: true
    commentId: T:Unity.Reflect.ProjectServer.Services.Viewer.ViewerReflection
  pb.MessageParser{Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse}:
    name:
      CSharp:
      - id: pb.MessageParser`1
        name: pb.MessageParser
        nameWithType: pb.MessageParser
        qualifiedName: pb.MessageParser
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse
        name: ListProjectsResponse
        nameWithType: ListProjectsResponse
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: pb.MessageParser`1
        name: pb.MessageParser
        nameWithType: pb.MessageParser
        qualifiedName: pb.MessageParser
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse
        name: ListProjectsResponse
        nameWithType: ListProjectsResponse
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: pb.MessageParser`1
    commentId: '!:pb.MessageParser{Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse}'
  Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.Parser*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.Parser*
        name: Parser
        nameWithType: ListProjectsResponse.Parser
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.Parser
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.Parser*
        name: Parser
        nameWithType: ListProjectsResponse.Parser
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.Parser
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.Parser
  Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.Descriptor*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.Descriptor*
        name: Descriptor
        nameWithType: ListProjectsResponse.Descriptor
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.Descriptor
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.Descriptor*
        name: Descriptor
        nameWithType: ListProjectsResponse.Descriptor
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.Descriptor
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.Descriptor
  Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.#ctor*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.#ctor*
        name: ListProjectsResponse
        nameWithType: ListProjectsResponse.ListProjectsResponse
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.ListProjectsResponse
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.#ctor*
        name: ListProjectsResponse
        nameWithType: ListProjectsResponse.ListProjectsResponse
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.ListProjectsResponse
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.#ctor
  Unity.Reflect.ProjectServer.Services.Viewer:
    name:
      CSharp:
      - name: Unity.Reflect.ProjectServer.Services.Viewer
        nameWithType: Unity.Reflect.ProjectServer.Services.Viewer
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer
      VB:
      - name: Unity.Reflect.ProjectServer.Services.Viewer
        nameWithType: Unity.Reflect.ProjectServer.Services.Viewer
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer
    isDefinition: true
    commentId: N:Unity.Reflect.ProjectServer.Services.Viewer
  Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse
        name: ListProjectsResponse
        nameWithType: ListProjectsResponse
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse
        name: ListProjectsResponse
        nameWithType: ListProjectsResponse
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse
    isDefinition: true
    parent: Unity.Reflect.ProjectServer.Services.Viewer
    commentId: T:Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse
  Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.Clone*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.Clone*
        name: Clone
        nameWithType: ListProjectsResponse.Clone
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.Clone
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.Clone*
        name: Clone
        nameWithType: ListProjectsResponse.Clone
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.Clone
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.Clone
  pbc.RepeatedField{Unity.Reflect.ProjectServer.Services.Viewer.Project}:
    name:
      CSharp:
      - id: pbc.RepeatedField`1
        name: pbc.RepeatedField
        nameWithType: pbc.RepeatedField
        qualifiedName: pbc.RepeatedField
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Unity.Reflect.ProjectServer.Services.Viewer.Project
        name: Project
        nameWithType: Project
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.Project
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: pbc.RepeatedField`1
        name: pbc.RepeatedField
        nameWithType: pbc.RepeatedField
        qualifiedName: pbc.RepeatedField
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Unity.Reflect.ProjectServer.Services.Viewer.Project
        name: Project
        nameWithType: Project
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.Project
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: pbc.RepeatedField`1
    commentId: '!:pbc.RepeatedField{Unity.Reflect.ProjectServer.Services.Viewer.Project}'
  Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.Projects*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.Projects*
        name: Projects
        nameWithType: ListProjectsResponse.Projects
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.Projects
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.Projects*
        name: Projects
        nameWithType: ListProjectsResponse.Projects
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.Projects
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.Projects
  Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.Equals*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.Equals*
        name: Equals
        nameWithType: ListProjectsResponse.Equals
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.Equals
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.Equals*
        name: Equals
        nameWithType: ListProjectsResponse.Equals
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.Equals
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.Equals
  Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.GetHashCode*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.GetHashCode*
        name: GetHashCode
        nameWithType: ListProjectsResponse.GetHashCode
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.GetHashCode
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.GetHashCode*
        name: GetHashCode
        nameWithType: ListProjectsResponse.GetHashCode
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.GetHashCode
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.GetHashCode
  Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.ToString*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.ToString*
        name: ToString
        nameWithType: ListProjectsResponse.ToString
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.ToString
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.ToString*
        name: ToString
        nameWithType: ListProjectsResponse.ToString
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.ToString
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.ToString
  Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.WriteTo*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.WriteTo*
        name: WriteTo
        nameWithType: ListProjectsResponse.WriteTo
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.WriteTo
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.WriteTo*
        name: WriteTo
        nameWithType: ListProjectsResponse.WriteTo
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.WriteTo
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.WriteTo
  Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.CalculateSize*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.CalculateSize*
        name: CalculateSize
        nameWithType: ListProjectsResponse.CalculateSize
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.CalculateSize
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.CalculateSize*
        name: CalculateSize
        nameWithType: ListProjectsResponse.CalculateSize
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.CalculateSize
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.CalculateSize
  Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.MergeFrom*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.MergeFrom*
        name: MergeFrom
        nameWithType: ListProjectsResponse.MergeFrom
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.MergeFrom
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.MergeFrom*
        name: MergeFrom
        nameWithType: ListProjectsResponse.MergeFrom
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.MergeFrom
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse.MergeFrom
  pb.MessageParser{Unity.Reflect.ProjectServer.Services.Viewer.Project}:
    name:
      CSharp:
      - id: pb.MessageParser`1
        name: pb.MessageParser
        nameWithType: pb.MessageParser
        qualifiedName: pb.MessageParser
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Unity.Reflect.ProjectServer.Services.Viewer.Project
        name: Project
        nameWithType: Project
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.Project
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: pb.MessageParser`1
        name: pb.MessageParser
        nameWithType: pb.MessageParser
        qualifiedName: pb.MessageParser
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Unity.Reflect.ProjectServer.Services.Viewer.Project
        name: Project
        nameWithType: Project
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.Project
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: pb.MessageParser`1
    commentId: '!:pb.MessageParser{Unity.Reflect.ProjectServer.Services.Viewer.Project}'
  Unity.Reflect.ProjectServer.Services.Viewer.Project.Parser*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.Project.Parser*
        name: Parser
        nameWithType: Project.Parser
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.Project.Parser
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.Project.Parser*
        name: Parser
        nameWithType: Project.Parser
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.Project.Parser
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Viewer.Project.Parser
  Unity.Reflect.ProjectServer.Services.Viewer.Project.Descriptor*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.Project.Descriptor*
        name: Descriptor
        nameWithType: Project.Descriptor
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.Project.Descriptor
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.Project.Descriptor*
        name: Descriptor
        nameWithType: Project.Descriptor
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.Project.Descriptor
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Viewer.Project.Descriptor
  Unity.Reflect.ProjectServer.Services.Viewer.Project.#ctor*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.Project.#ctor*
        name: Project
        nameWithType: Project.Project
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.Project.Project
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.Project.#ctor*
        name: Project
        nameWithType: Project.Project
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.Project.Project
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Viewer.Project.#ctor
  Unity.Reflect.ProjectServer.Services.Viewer.Project:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.Project
        name: Project
        nameWithType: Project
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.Project
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.Project
        name: Project
        nameWithType: Project
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.Project
    isDefinition: true
    parent: Unity.Reflect.ProjectServer.Services.Viewer
    commentId: T:Unity.Reflect.ProjectServer.Services.Viewer.Project
  Unity.Reflect.ProjectServer.Services.Viewer.Project.Clone*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.Project.Clone*
        name: Clone
        nameWithType: Project.Clone
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.Project.Clone
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.Project.Clone*
        name: Clone
        nameWithType: Project.Clone
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.Project.Clone
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Viewer.Project.Clone
  Unity.Reflect.ProjectServer.Services.Viewer.Project.Id*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.Project.Id*
        name: Id
        nameWithType: Project.Id
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.Project.Id
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.Project.Id*
        name: Id
        nameWithType: Project.Id
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.Project.Id
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Viewer.Project.Id
  Unity.Reflect.ProjectServer.Services.Viewer.Project.Name*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.Project.Name*
        name: Name
        nameWithType: Project.Name
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.Project.Name
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.Project.Name*
        name: Name
        nameWithType: Project.Name
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.Project.Name
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Viewer.Project.Name
  Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost
        name: ProjectHost
        nameWithType: ProjectHost
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost
        name: ProjectHost
        nameWithType: ProjectHost
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost
    isDefinition: true
    parent: Unity.Reflect.ProjectServer.Services.Viewer
    commentId: T:Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost
  Unity.Reflect.ProjectServer.Services.Viewer.Project.Host*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.Project.Host*
        name: Host
        nameWithType: Project.Host
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.Project.Host
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.Project.Host*
        name: Host
        nameWithType: Project.Host
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.Project.Host
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Viewer.Project.Host
  Unity.Reflect.ProjectServer.Services.Viewer.Project.Equals*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.Project.Equals*
        name: Equals
        nameWithType: Project.Equals
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.Project.Equals
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.Project.Equals*
        name: Equals
        nameWithType: Project.Equals
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.Project.Equals
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Viewer.Project.Equals
  Unity.Reflect.ProjectServer.Services.Viewer.Project.GetHashCode*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.Project.GetHashCode*
        name: GetHashCode
        nameWithType: Project.GetHashCode
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.Project.GetHashCode
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.Project.GetHashCode*
        name: GetHashCode
        nameWithType: Project.GetHashCode
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.Project.GetHashCode
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Viewer.Project.GetHashCode
  Unity.Reflect.ProjectServer.Services.Viewer.Project.ToString*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.Project.ToString*
        name: ToString
        nameWithType: Project.ToString
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.Project.ToString
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.Project.ToString*
        name: ToString
        nameWithType: Project.ToString
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.Project.ToString
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Viewer.Project.ToString
  Unity.Reflect.ProjectServer.Services.Viewer.Project.WriteTo*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.Project.WriteTo*
        name: WriteTo
        nameWithType: Project.WriteTo
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.Project.WriteTo
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.Project.WriteTo*
        name: WriteTo
        nameWithType: Project.WriteTo
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.Project.WriteTo
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Viewer.Project.WriteTo
  Unity.Reflect.ProjectServer.Services.Viewer.Project.CalculateSize*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.Project.CalculateSize*
        name: CalculateSize
        nameWithType: Project.CalculateSize
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.Project.CalculateSize
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.Project.CalculateSize*
        name: CalculateSize
        nameWithType: Project.CalculateSize
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.Project.CalculateSize
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Viewer.Project.CalculateSize
  Unity.Reflect.ProjectServer.Services.Viewer.Project.MergeFrom*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.Project.MergeFrom*
        name: MergeFrom
        nameWithType: Project.MergeFrom
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.Project.MergeFrom
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.Project.MergeFrom*
        name: MergeFrom
        nameWithType: Project.MergeFrom
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.Project.MergeFrom
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Viewer.Project.MergeFrom
  pb.MessageParser{Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost}:
    name:
      CSharp:
      - id: pb.MessageParser`1
        name: pb.MessageParser
        nameWithType: pb.MessageParser
        qualifiedName: pb.MessageParser
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost
        name: ProjectHost
        nameWithType: ProjectHost
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: pb.MessageParser`1
        name: pb.MessageParser
        nameWithType: pb.MessageParser
        qualifiedName: pb.MessageParser
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost
        name: ProjectHost
        nameWithType: ProjectHost
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: pb.MessageParser`1
    commentId: '!:pb.MessageParser{Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost}'
  Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.Parser*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.Parser*
        name: Parser
        nameWithType: ProjectHost.Parser
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.Parser
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.Parser*
        name: Parser
        nameWithType: ProjectHost.Parser
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.Parser
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.Parser
  Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.Descriptor*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.Descriptor*
        name: Descriptor
        nameWithType: ProjectHost.Descriptor
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.Descriptor
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.Descriptor*
        name: Descriptor
        nameWithType: ProjectHost.Descriptor
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.Descriptor
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.Descriptor
  Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.#ctor*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.#ctor*
        name: ProjectHost
        nameWithType: ProjectHost.ProjectHost
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.ProjectHost
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.#ctor*
        name: ProjectHost
        nameWithType: ProjectHost.ProjectHost
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.ProjectHost
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.#ctor
  Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.Clone*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.Clone*
        name: Clone
        nameWithType: ProjectHost.Clone
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.Clone
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.Clone*
        name: Clone
        nameWithType: ProjectHost.Clone
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.Clone
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.Clone
  Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.Name*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.Name*
        name: Name
        nameWithType: ProjectHost.Name
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.Name
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.Name*
        name: Name
        nameWithType: ProjectHost.Name
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.Name
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.Name
  Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.Address*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.Address*
        name: Address
        nameWithType: ProjectHost.Address
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.Address
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.Address*
        name: Address
        nameWithType: ProjectHost.Address
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.Address
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.Address
  Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.UserName*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.UserName*
        name: UserName
        nameWithType: ProjectHost.UserName
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.UserName
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.UserName*
        name: UserName
        nameWithType: ProjectHost.UserName
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.UserName
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.UserName
  Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.Equals*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.Equals*
        name: Equals
        nameWithType: ProjectHost.Equals
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.Equals
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.Equals*
        name: Equals
        nameWithType: ProjectHost.Equals
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.Equals
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.Equals
  Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.GetHashCode*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.GetHashCode*
        name: GetHashCode
        nameWithType: ProjectHost.GetHashCode
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.GetHashCode
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.GetHashCode*
        name: GetHashCode
        nameWithType: ProjectHost.GetHashCode
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.GetHashCode
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.GetHashCode
  Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.ToString*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.ToString*
        name: ToString
        nameWithType: ProjectHost.ToString
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.ToString
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.ToString*
        name: ToString
        nameWithType: ProjectHost.ToString
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.ToString
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.ToString
  Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.WriteTo*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.WriteTo*
        name: WriteTo
        nameWithType: ProjectHost.WriteTo
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.WriteTo
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.WriteTo*
        name: WriteTo
        nameWithType: ProjectHost.WriteTo
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.WriteTo
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.WriteTo
  Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.CalculateSize*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.CalculateSize*
        name: CalculateSize
        nameWithType: ProjectHost.CalculateSize
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.CalculateSize
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.CalculateSize*
        name: CalculateSize
        nameWithType: ProjectHost.CalculateSize
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.CalculateSize
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.CalculateSize
  Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.MergeFrom*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.MergeFrom*
        name: MergeFrom
        nameWithType: ProjectHost.MergeFrom
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.MergeFrom
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.MergeFrom*
        name: MergeFrom
        nameWithType: ProjectHost.MergeFrom
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.MergeFrom
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Viewer.ProjectHost.MergeFrom
  Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.Descriptor*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.Descriptor*
        name: Descriptor
        nameWithType: ViewerService.Descriptor
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.Descriptor
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.Descriptor*
        name: Descriptor
        nameWithType: ViewerService.Descriptor
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.Descriptor
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.Descriptor
  Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceBase:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceBase
        name: ViewerService.ViewerServiceBase
        nameWithType: ViewerService.ViewerServiceBase
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceBase
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceBase
        name: ViewerService.ViewerServiceBase
        nameWithType: ViewerService.ViewerServiceBase
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceBase
    isDefinition: true
    parent: Unity.Reflect.ProjectServer.Services.Viewer
    commentId: T:Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceBase
  Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.BindService*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.BindService*
        name: BindService
        nameWithType: ViewerService.BindService
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.BindService
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.BindService*
        name: BindService
        nameWithType: ViewerService.BindService
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.BindService
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.BindService
  Unity.Reflect.ProjectServer.Services.Viewer.ViewerService:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService
        name: ViewerService
        nameWithType: ViewerService
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService
        name: ViewerService
        nameWithType: ViewerService
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService
    isDefinition: true
    commentId: T:Unity.Reflect.ProjectServer.Services.Viewer.ViewerService
  System.Threading.Tasks.Task{Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse}:
    name:
      CSharp:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse
        name: ListProjectsResponse
        nameWithType: ListProjectsResponse
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse
        name: ListProjectsResponse
        nameWithType: ListProjectsResponse
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Threading.Tasks.Task`1
    parent: System.Threading.Tasks
    commentId: T:System.Threading.Tasks.Task{Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse}
  Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceBase.ListProjects*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceBase.ListProjects*
        name: ListProjects
        nameWithType: ViewerService.ViewerServiceBase.ListProjects
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceBase.ListProjects
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceBase.ListProjects*
        name: ListProjects
        nameWithType: ViewerService.ViewerServiceBase.ListProjects
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceBase.ListProjects
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceBase.ListProjects
  Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceClient.#ctor*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceClient.#ctor*
        name: ViewerServiceClient
        nameWithType: ViewerService.ViewerServiceClient.ViewerServiceClient
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceClient.ViewerServiceClient
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceClient.#ctor*
        name: ViewerServiceClient
        nameWithType: ViewerService.ViewerServiceClient.ViewerServiceClient
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceClient.ViewerServiceClient
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceClient.#ctor
  Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceClient.ListProjects*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceClient.ListProjects*
        name: ListProjects
        nameWithType: ViewerService.ViewerServiceClient.ListProjects
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceClient.ListProjects
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceClient.ListProjects*
        name: ListProjects
        nameWithType: ViewerService.ViewerServiceClient.ListProjects
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceClient.ListProjects
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceClient.ListProjects
  grpc.AsyncUnaryCall{Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse}:
    name:
      CSharp:
      - id: grpc.AsyncUnaryCall`1
        name: grpc.AsyncUnaryCall
        nameWithType: grpc.AsyncUnaryCall
        qualifiedName: grpc.AsyncUnaryCall
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse
        name: ListProjectsResponse
        nameWithType: ListProjectsResponse
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: grpc.AsyncUnaryCall`1
        name: grpc.AsyncUnaryCall
        nameWithType: grpc.AsyncUnaryCall
        qualifiedName: grpc.AsyncUnaryCall
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse
        name: ListProjectsResponse
        nameWithType: ListProjectsResponse
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: grpc.AsyncUnaryCall`1
    commentId: '!:grpc.AsyncUnaryCall{Unity.Reflect.ProjectServer.Services.Viewer.ListProjectsResponse}'
  Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceClient.ListProjectsAsync*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceClient.ListProjectsAsync*
        name: ListProjectsAsync
        nameWithType: ViewerService.ViewerServiceClient.ListProjectsAsync
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceClient.ListProjectsAsync
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceClient.ListProjectsAsync*
        name: ListProjectsAsync
        nameWithType: ViewerService.ViewerServiceClient.ListProjectsAsync
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceClient.ListProjectsAsync
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceClient.ListProjectsAsync
  Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceClient:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceClient
        name: ViewerService.ViewerServiceClient
        nameWithType: ViewerService.ViewerServiceClient
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceClient
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceClient
        name: ViewerService.ViewerServiceClient
        nameWithType: ViewerService.ViewerServiceClient
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceClient
    isDefinition: true
    parent: Unity.Reflect.ProjectServer.Services.Viewer
    commentId: T:Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceClient
  Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceClient.NewInstance*:
    name:
      CSharp:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceClient.NewInstance*
        name: NewInstance
        nameWithType: ViewerService.ViewerServiceClient.NewInstance
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceClient.NewInstance
      VB:
      - id: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceClient.NewInstance*
        name: NewInstance
        nameWithType: ViewerService.ViewerServiceClient.NewInstance
        qualifiedName: Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceClient.NewInstance
    isDefinition: true
    commentId: Overload:Unity.Reflect.ProjectServer.Services.Viewer.ViewerService.ViewerServiceClient.NewInstance
  Unity.Reflect.Utils.FileUtils.SanitizeName*:
    name:
      CSharp:
      - id: Unity.Reflect.Utils.FileUtils.SanitizeName*
        name: SanitizeName
        nameWithType: FileUtils.SanitizeName
        qualifiedName: Unity.Reflect.Utils.FileUtils.SanitizeName
      VB:
      - id: Unity.Reflect.Utils.FileUtils.SanitizeName*
        name: SanitizeName
        nameWithType: FileUtils.SanitizeName
        qualifiedName: Unity.Reflect.Utils.FileUtils.SanitizeName
    isDefinition: true
    commentId: Overload:Unity.Reflect.Utils.FileUtils.SanitizeName
  Unity.Reflect.Utils.FileUtils:
    name:
      CSharp:
      - id: Unity.Reflect.Utils.FileUtils
        name: FileUtils
        nameWithType: FileUtils
        qualifiedName: Unity.Reflect.Utils.FileUtils
      VB:
      - id: Unity.Reflect.Utils.FileUtils
        name: FileUtils
        nameWithType: FileUtils
        qualifiedName: Unity.Reflect.Utils.FileUtils
    isDefinition: true
    commentId: T:Unity.Reflect.Utils.FileUtils
  Unity.Reflect.Utils:
    name:
      CSharp:
      - name: Unity.Reflect.Utils
        nameWithType: Unity.Reflect.Utils
        qualifiedName: Unity.Reflect.Utils
      VB:
      - name: Unity.Reflect.Utils
        nameWithType: Unity.Reflect.Utils
        qualifiedName: Unity.Reflect.Utils
    isDefinition: true
    commentId: N:Unity.Reflect.Utils
  Unity.Reflect.Utils.Logger.LogReceiver:
    name:
      CSharp:
      - id: Unity.Reflect.Utils.Logger.LogReceiver
        name: Logger.LogReceiver
        nameWithType: Logger.LogReceiver
        qualifiedName: Unity.Reflect.Utils.Logger.LogReceiver
      VB:
      - id: Unity.Reflect.Utils.Logger.LogReceiver
        name: Logger.LogReceiver
        nameWithType: Logger.LogReceiver
        qualifiedName: Unity.Reflect.Utils.Logger.LogReceiver
    isDefinition: true
    parent: Unity.Reflect.Utils
    commentId: T:Unity.Reflect.Utils.Logger.LogReceiver
  Unity.Reflect.Utils.Logger.Level:
    name:
      CSharp:
      - id: Unity.Reflect.Utils.Logger.Level
        name: Logger.Level
        nameWithType: Logger.Level
        qualifiedName: Unity.Reflect.Utils.Logger.Level
      VB:
      - id: Unity.Reflect.Utils.Logger.Level
        name: Logger.Level
        nameWithType: Logger.Level
        qualifiedName: Unity.Reflect.Utils.Logger.Level
    isDefinition: true
    parent: Unity.Reflect.Utils
    commentId: T:Unity.Reflect.Utils.Logger.Level
  Unity.Reflect.Utils.Logger.Info*:
    name:
      CSharp:
      - id: Unity.Reflect.Utils.Logger.Info*
        name: Info
        nameWithType: Logger.Info
        qualifiedName: Unity.Reflect.Utils.Logger.Info
      VB:
      - id: Unity.Reflect.Utils.Logger.Info*
        name: Info
        nameWithType: Logger.Info
        qualifiedName: Unity.Reflect.Utils.Logger.Info
    isDefinition: true
    commentId: Overload:Unity.Reflect.Utils.Logger.Info
  Unity.Reflect.Utils.Logger.Error*:
    name:
      CSharp:
      - id: Unity.Reflect.Utils.Logger.Error*
        name: Error
        nameWithType: Logger.Error
        qualifiedName: Unity.Reflect.Utils.Logger.Error
      VB:
      - id: Unity.Reflect.Utils.Logger.Error*
        name: Error
        nameWithType: Logger.Error
        qualifiedName: Unity.Reflect.Utils.Logger.Error
    isDefinition: true
    commentId: Overload:Unity.Reflect.Utils.Logger.Error
  Unity.Reflect.Utils.Logger.Warn*:
    name:
      CSharp:
      - id: Unity.Reflect.Utils.Logger.Warn*
        name: Warn
        nameWithType: Logger.Warn
        qualifiedName: Unity.Reflect.Utils.Logger.Warn
      VB:
      - id: Unity.Reflect.Utils.Logger.Warn*
        name: Warn
        nameWithType: Logger.Warn
        qualifiedName: Unity.Reflect.Utils.Logger.Warn
    isDefinition: true
    commentId: Overload:Unity.Reflect.Utils.Logger.Warn
  Unity.Reflect.Utils.Logger.Fatal*:
    name:
      CSharp:
      - id: Unity.Reflect.Utils.Logger.Fatal*
        name: Fatal
        nameWithType: Logger.Fatal
        qualifiedName: Unity.Reflect.Utils.Logger.Fatal
      VB:
      - id: Unity.Reflect.Utils.Logger.Fatal*
        name: Fatal
        nameWithType: Logger.Fatal
        qualifiedName: Unity.Reflect.Utils.Logger.Fatal
    isDefinition: true
    commentId: Overload:Unity.Reflect.Utils.Logger.Fatal
  Unity.Reflect.Utils.Logger.Debug*:
    name:
      CSharp:
      - id: Unity.Reflect.Utils.Logger.Debug*
        name: Debug
        nameWithType: Logger.Debug
        qualifiedName: Unity.Reflect.Utils.Logger.Debug
      VB:
      - id: Unity.Reflect.Utils.Logger.Debug*
        name: Debug
        nameWithType: Logger.Debug
        qualifiedName: Unity.Reflect.Utils.Logger.Debug
    isDefinition: true
    commentId: Overload:Unity.Reflect.Utils.Logger.Debug
  Unity.Reflect.Utils.Logger:
    name:
      CSharp:
      - id: Unity.Reflect.Utils.Logger
        name: Logger
        nameWithType: Logger
        qualifiedName: Unity.Reflect.Utils.Logger
      VB:
      - id: Unity.Reflect.Utils.Logger
        name: Logger
        nameWithType: Logger
        qualifiedName: Unity.Reflect.Utils.Logger
    isDefinition: true
    commentId: T:Unity.Reflect.Utils.Logger
